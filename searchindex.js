Search.setIndex({"docnames": ["api_spec/autorag", "api_spec/autorag.data", "api_spec/autorag.data.qacreation", "api_spec/autorag.data.utils", "api_spec/autorag.evaluate", "api_spec/autorag.evaluate.metric", "api_spec/autorag.nodes", "api_spec/autorag.nodes.generator", "api_spec/autorag.nodes.passagecompressor", "api_spec/autorag.nodes.passagereranker", "api_spec/autorag.nodes.passagereranker.tart", "api_spec/autorag.nodes.promptmaker", "api_spec/autorag.nodes.queryexpansion", "api_spec/autorag.nodes.retrieval", "api_spec/autorag.schema", "api_spec/autorag.utils", "api_spec/modules", "data_creation/data_format", "data_creation/tutorial", "deploy/api_endpoint", "index", "install", "local_model", "nodes/generator/generator", "nodes/generator/llama_index_llm", "nodes/index", "nodes/passage_compressor/passage_compressor", "nodes/passage_compressor/tree_summarize", "nodes/passage_reranker/monot5", "nodes/passage_reranker/passage_reranker", "nodes/passage_reranker/tart", "nodes/passage_reranker/upr", "nodes/prompt_maker/fstring", "nodes/prompt_maker/prompt_maker", "nodes/query_expansion/hyde", "nodes/query_expansion/query_decompose", "nodes/query_expansion/query_expansion", "nodes/retrieval/bm25", "nodes/retrieval/hybrid_cc", "nodes/retrieval/hybrid_rrf", "nodes/retrieval/retrieval", "nodes/retrieval/vectordb", "optimization/custom_config", "optimization/folder_structure", "optimization/optimization", "roadmap/modular_rag", "structure", "troubleshooting", "tutorial"], "filenames": ["api_spec/autorag.rst", "api_spec/autorag.data.rst", "api_spec/autorag.data.qacreation.rst", "api_spec/autorag.data.utils.rst", "api_spec/autorag.evaluate.rst", "api_spec/autorag.evaluate.metric.rst", "api_spec/autorag.nodes.rst", "api_spec/autorag.nodes.generator.rst", "api_spec/autorag.nodes.passagecompressor.rst", "api_spec/autorag.nodes.passagereranker.rst", "api_spec/autorag.nodes.passagereranker.tart.rst", "api_spec/autorag.nodes.promptmaker.rst", "api_spec/autorag.nodes.queryexpansion.rst", "api_spec/autorag.nodes.retrieval.rst", "api_spec/autorag.schema.rst", "api_spec/autorag.utils.rst", "api_spec/modules.rst", "data_creation/data_format.md", "data_creation/tutorial.md", "deploy/api_endpoint.md", "index.rst", "install.md", "local_model.md", "nodes/generator/generator.md", "nodes/generator/llama_index_llm.md", "nodes/index.md", "nodes/passage_compressor/passage_compressor.md", "nodes/passage_compressor/tree_summarize.md", "nodes/passage_reranker/monot5.md", "nodes/passage_reranker/passage_reranker.md", "nodes/passage_reranker/tart.md", "nodes/passage_reranker/upr.md", "nodes/prompt_maker/fstring.md", "nodes/prompt_maker/prompt_maker.md", "nodes/query_expansion/hyde.md", "nodes/query_expansion/query_decompose.md", "nodes/query_expansion/query_expansion.md", "nodes/retrieval/bm25.md", "nodes/retrieval/hybrid_cc.md", "nodes/retrieval/hybrid_rrf.md", "nodes/retrieval/retrieval.md", "nodes/retrieval/vectordb.md", "optimization/custom_config.md", "optimization/folder_structure.md", "optimization/optimization.md", "roadmap/modular_rag.md", "structure.md", "troubleshooting.md", "tutorial.md"], "titles": ["autorag package", "autorag.data package", "autorag.data.qacreation package", "autorag.data.utils package", "autorag.evaluate package", "autorag.evaluate.metric package", "autorag.nodes package", "autorag.nodes.generator package", "autorag.nodes.passagecompressor package", "autorag.nodes.passagereranker package", "autorag.nodes.passagereranker.tart package", "autorag.nodes.promptmaker package", "autorag.nodes.queryexpansion package", "autorag.nodes.retrieval package", "autorag.schema package", "autorag.utils package", "autorag", "Dataset Format", "Start creating your own evaluation data", "API endpoint", "AutoRAG documentation", "Installation and Setup", "Configure LLM &amp; Embedding models", "6. Generator", "llama_index LLM", "Available List", "4. Passage_Compressor", "Tree Summarize", "MonoT5", "3. Passage_Reranker", "TART", "UPR", "F-String", "5. Prompt Maker", "HyDE", "Query Decompose", "<strong>1. Query Expansion</strong>", "BM25", "Hybrid - cc", "Hybrid - rrf", "2. Retrieval", "Vectordb", "Make custom config yaml file", "Folder Structure", "How optimization works", "Road to Modular RAG", "Structure", "TroubleShooting", "Tutorial"], "terms": {"data": [0, 11, 12, 13, 16, 17, 19, 20, 23, 26, 29, 36, 41, 46, 48], "qacreat": [0, 1, 18], "simpl": [0, 1, 18, 23, 45], "util": [0, 1, 16, 18, 29, 33, 36, 39, 40], "llamaindex": [0, 1, 8, 18, 22, 35, 45, 47], "metric": [0, 4, 7, 8, 11, 12, 13, 17, 23, 26, 29, 33, 36, 40, 42, 43, 45, 46, 47], "gener": [0, 2, 6, 9, 11, 12, 15, 16, 17, 18, 22, 24, 25, 26, 31, 33, 34, 36, 38, 39, 44, 45, 46, 47], "retriev": [0, 6, 8, 9, 10, 11, 12, 16, 17, 22, 25, 26, 27, 29, 31, 33, 34, 36, 37, 38, 39, 41, 42, 44, 45, 46], "retrieval_cont": [0, 16], "evaluate_gener": [0, 4], "evaluate_retriev": [0, 4], "evaluate_retrieval_cont": [0, 4], "cast_embedding_model": [0, 4], "cast_metr": [0, 4], "node": [0, 16, 17, 22, 24, 25, 34, 35, 48], "base": [0, 5, 6, 10, 14, 18, 22, 24, 27, 28, 29, 30, 31, 32, 38, 39, 40, 45, 46], "llama_index_llm": [0, 6, 11, 22, 23, 24, 33, 44, 45, 47], "run": [0, 6, 10, 14, 16, 20, 21, 26, 38, 39, 42, 43, 44, 48], "passagecompressor": [0, 6], "tree_summar": [0, 6, 22, 26, 27], "passagererank": [0, 6], "monot5": [0, 6, 25, 29], "upr": [0, 6, 25, 29, 45], "promptmak": [0, 6], "fstring": [0, 6, 25, 32, 33, 45], "queryexpans": [0, 6], "hyde": [0, 6, 22, 25, 36], "query_decompos": [0, 6, 22, 25, 35, 36], "bm25": [0, 6, 12, 25, 36, 38, 39, 40, 42, 43, 45], "hybrid_cc": [0, 6, 25, 36, 38, 39, 40], "hybrid_rrf": [0, 6, 25, 36, 38, 39, 40, 42], "vectordb": [0, 6, 12, 22, 25, 36, 37, 38, 39, 40, 42, 43], "schema": [0, 16], "from_dict": [0, 14], "module_param": [0, 7, 8, 9, 11, 12, 13, 14, 15], "module_typ": [0, 11, 12, 14, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47], "get_param_combin": [0, 14], "node_param": [0, 14], "node_typ": [0, 11, 14, 22, 23, 26, 29, 33, 36, 40, 42, 45, 47], "run_nod": [0, 14], "extract_valu": [0, 14], "extract_values_from_nod": [0, 14], "module_type_exist": [0, 14], "preprocess": [0, 16], "cast_corpus_dataset": [0, 15], "cast_qa_dataset": [0, 15], "validate_corpus_dataset": [0, 15], "validate_qa_dataset": [0, 15], "convert_env_in_dict": [0, 15], "convert_string_to_tuple_in_dict": [0, 15], "explod": [0, 15], "fetch_cont": [0, 15], "load_summary_fil": [0, 15], "make_combin": [0, 15], "normalize_str": [0, 15], "process_batch": [0, 15], "replace_value_in_dict": [0, 15], "result_to_datafram": [0, 15], "class": [0, 10, 14, 17, 22, 30, 41], "runner": [0, 16, 19, 48], "config": [0, 10, 11, 22, 45, 47], "dict": [0, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15], "project_dir": [0, 11, 12, 13, 48], "str": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15], "none": [0, 5, 8, 10, 15, 23, 26, 33, 37], "sourc": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 38, 39, 41], "object": [0, 14, 24, 27, 34, 35], "classmethod": [0, 14], "from_trial_fold": [0, 16, 19], "trial_path": [0, 48], "load": [0, 13, 15, 17, 18, 21], "from": [0, 3, 5, 7, 9, 10, 11, 12, 13, 14, 15, 17, 19, 22, 24, 26, 29, 32, 33, 35, 36, 38, 39, 40, 43, 44, 45, 46, 48], "trial": [0, 19, 48], "folder": [0, 19, 21, 45], "must": [0, 2, 3, 5, 8, 9, 11, 13, 15, 17, 18, 19, 22, 28, 32, 38, 39, 42, 45, 46, 47, 48], "alreadi": [0, 10, 13, 44], "us": [0, 2, 5, 7, 8, 9, 10, 11, 12, 13, 17, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48], "It": [0, 5, 7, 8, 9, 11, 13, 14, 15, 17, 19, 22, 23, 24, 27, 29, 30, 31, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48], "set": [0, 7, 8, 9, 10, 11, 13, 18, 20, 21, 22, 23, 24, 26, 27, 29, 31, 33, 34, 35, 36, 42, 43, 44, 45, 46, 47], "parent": 0, "directori": [0, 7, 8, 9, 11, 12, 13, 48], "paramet": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 22, 42, 43, 44, 46, 47, 48], "The": [0, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48], "path": [0, 3, 9, 15, 18, 19, 48], "return": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 24, 41, 42], "initi": [0, 9, 10, 12, 22, 29, 31, 47], "from_yaml": [0, 16, 19, 48], "yaml_path": 0, "yaml": [0, 11, 19, 20, 22, 44, 45, 46, 47], "file": [0, 2, 3, 5, 9, 11, 13, 15, 17, 19, 20, 21, 22, 38, 39, 43, 44, 45, 46, 47], "extract": [0, 14, 19, 38, 39], "extract_best_config": [0, 16, 48], "method": [0, 10, 13, 14, 23, 33, 36, 37, 40, 42, 44, 47], "project": [0, 20, 21], "default": [0, 5, 8, 9, 10, 11, 12, 13, 15, 17, 19, 22, 24, 27, 28, 30, 31, 34, 35, 38, 39, 42, 46], "i": [0, 5, 7, 8, 9, 10, 11, 12, 13, 15, 17, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 48], "current": [0, 46, 48], "queri": [0, 2, 8, 9, 10, 11, 12, 13, 16, 18, 19, 26, 28, 29, 30, 32, 33, 34, 40, 41, 44, 45], "result_column": [0, 16, 19], "generated_text": 0, "pipelin": [0, 19, 20, 38, 39, 43, 44, 45], "start": [0, 15, 48], "singl": [0, 10, 15, 17, 20, 35, 42, 43, 45, 46], "so": [0, 8, 13, 17, 18, 21, 22, 33, 38, 39, 42, 43, 44, 45, 48], "first": [0, 7, 13, 20, 21, 29, 41, 42, 43, 44, 45, 48], "query_expans": [0, 12, 25, 33, 36, 44], "user": [0, 17, 18, 19, 31, 33, 40, 43, 45, 48], "result": [0, 5, 7, 8, 9, 11, 12, 13, 15, 19, 20, 29, 33, 36, 38, 39, 40, 43, 45, 47, 48], "column": [0, 2, 7, 8, 9, 11, 13, 15, 17, 19, 48], "name": [0, 4, 9, 13, 23, 26, 29, 33, 36, 40, 43, 48], "answer": [0, 10, 11, 12, 17, 18, 19, 30, 32, 33, 45], "which": [0, 2, 5, 7, 10, 11, 12, 13, 15, 17, 20, 24, 26, 27, 33, 34, 35, 37, 38, 39, 42, 44, 45, 47, 48], "output": [0, 2, 9, 18, 19, 31, 36, 47], "run_api_serv": [0, 16, 19, 48], "host": [0, 19, 48], "0": [0, 10, 13, 19, 22, 23, 24, 35, 36, 38, 40, 43, 44, 47, 48], "port": [0, 19, 48], "int": [0, 7, 8, 9, 10, 12, 13, 15], "8000": [0, 19, 48], "kwarg": [0, 2, 8, 10, 24, 27, 34, 35], "api": [0, 13, 18, 41, 42, 48], "server": [0, 20, 41, 47, 48], "you": [0, 7, 8, 9, 10, 11, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48], "can": [0, 5, 8, 9, 10, 11, 15, 17, 18, 19, 21, 22, 23, 24, 26, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48], "send": 0, "post": [0, 19, 45], "request": [0, 19, 45], "http": [0, 8, 9, 10, 12, 19, 20, 21, 22, 45], "json": [0, 18, 19, 48], "bodi": [0, 19], "like": [0, 11, 12, 13, 17, 19, 21, 22, 24, 26, 27, 31, 33, 34, 35, 38, 39, 42, 44, 45, 47, 48], "below": [0, 21, 23, 45, 47, 48], "your": [0, 17, 19, 20, 21, 32, 33, 42, 44, 45, 47], "And": [0, 7, 12, 13, 19, 20, 21, 42, 44, 45, 48], "respons": [0, 18, 19, 26, 36], "other": [0, 7, 13, 15, 17, 21, 24, 26, 27, 34, 35, 38, 39, 42, 43, 45, 48], "argument": [0, 15, 24, 27, 34, 35], "uvicorn": 0, "runnerinput": [0, 16], "basemodel": 0, "model_computed_field": [0, 16], "classvar": 0, "computedfieldinfo": 0, "A": [0, 5, 7, 10, 11, 13, 15, 17, 23, 36, 44, 45, 46], "dictionari": [0, 4, 13, 15, 17, 18, 23, 28], "comput": [0, 5, 9, 10, 26, 31], "field": 0, "correspond": [0, 14], "model_config": [0, 16], "configdict": 0, "configur": [0, 20, 23, 24, 26, 27, 29, 31, 33, 34, 35, 36, 39, 40, 44, 46, 48], "model": [0, 2, 5, 9, 10, 11, 12, 13, 17, 18, 20, 21, 23, 24, 26, 27, 31, 33, 34, 35, 37, 41, 43, 44, 45, 46, 47], "should": [0, 2, 8, 10, 18, 22, 47], "conform": 0, "pydant": 0, "model_field": [0, 16], "fieldinfo": 0, "annot": 0, "requir": [0, 2, 21, 24, 26, 27, 28, 34, 35, 46], "true": [0, 9, 14, 21, 47], "fals": [0, 9, 10, 31], "metadata": [0, 18], "about": [0, 17, 18, 24, 27, 32, 33, 34, 35, 41, 42, 43, 44, 46, 48], "defin": [0, 10, 28, 29, 40, 41], "map": [0, 10], "thi": [0, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48], "replac": [0, 8, 15], "__fields__": 0, "v1": [0, 15, 22, 28], "output_path": [0, 48], "optim": [0, 17, 20, 26, 38, 39, 42, 43, 45, 46], "want": [0, 8, 10, 11, 13, 14, 15, 17, 20, 21, 22, 42, 44, 46], "save": [0, 2, 3, 7, 17, 42, 48], "yml": [0, 42], "If": [0, 8, 9, 10, 11, 12, 15, 17, 20, 21, 37, 42, 43, 44, 45, 46, 47, 48], "doe": [0, 7, 10, 13, 23, 24, 26, 29, 42, 44, 45], "just": [0, 13, 17, 45, 48], "valu": [0, 4, 10, 14, 15, 17, 22, 42, 44], "extract_node_line_nam": [0, 16], "config_dict": 0, "list": [0, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 24, 27, 30, 34, 35, 38, 39, 42], "line": [0, 7, 8, 9, 11, 12, 13, 23, 26, 29, 33, 36, 40, 48], "given": [0, 10, 13, 18, 28, 30, 34, 44], "order": 0, "access": [0, 29], "trail_fold": 0, "extract_node_strategi": [0, 16], "type": [0, 10, 11, 13, 14, 15, 17, 18, 19, 22, 23, 36, 40, 45, 48], "its": [0, 8, 11, 13, 14, 17, 30, 33, 36, 41, 44, 45], "kei": [0, 4, 5, 14, 15, 17, 22, 41, 42, 47, 48], "summary_df_to_yaml": [0, 16], "summary_df": [0, 13], "datafram": [0, 2, 3, 7, 8, 9, 11, 12, 13, 14, 15], "convert": [0, 15, 18, 42], "summari": [0, 7, 13, 15, 44, 48], "qa_data_path": [0, 48], "corpus_data_path": [0, 48], "start_trial": [0, 16, 48], "make_node_lin": [0, 16], "node_line_dict": 0, "make": [0, 9, 10, 11, 13, 15, 17, 20, 21, 24, 26, 27, 32, 33, 34, 35, 44, 45, 48], "param": [0, 9, 10, 11, 12, 43], "get": [0, 3, 5, 7, 13, 19, 21, 24, 42, 44, 45, 47, 48], "input": [0, 2, 7, 10, 12, 13, 17, 24, 26, 32, 44, 45], "insid": [0, 48], "run_node_lin": [0, 16], "node_line_dir": [0, 7, 8, 9, 11, 12, 13, 14], "previous_result": [0, 7, 8, 9, 11, 12, 13, 14], "whole": [0, 44, 48], "each": [0, 12, 13, 14, 15, 17, 38, 39, 42, 43, 44, 45, 46], "": [0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 22, 24, 26, 27, 31, 32, 33, 34, 35, 40, 44, 45, 48], "previou": [0, 7, 8, 9, 11, 12, 13, 44, 45], "qa": [0, 11, 12, 13, 43, 48], "parquet": [0, 2, 3, 13, 17, 18, 43, 48], "final": [0, 38, 39, 44, 45], "avoid_empty_result": [0, 16], "return_index": 0, "decor": [0, 15], "avoid": 0, "empti": [0, 8, 17, 42], "function": [0, 8, 10, 11, 13, 14, 15, 30, 39, 46], "when": [0, 8, 9, 10, 11, 12, 21, 22, 38, 39, 41, 42, 43, 46, 47, 48], "func": [0, 5, 7, 8, 9, 11, 12, 13], "an": [0, 8, 13, 17, 20, 21, 26, 29, 32, 41, 44, 45, 47, 48], "origin": [0, 31], "tupl": [0, 4, 7, 9, 10, 13, 14, 15, 38, 39], "check": [0, 14, 17, 20, 21, 22, 23, 42, 43, 45, 47, 48], "all": [0, 5, 10, 12, 15, 17, 20, 22, 23, 33, 36, 40, 42, 43, 44, 45, 46, 47, 48], "keep": [0, 15, 42, 48], "index": [0, 7, 8, 15, 24, 47], "filter_by_threshold": [0, 16], "threshold": [0, 23, 26, 29, 33, 36, 40, 42, 46], "filter": 0, "have": [0, 13, 15, 17, 18, 21, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48], "same": [0, 12, 13, 15, 19, 43, 44, 46, 48], "length": [0, 8, 13, 15], "even": [0, 38, 39], "did": 0, "give": 0, "measure_spe": [0, 16], "arg": [0, 2, 3, 10], "measur": [0, 33, 36, 40], "execut": [0, 13, 15, 22, 36], "speed": [0, 9, 23, 26, 29, 31, 33, 36, 40, 42, 46], "select_best_averag": [0, 16], "iter": 0, "ani": [0, 4, 10, 15, 17, 20, 21, 33, 36, 40, 45, 46, 47], "select": [0, 7, 8, 9, 11, 12, 13, 43, 44, 45, 46], "best": [0, 7, 8, 9, 11, 12, 13, 20, 38, 39, 43, 45, 48], "averag": [0, 33, 36, 40], "among": [0, 7, 8, 9, 11, 12, 13, 44], "pd": [0, 2, 3, 15, 18], "standard": 0, "one": [0, 8, 9, 10, 11, 15, 17, 18, 19, 42, 43, 44, 46, 47], "dynamically_find_funct": [0, 16], "target_dict": [0, 15], "callabl": [0, 2, 7, 8, 9, 11, 12, 13, 14], "get_support_modul": [0, 16], "module_nam": [0, 13], "get_support_nod": [0, 16], "node_nam": 0, "handle_except": [0, 16], "exc_typ": 0, "exc_valu": 0, "exc_traceback": 0, "submodul": [1, 6, 16], "generate_qa_row": [1, 2, 18], "generate_simple_qa_dataset": [1, 2, 18], "get_file_metadata": [1, 3], "llama_documents_to_parquet": [1, 3], "llm": [2, 5, 7, 8, 12, 17, 18, 20, 21, 23, 25, 26, 27, 32, 33, 34, 35, 36, 44, 45], "corpus_data_row": [2, 18], "sampl": [2, 47, 48], "code": [2, 21, 22, 42, 48], "rag": [2, 17, 18, 20, 36, 40, 43, 46], "dataset": [2, 13, 15, 20, 38, 39, 43, 47], "openai": [2, 11, 12, 18, 22, 23, 24, 26, 27, 33, 34, 35, 36, 40, 41, 42, 44, 45], "chat": [2, 8, 47], "guidanc": [2, 18], "need": [2, 10, 12, 17, 18, 21, 26, 33, 41, 42, 43, 44, 45, 48], "ha": [2, 10, 13, 17, 18, 26, 45], "generation_gt": [2, 4, 5, 7, 11, 18], "least": [2, 44], "corpus_data": [2, 3, 8, 13, 15, 18], "output_filepath": [2, 3, 18], "generate_row_funct": [2, 18], "qa_dataset": [2, 18], "filepath": [2, 3], "file_dir": [2, 3], "filenam": [2, 3, 13], "refer": [2, 33, 36, 46], "basic": 2, "structur": [2, 13, 42, 45, 48], "exist": [2, 3, 14, 43], "extens": [2, 3, 42], "contain": [2, 5, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 32, 43, 44, 46, 47, 48], "more": [2, 8, 9, 12, 13, 17, 23, 26, 29, 31, 33, 36, 37, 43, 46, 48], "file_path": 3, "some": [3, 7, 8, 17, 21, 22, 44, 47], "handi": 3, "metad": 3, "filesystem": 3, "llama_docu": 3, "document": [3, 13, 17, 21, 23, 26, 29, 33, 36, 37, 40, 42, 44, 45, 46], "llamadocu": 3, "bleu": [4, 5, 23, 33, 42, 45, 47], "generation_metr": [4, 5], "huggingface_evalu": [4, 5], "meteor": [4, 5, 23, 33, 42, 45, 47], "roug": [4, 5, 23, 33, 42, 45, 47], "sem_scor": [4, 5, 33, 42], "retrieval_f1": [4, 5, 12, 29, 36, 40], "retrieval_metr": [4, 5], "retrieval_precis": [4, 5, 29, 36, 40], "retrieval_recal": [4, 5, 12, 29, 36, 40, 45], "retrieval_contents_metr": [4, 5], "retrieval_token_f1": [4, 5, 26], "retrieval_token_precis": [4, 5, 26], "retrieval_token_recal": [4, 5, 26], "single_token_f1": [4, 5], "calculate_cosine_similar": [4, 5], "retrieval_gt": [4, 12, 13], "turn": 4, "string": [4, 5, 11, 13, 15, 17, 31, 33, 42], "gt": [5, 17, 44], "pred": 5, "float": [5, 7, 9, 10, 13], "score": [5, 8, 9, 10, 13, 26, 37, 38, 39, 40], "instanc": [5, 7, 8, 10, 13, 17, 22, 24], "huggingfac": [5, 12, 17, 22, 48], "ground": [5, 13, 17, 23, 44], "truth": [5, 13, 17, 23, 44], "2": [5, 12, 13, 17, 22, 35, 36, 48], "d": [5, 13, 15, 17, 19], "becaus": [5, 9, 11, 13, 17, 22, 26, 31, 38, 39, 41, 45, 47], "multipl": [5, 11, 12, 13, 35, 38, 39, 42, 43, 44, 45, 46], "embedding_model": [5, 12, 13, 22, 23, 36, 40, 41, 42], "baseembed": [5, 13, 22], "sem": 5, "between": [5, 23, 38], "cosin": 5, "similar": [5, 23, 37, 38, 39, 41, 44], "max": 5, "predict": [5, 9], "embed": [5, 10, 13, 20, 21, 23, 37, 41, 43], "mpnet": [5, 22], "v2": [5, 22, 28], "paper": [5, 10, 31, 34, 35, 45], "f1": [5, 26], "id": [5, 7, 8, 9, 10, 13, 15, 17, 40], "connect": [5, 41], "mean": [5, 8, 9, 15, 17, 43, 44, 46, 47], "calcul": [5, 26, 31, 38, 39], "item": 5, "ground_truth": 5, "b": [5, 10, 44], "generator_nod": [6, 7], "evaluate_generator_nod": [6, 7], "run_generator_nod": [6, 7], "make_llm": [6, 8], "passage_compressor_nod": [6, 8], "evaluate_passage_compressor_nod": [6, 8], "make_contents_gt": [6, 8], "run_passage_compressor_nod": [6, 8], "tart": [6, 9, 25, 29], "modeling_enc_t5": [6, 9], "tokenization_enc_t5": [6, 9], "passage_reranker_nod": [6, 9], "mono_t5_pur": [6, 9], "run_passage_reranker_nod": [6, 9], "calculate_likelihood": [6, 9], "upr_pur": [6, 9], "prompt_maker_nod": [6, 11], "evaluate_generator_result": [6, 11], "evaluate_one_prompt_maker_nod": [6, 11], "make_generator_callable_param": [6, 11], "run_prompt_maker_nod": [6, 11], "query_expansion_nod": [6, 12], "hyde_pur": [6, 12], "query_decompose_pur": [6, 12], "evaluate_one_query_expansion_nod": [6, 12], "make_retrieval_callable_param": [6, 12], "run_query_expansion_nod": [6, 12], "cast_queri": [6, 13], "evenly_distribute_passag": [6, 13], "load_bm25_corpu": [6, 13], "load_chroma_collect": [6, 13], "retrieval_nod": [6, 13], "run_retrieval_modul": [6, 13], "bm25_ingest": [6, 13], "bm25_pure": [6, 13], "bm25_token": [6, 13], "cc_pure": [6, 13], "rrf_calcul": [6, 13], "rrf_pure": [6, 13], "edit_summary_df_param": [6, 13], "evaluate_retrieval_nod": [6, 13], "get_hybrid_execution_tim": [6, 13], "get_ids_and_scor": [6, 13], "get_module_param": [6, 13], "run_retrieval_nod": [6, 13], "select_result_for_hybrid": [6, 13], "vectordb_ingest": [6, 13], "vectordb_pur": [6, 13], "prompt": [7, 8, 9, 11, 12, 24, 25, 31, 32, 35, 44, 45], "llmpredictor": [7, 8, 12], "batch": [7, 8, 12, 13, 15, 24, 27, 34, 35, 47], "16": [7, 8, 9, 12, 24, 27, 31, 34, 35], "llama": [7, 8, 24], "text": [7, 8, 9, 15, 17, 18, 19, 23, 24, 27, 31], "right": [7, 22, 45, 48], "log": [7, 24], "prob": [7, 24], "pseudo": 7, "meant": 7, "size": [7, 8, 9, 12, 29, 31, 47], "low": [7, 8], "face": [7, 8, 20], "error": [7, 8, 12, 13], "three": [7, 43, 45], "element": [7, 13, 14], "second": [7, 10, 43, 45], "token": [7, 9, 10, 13, 26], "gpt2token": 7, "third": 7, "result_df": [7, 8, 11, 13], "strategi": [7, 8, 9, 11, 12, 13, 14, 16, 17, 42, 45, 47], "evalu": [7, 8, 9, 11, 12, 13, 15, 16, 17, 20, 23, 26, 29, 33, 36, 38, 39, 40, 42, 43, 46], "includ": [7, 17, 24, 27, 33, 34, 35, 36, 38, 39, 46], "everi": [7, 10, 46], "could": [7, 8, 9, 11, 13], "maker": [7, 11, 25, 32, 45], "llm_name": 8, "retrieval_contents_gt": 8, "qa_data": 8, "passag": [8, 9, 10, 11, 12, 13, 17, 26, 28, 29, 30, 31, 34, 37, 38, 39, 41, 45], "compressor": [8, 26, 27], "rerank": [8, 9, 10, 17, 26, 28, 29, 30, 31, 45], "retrieved_cont": [8, 9, 11, 13, 32, 33, 45], "retrieved_id": [8, 9, 13], "retrieve_scor": [8, 9, 13], "In": [8, 9, 12, 17, 20, 38, 39, 42, 43, 44, 45, 47], "we": [8, 9, 17, 18, 20, 21, 22, 23, 33, 36, 38, 39, 41, 42, 43, 44, 45, 47, 48], "skip": [8, 9, 11], "onli": [8, 9, 11, 15, 17, 24, 27, 34, 35, 43, 44, 45], "compress": [8, 26, 45], "chat_prompt": 8, "recurs": [8, 15, 27], "merg": [8, 27, 45, 46], "summar": [8, 25, 26], "them": [8, 10, 11, 12, 13, 17, 27, 38, 39, 44], "bottom": [8, 27], "up": [8, 17, 26, 27, 46], "fashion": [8, 27], "wrapper": 8, "llama_index": [8, 18, 22, 23, 25, 27, 34, 35], "response_synthes": 8, "treesummar": 8, "For": [8, 13, 17, 18, 21, 22, 44, 45, 47, 48], "inform": [8, 13, 17, 18, 24, 27, 29, 34, 35, 38, 39, 40, 41, 43, 45, 46, 48], "visit": [8, 13], "doc": [8, 17, 21, 35], "ai": 8, "en": [8, 22, 28], "latest": 8, "exampl": [8, 12, 13, 17, 18, 22, 42, 44, 45, 47, 48], "html": 8, "do": [8, 17, 20, 21, 42, 43, 45], "pass": [8, 10, 11, 22, 24, 27, 34, 35, 45], "templat": [8, 18], "instead": [8, 9, 10], "At": [8, 22, 42, 44, 45], "specifi": [8, 17, 19, 22, 23, 24, 27, 30, 34, 35, 36, 38, 39, 44, 46], "where": [8, 20, 26, 40, 43], "put": [8, 17, 47], "context_str": 8, "query_str": 8, "normal": [8, 13], "enct5forsequenceclassif": [9, 10], "deparallel": [9, 10], "forward": [9, 10], "get_encod": [9, 10], "get_input_embed": [9, 10], "parallel": [9, 10, 13], "set_input_embed": [9, 10], "tart_pur": [9, 10], "enct5token": [9, 10], "build_inputs_with_special_token": [9, 10], "create_token_type_ids_from_sequ": [9, 10], "get_special_tokens_mask": [9, 10], "async": [9, 10, 12, 13, 15], "top_k": [9, 10, 12, 13, 29, 36, 40, 42, 45], "devic": [9, 10], "token_false_id": 9, "token_true_id": 9, "relev": [9, 10, 12, 17, 26, 28, 29, 34, 36, 40], "rank": [9, 10, 13, 37, 39], "gpu": [9, 10], "avail": [9, 10], "otherwis": [9, 10], "cpu": [9, 10], "repres": [9, 41, 44], "contents_list": [9, 10], "scores_list": [9, 10], "ids_list": [9, 10], "model_nam": [9, 28], "castorini": [9, 28], "3b": [9, 28], "msmarco": [9, 28], "10k": [9, 28], "number": [9, 10, 12, 13, 15, 26, 36, 43, 46, 48], "note": [9, 10, 38, 39], "creat": [9, 10, 12, 17, 20, 32, 38, 39, 43, 45, 48], "store": [9, 41], "twist": 9, "therefor": [9, 10, 18, 33, 36], "receiv": 9, "_": 9, "prefix_prompt": [9, 31], "suffix_prompt": [9, 31], "shard_siz": [9, 31], "use_bf16": [9, 31], "bool": [9, 10, 14], "pleas": [9, 12, 13, 17, 21, 22, 31, 33, 36, 42, 45, 46, 47, 48], "write": [9, 12, 21, 31, 38, 39, 42, 44, 45], "question": [9, 10, 11, 12, 17, 18, 19, 20, 30, 31, 32, 33, 35, 45, 48], "github": [9, 10, 17, 20, 21, 45, 47, 48], "com": [9, 10, 20, 21, 45], "devsinghsachan": 9, "unsupervis": 9, "languag": [9, 12, 23, 24, 26, 27, 31, 34, 35, 46], "likelihood": [9, 31], "t5": [9, 10], "larg": [9, 23, 24, 26, 27, 28, 34, 35, 46], "shard": [9, 31], "larger": [9, 31], "faster": [9, 26, 31], "But": [9, 17, 20, 31, 42, 44, 45], "consum": [9, 20, 31], "memori": [9, 31, 47], "power": [9, 31, 45], "whether": [9, 10, 31], "bfloat16": [9, 31], "prefix": [9, 31], "serv": [9, 23, 26, 29, 31, 33, 36, 40, 46], "context": [9, 31, 46], "instruct": [9, 10, 17, 22, 30, 31], "stage": [9, 31], "what": [9, 12, 17, 20, 22, 31, 32, 33, 43, 46], "expect": [9, 17, 31], "suffix": [9, 31], "provid": [9, 24, 27, 28, 31, 34, 35, 48], "cue": [9, 31], "close": [9, 31], "signal": [9, 31], "how": [9, 12, 18, 24, 27, 31, 34, 35, 37, 41, 42, 43, 45, 48], "conclud": [9, 31], "format": [9, 10, 18, 31, 43], "follow": [9, 10, 17, 18, 19, 22, 31, 43, 45], "end": [9, 15, 18, 31], "t5config": 10, "dropout": 10, "1": [10, 12, 13, 15, 17, 23, 24, 35, 43, 44, 47, 48], "t5pretrainedmodel": 10, "input_id": 10, "attention_mask": 10, "head_mask": 10, "inputs_emb": 10, "label": [10, 12, 34], "output_attent": 10, "output_hidden_st": 10, "return_dict": 10, "perform": [10, 17, 20, 23, 26, 29, 33, 36, 39, 45], "call": [10, 22, 24, 27, 31, 34, 35, 37, 38, 39], "overridden": 10, "subclass": 10, "although": 10, "recip": 10, "within": [10, 23, 26, 29, 33, 40, 46], "afterward": 10, "sinc": [10, 18, 23, 32], "former": 10, "take": [10, 22, 39, 45], "care": 10, "regist": 10, "hook": 10, "while": [10, 21, 46], "latter": 10, "silent": 10, "ignor": 10, "nn": 10, "torch": 10, "vocabulari": 10, "hidden": 10, "state": [10, 44], "device_map": 10, "new_embed": 10, "find": [10, 20, 22, 30, 35, 38, 39, 40, 43, 44, 46], "facebookresearch": 10, "tartrerank": 10, "facebook": 10, "full": [10, 17, 43, 46], "flan": 10, "xl": 10, "being": [10, 24, 27, 34, 35], "differ": [10, 15, 17, 18, 22, 23, 28, 36, 37, 38, 39, 43, 46], "chang": [10, 18, 22, 45, 46], "through": [10, 20, 33, 36], "vocab_fil": 10, "bos_token": 10, "eos_token": 10, "unk_token": 10, "unk": 10, "pad_token": 10, "pad": 10, "extra_id": 10, "100": 10, "additional_special_token": 10, "sp_model_kwarg": 10, "t5token": 10, "token_ids_0": 10, "token_ids_1": 10, "build": [10, 17, 18, 43, 44, 45], "sequenc": [10, 46], "pair": [10, 15], "classif": 10, "task": [10, 15, 23], "concaten": 10, "ad": [10, 46, 47], "special": [10, 26], "x": [10, 19], "option": [10, 23, 26, 28, 29, 30, 31, 38, 39, 42, 46, 48], "glossari": 10, "appropri": 10, "mask": 10, "two": [10, 13, 17, 45, 48], "zero": [10, 12, 31, 34], "already_has_special_token": 10, "prepare_for_model": 10, "integ": [10, 31], "rang": 10, "f": [11, 18, 33], "prompt_mak": [11, 33, 44, 45], "read": [11, 20, 32, 33, 42, 45], "carefulli": 11, "made": [11, 45, 48], "generator_func": 11, "generator_param": 11, "strategy_dict": [11, 12], "With": [11, 45, 48], "As": [11, 17, 19, 22, 41, 42], "generator_modul": [11, 33], "recommend": [11, 17, 43, 45, 47, 48], "don": [11, 17, 18, 20, 38, 39, 45, 47, 48], "t": [11, 17, 18, 20, 22, 38, 39, 45, 47, 48], "gpt": [11, 18, 23, 24, 26, 27, 33, 34, 35, 44, 47], "3": [11, 12, 18, 23, 24, 26, 27, 33, 34, 35, 38, 39, 40, 42, 44, 45, 47, 48], "5": [11, 12, 13, 18, 22, 23, 24, 26, 27, 29, 34, 35, 38, 39, 40, 42, 44, 47], "turbo": [11, 18, 23, 24, 26, 27, 33, 34, 35, 44, 47], "expans": [11, 12, 13, 17, 26, 34, 35, 45], "inspir": [12, 34], "precis": [12, 26, 34, 40], "shot": [12, 31, 34, 35], "dens": [12, 13, 34, 37, 41], "without": [12, 20, 24, 27, 34, 35, 36, 38, 39, 45], "arxiv": 12, "org": [12, 20], "pdf": 12, "2212": 12, "10496": 12, "hypothet": [12, 34], "decompos": [12, 36], "self": 12, "sub": 12, "decomposit": [12, 35], "n": [12, 18, 21, 32, 33, 36, 45], "hamlet": 12, "common": [12, 13, 21, 46, 47, 48], "imdb": 12, "than": [12, 13, 17, 37, 43, 44, 45], "comedi": 12, "mani": [12, 24, 27, 34, 35, 44], "ar": [12, 15, 17, 20, 21, 22, 23, 24, 26, 27, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48], "bird": 12, "import": [12, 17, 18, 19, 21, 22, 37, 45, 48], "badminton": 12, "legal": 12, "licens": 12, "child": 12, "drive": 12, "merced": 12, "benz": 12, "emploi": 12, "u": 12, "minimum": 12, "ag": 12, "someon": 12, "4": [12, 47], "cucumb": 12, "textur": 12, "hydrogen": 12, "atom": 12, "squar": 12, "exce": [12, 23, 26, 29], "spice": 12, "girl": [12, 17], "6": 12, "littl": [12, 18, 45], "piec": 12, "llmpredictortyp": 12, "come": [12, 20, 44, 45], "viscond": [12, 35], "strategyqa": [12, 35], "few": [12, 35, 45, 48], "retrieval_func": 12, "retrieval_param": 12, "expanded_queri": 12, "look": [12, 13, 17, 19, 42, 45], "50": 12, "retrieval_modul": [12, 36], "combin": [12, 13, 14, 15, 38, 39, 42, 44, 46], "choos": [12, 17, 41, 44], "wai": [12, 42, 44, 45, 47], "case": [12, 17, 18, 20, 44, 45, 47], "would": [12, 43], "bm25_path": 13, "db_path": 13, "collection_nam": [13, 43], "collect": [13, 15, 17, 42, 45, 46], "resourc": [13, 44], "corpu": [13, 40, 43, 48], "panda": [13, 18], "bm25_corpu": 13, "pickl": 13, "ingest": 13, "row": [13, 17, 43], "doc_id": 13, "Its": [13, 17], "2d": [13, 17], "passage_id": 13, "corpus_path": 13, "bm25_api": 13, "bm25okapi": [13, 37], "usag": [13, 26, 41], "weight": [13, 36, 38, 40], "hybrid": [13, 40, 42], "cc": [13, 40], "convex": [13, 38], "fuse": 13, "To": [13, 17, 21, 22, 45, 48], "uniqu": [13, 17, 26, 46], "realli": [13, 17, 44, 45], "befor": [13, 22, 26, 42, 45, 47, 48], "plu": [13, 17, 22, 41, 42], "sum": 13, "rrf_k": [13, 36, 39, 40, 42], "60": 13, "rrf": [13, 38, 40], "reciproc": [13, 39], "fusion": [13, 39], "spars": [13, 37], "hyperparamet": [13, 42], "our": [13, 17, 18, 20, 21, 44, 45, 47, 48], "target_modul": [13, 36, 38, 39, 40, 42], "target_module_param": [13, 38, 39], "node_dir": 13, "csv": [13, 44, 48], "target": [13, 15, 38, 39, 45], "128": 13, "chroma": [13, 43], "emb": [13, 41, 45], "process": [13, 15, 18, 20, 23, 26, 29, 30, 33, 36, 38, 39, 40, 43, 44, 46], "prevent": [13, 45], "vector_db": 13, "module_dict": 14, "node_dict": 14, "also": [14, 17, 20, 38, 39, 45, 48], "remov": [14, 15], "duplic": [14, 17, 42], "automat": [14, 20, 38, 39, 44, 48], "df": [15, 47], "environ": [15, 21, 47, 48], "variabl": [15, 21, 47], "actual": [15, 17], "index_valu": 15, "explode_valu": 15, "flatten": 15, "summary_path": 15, "dict_column": 15, "fill": 15, "properli": 15, "taken": 15, "offici": 15, "script": [15, 17], "squad": 15, "lower": [15, 26], "punctuat": 15, "articl": 15, "extra": 15, "whitespac": 15, "batch_siz": 15, "64": [15, 34, 36], "asynchron": 15, "coroutin": 15, "replace_valu": 15, "certain": 15, "column_nam": 15, "packag": [16, 21, 22, 47], "subpackag": 16, "modul": [16, 20, 25, 43, 45, 47, 48], "content": [16, 18, 19, 26, 29, 33, 40, 41], "deploi": [16, 19, 20], "node_lin": [16, 26, 29, 33, 36, 42, 43, 45], "support": [16, 17, 20, 24, 27, 34, 35, 42, 45, 46], "There": [17, 20, 36, 43, 45, 48], "kind": [17, 45, 47], "know": [17, 20, 42, 43, 44, 46, 48], "lot": [17, 44, 48], "variat": [17, 36], "good": [17, 18, 45, 48], "identifi": [17, 29, 40], "occur": [17, 42, 45, 47, 48], "unexpect": 17, "behavior": [17, 24, 27, 31, 34, 35, 46], "imagin": 17, "system": [17, 23, 24, 26, 27, 29, 33, 34, 35, 40, 46], "ask": [17, 18, 20, 45], "1d": 17, "why": [17, 44, 45, 48], "condit": 17, "think": [17, 42, 44, 45], "real": [17, 45], "life": 17, "knowledg": 17, "k": [17, 22, 29, 39, 40], "pop": 17, "group": 17, "member": 17, "new": [17, 21, 22, 42, 45, 48], "jean": 17, "aespa": 17, "oper": [17, 19, 26, 40, 46], "On": 17, "hand": 17, "five": 17, "Then": [17, 19, 21, 22, 44], "newjeans1": 17, "newjeans2": 17, "aespa1": 17, "aespa2": 17, "aespa3": 17, "enough": 17, "okai": 17, "treat": [17, 42], "crucial": [17, 26, 29, 46], "autorag": [17, 18, 19, 21, 22, 23, 38, 39, 42, 44, 47, 48], "affect": [17, 44, 46], "huge": [17, 39], "own": [17, 20, 44, 46, 48], "chunk": [17, 18, 45], "onc": [17, 24, 27, 34, 35, 38, 39, 43, 45, 48], "multi": [17, 35], "modal": 17, "imag": [17, 43, 48], "video": 17, "etc": [17, 18, 42], "futur": [17, 44, 45, 46], "earli": 17, "version": [17, 44, 47], "plan": [17, 23, 45], "last_modified_datetim": 17, "modifi": 17, "datetim": 17, "now": [17, 41, 42, 44, 45, 48], "time": [17, 20, 23, 26, 29, 33, 36, 40, 43, 44, 46, 48], "relat": [17, 24, 27, 31, 34, 35], "featur": [17, 23, 45], "python": [17, 18, 21, 32, 38, 39, 42, 47, 48], "reset": [17, 47], "indici": 17, "out": [17, 20, 21, 23, 42, 43, 45, 47, 48], "Or": [17, 21, 48], "download": [17, 48], "repo": [17, 20, 48], "go": [17, 20, 48], "here": [17, 18, 20, 21, 22, 41, 42, 43, 44, 45, 47, 48], "most": [18, 22, 23, 29, 37, 40, 41, 42, 44, 48], "satisfactori": 18, "howev": [18, 38, 44, 45], "advent": 18, "synthet": 18, "becom": [18, 42], "solut": [18, 45], "problem": [18, 45, 47], "guid": [18, 20, 23, 26, 29, 33, 36, 40, 45, 46, 48], "cover": 18, "form": [18, 38, 39], "aim": [18, 38, 40, 46], "work": [18, 38, 39, 42, 47, 48], "primit": 18, "scalabl": 18, "conveni": 18, "loader": 18, "lama_index": 18, "langchain": [18, 45], "datatyp": 18, "found": [18, 24, 27, 34, 35, 41, 48], "corpus_df": 18, "read_parquet": 18, "design": [18, 23, 30, 38, 39], "per": 18, "unit": 18, "gen": 18, "def": 18, "temp_llm": 18, "solv": 18, "clean": 18, "clear": 18, "again": [18, 45, 48], "mark": 18, "approach": [18, 26, 38], "clearli": 18, "neatli": 18, "displai": 18, "assist": 18, "stop": 18, "add": [18, 23, 41, 45], "qa_gener": 18, "mention": 19, "tutori": [19, 20, 45], "trial_fold": [19, 48], "run_api": [19, 48], "config_path": [19, 48], "last": 19, "curl": 19, "h": 19, "accept": 19, "applic": [19, 26, 36], "your_result_column": 19, "url": 19, "payload": 19, "header": 19, "print": 19, "automl": 20, "tool": 20, "numer": 20, "great": [20, 44], "veri": 20, "hard": [20, 44, 45], "never": 20, "That": [20, 45], "variou": [20, 23, 26, 29, 33, 40], "creation": [20, 48], "raw": 20, "experi": [20, 43, 45, 47, 48], "deploy": [20, 38, 39], "fastapi": 20, "well": 20, "pip": [20, 21, 47], "instal": [20, 22, 48], "starter": [20, 48], "after": [20, 21, 29, 42, 44, 45, 48], "learn": [20, 41, 42, 44, 45, 48], "ultim": 20, "Of": 20, "cours": 20, "local": [20, 22, 41, 48], "troubl": [20, 47], "troubleshoot": [20, 21], "feel": [20, 45, 48], "free": [20, 45, 48], "issu": [20, 45, 47, 48], "discord": [20, 45, 47, 48], "channel": [20, 47, 48], "marker": [20, 21, 45], "inc": [20, 21, 45], "korea": [20, 21, 45], "pypi": 20, "gg": [20, 45], "p4dyxfmsa": [20, 45], "page": 21, "openai_api_kei": [21, 42, 47], "export": [21, 47], "sk": 21, "altern": 21, "env": 21, "dotenv": [21, 47], "root": 21, "try": [21, 38, 39, 45, 47], "load_dotenv": 21, "readi": [21, 44, 48], "step": [21, 29, 45], "clone": 21, "repositori": 21, "git": 21, "edit": 21, "cd": 21, "e": [21, 24, 27, 34, 35], "test": [21, 22, 23, 38, 39, 42, 43, 44], "addit": [21, 24, 27, 33, 34, 35, 47], "r": 21, "dev_requir": 21, "txt": 21, "pytest": 21, "ini": 21, "log_cli": 21, "log_cli_level": 21, "info": 21, "m": 21, "auto": 21, "contributor": 21, "wait": 21, "huggingfacellm": [22, 24, 27, 34, 35], "openailik": [22, 47], "node_line_nam": [22, 23, 26, 29, 33, 36, 40, 42, 43, 45], "node_line_1": [22, 42, 45], "mistralai": 22, "mistral": 22, "7b": 22, "v0": [22, 23], "abov": [22, 42, 43, 45, 48], "see": [22, 42, 43, 44, 45, 47, 48], "frequent": 22, "max_token": [22, 24, 27, 34, 35, 36], "temperatur": [22, 23, 24, 27, 34, 35, 36, 44, 47], "simpli": [22, 48], "generator_model": 22, "mockllm": 22, "wa": [22, 44, 47], "major": 22, "updat": 22, "10": [22, 23, 26, 29, 33, 36, 39, 40, 42, 45], "integr": [22, 28, 46], "vllm": [22, 47], "itself": [22, 38, 44], "interfac": 22, "babbag": 22, "openai_babbag": 22, "ada": 22, "openai_ada": 22, "davinci": 22, "openai_davinci": 22, "curi": 22, "openai_curi": 22, "baai": 22, "bge": 22, "small": 22, "huggingface_baai_bge_smal": 22, "cointegr": 22, "rubert": 22, "tiny2": 22, "huggingface_cointegrated_rubert_tiny2": 22, "sentenc": 22, "transform": 22, "huggingface_all_mpnet_base_v2": 22, "begin": 22, "program": 22, "kosimcs": 22, "co": 22, "bm": 22, "roberta": 22, "multitask": 22, "korean": 22, "huggingfaceembed": 22, "allow": [23, 24, 27, 28, 34, 35, 38, 46], "experiment": 23, "facilit": 23, "determin": [23, 43], "effect": [23, 29, 39, 40, 46, 48], "specif": [23, 26, 28, 30, 37, 38, 39, 46, 48], "These": [23, 24, 26, 27, 29, 34, 35, 40, 46, 48], "compar": 23, "semant": [23, 37], "quit": 23, "descript": [23, 29, 40], "appli": [23, 29, 33, 36, 38, 40, 46], "ensur": [23, 26, 29, 33, 36, 40], "predefin": [23, 26, 29], "post_retrieve_node_lin": [23, 33], "arbitrari": [23, 26, 29, 33, 36, 40], "metric_nam": 23, "speed_threshold": [23, 26, 29, 33, 36, 40, 42, 46], "16k": [23, 24, 26, 27, 33, 44, 47], "1106": [23, 24, 33, 44, 47], "g": [24, 27, 34, 35], "By": [24, 26, 27, 29, 34, 35, 36, 38, 39, 46], "keyword": [24, 27, 34, 35], "further": [24, 27, 34, 35, 38], "custom": [24, 27, 31, 34, 35, 38, 41, 46, 47], "passage_rerank": [25, 45], "passage_compressor": 25, "tree": [25, 26], "thei": [26, 42, 45, 46], "reduc": 26, "amount": 26, "effici": 26, "prior": 26, "entri": 26, "significantli": [26, 36, 46], "scale": 26, "quickli": 26, "accumul": 26, "potenti": 26, "lead": 26, "higher": [26, 46], "cost": 26, "slower": 26, "reduct": 26, "directli": [26, 42, 44, 47], "impact": [26, 33, 36, 39, 41], "help": [26, 38, 39], "associ": 26, "analysi": 26, "improv": [26, 29, 31, 36], "deal": 26, "less": 26, "tailor": [26, 39, 46], "level": [26, 29, 40, 46], "address": [26, 46], "recal": [26, 40], "distinct": 26, "underscor": 26, "focu": [26, 48], "retrieve_node_lin": [26, 29, 40], "flexibl": [28, 38, 46], "variant": 28, "med": 28, "unicamp": 28, "dl": 28, "mt5": 28, "ptt5": 28, "pt": 28, "100k": 28, "mmarco": 28, "13b": 28, "involv": [29, 40], "reassess": 29, "reorder": 29, "refin": 29, "obtain": 29, "phase": [29, 36], "primari": [29, 30], "enhanc": [29, 31, 46], "priorit": 29, "high": 29, "subsequ": 29, "pertin": 29, "overal": [29, 44], "qualiti": [29, 48], "top": [29, 36, 40, 43], "assess": 29, "li": 30, "abil": 30, "accuraci": [31, 36, 40], "boolean": 31, "8": 31, "retreived_cont": 32, "tell": [32, 33], "me": [32, 33, 44, 45], "someth": [32, 33, 38, 39], "cannot": [33, 36], "alon": [33, 36, 45], "detail": [33, 36, 46, 48], "outcom": [33, 36, 38], "across": [33, 36, 40, 46], "exceed": [33, 36, 40], "hop": 35, "expand": [36, 44], "immedi": 36, "goal": [36, 44], "search": [36, 37, 41], "term": 36, "vari": [36, 38, 46], "ll": 36, "better": [36, 44, 48], "abl": 36, "respond": 36, "increas": [36, 46], "Not": 36, "direct": 36, "necessari": 36, "consid": 36, "dure": [36, 47], "pre_retrieve_node_lin": 36, "popular": 37, "tf": 37, "idf": 37, "reflect": 37, "word": 37, "often": [37, 47], "count": 37, "domain": 37, "algorithm": [37, 38, 39], "distinguish": 38, "offer": 38, "those": [38, 39], "situat": [38, 39], "oppos": [38, 39], "ast": [38, 39, 42], "literal_ev": [38, 39, 42], "were": [38, 39], "quot": [38, 39], "purpos": [38, 46], "adjust": [38, 47], "influenc": 38, "wrote": [38, 39], "7": [38, 40], "constant": 39, "fetch": 40, "fundament": 40, "easili": [41, 45, 48], "vector": [41, 45], "lastli": [41, 42], "exclus": 41, "chromadb": 41, "databas": 41, "internet": 41, "fee": 41, "open": [41, 44, 47], "softwar": 41, "favorit": 42, "editor": 42, "thing": [42, 48], "node_line_2": [42, 45], "node_line_3": 42, "section": [42, 46, 48], "mind": [42, 48], "pars": 42, "easier": 42, "manag": 42, "secret": 42, "api_kei": [42, 47], "unintend": 42, "action": [42, 45], "best_": 43, "trail": 43, "ran": 43, "too": [43, 44], "took": 43, "roadmap": 43, "modular": [43, 46], "belong": 43, "depend": 43, "show": [43, 44, 45], "best_0": 43, "attempt": 43, "record": 43, "organ": 43, "long": [43, 45], "explain": [43, 45], "hope": 43, "understand": [43, 44], "split": [43, 46, 48], "train": [43, 48], "accur": 43, "pkl": 43, "under": [44, 47], "hood": 44, "diagram": [44, 45], "rememb": 44, "achiev": [44, 46], "possibl": [44, 45], "let": [44, 45, 48], "markov": 44, "chain": 44, "alwai": 44, "guarante": 44, "choic": 44, "caus": [44, 47, 48], "retri": 44, "job": 44, "still": [44, 45, 47], "might": [44, 48], "wonder": 44, "valid": 44, "setup": 44, "probabl": 44, "alpha": 44, "develop": [44, 46], "suggest": [44, 45, 47], "feedback": [44, 45], "survei": 45, "propos": 45, "paradigm": 45, "naiv": 45, "db": 45, "easi": 45, "dai": 45, "framework": 45, "ever": 45, "bad": 45, "advanc": 45, "pre": [45, 48], "perfect": 45, "main": 45, "doesn": 45, "cycl": 45, "hallucin": 45, "fact": 45, "deliv": 45, "wrong": 45, "fate": 45, "re": 45, "dag": 45, "imposs": 45, "decid": [45, 46], "next": 45, "asap": 45, "implement": 45, "circl": 45, "goe": 45, "yet": 45, "blue": 45, "limit": [45, 46, 47], "short": 45, "meger": 45, "matter": 45, "pretti": 45, "locat": 45, "voil\u00e0": 45, "complex": 45, "familiar": 45, "much": 45, "straight": 45, "linear": 45, "branch": 45, "magic": 45, "happen": 45, "pass_valu": 45, "reranker_recal": 45, "target_node_lin": 45, "kf1_polici": 45, "rl_polici": 45, "cool": 45, "tyre": 45, "soon": 45, "interest": 45, "welcom": 45, "act": 46, "interchang": 46, "swap": 46, "mix": 46, "individu": 46, "compon": 46, "fit": 46, "over": 46, "remain": 46, "broader": 46, "resid": 46, "loop": 46, "essenti": [46, 47], "augment": 46, "mechan": 46, "dynam": 46, "temporari": 46, "arrang": 46, "temporarili": 46, "simul": 46, "intend": 46, "until": 46, "aspect": 46, "techniqu": 46, "part": 46, "quantit": 46, "basi": 46, "effort": 46, "strateg": 46, "decis": 46, "criterion": 46, "focus": 46, "mai": 46, "anoth": [46, 48], "upgrad": 47, "gcc": 47, "c": 47, "sudo": 47, "apt": 47, "linux": 47, "brew": 47, "mac": 47, "mistak": [47, 48], "miss": 47, "echo": 47, "command": 47, "your_api_kei": 47, "recogn": 47, "difficulti": 47, "commit": 47, "push": 47, "seriou": [47, 48], "secur": 47, "api_bas": 47, "sometim": 47, "both": 47, "oom": 47, "rate": 47, "tier": 47, "reset_index": 47, "drop": 47, "sure": 48, "who": 48, "manual": 48, "librari": 48, "forget": 48, "overfit": 48, "highli": 48, "later": 48, "sample_config": 48, "cli": 48, "default_config": 48, "done": 48, "sever": 48, "remind": 48, "pipeline_dict": 48, "malfunct": 48, "qa_test": 48, "corpus_test": 48, "awai": 48, "endpoint": 48, "share": 48, "successfulli": 48, "launch": 48, "product": 48}, "objects": {"": [[0, 0, 0, "-", "autorag"]], "autorag": [[1, 0, 0, "-", "data"], [0, 0, 0, "-", "deploy"], [4, 0, 0, "-", "evaluate"], [0, 0, 0, "-", "evaluator"], [0, 1, 1, "", "handle_exception"], [0, 0, 0, "-", "node_line"], [6, 0, 0, "-", "nodes"], [14, 0, 0, "-", "schema"], [0, 0, 0, "-", "strategy"], [0, 0, 0, "-", "support"], [15, 0, 0, "-", "utils"]], "autorag.data": [[2, 0, 0, "-", "qacreation"], [3, 0, 0, "-", "utils"]], "autorag.data.qacreation": [[2, 0, 0, "-", "simple"]], "autorag.data.qacreation.simple": [[2, 1, 1, "", "generate_qa_row"], [2, 1, 1, "", "generate_simple_qa_dataset"]], "autorag.data.utils": [[3, 0, 0, "-", "llamaindex"]], "autorag.data.utils.llamaindex": [[3, 1, 1, "", "get_file_metadata"], [3, 1, 1, "", "llama_documents_to_parquet"]], "autorag.deploy": [[0, 2, 1, "", "Runner"], [0, 2, 1, "", "RunnerInput"], [0, 1, 1, "", "extract_best_config"], [0, 1, 1, "", "extract_node_line_names"], [0, 1, 1, "", "extract_node_strategy"], [0, 1, 1, "", "summary_df_to_yaml"]], "autorag.deploy.Runner": [[0, 3, 1, "", "from_trial_folder"], [0, 3, 1, "", "from_yaml"], [0, 3, 1, "", "run"], [0, 3, 1, "", "run_api_server"]], "autorag.deploy.RunnerInput": [[0, 4, 1, "", "model_computed_fields"], [0, 4, 1, "", "model_config"], [0, 4, 1, "", "model_fields"], [0, 4, 1, "", "query"], [0, 4, 1, "", "result_column"]], "autorag.evaluate": [[4, 0, 0, "-", "generation"], [5, 0, 0, "-", "metric"], [4, 0, 0, "-", "retrieval"], [4, 0, 0, "-", "retrieval_contents"], [4, 0, 0, "-", "util"]], "autorag.evaluate.generation": [[4, 1, 1, "", "evaluate_generation"]], "autorag.evaluate.metric": [[5, 0, 0, "-", "generation"], [5, 0, 0, "-", "retrieval"], [5, 0, 0, "-", "retrieval_contents"], [5, 0, 0, "-", "util"]], "autorag.evaluate.metric.generation": [[5, 1, 1, "", "bleu"], [5, 1, 1, "", "generation_metric"], [5, 1, 1, "", "huggingface_evaluate"], [5, 1, 1, "", "meteor"], [5, 1, 1, "", "rouge"], [5, 1, 1, "", "sem_score"]], "autorag.evaluate.metric.retrieval": [[5, 1, 1, "", "retrieval_f1"], [5, 1, 1, "", "retrieval_metric"], [5, 1, 1, "", "retrieval_precision"], [5, 1, 1, "", "retrieval_recall"]], "autorag.evaluate.metric.retrieval_contents": [[5, 1, 1, "", "retrieval_contents_metric"], [5, 1, 1, "", "retrieval_token_f1"], [5, 1, 1, "", "retrieval_token_precision"], [5, 1, 1, "", "retrieval_token_recall"], [5, 1, 1, "", "single_token_f1"]], "autorag.evaluate.metric.util": [[5, 1, 1, "", "calculate_cosine_similarity"]], "autorag.evaluate.retrieval": [[4, 1, 1, "", "evaluate_retrieval"]], "autorag.evaluate.retrieval_contents": [[4, 1, 1, "", "evaluate_retrieval_contents"]], "autorag.evaluate.util": [[4, 1, 1, "", "cast_embedding_model"], [4, 1, 1, "", "cast_metrics"]], "autorag.evaluator": [[0, 2, 1, "", "Evaluator"]], "autorag.evaluator.Evaluator": [[0, 3, 1, "", "start_trial"]], "autorag.node_line": [[0, 1, 1, "", "make_node_lines"], [0, 1, 1, "", "run_node_line"]], "autorag.nodes": [[7, 0, 0, "-", "generator"], [8, 0, 0, "-", "passagecompressor"], [9, 0, 0, "-", "passagereranker"], [11, 0, 0, "-", "promptmaker"], [12, 0, 0, "-", "queryexpansion"], [13, 0, 0, "-", "retrieval"]], "autorag.nodes.generator": [[7, 0, 0, "-", "base"], [7, 0, 0, "-", "llama_index_llm"], [7, 0, 0, "-", "run"]], "autorag.nodes.generator.base": [[7, 1, 1, "", "generator_node"]], "autorag.nodes.generator.llama_index_llm": [[7, 1, 1, "", "llama_index_llm"]], "autorag.nodes.generator.run": [[7, 1, 1, "", "evaluate_generator_node"], [7, 1, 1, "", "run_generator_node"]], "autorag.nodes.passagecompressor": [[8, 0, 0, "-", "base"], [8, 0, 0, "-", "run"], [8, 0, 0, "-", "tree_summarize"]], "autorag.nodes.passagecompressor.base": [[8, 1, 1, "", "make_llm"], [8, 1, 1, "", "passage_compressor_node"]], "autorag.nodes.passagecompressor.run": [[8, 1, 1, "", "evaluate_passage_compressor_node"], [8, 1, 1, "", "make_contents_gt"], [8, 1, 1, "", "run_passage_compressor_node"]], "autorag.nodes.passagecompressor.tree_summarize": [[8, 1, 1, "", "tree_summarize"]], "autorag.nodes.passagereranker": [[9, 0, 0, "-", "base"], [9, 0, 0, "-", "monot5"], [9, 0, 0, "-", "run"], [10, 0, 0, "-", "tart"], [9, 0, 0, "-", "upr"]], "autorag.nodes.passagereranker.base": [[9, 1, 1, "", "passage_reranker_node"]], "autorag.nodes.passagereranker.monot5": [[9, 1, 1, "", "mono_t5_pure"], [9, 1, 1, "", "monot5"]], "autorag.nodes.passagereranker.run": [[9, 1, 1, "", "run_passage_reranker_node"]], "autorag.nodes.passagereranker.tart": [[10, 0, 0, "-", "modeling_enc_t5"], [10, 0, 0, "-", "tart"], [10, 0, 0, "-", "tokenization_enc_t5"]], "autorag.nodes.passagereranker.tart.modeling_enc_t5": [[10, 2, 1, "", "EncT5ForSequenceClassification"]], "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification": [[10, 3, 1, "", "deparallelize"], [10, 3, 1, "", "forward"], [10, 3, 1, "", "get_encoder"], [10, 3, 1, "", "get_input_embeddings"], [10, 3, 1, "", "parallelize"], [10, 3, 1, "", "set_input_embeddings"]], "autorag.nodes.passagereranker.tart.tart": [[10, 1, 1, "", "tart"], [10, 1, 1, "", "tart_pure"]], "autorag.nodes.passagereranker.tart.tokenization_enc_t5": [[10, 2, 1, "", "EncT5Tokenizer"]], "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer": [[10, 3, 1, "", "build_inputs_with_special_tokens"], [10, 3, 1, "", "create_token_type_ids_from_sequences"], [10, 3, 1, "", "get_special_tokens_mask"]], "autorag.nodes.passagereranker.upr": [[9, 1, 1, "", "calculate_likelihood"], [9, 1, 1, "", "upr"], [9, 1, 1, "", "upr_pure"]], "autorag.nodes.promptmaker": [[11, 0, 0, "-", "base"], [11, 0, 0, "-", "fstring"], [11, 0, 0, "-", "run"]], "autorag.nodes.promptmaker.base": [[11, 1, 1, "", "prompt_maker_node"]], "autorag.nodes.promptmaker.fstring": [[11, 1, 1, "", "fstring"]], "autorag.nodes.promptmaker.run": [[11, 1, 1, "", "evaluate_generator_result"], [11, 1, 1, "", "evaluate_one_prompt_maker_node"], [11, 1, 1, "", "make_generator_callable_params"], [11, 1, 1, "", "run_prompt_maker_node"]], "autorag.nodes.queryexpansion": [[12, 0, 0, "-", "base"], [12, 0, 0, "-", "hyde"], [12, 0, 0, "-", "query_decompose"], [12, 0, 0, "-", "run"]], "autorag.nodes.queryexpansion.base": [[12, 1, 1, "", "query_expansion_node"]], "autorag.nodes.queryexpansion.hyde": [[12, 1, 1, "", "hyde"], [12, 1, 1, "", "hyde_pure"]], "autorag.nodes.queryexpansion.query_decompose": [[12, 1, 1, "", "query_decompose"], [12, 1, 1, "", "query_decompose_pure"]], "autorag.nodes.queryexpansion.run": [[12, 1, 1, "", "evaluate_one_query_expansion_node"], [12, 1, 1, "", "make_retrieval_callable_params"], [12, 1, 1, "", "run_query_expansion_node"]], "autorag.nodes.retrieval": [[13, 0, 0, "-", "base"], [13, 0, 0, "-", "bm25"], [13, 0, 0, "-", "hybrid_cc"], [13, 0, 0, "-", "hybrid_rrf"], [13, 0, 0, "-", "run"], [13, 0, 0, "-", "vectordb"]], "autorag.nodes.retrieval.base": [[13, 1, 1, "", "cast_queries"], [13, 1, 1, "", "evenly_distribute_passages"], [13, 1, 1, "", "load_bm25_corpus"], [13, 1, 1, "", "load_chroma_collection"], [13, 1, 1, "", "retrieval_node"], [13, 1, 1, "", "run_retrieval_modules"]], "autorag.nodes.retrieval.bm25": [[13, 1, 1, "", "bm25"], [13, 1, 1, "", "bm25_ingest"], [13, 1, 1, "", "bm25_pure"], [13, 1, 1, "", "bm25_tokenize"]], "autorag.nodes.retrieval.hybrid_cc": [[13, 1, 1, "", "cc_pure"], [13, 1, 1, "", "hybrid_cc"]], "autorag.nodes.retrieval.hybrid_rrf": [[13, 1, 1, "", "hybrid_rrf"], [13, 1, 1, "", "rrf_calculate"], [13, 1, 1, "", "rrf_pure"]], "autorag.nodes.retrieval.run": [[13, 1, 1, "", "edit_summary_df_params"], [13, 1, 1, "", "evaluate_retrieval_node"], [13, 1, 1, "", "get_hybrid_execution_times"], [13, 1, 1, "", "get_ids_and_scores"], [13, 1, 1, "", "get_module_params"], [13, 1, 1, "", "run_retrieval_node"], [13, 1, 1, "", "select_result_for_hybrid"]], "autorag.nodes.retrieval.vectordb": [[13, 1, 1, "", "vectordb"], [13, 1, 1, "", "vectordb_ingest"], [13, 1, 1, "", "vectordb_pure"]], "autorag.schema": [[14, 0, 0, "-", "module"], [14, 0, 0, "-", "node"]], "autorag.schema.module": [[14, 2, 1, "", "Module"]], "autorag.schema.module.Module": [[14, 3, 1, "", "from_dict"], [14, 4, 1, "", "module"], [14, 4, 1, "", "module_param"], [14, 4, 1, "", "module_type"]], "autorag.schema.node": [[14, 2, 1, "", "Node"], [14, 1, 1, "", "extract_values"], [14, 1, 1, "", "extract_values_from_nodes"], [14, 1, 1, "", "module_type_exists"]], "autorag.schema.node.Node": [[14, 3, 1, "", "from_dict"], [14, 3, 1, "", "get_param_combinations"], [14, 4, 1, "", "modules"], [14, 4, 1, "", "node_params"], [14, 4, 1, "", "node_type"], [14, 3, 1, "", "run"], [14, 4, 1, "", "run_node"], [14, 4, 1, "", "strategy"]], "autorag.strategy": [[0, 1, 1, "", "avoid_empty_result"], [0, 1, 1, "", "filter_by_threshold"], [0, 1, 1, "", "measure_speed"], [0, 1, 1, "", "select_best_average"]], "autorag.support": [[0, 1, 1, "", "dynamically_find_function"], [0, 1, 1, "", "get_support_modules"], [0, 1, 1, "", "get_support_nodes"]], "autorag.utils": [[15, 0, 0, "-", "preprocess"], [15, 0, 0, "-", "util"]], "autorag.utils.preprocess": [[15, 1, 1, "", "cast_corpus_dataset"], [15, 1, 1, "", "cast_qa_dataset"], [15, 1, 1, "", "validate_corpus_dataset"], [15, 1, 1, "", "validate_qa_dataset"]], "autorag.utils.util": [[15, 1, 1, "", "convert_env_in_dict"], [15, 1, 1, "", "convert_string_to_tuple_in_dict"], [15, 1, 1, "", "explode"], [15, 1, 1, "", "fetch_contents"], [15, 1, 1, "", "load_summary_file"], [15, 1, 1, "", "make_combinations"], [15, 1, 1, "", "normalize_string"], [15, 1, 1, "", "process_batch"], [15, 1, 1, "", "replace_value_in_dict"], [15, 1, 1, "", "result_to_dataframe"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"autorag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 20, 45], "packag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "subpackag": [0, 1, 4, 6, 9], "submodul": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15], "deploi": [0, 48], "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46], "evalu": [0, 4, 5, 18, 44, 48], "node_lin": 0, "strategi": [0, 23, 26, 29, 33, 36, 40, 44, 46], "support": [0, 22, 23, 26, 28, 29, 33, 36, 40, 41], "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17], "data": [1, 2, 3, 18, 43, 47], "qacreat": 2, "simpl": 2, "util": [3, 4, 5, 15], "llamaindex": 3, "gener": [4, 5, 7, 23], "retriev": [4, 5, 13, 40], "retrieval_cont": [4, 5], "metric": 5, "node": [6, 7, 8, 9, 10, 11, 12, 13, 14, 23, 26, 29, 33, 36, 40, 42, 43, 44, 45, 46], "base": [7, 8, 9, 11, 12, 13], "llama_index_llm": 7, "run": [7, 8, 9, 11, 12, 13, 19, 47], "passagecompressor": 8, "tree_summar": 8, "passagererank": [9, 10], "monot5": [9, 28], "upr": [9, 31], "tart": [10, 30], "modeling_enc_t5": 10, "tokenization_enc_t5": 10, "promptmak": 11, "fstring": 11, "queryexpans": 12, "hyde": [12, 34], "query_decompos": 12, "bm25": [13, 37], "hybrid_cc": 13, "hybrid_rrf": 13, "vectordb": [13, 41], "schema": 14, "preprocess": 15, "dataset": [17, 48], "format": [17, 48], "qa": [17, 18], "long": 17, "stori": 17, "short": 17, "qid": 17, "queri": [17, 35, 36], "retrieval_gt": 17, "generation_gt": 17, "corpu": [17, 18], "doc_id": 17, "metadata": 17, "sampl": [17, 43], "start": [18, 20], "creat": 18, "your": [18, 22, 48], "own": 18, "index": [18, 22, 43], "overview": [18, 23, 26, 29, 33, 36, 40], "make": [18, 42], "from": [18, 21, 47], "raw": 18, "document": [18, 20], "what": [18, 42, 45], "i": [18, 42, 45, 47], "passag": 18, "us": [18, 22, 42], "custom": [18, 42, 48], "creation": 18, "function": 18, "api": [19, 21, 47], "endpoint": 19, "server": 19, "why": 20, "how": [20, 44], "can": [20, 44], "help": 20, "get": 20, "ecosystem": 20, "instal": [21, 47], "setup": 21, "troubl": 21, "openai": [21, 47], "kei": 21, "build": [21, 47], "sourc": 21, "configur": 22, "llm": [22, 24, 47], "embed": 22, "model": [22, 28], "add": 22, "more": [22, 44, 45], "6": 23, "definit": [23, 26, 29, 33, 36, 40], "paramet": [23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "purpos": [23, 26, 40], "sem_scor": 23, "exampl": [23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46], "config": [23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 48], "yaml": [23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 48], "file": [23, 26, 29, 33, 36, 40, 42, 48], "llama_index": 24, "avail": 25, "list": 25, "4": 26, "passage_compressor": 26, "benefit": [26, 29, 36], "tree": 27, "summar": [27, 46], "name": 28, "3": 29, "passage_rerank": 29, "f": 32, "string": 32, "5": 33, "prompt": 33, "maker": 33, "decompos": 35, "1": 36, "expans": 36, "hybrid": [38, 39], "cc": 38, "hybird": [38, 39], "addit": [38, 39], "explan": [38, 39, 46], "rrf": 39, "2": 40, "backend": 41, "line": [42, 43, 45, 46], "specifi": [42, 48], "tupl": 42, "environ": 42, "variabl": 42, "folder": [43, 48], "structur": [43, 46], "project": [43, 48], "trial": 43, "summari": 43, "csv": 43, "pre_retrieve_node_lin": 43, "query_expans": 43, "retrieve_node_lin": 43, "resourc": 43, "json": 43, "optim": [44, 47, 48], "work": 44, "swap": 44, "pass": 44, "best": 44, "result": 44, "next": [44, 48], "t": 44, "road": 45, "modular": 45, "rag": [45, 48], "want": [45, 48], "know": 45, "about": 45, "earli": 45, "version": 45, "polici": 45, "merger": 45, "contact": 45, "u": 45, "concept": 46, "troubleshoot": 47, "could": 47, "wheel": 47, "face": 47, "error": 47, "while": 47, "The": 47, "length": 47, "row": 47, "differ": 47, "origin": 47, "tutori": 48, "prepar": 48, "note": 48, "find": 48, "pipelin": 48, "write": 48, "extract": 48, "test": 48, "step": 48}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"autorag package": [[0, "autorag-package"]], "Subpackages": [[0, "subpackages"], [1, "subpackages"], [4, "subpackages"], [6, "subpackages"], [9, "subpackages"]], "Submodules": [[0, "submodules"], [2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"], [12, "submodules"], [13, "submodules"], [14, "submodules"], [15, "submodules"]], "autorag.deploy module": [[0, "module-autorag.deploy"]], "autorag.evaluator module": [[0, "module-autorag.evaluator"]], "autorag.node_line module": [[0, "module-autorag.node_line"]], "autorag.strategy module": [[0, "module-autorag.strategy"]], "autorag.support module": [[0, "module-autorag.support"]], "Module contents": [[0, "module-autorag"], [1, "module-autorag.data"], [2, "module-autorag.data.qacreation"], [3, "module-autorag.data.utils"], [4, "module-autorag.evaluate"], [5, "module-autorag.evaluate.metric"], [6, "module-autorag.nodes"], [7, "module-autorag.nodes.generator"], [8, "module-autorag.nodes.passagecompressor"], [9, "module-autorag.nodes.passagereranker"], [10, "module-autorag.nodes.passagereranker.tart"], [11, "module-autorag.nodes.promptmaker"], [12, "module-autorag.nodes.queryexpansion"], [13, "module-autorag.nodes.retrieval"], [14, "module-autorag.schema"], [15, "module-autorag.utils"]], "autorag.data package": [[1, "autorag-data-package"]], "autorag.data.qacreation package": [[2, "autorag-data-qacreation-package"]], "autorag.data.qacreation.simple module": [[2, "module-autorag.data.qacreation.simple"]], "autorag.data.utils package": [[3, "autorag-data-utils-package"]], "autorag.data.utils.llamaindex module": [[3, "module-autorag.data.utils.llamaindex"]], "autorag.evaluate package": [[4, "autorag-evaluate-package"]], "autorag.evaluate.generation module": [[4, "module-autorag.evaluate.generation"]], "autorag.evaluate.retrieval module": [[4, "module-autorag.evaluate.retrieval"]], "autorag.evaluate.retrieval_contents module": [[4, "module-autorag.evaluate.retrieval_contents"]], "autorag.evaluate.util module": [[4, "module-autorag.evaluate.util"]], "autorag.evaluate.metric package": [[5, "autorag-evaluate-metric-package"]], "autorag.evaluate.metric.generation module": [[5, "module-autorag.evaluate.metric.generation"]], "autorag.evaluate.metric.retrieval module": [[5, "module-autorag.evaluate.metric.retrieval"]], "autorag.evaluate.metric.retrieval_contents module": [[5, "module-autorag.evaluate.metric.retrieval_contents"]], "autorag.evaluate.metric.util module": [[5, "module-autorag.evaluate.metric.util"]], "autorag.nodes package": [[6, "autorag-nodes-package"]], "autorag.nodes.generator package": [[7, "autorag-nodes-generator-package"]], "autorag.nodes.generator.base module": [[7, "module-autorag.nodes.generator.base"]], "autorag.nodes.generator.llama_index_llm module": [[7, "module-autorag.nodes.generator.llama_index_llm"]], "autorag.nodes.generator.run module": [[7, "module-autorag.nodes.generator.run"]], "autorag.nodes.passagecompressor package": [[8, "autorag-nodes-passagecompressor-package"]], "autorag.nodes.passagecompressor.base module": [[8, "module-autorag.nodes.passagecompressor.base"]], "autorag.nodes.passagecompressor.run module": [[8, "module-autorag.nodes.passagecompressor.run"]], "autorag.nodes.passagecompressor.tree_summarize module": [[8, "module-autorag.nodes.passagecompressor.tree_summarize"]], "autorag.nodes.passagereranker package": [[9, "autorag-nodes-passagereranker-package"]], "autorag.nodes.passagereranker.base module": [[9, "module-autorag.nodes.passagereranker.base"]], "autorag.nodes.passagereranker.monot5 module": [[9, "module-autorag.nodes.passagereranker.monot5"]], "autorag.nodes.passagereranker.run module": [[9, "module-autorag.nodes.passagereranker.run"]], "autorag.nodes.passagereranker.upr module": [[9, "module-autorag.nodes.passagereranker.upr"]], "autorag.nodes.passagereranker.tart package": [[10, "autorag-nodes-passagereranker-tart-package"]], "autorag.nodes.passagereranker.tart.modeling_enc_t5 module": [[10, "module-autorag.nodes.passagereranker.tart.modeling_enc_t5"]], "autorag.nodes.passagereranker.tart.tart module": [[10, "module-autorag.nodes.passagereranker.tart.tart"]], "autorag.nodes.passagereranker.tart.tokenization_enc_t5 module": [[10, "module-autorag.nodes.passagereranker.tart.tokenization_enc_t5"]], "autorag.nodes.promptmaker package": [[11, "autorag-nodes-promptmaker-package"]], "autorag.nodes.promptmaker.base module": [[11, "module-autorag.nodes.promptmaker.base"]], "autorag.nodes.promptmaker.fstring module": [[11, "module-autorag.nodes.promptmaker.fstring"]], "autorag.nodes.promptmaker.run module": [[11, "module-autorag.nodes.promptmaker.run"]], "autorag.nodes.queryexpansion package": [[12, "autorag-nodes-queryexpansion-package"]], "autorag.nodes.queryexpansion.base module": [[12, "module-autorag.nodes.queryexpansion.base"]], "autorag.nodes.queryexpansion.hyde module": [[12, "module-autorag.nodes.queryexpansion.hyde"]], "autorag.nodes.queryexpansion.query_decompose module": [[12, "module-autorag.nodes.queryexpansion.query_decompose"]], "autorag.nodes.queryexpansion.run module": [[12, "module-autorag.nodes.queryexpansion.run"]], "autorag.nodes.retrieval package": [[13, "autorag-nodes-retrieval-package"]], "autorag.nodes.retrieval.base module": [[13, "module-autorag.nodes.retrieval.base"]], "autorag.nodes.retrieval.bm25 module": [[13, "module-autorag.nodes.retrieval.bm25"]], "autorag.nodes.retrieval.hybrid_cc module": [[13, "module-autorag.nodes.retrieval.hybrid_cc"]], "autorag.nodes.retrieval.hybrid_rrf module": [[13, "module-autorag.nodes.retrieval.hybrid_rrf"]], "autorag.nodes.retrieval.run module": [[13, "module-autorag.nodes.retrieval.run"]], "autorag.nodes.retrieval.vectordb module": [[13, "module-autorag.nodes.retrieval.vectordb"]], "autorag.schema package": [[14, "autorag-schema-package"]], "autorag.schema.module module": [[14, "module-autorag.schema.module"]], "autorag.schema.node module": [[14, "module-autorag.schema.node"]], "autorag.utils package": [[15, "autorag-utils-package"]], "autorag.utils.preprocess module": [[15, "module-autorag.utils.preprocess"]], "autorag.utils.util module": [[15, "module-autorag.utils.util"]], "autorag": [[16, "autorag"]], "Dataset Format": [[17, "dataset-format"]], "QA Dataset": [[17, "qa-dataset"]], "Long story short": [[17, null], [17, null], [17, null], [17, null]], "qid": [[17, "qid"]], "query": [[17, "query"]], "retrieval_gt": [[17, "retrieval-gt"]], "generation_gt": [[17, "generation-gt"]], "Corpus Dataset": [[17, "corpus-dataset"]], "doc_id": [[17, "doc-id"]], "contents": [[17, "contents"]], "metadata": [[17, "metadata"]], "Samples": [[17, "samples"]], "Start creating your own evaluation data": [[18, "start-creating-your-own-evaluation-data"]], "Index": [[18, "index"], [22, "index"]], "Overview": [[18, "overview"], [23, "overview"], [40, "overview"]], "Make corpus data from raw documents": [[18, "make-corpus-data-from-raw-documents"]], "Make qa data from corpus data": [[18, "make-qa-data-from-corpus-data"]], "What is passage?": [[18, null]], "Use custom data creation function": [[18, "use-custom-data-creation-function"]], "API endpoint": [[19, "api-endpoint"]], "Running API server": [[19, "running-api-server"]], "API Endpoint": [[19, "id1"]], "AutoRAG documentation": [[20, "autorag-documentation"]], "\ud83e\udd37\u200d\u2642\ufe0f Why AutoRAG?": [[20, "why-autorag"]], "\ud83e\udd38\u200d\u2642\ufe0f How can AutoRAG helps?": [[20, "how-can-autorag-helps"]], "\ud83c\udfc3\u200d\u2642\ufe0f Getting Started": [[20, "getting-started"]], "\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc66 Ecosystem": [[20, "ecosystem"]], "Installation and Setup": [[21, "installation-and-setup"]], "Trouble with installation?": [[21, null]], "Setup OPENAI API KEY": [[21, "setup-openai-api-key"]], "Build from source": [[21, "build-from-source"]], "Configure LLM & Embedding models": [[22, "configure-llm-embedding-models"]], "Configure the LLM model": [[22, "configure-the-llm-model"]], "Modules that use LLM model": [[22, "modules-that-use-llm-model"]], "Supporting LLM models": [[22, "supporting-llm-models"]], "Add more LLM models": [[22, "add-more-llm-models"]], "Configure the Embedding model": [[22, "configure-the-embedding-model"]], "Modules that use Embedding model": [[22, "modules-that-use-embedding-model"]], "Supporting Embedding models": [[22, "supporting-embedding-models"]], "Add your embedding models": [[22, "add-your-embedding-models"]], "6. Generator": [[23, "generator"]], "\ud83d\udd0e Definition": [[23, "definition"], [26, "definition"], [29, "definition"], [33, "definition"], [36, "definition"], [40, "definition"]], "\ud83d\udd22 Parameters": [[23, "parameters"], [26, "parameters"], [29, "parameters"], [33, "parameters"], [36, "parameters"], [40, "parameters"]], "Node Parameters": [[23, "node-parameters"], [26, "node-parameters"], [29, "node-parameters"], [33, "node-parameters"], [36, "node-parameters"], [40, "node-parameters"]], "Strategy Parameters": [[23, "strategy-parameters"], [26, "strategy-parameters"], [29, "strategy-parameters"], [40, "strategy-parameters"]], "Purpose": [[23, null], [26, null], [40, null]], "sem_score": [[23, null]], "Example config.yaml file": [[23, "example-config-yaml-file"], [26, "example-config-yaml-file"], [29, "example-config-yaml-file"], [33, "example-config-yaml-file"], [36, "example-config-yaml-file"], [40, "example-config-yaml-file"]], "Supported Modules": [[23, "supported-modules"], [26, "supported-modules"], [29, "supported-modules"], [33, "supported-modules"], [36, "supported-modules"], [40, "supported-modules"]], "llama_index LLM": [[24, "llama-index-llm"]], "Module Parameters": [[24, "module-parameters"], [27, "module-parameters"], [28, "module-parameters"], [30, "module-parameters"], [31, "module-parameters"], [32, "module-parameters"], [34, "module-parameters"], [35, "module-parameters"], [37, "module-parameters"], [38, "module-parameters"], [39, "module-parameters"], [41, "module-parameters"]], "Example config.yaml": [[24, "example-config-yaml"], [27, "example-config-yaml"], [28, "example-config-yaml"], [30, "example-config-yaml"], [31, "example-config-yaml"], [32, "example-config-yaml"], [34, "example-config-yaml"], [35, "example-config-yaml"], [37, "example-config-yaml"], [38, "example-config-yaml"], [39, "example-config-yaml"], [41, "example-config-yaml"]], "Available List": [[25, "available-list"]], "4. Passage_Compressor": [[26, "passage-compressor"]], "\ud83e\udd38 Benefits": [[26, "benefits"], [29, "benefits"], [36, "benefits"]], "Overview:": [[26, "overview"], [29, "overview"], [33, "overview"], [36, "overview"]], "Tree Summarize": [[27, "tree-summarize"]], "MonoT5": [[28, "monot5"]], "Supported Model Names": [[28, "supported-model-names"]], "3. Passage_Reranker": [[29, "passage-reranker"]], "TART": [[30, "tart"]], "UPR": [[31, "upr"]], "F-String": [[32, "f-string"]], "5. Prompt Maker": [[33, "prompt-maker"]], "Strategy": [[33, "strategy"], [36, "strategy"], [46, "strategy"]], "Parameters:": [[33, "id1"]], "HyDE": [[34, "hyde"]], "Query Decompose": [[35, "query-decompose"]], "1. Query Expansion": [[36, "query-expansion"]], "Strategy Parameters:": [[36, "strategy-parameters"]], "BM25": [[37, "bm25"]], "Hybrid - cc": [[38, "hybrid-cc"]], "\u2757\ufe0fHybird additional explanation": [[38, "hybird-additional-explanation"]], "Hybrid - rrf": [[39, "hybrid-rrf"]], "\u2757 Hybird additional explanation": [[39, "hybird-additional-explanation"]], "2. Retrieval": [[40, "retrieval"]], "Vectordb": [[41, "vectordb"]], "Backend Support": [[41, "backend-support"]], "Make custom config yaml file": [[42, "make-custom-config-yaml-file"]], "Make yaml file": [[42, "make-yaml-file"]], "Make Node Line": [[42, "make-node-line"]], "Specify nodes": [[42, "specify-nodes"]], "Specify modules": [[42, "specify-modules"]], "What is tuple in the yaml file?": [[42, null]], "Use environment variable in the yaml file": [[42, "use-environment-variable-in-the-yaml-file"]], "Folder Structure": [[43, "folder-structure"]], "Sample Structure Index": [[43, "sample-structure-index"]], "Project": [[43, "project"]], "trial": [[43, "trial"]], "config.yaml": [[43, "config-yaml"]], "[trial] summary.csv": [[43, "trial-summary-csv"]], "pre_retrieve_node_line": [[43, "pre-retrieve-node-line"]], "[Node Line] summary.csv": [[43, "node-line-summary-csv"]], "query_expansion": [[43, "query-expansion"]], "[Node] summary.csv": [[43, "node-summary-csv"]], "retrieve_node_line": [[43, "retrieve-node-line"]], "data": [[43, "data"]], "resources": [[43, "resources"]], "trial.json": [[43, "trial-json"]], "How optimization works": [[44, "how-optimization-works"]], "Swapping modules in Node": [[44, "swapping-modules-in-node"]], "Pass the best result to the next node": [[44, "pass-the-best-result-to-the-next-node"]], "Evaluate Nodes that can\u2019t evaluate": [[44, "evaluate-nodes-that-can-t-evaluate"]], "More optimization strategies": [[44, "more-optimization-strategies"]], "Road to Modular RAG": [[45, "road-to-modular-rag"]], "\ud83e\udd37\u200d\u2642\ufe0f What is Modular RAG?": [[45, "what-is-modular-rag"]], "Want to know more about Modular RAG?": [[45, null]], "\ud83d\ude80 Road to Modular RAG": [[45, "id1"]], "Early version of AutoRAG": [[45, "early-version-of-autorag"]], "Policy Node": [[45, "policy-node"]], "Merger Node": [[45, "merger-node"]], "Node line for Modular RAG": [[45, "node-line-for-modular-rag"]], "What is Node Line?": [[45, null]], "Contact us": [[45, "contact-us"]], "Contact": [[45, null]], "Structure": [[46, "structure"]], "Explanation of concepts": [[46, "explanation-of-concepts"]], "Node & Module": [[46, "node-module"]], "Node Line": [[46, "node-line"]], "Example Node Lines": [[46, "example-node-lines"]], "Summarize": [[46, null], [46, null], [46, null]], "TroubleShooting": [[47, "troubleshooting"]], "Installation": [[47, "installation"]], "Could not build wheels": [[47, "could-not-build-wheels"]], "Optimization": [[47, "optimization"]], "Facing OPENAI API error": [[47, "facing-openai-api-error"]], "Error while running LLM": [[47, "error-while-running-llm"]], "The length or row is different from the original data": [[47, "the-length-or-row-is-different-from-the-original-data"]], "Tutorial": [[48, "tutorial"]], "Prepare Evaluation Dataset": [[48, "prepare-evaluation-dataset"]], "Note: Dataset Format": [[48, null]], "Find Optimal RAG Pipeline": [[48, "find-optimal-rag-pipeline"]], "Write custom config yaml file": [[48, null]], "Want to specify project folder?": [[48, null], [48, null]], "Extract pipeline and evaluate test dataset": [[48, "extract-pipeline-and-evaluate-test-dataset"]], "Deploy your optimal RAG pipeline": [[48, "deploy-your-optimal-rag-pipeline"]], "Next Step": [[48, null]]}, "indexentries": {"evaluator (class in autorag.evaluator)": [[0, "autorag.evaluator.Evaluator"]], "runner (class in autorag.deploy)": [[0, "autorag.deploy.Runner"]], "runnerinput (class in autorag.deploy)": [[0, "autorag.deploy.RunnerInput"]], "autorag": [[0, "module-autorag"]], "autorag.deploy": [[0, "module-autorag.deploy"]], "autorag.evaluator": [[0, "module-autorag.evaluator"]], "autorag.node_line": [[0, "module-autorag.node_line"]], "autorag.strategy": [[0, "module-autorag.strategy"]], "autorag.support": [[0, "module-autorag.support"]], "avoid_empty_result() (in module autorag.strategy)": [[0, "autorag.strategy.avoid_empty_result"]], "dynamically_find_function() (in module autorag.support)": [[0, "autorag.support.dynamically_find_function"]], "extract_best_config() (in module autorag.deploy)": [[0, "autorag.deploy.extract_best_config"]], "extract_node_line_names() (in module autorag.deploy)": [[0, "autorag.deploy.extract_node_line_names"]], "extract_node_strategy() (in module autorag.deploy)": [[0, "autorag.deploy.extract_node_strategy"]], "filter_by_threshold() (in module autorag.strategy)": [[0, "autorag.strategy.filter_by_threshold"]], "from_trial_folder() (autorag.deploy.runner class method)": [[0, "autorag.deploy.Runner.from_trial_folder"]], "from_yaml() (autorag.deploy.runner class method)": [[0, "autorag.deploy.Runner.from_yaml"]], "get_support_modules() (in module autorag.support)": [[0, "autorag.support.get_support_modules"]], "get_support_nodes() (in module autorag.support)": [[0, "autorag.support.get_support_nodes"]], "handle_exception() (in module autorag)": [[0, "autorag.handle_exception"]], "make_node_lines() (in module autorag.node_line)": [[0, "autorag.node_line.make_node_lines"]], "measure_speed() (in module autorag.strategy)": [[0, "autorag.strategy.measure_speed"]], "model_computed_fields (autorag.deploy.runnerinput attribute)": [[0, "autorag.deploy.RunnerInput.model_computed_fields"]], "model_config (autorag.deploy.runnerinput attribute)": [[0, "autorag.deploy.RunnerInput.model_config"]], "model_fields (autorag.deploy.runnerinput attribute)": [[0, "autorag.deploy.RunnerInput.model_fields"]], "module": [[0, "module-autorag"], [0, "module-autorag.deploy"], [0, "module-autorag.evaluator"], [0, "module-autorag.node_line"], [0, "module-autorag.strategy"], [0, "module-autorag.support"], [1, "module-autorag.data"], [2, "module-autorag.data.qacreation"], [2, "module-autorag.data.qacreation.simple"], [3, "module-autorag.data.utils"], [3, "module-autorag.data.utils.llamaindex"], [4, "module-autorag.evaluate"], [4, "module-autorag.evaluate.generation"], [4, "module-autorag.evaluate.retrieval"], [4, "module-autorag.evaluate.retrieval_contents"], [4, "module-autorag.evaluate.util"], [5, "module-autorag.evaluate.metric"], [5, "module-autorag.evaluate.metric.generation"], [5, "module-autorag.evaluate.metric.retrieval"], [5, "module-autorag.evaluate.metric.retrieval_contents"], [5, "module-autorag.evaluate.metric.util"], [6, "module-autorag.nodes"], [7, "module-autorag.nodes.generator"], [7, "module-autorag.nodes.generator.base"], [7, "module-autorag.nodes.generator.llama_index_llm"], [7, "module-autorag.nodes.generator.run"], [8, "module-autorag.nodes.passagecompressor"], [8, "module-autorag.nodes.passagecompressor.base"], [8, "module-autorag.nodes.passagecompressor.run"], [8, "module-autorag.nodes.passagecompressor.tree_summarize"], [9, "module-autorag.nodes.passagereranker"], [9, "module-autorag.nodes.passagereranker.base"], [9, "module-autorag.nodes.passagereranker.monot5"], [9, "module-autorag.nodes.passagereranker.run"], [9, "module-autorag.nodes.passagereranker.upr"], [10, "module-autorag.nodes.passagereranker.tart"], [10, "module-autorag.nodes.passagereranker.tart.modeling_enc_t5"], [10, "module-autorag.nodes.passagereranker.tart.tart"], [10, "module-autorag.nodes.passagereranker.tart.tokenization_enc_t5"], [11, "module-autorag.nodes.promptmaker"], [11, "module-autorag.nodes.promptmaker.base"], [11, "module-autorag.nodes.promptmaker.fstring"], [11, "module-autorag.nodes.promptmaker.run"], [12, "module-autorag.nodes.queryexpansion"], [12, "module-autorag.nodes.queryexpansion.base"], [12, "module-autorag.nodes.queryexpansion.hyde"], [12, "module-autorag.nodes.queryexpansion.query_decompose"], [12, "module-autorag.nodes.queryexpansion.run"], [13, "module-autorag.nodes.retrieval"], [13, "module-autorag.nodes.retrieval.base"], [13, "module-autorag.nodes.retrieval.bm25"], [13, "module-autorag.nodes.retrieval.hybrid_cc"], [13, "module-autorag.nodes.retrieval.hybrid_rrf"], [13, "module-autorag.nodes.retrieval.run"], [13, "module-autorag.nodes.retrieval.vectordb"], [14, "module-autorag.schema"], [14, "module-autorag.schema.module"], [14, "module-autorag.schema.node"], [15, "module-autorag.utils"], [15, "module-autorag.utils.preprocess"], [15, "module-autorag.utils.util"]], "query (autorag.deploy.runnerinput attribute)": [[0, "autorag.deploy.RunnerInput.query"]], "result_column (autorag.deploy.runnerinput attribute)": [[0, "autorag.deploy.RunnerInput.result_column"]], "run() (autorag.deploy.runner method)": [[0, "autorag.deploy.Runner.run"]], "run_api_server() (autorag.deploy.runner method)": [[0, "autorag.deploy.Runner.run_api_server"]], "run_node_line() (in module autorag.node_line)": [[0, "autorag.node_line.run_node_line"]], "select_best_average() (in module autorag.strategy)": [[0, "autorag.strategy.select_best_average"]], "start_trial() (autorag.evaluator.evaluator method)": [[0, "autorag.evaluator.Evaluator.start_trial"]], "summary_df_to_yaml() (in module autorag.deploy)": [[0, "autorag.deploy.summary_df_to_yaml"]], "autorag.data": [[1, "module-autorag.data"]], "autorag.data.qacreation": [[2, "module-autorag.data.qacreation"]], "autorag.data.qacreation.simple": [[2, "module-autorag.data.qacreation.simple"]], "generate_qa_row() (in module autorag.data.qacreation.simple)": [[2, "autorag.data.qacreation.simple.generate_qa_row"]], "generate_simple_qa_dataset() (in module autorag.data.qacreation.simple)": [[2, "autorag.data.qacreation.simple.generate_simple_qa_dataset"]], "autorag.data.utils": [[3, "module-autorag.data.utils"]], "autorag.data.utils.llamaindex": [[3, "module-autorag.data.utils.llamaindex"]], "get_file_metadata() (in module autorag.data.utils.llamaindex)": [[3, "autorag.data.utils.llamaindex.get_file_metadata"]], "llama_documents_to_parquet() (in module autorag.data.utils.llamaindex)": [[3, "autorag.data.utils.llamaindex.llama_documents_to_parquet"]], "autorag.evaluate": [[4, "module-autorag.evaluate"]], "autorag.evaluate.generation": [[4, "module-autorag.evaluate.generation"]], "autorag.evaluate.retrieval": [[4, "module-autorag.evaluate.retrieval"]], "autorag.evaluate.retrieval_contents": [[4, "module-autorag.evaluate.retrieval_contents"]], "autorag.evaluate.util": [[4, "module-autorag.evaluate.util"]], "cast_embedding_model() (in module autorag.evaluate.util)": [[4, "autorag.evaluate.util.cast_embedding_model"]], "cast_metrics() (in module autorag.evaluate.util)": [[4, "autorag.evaluate.util.cast_metrics"]], "evaluate_generation() (in module autorag.evaluate.generation)": [[4, "autorag.evaluate.generation.evaluate_generation"]], "evaluate_retrieval() (in module autorag.evaluate.retrieval)": [[4, "autorag.evaluate.retrieval.evaluate_retrieval"]], "evaluate_retrieval_contents() (in module autorag.evaluate.retrieval_contents)": [[4, "autorag.evaluate.retrieval_contents.evaluate_retrieval_contents"]], "autorag.evaluate.metric": [[5, "module-autorag.evaluate.metric"]], "autorag.evaluate.metric.generation": [[5, "module-autorag.evaluate.metric.generation"]], "autorag.evaluate.metric.retrieval": [[5, "module-autorag.evaluate.metric.retrieval"]], "autorag.evaluate.metric.retrieval_contents": [[5, "module-autorag.evaluate.metric.retrieval_contents"]], "autorag.evaluate.metric.util": [[5, "module-autorag.evaluate.metric.util"]], "bleu() (in module autorag.evaluate.metric.generation)": [[5, "autorag.evaluate.metric.generation.bleu"]], "calculate_cosine_similarity() (in module autorag.evaluate.metric.util)": [[5, "autorag.evaluate.metric.util.calculate_cosine_similarity"]], "generation_metric() (in module autorag.evaluate.metric.generation)": [[5, "autorag.evaluate.metric.generation.generation_metric"]], "huggingface_evaluate() (in module autorag.evaluate.metric.generation)": [[5, "autorag.evaluate.metric.generation.huggingface_evaluate"]], "meteor() (in module autorag.evaluate.metric.generation)": [[5, "autorag.evaluate.metric.generation.meteor"]], "retrieval_contents_metric() (in module autorag.evaluate.metric.retrieval_contents)": [[5, "autorag.evaluate.metric.retrieval_contents.retrieval_contents_metric"]], "retrieval_f1() (in module autorag.evaluate.metric.retrieval)": [[5, "autorag.evaluate.metric.retrieval.retrieval_f1"]], "retrieval_metric() (in module autorag.evaluate.metric.retrieval)": [[5, "autorag.evaluate.metric.retrieval.retrieval_metric"]], "retrieval_precision() (in module autorag.evaluate.metric.retrieval)": [[5, "autorag.evaluate.metric.retrieval.retrieval_precision"]], "retrieval_recall() (in module autorag.evaluate.metric.retrieval)": [[5, "autorag.evaluate.metric.retrieval.retrieval_recall"]], "retrieval_token_f1() (in module autorag.evaluate.metric.retrieval_contents)": [[5, "autorag.evaluate.metric.retrieval_contents.retrieval_token_f1"]], "retrieval_token_precision() (in module autorag.evaluate.metric.retrieval_contents)": [[5, "autorag.evaluate.metric.retrieval_contents.retrieval_token_precision"]], "retrieval_token_recall() (in module autorag.evaluate.metric.retrieval_contents)": [[5, "autorag.evaluate.metric.retrieval_contents.retrieval_token_recall"]], "rouge() (in module autorag.evaluate.metric.generation)": [[5, "autorag.evaluate.metric.generation.rouge"]], "sem_score() (in module autorag.evaluate.metric.generation)": [[5, "autorag.evaluate.metric.generation.sem_score"]], "single_token_f1() (in module autorag.evaluate.metric.retrieval_contents)": [[5, "autorag.evaluate.metric.retrieval_contents.single_token_f1"]], "autorag.nodes": [[6, "module-autorag.nodes"]], "autorag.nodes.generator": [[7, "module-autorag.nodes.generator"]], "autorag.nodes.generator.base": [[7, "module-autorag.nodes.generator.base"]], "autorag.nodes.generator.llama_index_llm": [[7, "module-autorag.nodes.generator.llama_index_llm"]], "autorag.nodes.generator.run": [[7, "module-autorag.nodes.generator.run"]], "evaluate_generator_node() (in module autorag.nodes.generator.run)": [[7, "autorag.nodes.generator.run.evaluate_generator_node"]], "generator_node() (in module autorag.nodes.generator.base)": [[7, "autorag.nodes.generator.base.generator_node"]], "llama_index_llm() (in module autorag.nodes.generator.llama_index_llm)": [[7, "autorag.nodes.generator.llama_index_llm.llama_index_llm"]], "run_generator_node() (in module autorag.nodes.generator.run)": [[7, "autorag.nodes.generator.run.run_generator_node"]], "autorag.nodes.passagecompressor": [[8, "module-autorag.nodes.passagecompressor"]], "autorag.nodes.passagecompressor.base": [[8, "module-autorag.nodes.passagecompressor.base"]], "autorag.nodes.passagecompressor.run": [[8, "module-autorag.nodes.passagecompressor.run"]], "autorag.nodes.passagecompressor.tree_summarize": [[8, "module-autorag.nodes.passagecompressor.tree_summarize"]], "evaluate_passage_compressor_node() (in module autorag.nodes.passagecompressor.run)": [[8, "autorag.nodes.passagecompressor.run.evaluate_passage_compressor_node"]], "make_contents_gt() (in module autorag.nodes.passagecompressor.run)": [[8, "autorag.nodes.passagecompressor.run.make_contents_gt"]], "make_llm() (in module autorag.nodes.passagecompressor.base)": [[8, "autorag.nodes.passagecompressor.base.make_llm"]], "passage_compressor_node() (in module autorag.nodes.passagecompressor.base)": [[8, "autorag.nodes.passagecompressor.base.passage_compressor_node"]], "run_passage_compressor_node() (in module autorag.nodes.passagecompressor.run)": [[8, "autorag.nodes.passagecompressor.run.run_passage_compressor_node"]], "tree_summarize() (in module autorag.nodes.passagecompressor.tree_summarize)": [[8, "autorag.nodes.passagecompressor.tree_summarize.tree_summarize"]], "autorag.nodes.passagereranker": [[9, "module-autorag.nodes.passagereranker"]], "autorag.nodes.passagereranker.base": [[9, "module-autorag.nodes.passagereranker.base"]], "autorag.nodes.passagereranker.monot5": [[9, "module-autorag.nodes.passagereranker.monot5"]], "autorag.nodes.passagereranker.run": [[9, "module-autorag.nodes.passagereranker.run"]], "autorag.nodes.passagereranker.upr": [[9, "module-autorag.nodes.passagereranker.upr"]], "calculate_likelihood() (in module autorag.nodes.passagereranker.upr)": [[9, "autorag.nodes.passagereranker.upr.calculate_likelihood"]], "mono_t5_pure() (in module autorag.nodes.passagereranker.monot5)": [[9, "autorag.nodes.passagereranker.monot5.mono_t5_pure"]], "monot5() (in module autorag.nodes.passagereranker.monot5)": [[9, "autorag.nodes.passagereranker.monot5.monot5"]], "passage_reranker_node() (in module autorag.nodes.passagereranker.base)": [[9, "autorag.nodes.passagereranker.base.passage_reranker_node"]], "run_passage_reranker_node() (in module autorag.nodes.passagereranker.run)": [[9, "autorag.nodes.passagereranker.run.run_passage_reranker_node"]], "upr() (in module autorag.nodes.passagereranker.upr)": [[9, "autorag.nodes.passagereranker.upr.upr"]], "upr_pure() (in module autorag.nodes.passagereranker.upr)": [[9, "autorag.nodes.passagereranker.upr.upr_pure"]], "enct5forsequenceclassification (class in autorag.nodes.passagereranker.tart.modeling_enc_t5)": [[10, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification"]], "enct5tokenizer (class in autorag.nodes.passagereranker.tart.tokenization_enc_t5)": [[10, "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer"]], "autorag.nodes.passagereranker.tart": [[10, "module-autorag.nodes.passagereranker.tart"]], "autorag.nodes.passagereranker.tart.modeling_enc_t5": [[10, "module-autorag.nodes.passagereranker.tart.modeling_enc_t5"]], "autorag.nodes.passagereranker.tart.tart": [[10, "module-autorag.nodes.passagereranker.tart.tart"]], "autorag.nodes.passagereranker.tart.tokenization_enc_t5": [[10, "module-autorag.nodes.passagereranker.tart.tokenization_enc_t5"]], "build_inputs_with_special_tokens() (autorag.nodes.passagereranker.tart.tokenization_enc_t5.enct5tokenizer method)": [[10, "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer.build_inputs_with_special_tokens"]], "create_token_type_ids_from_sequences() (autorag.nodes.passagereranker.tart.tokenization_enc_t5.enct5tokenizer method)": [[10, "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer.create_token_type_ids_from_sequences"]], "deparallelize() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[10, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.deparallelize"]], "forward() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[10, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.forward"]], "get_encoder() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[10, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.get_encoder"]], "get_input_embeddings() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[10, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.get_input_embeddings"]], "get_special_tokens_mask() (autorag.nodes.passagereranker.tart.tokenization_enc_t5.enct5tokenizer method)": [[10, "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer.get_special_tokens_mask"]], "parallelize() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[10, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.parallelize"]], "set_input_embeddings() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[10, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.set_input_embeddings"]], "tart() (in module autorag.nodes.passagereranker.tart.tart)": [[10, "autorag.nodes.passagereranker.tart.tart.tart"]], "tart_pure() (in module autorag.nodes.passagereranker.tart.tart)": [[10, "autorag.nodes.passagereranker.tart.tart.tart_pure"]], "autorag.nodes.promptmaker": [[11, "module-autorag.nodes.promptmaker"]], "autorag.nodes.promptmaker.base": [[11, "module-autorag.nodes.promptmaker.base"]], "autorag.nodes.promptmaker.fstring": [[11, "module-autorag.nodes.promptmaker.fstring"]], "autorag.nodes.promptmaker.run": [[11, "module-autorag.nodes.promptmaker.run"]], "evaluate_generator_result() (in module autorag.nodes.promptmaker.run)": [[11, "autorag.nodes.promptmaker.run.evaluate_generator_result"]], "evaluate_one_prompt_maker_node() (in module autorag.nodes.promptmaker.run)": [[11, "autorag.nodes.promptmaker.run.evaluate_one_prompt_maker_node"]], "fstring() (in module autorag.nodes.promptmaker.fstring)": [[11, "autorag.nodes.promptmaker.fstring.fstring"]], "make_generator_callable_params() (in module autorag.nodes.promptmaker.run)": [[11, "autorag.nodes.promptmaker.run.make_generator_callable_params"]], "prompt_maker_node() (in module autorag.nodes.promptmaker.base)": [[11, "autorag.nodes.promptmaker.base.prompt_maker_node"]], "run_prompt_maker_node() (in module autorag.nodes.promptmaker.run)": [[11, "autorag.nodes.promptmaker.run.run_prompt_maker_node"]], "autorag.nodes.queryexpansion": [[12, "module-autorag.nodes.queryexpansion"]], "autorag.nodes.queryexpansion.base": [[12, "module-autorag.nodes.queryexpansion.base"]], "autorag.nodes.queryexpansion.hyde": [[12, "module-autorag.nodes.queryexpansion.hyde"]], "autorag.nodes.queryexpansion.query_decompose": [[12, "module-autorag.nodes.queryexpansion.query_decompose"]], "autorag.nodes.queryexpansion.run": [[12, "module-autorag.nodes.queryexpansion.run"]], "evaluate_one_query_expansion_node() (in module autorag.nodes.queryexpansion.run)": [[12, "autorag.nodes.queryexpansion.run.evaluate_one_query_expansion_node"]], "hyde() (in module autorag.nodes.queryexpansion.hyde)": [[12, "autorag.nodes.queryexpansion.hyde.hyde"]], "hyde_pure() (in module autorag.nodes.queryexpansion.hyde)": [[12, "autorag.nodes.queryexpansion.hyde.hyde_pure"]], "make_retrieval_callable_params() (in module autorag.nodes.queryexpansion.run)": [[12, "autorag.nodes.queryexpansion.run.make_retrieval_callable_params"]], "query_decompose() (in module autorag.nodes.queryexpansion.query_decompose)": [[12, "autorag.nodes.queryexpansion.query_decompose.query_decompose"]], "query_decompose_pure() (in module autorag.nodes.queryexpansion.query_decompose)": [[12, "autorag.nodes.queryexpansion.query_decompose.query_decompose_pure"]], "query_expansion_node() (in module autorag.nodes.queryexpansion.base)": [[12, "autorag.nodes.queryexpansion.base.query_expansion_node"]], "run_query_expansion_node() (in module autorag.nodes.queryexpansion.run)": [[12, "autorag.nodes.queryexpansion.run.run_query_expansion_node"]], "autorag.nodes.retrieval": [[13, "module-autorag.nodes.retrieval"]], "autorag.nodes.retrieval.base": [[13, "module-autorag.nodes.retrieval.base"]], "autorag.nodes.retrieval.bm25": [[13, "module-autorag.nodes.retrieval.bm25"]], "autorag.nodes.retrieval.hybrid_cc": [[13, "module-autorag.nodes.retrieval.hybrid_cc"]], "autorag.nodes.retrieval.hybrid_rrf": [[13, "module-autorag.nodes.retrieval.hybrid_rrf"]], "autorag.nodes.retrieval.run": [[13, "module-autorag.nodes.retrieval.run"]], "autorag.nodes.retrieval.vectordb": [[13, "module-autorag.nodes.retrieval.vectordb"]], "bm25() (in module autorag.nodes.retrieval.bm25)": [[13, "autorag.nodes.retrieval.bm25.bm25"]], "bm25_ingest() (in module autorag.nodes.retrieval.bm25)": [[13, "autorag.nodes.retrieval.bm25.bm25_ingest"]], "bm25_pure() (in module autorag.nodes.retrieval.bm25)": [[13, "autorag.nodes.retrieval.bm25.bm25_pure"]], "bm25_tokenize() (in module autorag.nodes.retrieval.bm25)": [[13, "autorag.nodes.retrieval.bm25.bm25_tokenize"]], "cast_queries() (in module autorag.nodes.retrieval.base)": [[13, "autorag.nodes.retrieval.base.cast_queries"]], "cc_pure() (in module autorag.nodes.retrieval.hybrid_cc)": [[13, "autorag.nodes.retrieval.hybrid_cc.cc_pure"]], "edit_summary_df_params() (in module autorag.nodes.retrieval.run)": [[13, "autorag.nodes.retrieval.run.edit_summary_df_params"]], "evaluate_retrieval_node() (in module autorag.nodes.retrieval.run)": [[13, "autorag.nodes.retrieval.run.evaluate_retrieval_node"]], "evenly_distribute_passages() (in module autorag.nodes.retrieval.base)": [[13, "autorag.nodes.retrieval.base.evenly_distribute_passages"]], "get_hybrid_execution_times() (in module autorag.nodes.retrieval.run)": [[13, "autorag.nodes.retrieval.run.get_hybrid_execution_times"]], "get_ids_and_scores() (in module autorag.nodes.retrieval.run)": [[13, "autorag.nodes.retrieval.run.get_ids_and_scores"]], "get_module_params() (in module autorag.nodes.retrieval.run)": [[13, "autorag.nodes.retrieval.run.get_module_params"]], "hybrid_cc() (in module autorag.nodes.retrieval.hybrid_cc)": [[13, "autorag.nodes.retrieval.hybrid_cc.hybrid_cc"]], "hybrid_rrf() (in module autorag.nodes.retrieval.hybrid_rrf)": [[13, "autorag.nodes.retrieval.hybrid_rrf.hybrid_rrf"]], "load_bm25_corpus() (in module autorag.nodes.retrieval.base)": [[13, "autorag.nodes.retrieval.base.load_bm25_corpus"]], "load_chroma_collection() (in module autorag.nodes.retrieval.base)": [[13, "autorag.nodes.retrieval.base.load_chroma_collection"]], "retrieval_node() (in module autorag.nodes.retrieval.base)": [[13, "autorag.nodes.retrieval.base.retrieval_node"]], "rrf_calculate() (in module autorag.nodes.retrieval.hybrid_rrf)": [[13, "autorag.nodes.retrieval.hybrid_rrf.rrf_calculate"]], "rrf_pure() (in module autorag.nodes.retrieval.hybrid_rrf)": [[13, "autorag.nodes.retrieval.hybrid_rrf.rrf_pure"]], "run_retrieval_modules() (in module autorag.nodes.retrieval.base)": [[13, "autorag.nodes.retrieval.base.run_retrieval_modules"]], "run_retrieval_node() (in module autorag.nodes.retrieval.run)": [[13, "autorag.nodes.retrieval.run.run_retrieval_node"]], "select_result_for_hybrid() (in module autorag.nodes.retrieval.run)": [[13, "autorag.nodes.retrieval.run.select_result_for_hybrid"]], "vectordb() (in module autorag.nodes.retrieval.vectordb)": [[13, "autorag.nodes.retrieval.vectordb.vectordb"]], "vectordb_ingest() (in module autorag.nodes.retrieval.vectordb)": [[13, "autorag.nodes.retrieval.vectordb.vectordb_ingest"]], "vectordb_pure() (in module autorag.nodes.retrieval.vectordb)": [[13, "autorag.nodes.retrieval.vectordb.vectordb_pure"]], "module (class in autorag.schema.module)": [[14, "autorag.schema.module.Module"]], "node (class in autorag.schema.node)": [[14, "autorag.schema.node.Node"]], "autorag.schema": [[14, "module-autorag.schema"]], "autorag.schema.module": [[14, "module-autorag.schema.module"]], "autorag.schema.node": [[14, "module-autorag.schema.node"]], "extract_values() (in module autorag.schema.node)": [[14, "autorag.schema.node.extract_values"]], "extract_values_from_nodes() (in module autorag.schema.node)": [[14, "autorag.schema.node.extract_values_from_nodes"]], "from_dict() (autorag.schema.module.module class method)": [[14, "autorag.schema.module.Module.from_dict"]], "from_dict() (autorag.schema.node.node class method)": [[14, "autorag.schema.node.Node.from_dict"]], "get_param_combinations() (autorag.schema.node.node method)": [[14, "autorag.schema.node.Node.get_param_combinations"]], "module (autorag.schema.module.module attribute)": [[14, "autorag.schema.module.Module.module"]], "module_param (autorag.schema.module.module attribute)": [[14, "autorag.schema.module.Module.module_param"]], "module_type (autorag.schema.module.module attribute)": [[14, "autorag.schema.module.Module.module_type"]], "module_type_exists() (in module autorag.schema.node)": [[14, "autorag.schema.node.module_type_exists"]], "modules (autorag.schema.node.node attribute)": [[14, "autorag.schema.node.Node.modules"]], "node_params (autorag.schema.node.node attribute)": [[14, "autorag.schema.node.Node.node_params"]], "node_type (autorag.schema.node.node attribute)": [[14, "autorag.schema.node.Node.node_type"]], "run() (autorag.schema.node.node method)": [[14, "autorag.schema.node.Node.run"]], "run_node (autorag.schema.node.node attribute)": [[14, "autorag.schema.node.Node.run_node"]], "strategy (autorag.schema.node.node attribute)": [[14, "autorag.schema.node.Node.strategy"]], "autorag.utils": [[15, "module-autorag.utils"]], "autorag.utils.preprocess": [[15, "module-autorag.utils.preprocess"]], "autorag.utils.util": [[15, "module-autorag.utils.util"]], "cast_corpus_dataset() (in module autorag.utils.preprocess)": [[15, "autorag.utils.preprocess.cast_corpus_dataset"]], "cast_qa_dataset() (in module autorag.utils.preprocess)": [[15, "autorag.utils.preprocess.cast_qa_dataset"]], "convert_env_in_dict() (in module autorag.utils.util)": [[15, "autorag.utils.util.convert_env_in_dict"]], "convert_string_to_tuple_in_dict() (in module autorag.utils.util)": [[15, "autorag.utils.util.convert_string_to_tuple_in_dict"]], "explode() (in module autorag.utils.util)": [[15, "autorag.utils.util.explode"]], "fetch_contents() (in module autorag.utils.util)": [[15, "autorag.utils.util.fetch_contents"]], "load_summary_file() (in module autorag.utils.util)": [[15, "autorag.utils.util.load_summary_file"]], "make_combinations() (in module autorag.utils.util)": [[15, "autorag.utils.util.make_combinations"]], "normalize_string() (in module autorag.utils.util)": [[15, "autorag.utils.util.normalize_string"]], "process_batch() (in module autorag.utils.util)": [[15, "autorag.utils.util.process_batch"]], "replace_value_in_dict() (in module autorag.utils.util)": [[15, "autorag.utils.util.replace_value_in_dict"]], "result_to_dataframe() (in module autorag.utils.util)": [[15, "autorag.utils.util.result_to_dataframe"]], "validate_corpus_dataset() (in module autorag.utils.preprocess)": [[15, "autorag.utils.preprocess.validate_corpus_dataset"]], "validate_qa_dataset() (in module autorag.utils.preprocess)": [[15, "autorag.utils.preprocess.validate_qa_dataset"]]}})
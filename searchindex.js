Search.setIndex({"alltitles": {"0. Retrieval token metric in AutoRAG": [[46, "retrieval-token-metric-in-autorag"]], "0. Understanding AutoRAG\u2019s retrieval_gt": [[45, "understanding-autorag-s-retrieval-gt"]], "1. Add File Name": [[25, "add-file-name"]], "1. Auto-truncate prompt": [[52, "auto-truncate-prompt"]], "1. Bleu": [[44, "bleu"]], "1. Factoid": [[37, "factoid"]], "1. HTML Parser": [[29, "html-parser"]], "1. Installation": [[99, "installation"]], "1. PDF": [[30, "pdf"]], "1. Parse": [[38, "parse"]], "1. Precision": [[45, "precision"]], "1. Query Expansion": [[87, null]], "1. Run as a CLI": [[100, "run-as-a-cli"]], "1. Sample retrieval gt": [[36, "sample-retrieval-gt"]], "1. Set chunker instance": [[25, "set-chunker-instance"]], "1. Set parser instance": [[32, "set-parser-instance"]], "1. Token": [[26, "token"], [27, "token"]], "1. Token Precision": [[46, "token-precision"]], "1. Unanswerable question filtering": [[35, "unanswerable-question-filtering"]], "1. Use YAML path": [[43, "use-yaml-path"]], "2. Accurate token output": [[52, "accurate-token-output"]], "2. CSV": [[30, "csv"]], "2. Character": [[26, "character"]], "2. Concept Completion": [[37, "concept-completion"]], "2. Get retrieval gt contents to generate questions": [[36, "get-retrieval-gt-contents-to-generate-questions"]], "2. Optimization": [[99, "optimization"]], "2. QA Creation": [[38, "qa-creation"]], "2. Recall": [[45, "recall"]], "2. Retrieval": [[91, null]], "2. Rouge": [[44, "rouge"]], "2. Run as an API server": [[100, "run-as-an-api-server"]], "2. Sentence": [[27, "sentence"]], "2. Sentence Splitter": [[25, "sentence-splitter"]], "2. Set YAML file": [[25, "set-yaml-file"], [32, "set-yaml-file"]], "2. The text information comes separately from the table information.": [[29, "the-text-information-comes-separately-from-the-table-information"]], "2. Token Recall": [[46, "token-recall"]], "2. Use a trial path": [[43, "use-a-trial-path"]], "3. Accurate log prob output": [[52, "accurate-log-prob-output"]], "3. Chunking Optimization": [[38, "chunking-optimization"]], "3. F1 Score": [[45, "f1-score"]], "3. Generate queries": [[36, "generate-queries"]], "3. JSON": [[30, "json"]], "3. LlamaIndex": [[99, "llamaindex"]], "3. METEOR": [[44, "meteor"]], "3. Passage Augmenter": [[55, null]], "3. Run as a Web Interface": [[100, "run-as-a-web-interface"]], "3. Sentence": [[26, "sentence"]], "3. Start chunking": [[25, "start-chunking"]], "3. Start parsing": [[32, "start-parsing"]], "3. Token F1": [[46, "token-f1"]], "3. Two-hop Incremental": [[37, "two-hop-incremental"]], "3. Use Runner": [[43, "use-runner"]], "3. Window": [[27, "window"]], "4. Check the result": [[25, "check-the-result"], [32, "check-the-result"]], "4. GPU-related Error": [[99, "gpu-related-error"]], "4. Generate answers": [[36, "generate-answers"]], "4. MRR (Mean Reciprocal Rank)": [[45, "mrr-mean-reciprocal-rank"]], "4. Markdown": [[30, "markdown"]], "4. Passage_Reranker": [[74, null]], "4. QA - Corpus mapping": [[38, "qa-corpus-mapping"]], "4. Sem Score": [[44, "sem-score"]], "4. Semantic": [[27, "semantic"]], "5-1. Coherence": [[44, "coherence"]], "5-2. Consistency": [[44, "consistency"]], "5-3. Fluency": [[44, "fluency"]], "5-4. Relevance": [[44, "relevance"]], "5. Filtering questions": [[36, "filtering-questions"]], "5. G-Eval": [[44, "g-eval"]], "5. HTML": [[30, "html"]], "5. MAP (Mean Average Precision)": [[45, "map-mean-average-precision"]], "5. Passage Filter": [[61, null]], "5. Simple": [[27, "simple"]], "5. UnicodeDecodeError": [[99, "unicodedecodeerror"]], "6. Bert Score": [[44, "bert-score"]], "6. NDCG (Normalized Discounted Cumulative Gain)": [[45, "ndcg-normalized-discounted-cumulative-gain"]], "6. Ollama RequestTimeOut Error": [[99, "ollama-requesttimeout-error"]], "6. Passage_Compressor": [[58, null]], "6. Save the QA data": [[36, "save-the-qa-data"]], "6. XML": [[30, "xml"]], "7. All files": [[30, "all-files"]], "7. Prompt Maker": [[82, null]], "8. Generator": [[50, null]], "API Endpoint": [[42, "id1"]], "API endpoint": [[42, null]], "Add more LLM models": [[49, "add-more-llm-models"]], "Add your embedding models": [[49, "add-your-embedding-models"]], "Answer Generation": [[34, null]], "Any trouble to use Korean tokenizer?": [[88, null]], "Auto-save feature": [[41, null]], "AutoRAG documentation": [[47, null]], "Available Chunk Method": [[26, "available-chunk-method"], [27, "available-chunk-method"]], "Available List": [[54, null]], "Available Parse Method by File Type": [[30, "available-parse-method-by-file-type"]], "Available Sentence Splitter": [[25, "available-sentence-splitter"]], "BM25": [[88, null]], "Backend Support": [[92, "backend-support"]], "Basic Concepts": [[28, "basic-concepts"]], "Basic Generation": [[34, "basic-generation"]], "Before Usage": [[67, "before-usage"], [71, "before-usage"]], "Build from source": [[48, "build-from-source"]], "Chunk": [[25, null]], "Clova": [[29, null]], "Colab Tutorial": [[100, null]], "Colbert Reranker": [[68, null]], "Concise Generation": [[34, "concise-generation"]], "Configuration": [[96, "configuration"]], "Configure LLM & Embedding models": [[49, null]], "Configure the Embedding model": [[49, "configure-the-embedding-model"]], "Configure the LLM model": [[49, "configure-the-llm-model"]], "Contact": [[97, null]], "Contact us": [[97, "contact-us"]], "Corpus Dataset": [[39, "corpus-dataset"]], "Could not build wheels": [[99, "could-not-build-wheels"]], "Data Creation": [[28, null]], "Dataset Format": [[39, null]], "Default Prompt": [[86, "default-prompt"]], "Deploy your optimal RAG pipeline": [[100, "deploy-your-optimal-rag-pipeline"]], "Do I need to use all nodes?": [[95, null]], "Don\u2019t know Filter": [[35, "don-t-know-filter"]], "Early version of AutoRAG": [[97, "early-version-of-autorag"]], "Error while running LLM": [[99, "error-while-running-llm"]], "Evaluate Nodes that can\u2019t evaluate": [[95, "evaluate-nodes-that-can-t-evaluate"]], "Evaluation data creation tutorial": [[38, null]], "Example": [[37, "example"]], "Example Configuration Using Normalize Mean Strategy": [[96, "example-configuration-using-normalize-mean-strategy"]], "Example Configuration Using mean Strategy": [[96, "example-configuration-using-mean-strategy"]], "Example Configuration Using rank Strategy": [[96, "example-configuration-using-rank-strategy"]], "Example Node Lines": [[98, "example-node-lines"]], "Example YAML": [[25, "example-yaml"], [25, "id1"], [26, "example-yaml"], [27, "example-yaml"], [29, "example-yaml"], [30, "example-yaml"], [30, "id1"], [30, "id2"], [30, "id3"], [30, "id4"], [30, "id5"], [30, "id6"], [31, "example-yaml"], [33, "example-yaml"]], "Example config.yaml": [[51, "example-config-yaml"], [52, "example-config-yaml"], [53, "example-config-yaml"], [56, "example-config-yaml"], [57, "example-config-yaml"], [59, "example-config-yaml"], [60, "example-config-yaml"], [62, "example-config-yaml"], [63, "example-config-yaml"], [64, "example-config-yaml"], [65, "example-config-yaml"], [66, "example-config-yaml"], [67, "example-config-yaml"], [68, "example-config-yaml"], [69, "example-config-yaml"], [70, "example-config-yaml"], [71, "example-config-yaml"], [72, "example-config-yaml"], [73, "example-config-yaml"], [75, "example-config-yaml"], [76, "example-config-yaml"], [77, "example-config-yaml"], [78, "example-config-yaml"], [79, "example-config-yaml"], [80, "example-config-yaml"], [81, "example-config-yaml"], [83, "example-config-yaml"], [84, "example-config-yaml"], [85, "example-config-yaml"], [86, "example-config-yaml"], [88, "example-config-yaml"], [89, "example-config-yaml"], [90, "example-config-yaml"], [92, "example-config-yaml"]], "Example config.yaml file": [[50, "example-config-yaml-file"], [55, "example-config-yaml-file"], [58, "example-config-yaml-file"], [61, "example-config-yaml-file"], [74, "example-config-yaml-file"], [82, "example-config-yaml-file"], [87, "example-config-yaml-file"], [91, "example-config-yaml-file"]], "Explanation of concepts": [[98, "explanation-of-concepts"]], "Extract pipeline and evaluate test dataset": [[100, "extract-pipeline-and-evaluate-test-dataset"]], "F-String": [[80, null]], "Facing Import Error": [[99, "facing-import-error"]], "Facing OPENAI API error": [[99, "facing-openai-api-error"]], "Factoid Example": [[37, "factoid-example"]], "Features": [[25, "features"]], "Filtering": [[35, null]], "Find Optimal RAG Pipeline": [[100, "find-optimal-rag-pipeline"]], "Flag Embedding LLM Reranker": [[69, null]], "Flag Embedding Reranker": [[70, null]], "Folder Structure": [[94, null]], "Generate QA set from Corpus data using RAGAS": [[40, "generate-qa-set-from-corpus-data-using-ragas"]], "Generation Metrics": [[44, null]], "How optimization works": [[95, null]], "How to Use": [[26, "how-to-use"], [27, "how-to-use"], [30, "how-to-use"]], "Huggingface AutoTokenizer": [[88, "huggingface-autotokenizer"]], "HyDE": [[84, null]], "Hybrid - cc": [[89, null]], "Hybrid - rrf": [[90, null]], "If you have both query and generation_gt:": [[41, "if-you-have-both-query-and-generation-gt"]], "If you only have query data:": [[41, "if-you-only-have-query-data"]], "Index": [[41, "index"], [49, "index"]], "Installation and Setup": [[48, null]], "Installation for Korean \ud83c\uddf0\ud83c\uddf7": [[48, "installation-for-korean"]], "Ko-reranker": [[72, null]], "LLM-based Don\u2019t know Filter": [[35, "llm-based-don-t-know-filter"]], "Langchain Chunk": [[26, null]], "Langchain Parse": [[30, null]], "Language Support": [[31, "language-support"]], "Llama Index Chunk": [[27, null]], "Llama Parse": [[31, null]], "LlamaIndex": [[34, "llamaindex"], [34, "id2"]], "Long Context Reorder": [[81, null]], "Long LLM Lingua": [[57, null]], "Long story short": [[39, null], [39, null], [39, null], [39, null]], "Make Node Line": [[93, "make-node-line"]], "Make YAML file": [[93, "make-yaml-file"]], "Make a custom config YAML file": [[93, null]], "Make corpus data from raw documents": [[41, "make-corpus-data-from-raw-documents"]], "Make qa data from corpus data": [[41, "make-qa-data-from-corpus-data"]], "Merger Node": [[97, "merger-node"]], "Module Parameters": [[51, "module-parameters"], [52, "module-parameters"], [53, "module-parameters"], [56, "module-parameters"], [57, "module-parameters"], [59, "module-parameters"], [60, "module-parameters"], [62, "module-parameters"], [63, "module-parameters"], [64, "module-parameters"], [65, "module-parameters"], [66, "module-parameters"], [67, "module-parameters"], [68, "module-parameters"], [69, "module-parameters"], [70, "module-parameters"], [71, "module-parameters"], [72, "module-parameters"], [73, "module-parameters"], [75, "module-parameters"], [76, "module-parameters"], [77, "module-parameters"], [78, "module-parameters"], [79, "module-parameters"], [80, "module-parameters"], [81, "module-parameters"], [83, "module-parameters"], [84, "module-parameters"], [85, "module-parameters"], [86, "module-parameters"], [88, "module-parameters"], [89, "module-parameters"], [90, "module-parameters"], [92, "module-parameters"]], "Module contents": [[0, "module-autorag"], [1, "module-autorag.data"], [2, "module-autorag.data.beta"], [3, "module-autorag.data.beta.generation_gt"], [4, "module-autorag.data.beta.query"], [5, "module-autorag.data.beta.schema"], [6, "module-autorag.data.corpus"], [7, "module-contents"], [8, "module-autorag.data.qacreation"], [9, "module-autorag.data.utils"], [10, "module-autorag.evaluation"], [11, "module-autorag.evaluation.metric"], [12, "module-autorag.nodes"], [13, "module-autorag.nodes.generator"], [14, "module-autorag.nodes.passageaugmenter"], [15, "module-autorag.nodes.passagecompressor"], [16, "module-autorag.nodes.passagefilter"], [17, "module-autorag.nodes.passagereranker"], [18, "module-autorag.nodes.passagereranker.tart"], [19, "module-autorag.nodes.promptmaker"], [20, "module-autorag.nodes.queryexpansion"], [21, "module-autorag.nodes.retrieval"], [22, "module-autorag.schema"], [23, "module-autorag.utils"]], "Modules that use Embedding model": [[49, "modules-that-use-embedding-model"]], "Modules that use LLM model": [[49, "modules-that-use-llm-model"]], "MonoT5": [[73, null]], "More optimization strategies": [[95, "more-optimization-strategies"]], "Multi Query Expansion": [[85, null]], "Next Step": [[100, null]], "Node & Module": [[98, "node-module"]], "Node Line": [[98, "node-line"]], "Node Parameters": [[50, "node-parameters"], [55, "node-parameters"], [58, "node-parameters"], [61, "node-parameters"], [74, "node-parameters"], [82, "node-parameters"], [87, "node-parameters"], [90, "node-parameters"], [91, "node-parameters"]], "Node line for Modular RAG": [[97, "node-line-for-modular-rag"]], "Note: Dataset Format": [[100, null]], "OpenAI": [[34, "openai"], [34, "id1"]], "OpenAI LLM": [[52, null]], "Output Columns": [[25, "output-columns"], [32, "output-columns"]], "Overview": [[25, "overview"], [32, "overview"], [36, "overview"], [37, "overview"], [38, "overview"], [41, "overview"], [50, "overview"], [91, "overview"], [96, "overview"]], "Overview:": [[58, "overview"], [74, "overview"], [82, "overview"], [87, "overview"]], "Parameters": [[33, "parameters"]], "Parse": [[32, null]], "Pass the best result to the next node": [[95, "pass-the-best-result-to-the-next-node"]], "Percentile Cutoff": [[62, null]], "Point": [[29, "point"]], "Policy Node": [[97, "policy-node"]], "Prepare Evaluation Dataset": [[100, "prepare-evaluation-dataset"]], "Prev Next Augmenter": [[56, null]], "Project": [[94, "project"]], "Purpose": [[50, null], [58, null], [91, null]], "QA Dataset": [[39, "qa-dataset"]], "QA creation": [[36, null]], "Query Decompose": [[86, null]], "Query Generation": [[37, null]], "Question types": [[37, "question-types"]], "RAGAS evaluation data generation": [[40, null]], "RAGAS question types": [[40, "ragas-question-types"]], "RankGPT": [[75, null]], "Recency Filter": [[63, null]], "Refine": [[59, null]], "Retrieval Metrics": [[45, null]], "Retrieval Token Metrics": [[46, null]], "Road to Modular RAG": [[97, null]], "Rule-based Don\u2019t know Filter": [[35, "rule-based-don-t-know-filter"]], "Run AutoRAG optimization": [[100, "run-autorag-optimization"]], "Run Chunk Pipeline": [[25, "run-chunk-pipeline"]], "Run Dashboard to see your trial result!": [[100, "run-dashboard-to-see-your-trial-result"]], "Run Parse Pipeline": [[32, "run-parse-pipeline"]], "Run with AutoRAG Runner": [[43, "run-with-autorag-runner"]], "Run with CLI": [[43, "run-with-cli"]], "Running API server": [[42, "running-api-server"]], "Running the Web Interface": [[43, "running-the-web-interface"]], "Sample Structure Index": [[94, "sample-structure-index"]], "Samples": [[39, "samples"]], "Sentence Transformer Reranker": [[76, null]], "Setup OPENAI API KEY": [[48, "setup-openai-api-key"]], "Similarity Percentile Cutoff": [[64, null]], "Similarity Threshold Cutoff": [[65, null]], "Specify modules": [[93, "specify-modules"]], "Specify nodes": [[93, "specify-nodes"]], "Start creating your own evaluation data": [[41, null]], "Strategy": [[82, "strategy"], [87, "strategy"], [96, null], [98, "strategy"]], "Strategy Parameter": [[96, "strategy-parameter"]], "Strategy Parameters": [[50, "strategy-parameters"], [58, "strategy-parameters"], [74, "strategy-parameters"], [91, "strategy-parameters"]], "Strategy Parameters:": [[82, "strategy-parameters"], [87, "strategy-parameters"]], "Structure": [[98, null]], "Submodules": [[0, "submodules"], [2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"], [13, "submodules"], [14, "submodules"], [15, "submodules"], [16, "submodules"], [17, "submodules"], [18, "submodules"], [19, "submodules"], [20, "submodules"], [21, "submodules"], [22, "submodules"], [23, "submodules"]], "Subpackages": [[0, "subpackages"], [1, "subpackages"], [2, "subpackages"], [10, "subpackages"], [12, "subpackages"], [17, "subpackages"]], "Summarize": [[98, null], [98, null], [98, null]], "Supported Chunk Modules": [[25, "supported-chunk-modules"]], "Supported Model Names": [[73, "supported-model-names"]], "Supported Modules": [[50, "supported-modules"], [58, "supported-modules"], [74, "supported-modules"], [82, "supported-modules"], [87, "supported-modules"], [91, "supported-modules"]], "Supported Parse Modules": [[32, "supported-parse-modules"]], "Supporting Embedding models": [[49, "supporting-embedding-models"]], "Supporting LLM models": [[49, "supporting-llm-models"]], "Swapping modules in Node": [[95, "swapping-modules-in-node"]], "TART": [[77, null]], "Table Detection": [[29, "table-detection"], [33, "table-detection"]], "Table Extraction": [[31, "table-extraction"]], "Table Hybrid Parse": [[33, null]], "Table Parse Available Modules": [[33, "table-parse-available-modules"]], "The length or row is different from the original data": [[99, "the-length-or-row-is-different-from-the-original-data"]], "Threshold Cutoff": [[66, null]], "Time Reranker": [[78, null]], "Tree Summarize": [[60, null]], "Trouble with installation?": [[48, null]], "TroubleShooting": [[99, null]], "Tutorial": [[100, null]], "UPR": [[79, null]], "Usage": [[37, "usage"], [37, "id1"], [37, "id2"]], "Use custom models": [[40, "use-custom-models"]], "Use custom prompt": [[41, "use-custom-prompt"]], "Use environment variable in the YAML file": [[93, "use-environment-variable-in-the-yaml-file"]], "Use in Multi-GPU": [[53, "use-in-multi-gpu"]], "Use multiple prompts": [[41, "use-multiple-prompts"]], "Use vllm": [[49, "use-vllm"]], "Using Langchain Chunk Method that is not in the Available Chunk Method": [[26, "using-langchain-chunk-method-that-is-not-in-the-available-chunk-method"]], "Using Llama Index Chunk Method that is not in the Available Chunk Method": [[27, "using-llama-index-chunk-method-that-is-not-in-the-available-chunk-method"]], "Using Parse Method that is not in the Available Parse Method": [[30, "using-parse-method-that-is-not-in-the-available-parse-method"]], "Using sentence splitter that is not in the Available Sentence Splitter": [[25, "using-sentence-splitter-that-is-not-in-the-available-sentence-splitter"]], "Validate your system": [[100, "validate-your-system"]], "Vectordb": [[92, null]], "Want to know more about Modular RAG?": [[97, null]], "Want to specify project folder?": [[25, null], [32, null], [43, null], [100, null], [100, null], [100, null]], "Web Interface": [[43, null]], "Web Interface example": [[43, "web-interface-example"]], "What if Trial_Path didn\u2019t also create a First Node Line?": [[100, null]], "What is Node Line?": [[97, null]], "What is difference between Passage Filter and Passage Reranker?": [[61, null]], "What is pass_compressor?": [[58, null]], "What is pass_passage_augmenter?": [[55, null]], "What is pass_passage_filter?": [[61, null]], "What is pass_query_expansion?": [[87, null]], "What is pass_reranker?": [[74, null]], "What is passage?": [[41, null]], "What is tuple in the yaml file?": [[93, null]], "When you have existing qa data": [[41, "when-you-have-existing-qa-data"]], "Why use Gradio instead of Streamlit?": [[43, null]], "Why use openai_llm module?": [[52, "why-use-openai-llm-module"]], "Why use python command?": [[100, null]], "Why use vllm module?": [[53, "why-use-vllm-module"]], "Window Replacement": [[83, null]], "Write custom config yaml file": [[100, null]], "[Node Line] summary.csv": [[94, "node-line-summary-csv"]], "[Node] summary.csv": [[94, "node-summary-csv"]], "[trial] summary.csv": [[94, "trial-summary-csv"]], "autorag": [[24, null]], "autorag package": [[0, null]], "autorag.chunker module": [[0, "module-autorag.chunker"]], "autorag.cli module": [[0, "module-autorag.cli"]], "autorag.dashboard module": [[0, "module-autorag.dashboard"]], "autorag.data package": [[1, null]], "autorag.data.beta package": [[2, null]], "autorag.data.beta.generation_gt package": [[3, null]], "autorag.data.beta.generation_gt.base module": [[3, "module-autorag.data.beta.generation_gt.base"]], "autorag.data.beta.generation_gt.llama_index_gen_gt module": [[3, "module-autorag.data.beta.generation_gt.llama_index_gen_gt"]], "autorag.data.beta.generation_gt.openai_gen_gt module": [[3, "module-autorag.data.beta.generation_gt.openai_gen_gt"]], "autorag.data.beta.generation_gt.prompt module": [[3, "module-autorag.data.beta.generation_gt.prompt"]], "autorag.data.beta.query package": [[4, null]], "autorag.data.beta.query.llama_gen_query module": [[4, "module-autorag.data.beta.query.llama_gen_query"]], "autorag.data.beta.query.openai_gen_query module": [[4, "module-autorag.data.beta.query.openai_gen_query"]], "autorag.data.beta.query.prompt module": [[4, "module-autorag.data.beta.query.prompt"]], "autorag.data.beta.sample module": [[2, "module-autorag.data.beta.sample"]], "autorag.data.beta.schema module": [[2, "module-autorag.data.beta.schema"]], "autorag.data.beta.schema package": [[5, null]], "autorag.data.beta.schema.data module": [[5, "autorag-data-beta-schema-data-module"]], "autorag.data.corpus package": [[6, null]], "autorag.data.corpus.langchain module": [[6, "module-autorag.data.corpus.langchain"]], "autorag.data.corpus.llama_index module": [[6, "module-autorag.data.corpus.llama_index"]], "autorag.data.parse package": [[7, null]], "autorag.data.parse.base module": [[7, "autorag-data-parse-base-module"]], "autorag.data.parse.clova module": [[7, "autorag-data-parse-clova-module"]], "autorag.data.parse.langchain_parse module": [[7, "autorag-data-parse-langchain-parse-module"]], "autorag.data.parse.llamaparse module": [[7, "autorag-data-parse-llamaparse-module"]], "autorag.data.parse.run module": [[7, "autorag-data-parse-run-module"]], "autorag.data.parse.table_hybrid_parse module": [[7, "autorag-data-parse-table-hybrid-parse-module"]], "autorag.data.qacreation package": [[8, null]], "autorag.data.qacreation.base module": [[8, "module-autorag.data.qacreation.base"]], "autorag.data.qacreation.llama_index module": [[8, "module-autorag.data.qacreation.llama_index"]], "autorag.data.qacreation.ragas module": [[8, "module-autorag.data.qacreation.ragas"]], "autorag.data.qacreation.simple module": [[8, "module-autorag.data.qacreation.simple"]], "autorag.data.utils package": [[9, null]], "autorag.data.utils.util module": [[9, "module-autorag.data.utils.util"]], "autorag.deploy module": [[0, "module-autorag.deploy"]], "autorag.evaluation package": [[10, null]], "autorag.evaluation.generation module": [[10, "module-autorag.evaluation.generation"]], "autorag.evaluation.metric package": [[11, null]], "autorag.evaluation.metric.generation module": [[11, "module-autorag.evaluation.metric.generation"]], "autorag.evaluation.metric.retrieval module": [[11, "module-autorag.evaluation.metric.retrieval"]], "autorag.evaluation.metric.retrieval_contents module": [[11, "module-autorag.evaluation.metric.retrieval_contents"]], "autorag.evaluation.metric.util module": [[11, "module-autorag.evaluation.metric.util"]], "autorag.evaluation.retrieval module": [[10, "module-autorag.evaluation.retrieval"]], "autorag.evaluation.retrieval_contents module": [[10, "module-autorag.evaluation.retrieval_contents"]], "autorag.evaluation.util module": [[10, "module-autorag.evaluation.util"]], "autorag.evaluator module": [[0, "module-autorag.evaluator"]], "autorag.node_line module": [[0, "module-autorag.node_line"]], "autorag.nodes package": [[12, null]], "autorag.nodes.generator package": [[13, null]], "autorag.nodes.generator.base module": [[13, "module-autorag.nodes.generator.base"]], "autorag.nodes.generator.llama_index_llm module": [[13, "module-autorag.nodes.generator.llama_index_llm"]], "autorag.nodes.generator.openai_llm module": [[13, "module-autorag.nodes.generator.openai_llm"]], "autorag.nodes.generator.run module": [[13, "module-autorag.nodes.generator.run"]], "autorag.nodes.generator.vllm module": [[13, "module-autorag.nodes.generator.vllm"]], "autorag.nodes.passageaugmenter package": [[14, null]], "autorag.nodes.passageaugmenter.base module": [[14, "module-autorag.nodes.passageaugmenter.base"]], "autorag.nodes.passageaugmenter.pass_passage_augmenter module": [[14, "module-autorag.nodes.passageaugmenter.pass_passage_augmenter"]], "autorag.nodes.passageaugmenter.prev_next_augmenter module": [[14, "module-autorag.nodes.passageaugmenter.prev_next_augmenter"]], "autorag.nodes.passageaugmenter.run module": [[14, "module-autorag.nodes.passageaugmenter.run"]], "autorag.nodes.passagecompressor package": [[15, null]], "autorag.nodes.passagecompressor.base module": [[15, "module-autorag.nodes.passagecompressor.base"]], "autorag.nodes.passagecompressor.longllmlingua module": [[15, "module-autorag.nodes.passagecompressor.longllmlingua"]], "autorag.nodes.passagecompressor.pass_compressor module": [[15, "module-autorag.nodes.passagecompressor.pass_compressor"]], "autorag.nodes.passagecompressor.refine module": [[15, "module-autorag.nodes.passagecompressor.refine"]], "autorag.nodes.passagecompressor.run module": [[15, "module-autorag.nodes.passagecompressor.run"]], "autorag.nodes.passagecompressor.tree_summarize module": [[15, "module-autorag.nodes.passagecompressor.tree_summarize"]], "autorag.nodes.passagefilter package": [[16, null]], "autorag.nodes.passagefilter.base module": [[16, "module-autorag.nodes.passagefilter.base"]], "autorag.nodes.passagefilter.pass_passage_filter module": [[16, "module-autorag.nodes.passagefilter.pass_passage_filter"]], "autorag.nodes.passagefilter.percentile_cutoff module": [[16, "module-autorag.nodes.passagefilter.percentile_cutoff"]], "autorag.nodes.passagefilter.recency module": [[16, "module-autorag.nodes.passagefilter.recency"]], "autorag.nodes.passagefilter.run module": [[16, "module-autorag.nodes.passagefilter.run"]], "autorag.nodes.passagefilter.similarity_percentile_cutoff module": [[16, "module-autorag.nodes.passagefilter.similarity_percentile_cutoff"]], "autorag.nodes.passagefilter.similarity_threshold_cutoff module": [[16, "module-autorag.nodes.passagefilter.similarity_threshold_cutoff"]], "autorag.nodes.passagefilter.threshold_cutoff module": [[16, "module-autorag.nodes.passagefilter.threshold_cutoff"]], "autorag.nodes.passagereranker package": [[17, null]], "autorag.nodes.passagereranker.base module": [[17, "module-autorag.nodes.passagereranker.base"]], "autorag.nodes.passagereranker.cohere module": [[17, "module-autorag.nodes.passagereranker.cohere"]], "autorag.nodes.passagereranker.colbert module": [[17, "module-autorag.nodes.passagereranker.colbert"]], "autorag.nodes.passagereranker.flag_embedding module": [[17, "module-autorag.nodes.passagereranker.flag_embedding"]], "autorag.nodes.passagereranker.flag_embedding_llm module": [[17, "module-autorag.nodes.passagereranker.flag_embedding_llm"]], "autorag.nodes.passagereranker.jina module": [[17, "module-autorag.nodes.passagereranker.jina"]], "autorag.nodes.passagereranker.koreranker module": [[17, "module-autorag.nodes.passagereranker.koreranker"]], "autorag.nodes.passagereranker.monot5 module": [[17, "module-autorag.nodes.passagereranker.monot5"]], "autorag.nodes.passagereranker.pass_reranker module": [[17, "module-autorag.nodes.passagereranker.pass_reranker"]], "autorag.nodes.passagereranker.rankgpt module": [[17, "module-autorag.nodes.passagereranker.rankgpt"]], "autorag.nodes.passagereranker.run module": [[17, "module-autorag.nodes.passagereranker.run"]], "autorag.nodes.passagereranker.sentence_transformer module": [[17, "module-autorag.nodes.passagereranker.sentence_transformer"]], "autorag.nodes.passagereranker.tart package": [[18, null]], "autorag.nodes.passagereranker.tart.modeling_enc_t5 module": [[18, "module-autorag.nodes.passagereranker.tart.modeling_enc_t5"]], "autorag.nodes.passagereranker.tart.tart module": [[18, "module-autorag.nodes.passagereranker.tart.tart"]], "autorag.nodes.passagereranker.tart.tokenization_enc_t5 module": [[18, "module-autorag.nodes.passagereranker.tart.tokenization_enc_t5"]], "autorag.nodes.passagereranker.time_reranker module": [[17, "module-autorag.nodes.passagereranker.time_reranker"]], "autorag.nodes.passagereranker.upr module": [[17, "module-autorag.nodes.passagereranker.upr"]], "autorag.nodes.promptmaker package": [[19, null]], "autorag.nodes.promptmaker.base module": [[19, "module-autorag.nodes.promptmaker.base"]], "autorag.nodes.promptmaker.fstring module": [[19, "module-autorag.nodes.promptmaker.fstring"]], "autorag.nodes.promptmaker.long_context_reorder module": [[19, "module-autorag.nodes.promptmaker.long_context_reorder"]], "autorag.nodes.promptmaker.run module": [[19, "module-autorag.nodes.promptmaker.run"]], "autorag.nodes.promptmaker.window_replacement module": [[19, "module-autorag.nodes.promptmaker.window_replacement"]], "autorag.nodes.queryexpansion package": [[20, null]], "autorag.nodes.queryexpansion.base module": [[20, "module-autorag.nodes.queryexpansion.base"]], "autorag.nodes.queryexpansion.hyde module": [[20, "module-autorag.nodes.queryexpansion.hyde"]], "autorag.nodes.queryexpansion.multi_query_expansion module": [[20, "module-autorag.nodes.queryexpansion.multi_query_expansion"]], "autorag.nodes.queryexpansion.pass_query_expansion module": [[20, "module-autorag.nodes.queryexpansion.pass_query_expansion"]], "autorag.nodes.queryexpansion.query_decompose module": [[20, "module-autorag.nodes.queryexpansion.query_decompose"]], "autorag.nodes.queryexpansion.run module": [[20, "module-autorag.nodes.queryexpansion.run"]], "autorag.nodes.retrieval package": [[21, null]], "autorag.nodes.retrieval.base module": [[21, "module-autorag.nodes.retrieval.base"]], "autorag.nodes.retrieval.bm25 module": [[21, "module-autorag.nodes.retrieval.bm25"]], "autorag.nodes.retrieval.hybrid_cc module": [[21, "module-autorag.nodes.retrieval.hybrid_cc"]], "autorag.nodes.retrieval.hybrid_rrf module": [[21, "module-autorag.nodes.retrieval.hybrid_rrf"]], "autorag.nodes.retrieval.run module": [[21, "module-autorag.nodes.retrieval.run"]], "autorag.nodes.retrieval.vectordb module": [[21, "module-autorag.nodes.retrieval.vectordb"]], "autorag.parser module": [[0, "autorag-parser-module"]], "autorag.schema package": [[22, null]], "autorag.schema.module module": [[22, "module-autorag.schema.module"]], "autorag.schema.node module": [[22, "module-autorag.schema.node"]], "autorag.strategy module": [[0, "module-autorag.strategy"]], "autorag.support module": [[0, "module-autorag.support"]], "autorag.utils package": [[23, null]], "autorag.utils.preprocess module": [[23, "module-autorag.utils.preprocess"]], "autorag.utils.util module": [[23, "module-autorag.utils.util"]], "autorag.validator module": [[0, "module-autorag.validator"]], "autorag.web module": [[0, "module-autorag.web"]], "cohere_reranker": [[67, null]], "config.yaml": [[94, "config-yaml"]], "contents": [[39, "contents"]], "data": [[94, "data"]], "doc_id": [[39, "doc-id"]], "generation_gt": [[39, "generation-gt"]], "jina_reranker": [[71, null]], "ko_kiwi (For Korean \ud83c\uddf0\ud83c\uddf7)": [[88, "ko-kiwi-for-korean"]], "ko_kkma (For Korean \ud83c\uddf0\ud83c\uddf7)": [[88, "ko-kkma-for-korean"]], "ko_okt (For Korean \ud83c\uddf0\ud83c\uddf7)": [[88, "ko-okt-for-korean"]], "llama_index LLM": [[51, null]], "metadata": [[39, "metadata"]], "porter_stemmer": [[88, "porter-stemmer"]], "pre_retrieve_node_line": [[94, "pre-retrieve-node-line"]], "qid": [[39, "qid"]], "query": [[39, "query"]], "query_expansion": [[94, "query-expansion"]], "resources": [[94, "resources"]], "retrieval_gt": [[39, "retrieval-gt"]], "retrieve_node_line": [[94, "retrieve-node-line"]], "sem_score": [[50, null]], "space": [[88, "space"]], "trial": [[94, "trial"]], "trial.json": [[94, "trial-json"]], "vllm": [[53, null]], "\u2705Apply Basic Example": [[45, "apply-basic-example"], [45, "id2"], [45, "id4"], [45, "id6"], [45, "id8"], [45, "id10"], [46, "apply-basic-example"], [46, "id2"], [46, "id4"]], "\u2705Basic Example": [[45, "basic-example"], [46, "basic-example"]], "\u2757How to use specific G-Eval metrics": [[44, "how-to-use-specific-g-eval-metrics"]], "\u2757Must have Parameter": [[30, "must-have-parameter"]], "\u2757Restart a trial if an error occurs during the trial": [[100, "restart-a-trial-if-an-error-occurs-during-the-trial"]], "\u2757\ufe0fHybrid additional explanation": [[89, "hybrid-additional-explanation"], [90, "hybrid-additional-explanation"]], "\ud83c\udfc3\u200d\u2642\ufe0f Getting Started": [[47, "getting-started"]], "\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc66 Ecosystem": [[47, "ecosystem"]], "\ud83d\udccc API Needed": [[30, "api-needed"]], "\ud83d\udccc Definition": [[44, "id4"]], "\ud83d\udccc Parameter: data_path_glob": [[32, "parameter-data-path-glob"]], "\ud83d\udcccDefinition": [[44, "definition"], [44, "id1"], [44, "id2"], [44, "id3"], [44, "id5"], [45, "definition"], [45, "id1"], [45, "id3"], [45, "id5"], [45, "id7"], [45, "id9"], [46, "definition"], [46, "id1"], [46, "id3"]], "\ud83d\udd0e Definition": [[50, "definition"], [55, "definition"], [58, "definition"], [61, "definition"], [74, "definition"], [82, "definition"], [87, "definition"], [91, "definition"]], "\ud83d\udd22 Parameters": [[50, "parameters"], [58, "parameters"], [74, "parameters"], [82, "parameters"], [87, "parameters"], [91, "parameters"]], "\ud83d\ude80 Road to Modular RAG": [[97, "id1"]], "\ud83e\udd37\u200d\u2642\ufe0f What is Modular RAG?": [[97, "what-is-modular-rag"]], "\ud83e\udd37\u200d\u2642\ufe0f Why AutoRAG?": [[47, "why-autorag"]], "\ud83e\udd38 Benefits": [[55, "benefits"], [58, "benefits"], [61, "benefits"], [74, "benefits"], [87, "benefits"]], "\ud83e\udd38\u200d\u2642\ufe0f How can AutoRAG helps?": [[47, "how-can-autorag-helps"]]}, "docnames": ["api_spec/autorag", "api_spec/autorag.data", "api_spec/autorag.data.beta", "api_spec/autorag.data.beta.generation_gt", "api_spec/autorag.data.beta.query", "api_spec/autorag.data.beta.schema", "api_spec/autorag.data.corpus", "api_spec/autorag.data.parse", "api_spec/autorag.data.qacreation", "api_spec/autorag.data.utils", "api_spec/autorag.evaluation", "api_spec/autorag.evaluation.metric", "api_spec/autorag.nodes", "api_spec/autorag.nodes.generator", "api_spec/autorag.nodes.passageaugmenter", "api_spec/autorag.nodes.passagecompressor", "api_spec/autorag.nodes.passagefilter", "api_spec/autorag.nodes.passagereranker", "api_spec/autorag.nodes.passagereranker.tart", "api_spec/autorag.nodes.promptmaker", "api_spec/autorag.nodes.queryexpansion", "api_spec/autorag.nodes.retrieval", "api_spec/autorag.schema", "api_spec/autorag.utils", "api_spec/modules", "data_creation/beta/chunk/chunk", "data_creation/beta/chunk/langchain_chunk", "data_creation/beta/chunk/llama_index_chunk", "data_creation/beta/data_creation", "data_creation/beta/parse/clova", "data_creation/beta/parse/langchain_parse", "data_creation/beta/parse/llama_parse", "data_creation/beta/parse/parse", "data_creation/beta/parse/table_hybrid_parse", "data_creation/beta/qa_creation/answer_gen", "data_creation/beta/qa_creation/filter", "data_creation/beta/qa_creation/qa_creation", "data_creation/beta/qa_creation/query_gen", "data_creation/beta/tutorial", "data_creation/data_format", "data_creation/ragas", "data_creation/tutorial", "deploy/api_endpoint", "deploy/web", "evaluate_metrics/generation", "evaluate_metrics/retrieval", "evaluate_metrics/retrieval_contents", "index", "install", "local_model", "nodes/generator/generator", "nodes/generator/llama_index_llm", "nodes/generator/openai_llm", "nodes/generator/vllm", "nodes/index", "nodes/passage_augmenter/passage_augmenter", "nodes/passage_augmenter/prev_next_augmenter", "nodes/passage_compressor/longllmlingua", "nodes/passage_compressor/passage_compressor", "nodes/passage_compressor/refine", "nodes/passage_compressor/tree_summarize", "nodes/passage_filter/passage_filter", "nodes/passage_filter/percentile_cutoff", "nodes/passage_filter/recency_filter", "nodes/passage_filter/similarity_percentile_cutoff", "nodes/passage_filter/similarity_threshold_cutoff", "nodes/passage_filter/threshold_cutoff", "nodes/passage_reranker/cohere", "nodes/passage_reranker/colbert", "nodes/passage_reranker/flag_embedding_llm_reranker", "nodes/passage_reranker/flag_embedding_reranker", "nodes/passage_reranker/jina_reranker", "nodes/passage_reranker/koreranker", "nodes/passage_reranker/monot5", "nodes/passage_reranker/passage_reranker", "nodes/passage_reranker/rankgpt", "nodes/passage_reranker/sentence_transformer_reranker", "nodes/passage_reranker/tart", "nodes/passage_reranker/time_reranker", "nodes/passage_reranker/upr", "nodes/prompt_maker/fstring", "nodes/prompt_maker/long_context_reorder", "nodes/prompt_maker/prompt_maker", "nodes/prompt_maker/window_replacement", "nodes/query_expansion/hyde", "nodes/query_expansion/multi_query_expansion", "nodes/query_expansion/query_decompose", "nodes/query_expansion/query_expansion", "nodes/retrieval/bm25", "nodes/retrieval/hybrid_cc", "nodes/retrieval/hybrid_rrf", "nodes/retrieval/retrieval", "nodes/retrieval/vectordb", "optimization/custom_config", "optimization/folder_structure", "optimization/optimization", "optimization/strategies", "roadmap/modular_rag", "structure", "troubleshooting", "tutorial"], "envversion": {"sphinx": 63, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["api_spec/autorag.rst", "api_spec/autorag.data.rst", "api_spec/autorag.data.beta.rst", "api_spec/autorag.data.beta.generation_gt.rst", "api_spec/autorag.data.beta.query.rst", "api_spec/autorag.data.beta.schema.rst", "api_spec/autorag.data.corpus.rst", "api_spec/autorag.data.parse.rst", "api_spec/autorag.data.qacreation.rst", "api_spec/autorag.data.utils.rst", "api_spec/autorag.evaluation.rst", "api_spec/autorag.evaluation.metric.rst", "api_spec/autorag.nodes.rst", "api_spec/autorag.nodes.generator.rst", "api_spec/autorag.nodes.passageaugmenter.rst", "api_spec/autorag.nodes.passagecompressor.rst", "api_spec/autorag.nodes.passagefilter.rst", "api_spec/autorag.nodes.passagereranker.rst", "api_spec/autorag.nodes.passagereranker.tart.rst", "api_spec/autorag.nodes.promptmaker.rst", "api_spec/autorag.nodes.queryexpansion.rst", "api_spec/autorag.nodes.retrieval.rst", "api_spec/autorag.schema.rst", "api_spec/autorag.utils.rst", "api_spec/modules.rst", "data_creation/beta/chunk/chunk.md", "data_creation/beta/chunk/langchain_chunk.md", "data_creation/beta/chunk/llama_index_chunk.md", "data_creation/beta/data_creation.md", "data_creation/beta/parse/clova.md", "data_creation/beta/parse/langchain_parse.md", "data_creation/beta/parse/llama_parse.md", "data_creation/beta/parse/parse.md", "data_creation/beta/parse/table_hybrid_parse.md", "data_creation/beta/qa_creation/answer_gen.md", "data_creation/beta/qa_creation/filter.md", "data_creation/beta/qa_creation/qa_creation.md", "data_creation/beta/qa_creation/query_gen.md", "data_creation/beta/tutorial.md", "data_creation/data_format.md", "data_creation/ragas.md", "data_creation/tutorial.md", "deploy/api_endpoint.md", "deploy/web.md", "evaluate_metrics/generation.md", "evaluate_metrics/retrieval.md", "evaluate_metrics/retrieval_contents.md", "index.rst", "install.md", "local_model.md", "nodes/generator/generator.md", "nodes/generator/llama_index_llm.md", "nodes/generator/openai_llm.md", "nodes/generator/vllm.md", "nodes/index.md", "nodes/passage_augmenter/passage_augmenter.md", "nodes/passage_augmenter/prev_next_augmenter.md", "nodes/passage_compressor/longllmlingua.md", "nodes/passage_compressor/passage_compressor.md", "nodes/passage_compressor/refine.md", "nodes/passage_compressor/tree_summarize.md", "nodes/passage_filter/passage_filter.md", "nodes/passage_filter/percentile_cutoff.md", "nodes/passage_filter/recency_filter.md", "nodes/passage_filter/similarity_percentile_cutoff.md", "nodes/passage_filter/similarity_threshold_cutoff.md", "nodes/passage_filter/threshold_cutoff.md", "nodes/passage_reranker/cohere.md", "nodes/passage_reranker/colbert.md", "nodes/passage_reranker/flag_embedding_llm_reranker.md", "nodes/passage_reranker/flag_embedding_reranker.md", "nodes/passage_reranker/jina_reranker.md", "nodes/passage_reranker/koreranker.md", "nodes/passage_reranker/monot5.md", "nodes/passage_reranker/passage_reranker.md", "nodes/passage_reranker/rankgpt.md", "nodes/passage_reranker/sentence_transformer_reranker.md", "nodes/passage_reranker/tart.md", "nodes/passage_reranker/time_reranker.md", "nodes/passage_reranker/upr.md", "nodes/prompt_maker/fstring.md", "nodes/prompt_maker/long_context_reorder.md", "nodes/prompt_maker/prompt_maker.md", "nodes/prompt_maker/window_replacement.md", "nodes/query_expansion/hyde.md", "nodes/query_expansion/multi_query_expansion.md", "nodes/query_expansion/query_decompose.md", "nodes/query_expansion/query_expansion.md", "nodes/retrieval/bm25.md", "nodes/retrieval/hybrid_cc.md", "nodes/retrieval/hybrid_rrf.md", "nodes/retrieval/retrieval.md", "nodes/retrieval/vectordb.md", "optimization/custom_config.md", "optimization/folder_structure.md", "optimization/optimization.md", "optimization/strategies.md", "roadmap/modular_rag.md", "structure.md", "troubleshooting.md", "tutorial.md"], "indexentries": {"add_essential_metadata() (in module autorag.data.utils.util)": [[9, "autorag.data.utils.util.add_essential_metadata", false]], "add_essential_metadata_llama_text_node() (in module autorag.data.utils.util)": [[9, "autorag.data.utils.util.add_essential_metadata_llama_text_node", false]], "add_gen_gt() (in module autorag.data.beta.generation_gt.base)": [[3, "autorag.data.beta.generation_gt.base.add_gen_gt", false]], "answer (autorag.data.beta.generation_gt.openai_gen_gt.response attribute)": [[3, "autorag.data.beta.generation_gt.openai_gen_gt.Response.answer", false]], "answer (autorag.data.beta.query.openai_gen_query.twohopincrementalresponse attribute)": [[4, "autorag.data.beta.query.openai_gen_query.TwoHopIncrementalResponse.answer", false]], "async_g_eval() (in module autorag.evaluation.metric.generation)": [[11, "autorag.evaluation.metric.generation.async_g_eval", false]], "async_postprocess_nodes() (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank method)": [[17, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.async_postprocess_nodes", false]], "async_qa_gen_llama_index() (in module autorag.data.qacreation.llama_index)": [[8, "autorag.data.qacreation.llama_index.async_qa_gen_llama_index", false]], "async_run_llm() (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank method)": [[17, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.async_run_llm", false]], "asyncrankgptrerank (class in autorag.nodes.passagereranker.rankgpt)": [[17, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank", false]], "autorag": [[0, "module-autorag", false]], "autorag.chunker": [[0, "module-autorag.chunker", false]], "autorag.cli": [[0, "module-autorag.cli", false]], "autorag.dashboard": [[0, "module-autorag.dashboard", false]], "autorag.data": [[1, "module-autorag.data", false]], "autorag.data.beta": [[2, "module-autorag.data.beta", false]], "autorag.data.beta.generation_gt": [[3, "module-autorag.data.beta.generation_gt", false]], "autorag.data.beta.generation_gt.base": [[3, "module-autorag.data.beta.generation_gt.base", false]], "autorag.data.beta.generation_gt.llama_index_gen_gt": [[3, "module-autorag.data.beta.generation_gt.llama_index_gen_gt", false]], "autorag.data.beta.generation_gt.openai_gen_gt": [[3, "module-autorag.data.beta.generation_gt.openai_gen_gt", false]], "autorag.data.beta.generation_gt.prompt": [[3, "module-autorag.data.beta.generation_gt.prompt", false]], "autorag.data.beta.query": [[4, "module-autorag.data.beta.query", false]], "autorag.data.beta.query.llama_gen_query": [[4, "module-autorag.data.beta.query.llama_gen_query", false]], "autorag.data.beta.query.openai_gen_query": [[4, "module-autorag.data.beta.query.openai_gen_query", false]], "autorag.data.beta.query.prompt": [[4, "module-autorag.data.beta.query.prompt", false]], "autorag.data.beta.sample": [[2, "module-autorag.data.beta.sample", false]], "autorag.data.beta.schema": [[2, "module-autorag.data.beta.schema", false], [5, "module-autorag.data.beta.schema", false]], "autorag.data.corpus": [[6, "module-autorag.data.corpus", false]], "autorag.data.corpus.langchain": [[6, "module-autorag.data.corpus.langchain", false]], "autorag.data.corpus.llama_index": [[6, "module-autorag.data.corpus.llama_index", false]], "autorag.data.qacreation": [[8, "module-autorag.data.qacreation", false]], "autorag.data.qacreation.base": [[8, "module-autorag.data.qacreation.base", false]], "autorag.data.qacreation.llama_index": [[8, "module-autorag.data.qacreation.llama_index", false]], "autorag.data.qacreation.ragas": [[8, "module-autorag.data.qacreation.ragas", false]], "autorag.data.qacreation.simple": [[8, "module-autorag.data.qacreation.simple", false]], "autorag.data.utils": [[9, "module-autorag.data.utils", false]], "autorag.data.utils.util": [[9, "module-autorag.data.utils.util", false]], "autorag.deploy": [[0, "module-autorag.deploy", false]], "autorag.evaluation": [[10, "module-autorag.evaluation", false]], "autorag.evaluation.generation": [[10, "module-autorag.evaluation.generation", false]], "autorag.evaluation.metric": [[11, "module-autorag.evaluation.metric", false]], "autorag.evaluation.metric.generation": [[11, "module-autorag.evaluation.metric.generation", false]], "autorag.evaluation.metric.retrieval": [[11, "module-autorag.evaluation.metric.retrieval", false]], "autorag.evaluation.metric.retrieval_contents": [[11, "module-autorag.evaluation.metric.retrieval_contents", false]], "autorag.evaluation.metric.util": [[11, "module-autorag.evaluation.metric.util", false]], "autorag.evaluation.retrieval": [[10, "module-autorag.evaluation.retrieval", false]], "autorag.evaluation.retrieval_contents": [[10, "module-autorag.evaluation.retrieval_contents", false]], "autorag.evaluation.util": [[10, "module-autorag.evaluation.util", false]], "autorag.evaluator": [[0, "module-autorag.evaluator", false]], "autorag.node_line": [[0, "module-autorag.node_line", false]], "autorag.nodes": [[12, "module-autorag.nodes", false]], "autorag.nodes.generator": [[13, "module-autorag.nodes.generator", false]], "autorag.nodes.generator.base": [[13, "module-autorag.nodes.generator.base", false]], "autorag.nodes.generator.llama_index_llm": [[13, "module-autorag.nodes.generator.llama_index_llm", false]], "autorag.nodes.generator.openai_llm": [[13, "module-autorag.nodes.generator.openai_llm", false]], "autorag.nodes.generator.run": [[13, "module-autorag.nodes.generator.run", false]], "autorag.nodes.generator.vllm": [[13, "module-autorag.nodes.generator.vllm", false]], "autorag.nodes.passageaugmenter": [[14, "module-autorag.nodes.passageaugmenter", false]], "autorag.nodes.passageaugmenter.base": [[14, "module-autorag.nodes.passageaugmenter.base", false]], "autorag.nodes.passageaugmenter.pass_passage_augmenter": [[14, "module-autorag.nodes.passageaugmenter.pass_passage_augmenter", false]], "autorag.nodes.passageaugmenter.prev_next_augmenter": [[14, "module-autorag.nodes.passageaugmenter.prev_next_augmenter", false]], "autorag.nodes.passageaugmenter.run": [[14, "module-autorag.nodes.passageaugmenter.run", false]], "autorag.nodes.passagecompressor": [[15, "module-autorag.nodes.passagecompressor", false]], "autorag.nodes.passagecompressor.base": [[15, "module-autorag.nodes.passagecompressor.base", false]], "autorag.nodes.passagecompressor.longllmlingua": [[15, "module-autorag.nodes.passagecompressor.longllmlingua", false]], "autorag.nodes.passagecompressor.pass_compressor": [[15, "module-autorag.nodes.passagecompressor.pass_compressor", false]], "autorag.nodes.passagecompressor.refine": [[15, "module-autorag.nodes.passagecompressor.refine", false]], "autorag.nodes.passagecompressor.run": [[15, "module-autorag.nodes.passagecompressor.run", false]], "autorag.nodes.passagecompressor.tree_summarize": [[15, "module-autorag.nodes.passagecompressor.tree_summarize", false]], "autorag.nodes.passagefilter": [[16, "module-autorag.nodes.passagefilter", false]], "autorag.nodes.passagefilter.base": [[16, "module-autorag.nodes.passagefilter.base", false]], "autorag.nodes.passagefilter.pass_passage_filter": [[16, "module-autorag.nodes.passagefilter.pass_passage_filter", false]], "autorag.nodes.passagefilter.percentile_cutoff": [[16, "module-autorag.nodes.passagefilter.percentile_cutoff", false]], "autorag.nodes.passagefilter.recency": [[16, "module-autorag.nodes.passagefilter.recency", false]], "autorag.nodes.passagefilter.run": [[16, "module-autorag.nodes.passagefilter.run", false]], "autorag.nodes.passagefilter.similarity_percentile_cutoff": [[16, "module-autorag.nodes.passagefilter.similarity_percentile_cutoff", false]], "autorag.nodes.passagefilter.similarity_threshold_cutoff": [[16, "module-autorag.nodes.passagefilter.similarity_threshold_cutoff", false]], "autorag.nodes.passagefilter.threshold_cutoff": [[16, "module-autorag.nodes.passagefilter.threshold_cutoff", false]], "autorag.nodes.passagereranker": [[17, "module-autorag.nodes.passagereranker", false]], "autorag.nodes.passagereranker.base": [[17, "module-autorag.nodes.passagereranker.base", false]], "autorag.nodes.passagereranker.cohere": [[17, "module-autorag.nodes.passagereranker.cohere", false]], "autorag.nodes.passagereranker.colbert": [[17, "module-autorag.nodes.passagereranker.colbert", false]], "autorag.nodes.passagereranker.flag_embedding": [[17, "module-autorag.nodes.passagereranker.flag_embedding", false]], "autorag.nodes.passagereranker.flag_embedding_llm": [[17, "module-autorag.nodes.passagereranker.flag_embedding_llm", false]], "autorag.nodes.passagereranker.jina": [[17, "module-autorag.nodes.passagereranker.jina", false]], "autorag.nodes.passagereranker.koreranker": [[17, "module-autorag.nodes.passagereranker.koreranker", false]], "autorag.nodes.passagereranker.monot5": [[17, "module-autorag.nodes.passagereranker.monot5", false]], "autorag.nodes.passagereranker.pass_reranker": [[17, "module-autorag.nodes.passagereranker.pass_reranker", false]], "autorag.nodes.passagereranker.rankgpt": [[17, "module-autorag.nodes.passagereranker.rankgpt", false]], "autorag.nodes.passagereranker.run": [[17, "module-autorag.nodes.passagereranker.run", false]], "autorag.nodes.passagereranker.sentence_transformer": [[17, "module-autorag.nodes.passagereranker.sentence_transformer", false]], "autorag.nodes.passagereranker.tart": [[18, "module-autorag.nodes.passagereranker.tart", false]], "autorag.nodes.passagereranker.tart.modeling_enc_t5": [[18, "module-autorag.nodes.passagereranker.tart.modeling_enc_t5", false]], "autorag.nodes.passagereranker.tart.tart": [[18, "module-autorag.nodes.passagereranker.tart.tart", false]], "autorag.nodes.passagereranker.tart.tokenization_enc_t5": [[18, "module-autorag.nodes.passagereranker.tart.tokenization_enc_t5", false]], "autorag.nodes.passagereranker.time_reranker": [[17, "module-autorag.nodes.passagereranker.time_reranker", false]], "autorag.nodes.passagereranker.upr": [[17, "module-autorag.nodes.passagereranker.upr", false]], "autorag.nodes.promptmaker": [[19, "module-autorag.nodes.promptmaker", false]], "autorag.nodes.promptmaker.base": [[19, "module-autorag.nodes.promptmaker.base", false]], "autorag.nodes.promptmaker.fstring": [[19, "module-autorag.nodes.promptmaker.fstring", false]], "autorag.nodes.promptmaker.long_context_reorder": [[19, "module-autorag.nodes.promptmaker.long_context_reorder", false]], "autorag.nodes.promptmaker.run": [[19, "module-autorag.nodes.promptmaker.run", false]], "autorag.nodes.promptmaker.window_replacement": [[19, "module-autorag.nodes.promptmaker.window_replacement", false]], "autorag.nodes.queryexpansion": [[20, "module-autorag.nodes.queryexpansion", false]], "autorag.nodes.queryexpansion.base": [[20, "module-autorag.nodes.queryexpansion.base", false]], "autorag.nodes.queryexpansion.hyde": [[20, "module-autorag.nodes.queryexpansion.hyde", false]], "autorag.nodes.queryexpansion.multi_query_expansion": [[20, "module-autorag.nodes.queryexpansion.multi_query_expansion", false]], "autorag.nodes.queryexpansion.pass_query_expansion": [[20, "module-autorag.nodes.queryexpansion.pass_query_expansion", false]], "autorag.nodes.queryexpansion.query_decompose": [[20, "module-autorag.nodes.queryexpansion.query_decompose", false]], "autorag.nodes.queryexpansion.run": [[20, "module-autorag.nodes.queryexpansion.run", false]], "autorag.nodes.retrieval": [[21, "module-autorag.nodes.retrieval", false]], "autorag.nodes.retrieval.base": [[21, "module-autorag.nodes.retrieval.base", false]], "autorag.nodes.retrieval.bm25": [[21, "module-autorag.nodes.retrieval.bm25", false]], "autorag.nodes.retrieval.hybrid_cc": [[21, "module-autorag.nodes.retrieval.hybrid_cc", false]], "autorag.nodes.retrieval.hybrid_rrf": [[21, "module-autorag.nodes.retrieval.hybrid_rrf", false]], "autorag.nodes.retrieval.run": [[21, "module-autorag.nodes.retrieval.run", false]], "autorag.nodes.retrieval.vectordb": [[21, "module-autorag.nodes.retrieval.vectordb", false]], "autorag.schema": [[22, "module-autorag.schema", false]], "autorag.schema.module": [[22, "module-autorag.schema.module", false]], "autorag.schema.node": [[22, "module-autorag.schema.node", false]], "autorag.strategy": [[0, "module-autorag.strategy", false]], "autorag.support": [[0, "module-autorag.support", false]], "autorag.utils": [[23, "module-autorag.utils", false]], "autorag.utils.preprocess": [[23, "module-autorag.utils.preprocess", false]], "autorag.utils.util": [[23, "module-autorag.utils.util", false]], "autorag.validator": [[0, "module-autorag.validator", false]], "autorag.web": [[0, "module-autorag.web", false]], "autorag_metric() (in module autorag.evaluation.metric.util)": [[11, "autorag.evaluation.metric.util.autorag_metric", false]], "autorag_metric_loop() (in module autorag.evaluation.metric.util)": [[11, "autorag.evaluation.metric.util.autorag_metric_loop", false]], "avoid_empty_result() (in module autorag.strategy)": [[0, "autorag.strategy.avoid_empty_result", false]], "batch_apply() (autorag.data.beta.schema.corpus method)": [[2, "autorag.data.beta.schema.Corpus.batch_apply", false], [5, "autorag.data.beta.schema.Corpus.batch_apply", false]], "batch_apply() (autorag.data.beta.schema.qa method)": [[2, "autorag.data.beta.schema.QA.batch_apply", false], [5, "autorag.data.beta.schema.QA.batch_apply", false]], "batch_apply() (autorag.data.beta.schema.raw method)": [[2, "autorag.data.beta.schema.Raw.batch_apply", false], [5, "autorag.data.beta.schema.Raw.batch_apply", false]], "batch_filter() (autorag.data.beta.schema.qa method)": [[2, "autorag.data.beta.schema.QA.batch_filter", false], [5, "autorag.data.beta.schema.QA.batch_filter", false]], "bert_score() (in module autorag.evaluation.metric.generation)": [[11, "autorag.evaluation.metric.generation.bert_score", false]], "bleu() (in module autorag.evaluation.metric.generation)": [[11, "autorag.evaluation.metric.generation.bleu", false]], "bm25() (in module autorag.nodes.retrieval.bm25)": [[21, "autorag.nodes.retrieval.bm25.bm25", false]], "bm25_ingest() (in module autorag.nodes.retrieval.bm25)": [[21, "autorag.nodes.retrieval.bm25.bm25_ingest", false]], "bm25_pure() (in module autorag.nodes.retrieval.bm25)": [[21, "autorag.nodes.retrieval.bm25.bm25_pure", false]], "build_inputs_with_special_tokens() (autorag.nodes.passagereranker.tart.tokenization_enc_t5.enct5tokenizer method)": [[18, "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer.build_inputs_with_special_tokens", false]], "calculate_cosine_similarity() (in module autorag.evaluation.metric.util)": [[11, "autorag.evaluation.metric.util.calculate_cosine_similarity", false]], "cast_corpus_dataset() (in module autorag.utils.preprocess)": [[23, "autorag.utils.preprocess.cast_corpus_dataset", false]], "cast_embedding_model() (in module autorag.evaluation.util)": [[10, "autorag.evaluation.util.cast_embedding_model", false]], "cast_metrics() (in module autorag.evaluation.util)": [[10, "autorag.evaluation.util.cast_metrics", false]], "cast_qa_dataset() (in module autorag.utils.preprocess)": [[23, "autorag.utils.preprocess.cast_qa_dataset", false]], "cast_queries() (in module autorag.nodes.retrieval.base)": [[21, "autorag.nodes.retrieval.base.cast_queries", false]], "chat_box() (in module autorag.web)": [[0, "autorag.web.chat_box", false]], "chunk() (autorag.data.beta.schema.raw method)": [[2, "autorag.data.beta.schema.Raw.chunk", false], [5, "autorag.data.beta.schema.Raw.chunk", false]], "chunker (class in autorag.chunker)": [[0, "autorag.chunker.Chunker", false]], "cohere_rerank_pure() (in module autorag.nodes.passagereranker.cohere)": [[17, "autorag.nodes.passagereranker.cohere.cohere_rerank_pure", false]], "cohere_reranker() (in module autorag.nodes.passagereranker.cohere)": [[17, "autorag.nodes.passagereranker.cohere.cohere_reranker", false]], "colbert_reranker() (in module autorag.nodes.passagereranker.colbert)": [[17, "autorag.nodes.passagereranker.colbert.colbert_reranker", false]], "compute() (autorag.nodes.passagereranker.upr.uprscorer method)": [[17, "autorag.nodes.passagereranker.upr.UPRScorer.compute", false]], "concept_completion_query_gen() (in module autorag.data.beta.query.llama_gen_query)": [[4, "autorag.data.beta.query.llama_gen_query.concept_completion_query_gen", false]], "concept_completion_query_gen() (in module autorag.data.beta.query.openai_gen_query)": [[4, "autorag.data.beta.query.openai_gen_query.concept_completion_query_gen", false]], "convert_datetime_string() (in module autorag.utils.util)": [[23, "autorag.utils.util.convert_datetime_string", false]], "convert_env_in_dict() (in module autorag.utils.util)": [[23, "autorag.utils.util.convert_env_in_dict", false]], "convert_inputs_to_list() (in module autorag.utils.util)": [[23, "autorag.utils.util.convert_inputs_to_list", false]], "convert_string_to_tuple_in_dict() (in module autorag.utils.util)": [[23, "autorag.utils.util.convert_string_to_tuple_in_dict", false]], "corpus (class in autorag.data.beta.schema)": [[2, "autorag.data.beta.schema.Corpus", false], [5, "autorag.data.beta.schema.Corpus", false]], "corpus_df_to_langchain_documents() (in module autorag.data.utils.util)": [[9, "autorag.data.utils.util.corpus_df_to_langchain_documents", false]], "create_token_type_ids_from_sequences() (autorag.nodes.passagereranker.tart.tokenization_enc_t5.enct5tokenizer method)": [[18, "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer.create_token_type_ids_from_sequences", false]], "deparallelize() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[18, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.deparallelize", false]], "destroy_vllm_instance() (in module autorag.nodes.generator.vllm)": [[13, "autorag.nodes.generator.vllm.destroy_vllm_instance", false]], "dict_to_markdown() (in module autorag.utils.util)": [[23, "autorag.utils.util.dict_to_markdown", false]], "dict_to_markdown_table() (in module autorag.utils.util)": [[23, "autorag.utils.util.dict_to_markdown_table", false]], "distribute_list_by_ratio() (in module autorag.data.qacreation.llama_index)": [[8, "autorag.data.qacreation.llama_index.distribute_list_by_ratio", false]], "dynamically_find_function() (in module autorag.support)": [[0, "autorag.support.dynamically_find_function", false]], "edit_summary_df_params() (in module autorag.nodes.retrieval.run)": [[21, "autorag.nodes.retrieval.run.edit_summary_df_params", false]], "embed_dim (autorag.mockembeddingrandom attribute)": [[0, "autorag.MockEmbeddingRandom.embed_dim", false]], "embedding_query_content() (in module autorag.utils.util)": [[23, "autorag.utils.util.embedding_query_content", false]], "enct5forsequenceclassification (class in autorag.nodes.passagereranker.tart.modeling_enc_t5)": [[18, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification", false]], "enct5tokenizer (class in autorag.nodes.passagereranker.tart.tokenization_enc_t5)": [[18, "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer", false]], "evaluate_generation() (in module autorag.evaluation.generation)": [[10, "autorag.evaluation.generation.evaluate_generation", false]], "evaluate_generator_node() (in module autorag.nodes.generator.run)": [[13, "autorag.nodes.generator.run.evaluate_generator_node", false]], "evaluate_generator_result() (in module autorag.nodes.promptmaker.run)": [[19, "autorag.nodes.promptmaker.run.evaluate_generator_result", false]], "evaluate_one_prompt_maker_node() (in module autorag.nodes.promptmaker.run)": [[19, "autorag.nodes.promptmaker.run.evaluate_one_prompt_maker_node", false]], "evaluate_one_query_expansion_node() (in module autorag.nodes.queryexpansion.run)": [[20, "autorag.nodes.queryexpansion.run.evaluate_one_query_expansion_node", false]], "evaluate_passage_compressor_node() (in module autorag.nodes.passagecompressor.run)": [[15, "autorag.nodes.passagecompressor.run.evaluate_passage_compressor_node", false]], "evaluate_retrieval() (in module autorag.evaluation.retrieval)": [[10, "autorag.evaluation.retrieval.evaluate_retrieval", false]], "evaluate_retrieval_contents() (in module autorag.evaluation.retrieval_contents)": [[10, "autorag.evaluation.retrieval_contents.evaluate_retrieval_contents", false]], "evaluate_retrieval_node() (in module autorag.nodes.retrieval.run)": [[21, "autorag.nodes.retrieval.run.evaluate_retrieval_node", false]], "evaluator (class in autorag.evaluator)": [[0, "autorag.evaluator.Evaluator", false]], "evenly_distribute_passages() (in module autorag.nodes.retrieval.base)": [[21, "autorag.nodes.retrieval.base.evenly_distribute_passages", false]], "exp_normalize() (in module autorag.nodes.passagereranker.koreranker)": [[17, "autorag.nodes.passagereranker.koreranker.exp_normalize", false]], "explode() (in module autorag.utils.util)": [[23, "autorag.utils.util.explode", false]], "extract_best_config() (in module autorag.deploy)": [[0, "autorag.deploy.extract_best_config", false]], "extract_node_line_names() (in module autorag.deploy)": [[0, "autorag.deploy.extract_node_line_names", false]], "extract_node_strategy() (in module autorag.deploy)": [[0, "autorag.deploy.extract_node_strategy", false]], "extract_values() (in module autorag.schema.node)": [[22, "autorag.schema.node.extract_values", false]], "extract_values_from_nodes() (in module autorag.schema.node)": [[22, "autorag.schema.node.extract_values_from_nodes", false]], "factoid_query_gen() (in module autorag.data.beta.query.llama_gen_query)": [[4, "autorag.data.beta.query.llama_gen_query.factoid_query_gen", false]], "factoid_query_gen() (in module autorag.data.beta.query.openai_gen_query)": [[4, "autorag.data.beta.query.openai_gen_query.factoid_query_gen", false]], "fetch_contents() (in module autorag.utils.util)": [[23, "autorag.utils.util.fetch_contents", false]], "fetch_one_content() (in module autorag.utils.util)": [[23, "autorag.utils.util.fetch_one_content", false]], "filter() (autorag.data.beta.schema.qa method)": [[2, "autorag.data.beta.schema.QA.filter", false], [5, "autorag.data.beta.schema.QA.filter", false]], "filter_by_threshold() (in module autorag.strategy)": [[0, "autorag.strategy.filter_by_threshold", false]], "filter_dict_keys() (in module autorag.utils.util)": [[23, "autorag.utils.util.filter_dict_keys", false]], "find_node_dir() (in module autorag.dashboard)": [[0, "autorag.dashboard.find_node_dir", false]], "find_node_summary_files() (in module autorag.utils.util)": [[23, "autorag.utils.util.find_node_summary_files", false]], "find_trial_dir() (in module autorag.utils.util)": [[23, "autorag.utils.util.find_trial_dir", false]], "find_unique_elems() (in module autorag.nodes.retrieval.run)": [[21, "autorag.nodes.retrieval.run.find_unique_elems", false]], "flag_embedding_llm_reranker() (in module autorag.nodes.passagereranker.flag_embedding_llm)": [[17, "autorag.nodes.passagereranker.flag_embedding_llm.flag_embedding_llm_reranker", false]], "flag_embedding_reranker() (in module autorag.nodes.passagereranker.flag_embedding)": [[17, "autorag.nodes.passagereranker.flag_embedding.flag_embedding_reranker", false]], "flag_embedding_run_model() (in module autorag.nodes.passagereranker.flag_embedding)": [[17, "autorag.nodes.passagereranker.flag_embedding.flag_embedding_run_model", false]], "flatmap() (autorag.data.beta.schema.raw method)": [[2, "autorag.data.beta.schema.Raw.flatmap", false], [5, "autorag.data.beta.schema.Raw.flatmap", false]], "flatten_apply() (in module autorag.utils.util)": [[23, "autorag.utils.util.flatten_apply", false]], "forward() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[18, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.forward", false]], "from_dict() (autorag.schema.module.module class method)": [[22, "autorag.schema.module.Module.from_dict", false]], "from_dict() (autorag.schema.node.node class method)": [[22, "autorag.schema.node.Node.from_dict", false]], "from_parquet() (autorag.chunker.chunker class method)": [[0, "autorag.chunker.Chunker.from_parquet", false]], "from_trial_folder() (autorag.deploy.runner class method)": [[0, "autorag.deploy.Runner.from_trial_folder", false]], "from_yaml() (autorag.deploy.runner class method)": [[0, "autorag.deploy.Runner.from_yaml", false]], "fstring() (in module autorag.nodes.promptmaker.fstring)": [[19, "autorag.nodes.promptmaker.fstring.fstring", false]], "fuse_per_query() (in module autorag.nodes.retrieval.hybrid_cc)": [[21, "autorag.nodes.retrieval.hybrid_cc.fuse_per_query", false]], "g_eval() (in module autorag.evaluation.metric.generation)": [[11, "autorag.evaluation.metric.generation.g_eval", false]], "generate_answers() (in module autorag.data.qacreation.llama_index)": [[8, "autorag.data.qacreation.llama_index.generate_answers", false]], "generate_basic_answer() (in module autorag.data.qacreation.llama_index)": [[8, "autorag.data.qacreation.llama_index.generate_basic_answer", false]], "generate_qa_llama_index() (in module autorag.data.qacreation.llama_index)": [[8, "autorag.data.qacreation.llama_index.generate_qa_llama_index", false]], "generate_qa_llama_index_by_ratio() (in module autorag.data.qacreation.llama_index)": [[8, "autorag.data.qacreation.llama_index.generate_qa_llama_index_by_ratio", false]], "generate_qa_ragas() (in module autorag.data.qacreation.ragas)": [[8, "autorag.data.qacreation.ragas.generate_qa_ragas", false]], "generate_qa_row() (in module autorag.data.qacreation.simple)": [[8, "autorag.data.qacreation.simple.generate_qa_row", false]], "generate_simple_qa_dataset() (in module autorag.data.qacreation.simple)": [[8, "autorag.data.qacreation.simple.generate_simple_qa_dataset", false]], "generator_node() (in module autorag.nodes.generator.base)": [[13, "autorag.nodes.generator.base.generator_node", false]], "get_best_row() (in module autorag.utils.util)": [[23, "autorag.utils.util.get_best_row", false]], "get_bm25_pkl_name() (in module autorag.nodes.retrieval.base)": [[21, "autorag.nodes.retrieval.base.get_bm25_pkl_name", false]], "get_bm25_scores() (in module autorag.nodes.retrieval.bm25)": [[21, "autorag.nodes.retrieval.bm25.get_bm25_scores", false]], "get_colbert_embedding_batch() (in module autorag.nodes.passagereranker.colbert)": [[17, "autorag.nodes.passagereranker.colbert.get_colbert_embedding_batch", false]], "get_colbert_score() (in module autorag.nodes.passagereranker.colbert)": [[17, "autorag.nodes.passagereranker.colbert.get_colbert_score", false]], "get_encoder() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[18, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.get_encoder", false]], "get_event_loop() (in module autorag.utils.util)": [[23, "autorag.utils.util.get_event_loop", false]], "get_file_metadata() (in module autorag.data.utils.util)": [[9, "autorag.data.utils.util.get_file_metadata", false]], "get_hybrid_execution_times() (in module autorag.nodes.retrieval.run)": [[21, "autorag.nodes.retrieval.run.get_hybrid_execution_times", false]], "get_id_scores() (in module autorag.nodes.retrieval.vectordb)": [[21, "autorag.nodes.retrieval.vectordb.get_id_scores", false]], "get_ids_and_scores() (in module autorag.nodes.retrieval.run)": [[21, "autorag.nodes.retrieval.run.get_ids_and_scores", false]], "get_input_embeddings() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[18, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.get_input_embeddings", false]], "get_metric_values() (in module autorag.dashboard)": [[0, "autorag.dashboard.get_metric_values", false]], "get_multi_query_expansion() (in module autorag.nodes.queryexpansion.multi_query_expansion)": [[20, "autorag.nodes.queryexpansion.multi_query_expansion.get_multi_query_expansion", false]], "get_param_combinations() (autorag.schema.node.node method)": [[22, "autorag.schema.node.Node.get_param_combinations", false]], "get_param_combinations() (in module autorag.data.utils.util)": [[9, "autorag.data.utils.util.get_param_combinations", false]], "get_query_decompose() (in module autorag.nodes.queryexpansion.query_decompose)": [[20, "autorag.nodes.queryexpansion.query_decompose.get_query_decompose", false]], "get_result() (in module autorag.nodes.generator.openai_llm)": [[13, "autorag.nodes.generator.openai_llm.get_result", false]], "get_runner() (in module autorag.web)": [[0, "autorag.web.get_runner", false]], "get_scores_by_ids() (in module autorag.nodes.retrieval.run)": [[21, "autorag.nodes.retrieval.run.get_scores_by_ids", false]], "get_special_tokens_mask() (autorag.nodes.passagereranker.tart.tokenization_enc_t5.enct5tokenizer method)": [[18, "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer.get_special_tokens_mask", false]], "get_start_end_idx() (in module autorag.data.utils.util)": [[9, "autorag.data.utils.util.get_start_end_idx", false]], "get_support_modules() (in module autorag.support)": [[0, "autorag.support.get_support_modules", false]], "get_support_nodes() (in module autorag.support)": [[0, "autorag.support.get_support_nodes", false]], "handle_exception() (in module autorag)": [[0, "autorag.handle_exception", false]], "huggingface_evaluate() (in module autorag.evaluation.metric.generation)": [[11, "autorag.evaluation.metric.generation.huggingface_evaluate", false]], "hybrid_cc() (in module autorag.nodes.retrieval.hybrid_cc)": [[21, "autorag.nodes.retrieval.hybrid_cc.hybrid_cc", false]], "hybrid_rrf() (in module autorag.nodes.retrieval.hybrid_rrf)": [[21, "autorag.nodes.retrieval.hybrid_rrf.hybrid_rrf", false]], "hyde() (in module autorag.nodes.queryexpansion.hyde)": [[20, "autorag.nodes.queryexpansion.hyde.hyde", false]], "jina_reranker() (in module autorag.nodes.passagereranker.jina)": [[17, "autorag.nodes.passagereranker.jina.jina_reranker", false]], "jina_reranker_pure() (in module autorag.nodes.passagereranker.jina)": [[17, "autorag.nodes.passagereranker.jina.jina_reranker_pure", false]], "koreranker() (in module autorag.nodes.passagereranker.koreranker)": [[17, "autorag.nodes.passagereranker.koreranker.koreranker", false]], "koreranker_run_model() (in module autorag.nodes.passagereranker.koreranker)": [[17, "autorag.nodes.passagereranker.koreranker.koreranker_run_model", false]], "langchain_documents_to_parquet() (in module autorag.data.corpus.langchain)": [[6, "autorag.data.corpus.langchain.langchain_documents_to_parquet", false]], "lazyinit (class in autorag)": [[0, "autorag.LazyInit", false]], "linked_corpus (autorag.data.beta.schema.qa property)": [[2, "autorag.data.beta.schema.QA.linked_corpus", false], [5, "autorag.data.beta.schema.QA.linked_corpus", false]], "linked_raw (autorag.data.beta.schema.corpus property)": [[2, "autorag.data.beta.schema.Corpus.linked_raw", false], [5, "autorag.data.beta.schema.Corpus.linked_raw", false]], "llama_documents_to_parquet() (in module autorag.data.corpus.llama_index)": [[6, "autorag.data.corpus.llama_index.llama_documents_to_parquet", false]], "llama_index_generate_base() (in module autorag.data.beta.query.llama_gen_query)": [[4, "autorag.data.beta.query.llama_gen_query.llama_index_generate_base", false]], "llama_index_llm() (in module autorag.nodes.generator.llama_index_llm)": [[13, "autorag.nodes.generator.llama_index_llm.llama_index_llm", false]], "llama_text_node_to_parquet() (in module autorag.data.corpus.llama_index)": [[6, "autorag.data.corpus.llama_index.llama_text_node_to_parquet", false]], "llm (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[17, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.llm", false]], "llmlingua_pure() (in module autorag.nodes.passagecompressor.longllmlingua)": [[15, "autorag.nodes.passagecompressor.longllmlingua.llmlingua_pure", false]], "load_bm25_corpus() (in module autorag.nodes.retrieval.base)": [[21, "autorag.nodes.retrieval.base.load_bm25_corpus", false]], "load_chroma_collection() (in module autorag.nodes.retrieval.base)": [[21, "autorag.nodes.retrieval.base.load_chroma_collection", false]], "load_summary_file() (in module autorag.utils.util)": [[23, "autorag.utils.util.load_summary_file", false]], "load_yaml() (in module autorag.data.utils.util)": [[9, "autorag.data.utils.util.load_yaml", false]], "long_context_reorder() (in module autorag.nodes.promptmaker.long_context_reorder)": [[19, "autorag.nodes.promptmaker.long_context_reorder.long_context_reorder", false]], "longllmlingua() (in module autorag.nodes.passagecompressor.longllmlingua)": [[15, "autorag.nodes.passagecompressor.longllmlingua.longllmlingua", false]], "make_basic_gen_gt() (in module autorag.data.beta.generation_gt.llama_index_gen_gt)": [[3, "autorag.data.beta.generation_gt.llama_index_gen_gt.make_basic_gen_gt", false]], "make_basic_gen_gt() (in module autorag.data.beta.generation_gt.openai_gen_gt)": [[3, "autorag.data.beta.generation_gt.openai_gen_gt.make_basic_gen_gt", false]], "make_batch() (in module autorag.utils.util)": [[23, "autorag.utils.util.make_batch", false]], "make_combinations() (in module autorag.utils.util)": [[23, "autorag.utils.util.make_combinations", false]], "make_concise_gen_gt() (in module autorag.data.beta.generation_gt.llama_index_gen_gt)": [[3, "autorag.data.beta.generation_gt.llama_index_gen_gt.make_concise_gen_gt", false]], "make_concise_gen_gt() (in module autorag.data.beta.generation_gt.openai_gen_gt)": [[3, "autorag.data.beta.generation_gt.openai_gen_gt.make_concise_gen_gt", false]], "make_gen_gt_llama_index() (in module autorag.data.beta.generation_gt.llama_index_gen_gt)": [[3, "autorag.data.beta.generation_gt.llama_index_gen_gt.make_gen_gt_llama_index", false]], "make_gen_gt_openai() (in module autorag.data.beta.generation_gt.openai_gen_gt)": [[3, "autorag.data.beta.generation_gt.openai_gen_gt.make_gen_gt_openai", false]], "make_generator_callable_param() (in module autorag.nodes.queryexpansion.base)": [[20, "autorag.nodes.queryexpansion.base.make_generator_callable_param", false]], "make_generator_callable_params() (in module autorag.nodes.promptmaker.run)": [[19, "autorag.nodes.promptmaker.run.make_generator_callable_params", false]], "make_llm() (in module autorag.nodes.passagecompressor.base)": [[15, "autorag.nodes.passagecompressor.base.make_llm", false]], "make_node_lines() (in module autorag.node_line)": [[0, "autorag.node_line.make_node_lines", false]], "make_qa_with_existing_qa() (in module autorag.data.qacreation.base)": [[8, "autorag.data.qacreation.base.make_qa_with_existing_qa", false]], "make_retrieval_callable_params() (in module autorag.nodes.queryexpansion.run)": [[20, "autorag.nodes.queryexpansion.run.make_retrieval_callable_params", false]], "make_retrieval_gt_contents() (autorag.data.beta.schema.qa method)": [[2, "autorag.data.beta.schema.QA.make_retrieval_gt_contents", false], [5, "autorag.data.beta.schema.QA.make_retrieval_gt_contents", false]], "make_single_content_qa() (in module autorag.data.qacreation.base)": [[8, "autorag.data.qacreation.base.make_single_content_qa", false]], "make_trial_summary_md() (in module autorag.dashboard)": [[0, "autorag.dashboard.make_trial_summary_md", false]], "make_vllm_instance() (in module autorag.nodes.generator.vllm)": [[13, "autorag.nodes.generator.vllm.make_vllm_instance", false]], "map() (autorag.data.beta.schema.corpus method)": [[2, "autorag.data.beta.schema.Corpus.map", false], [5, "autorag.data.beta.schema.Corpus.map", false]], "map() (autorag.data.beta.schema.qa method)": [[2, "autorag.data.beta.schema.QA.map", false], [5, "autorag.data.beta.schema.QA.map", false]], "map() (autorag.data.beta.schema.raw method)": [[2, "autorag.data.beta.schema.Raw.map", false], [5, "autorag.data.beta.schema.Raw.map", false]], "measure_speed() (in module autorag.strategy)": [[0, "autorag.strategy.measure_speed", false]], "meteor() (in module autorag.evaluation.metric.generation)": [[11, "autorag.evaluation.metric.generation.meteor", false]], "mockembeddingrandom (class in autorag)": [[0, "autorag.MockEmbeddingRandom", false]], "model_computed_fields (autorag.data.beta.generation_gt.openai_gen_gt.response attribute)": [[3, "autorag.data.beta.generation_gt.openai_gen_gt.Response.model_computed_fields", false]], "model_computed_fields (autorag.data.beta.query.openai_gen_query.response attribute)": [[4, "autorag.data.beta.query.openai_gen_query.Response.model_computed_fields", false]], "model_computed_fields (autorag.data.beta.query.openai_gen_query.twohopincrementalresponse attribute)": [[4, "autorag.data.beta.query.openai_gen_query.TwoHopIncrementalResponse.model_computed_fields", false]], "model_computed_fields (autorag.deploy.runnerinput attribute)": [[0, "autorag.deploy.RunnerInput.model_computed_fields", false]], "model_computed_fields (autorag.mockembeddingrandom attribute)": [[0, "autorag.MockEmbeddingRandom.model_computed_fields", false]], "model_computed_fields (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[17, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.model_computed_fields", false]], "model_config (autorag.data.beta.generation_gt.openai_gen_gt.response attribute)": [[3, "autorag.data.beta.generation_gt.openai_gen_gt.Response.model_config", false]], "model_config (autorag.data.beta.query.openai_gen_query.response attribute)": [[4, "autorag.data.beta.query.openai_gen_query.Response.model_config", false]], "model_config (autorag.data.beta.query.openai_gen_query.twohopincrementalresponse attribute)": [[4, "autorag.data.beta.query.openai_gen_query.TwoHopIncrementalResponse.model_config", false]], "model_config (autorag.deploy.runnerinput attribute)": [[0, "autorag.deploy.RunnerInput.model_config", false]], "model_config (autorag.mockembeddingrandom attribute)": [[0, "autorag.MockEmbeddingRandom.model_config", false]], "model_config (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[17, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.model_config", false]], "model_fields (autorag.data.beta.generation_gt.openai_gen_gt.response attribute)": [[3, "autorag.data.beta.generation_gt.openai_gen_gt.Response.model_fields", false]], "model_fields (autorag.data.beta.query.openai_gen_query.response attribute)": [[4, "autorag.data.beta.query.openai_gen_query.Response.model_fields", false]], "model_fields (autorag.data.beta.query.openai_gen_query.twohopincrementalresponse attribute)": [[4, "autorag.data.beta.query.openai_gen_query.TwoHopIncrementalResponse.model_fields", false]], "model_fields (autorag.deploy.runnerinput attribute)": [[0, "autorag.deploy.RunnerInput.model_fields", false]], "model_fields (autorag.mockembeddingrandom attribute)": [[0, "autorag.MockEmbeddingRandom.model_fields", false]], "model_fields (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[17, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.model_fields", false]], "module": [[0, "module-autorag", false], [0, "module-autorag.chunker", false], [0, "module-autorag.cli", false], [0, "module-autorag.dashboard", false], [0, "module-autorag.deploy", false], [0, "module-autorag.evaluator", false], [0, "module-autorag.node_line", false], [0, "module-autorag.strategy", false], [0, "module-autorag.support", false], [0, "module-autorag.validator", false], [0, "module-autorag.web", false], [1, "module-autorag.data", false], [2, "module-autorag.data.beta", false], [2, "module-autorag.data.beta.sample", false], [2, "module-autorag.data.beta.schema", false], [3, "module-autorag.data.beta.generation_gt", false], [3, "module-autorag.data.beta.generation_gt.base", false], [3, "module-autorag.data.beta.generation_gt.llama_index_gen_gt", false], [3, "module-autorag.data.beta.generation_gt.openai_gen_gt", false], [3, "module-autorag.data.beta.generation_gt.prompt", false], [4, "module-autorag.data.beta.query", false], [4, "module-autorag.data.beta.query.llama_gen_query", false], [4, "module-autorag.data.beta.query.openai_gen_query", false], [4, "module-autorag.data.beta.query.prompt", false], [5, "module-autorag.data.beta.schema", false], [6, "module-autorag.data.corpus", false], [6, "module-autorag.data.corpus.langchain", false], [6, "module-autorag.data.corpus.llama_index", false], [8, "module-autorag.data.qacreation", false], [8, "module-autorag.data.qacreation.base", false], [8, "module-autorag.data.qacreation.llama_index", false], [8, "module-autorag.data.qacreation.ragas", false], [8, "module-autorag.data.qacreation.simple", false], [9, "module-autorag.data.utils", false], [9, "module-autorag.data.utils.util", false], [10, "module-autorag.evaluation", false], [10, "module-autorag.evaluation.generation", false], [10, "module-autorag.evaluation.retrieval", false], [10, "module-autorag.evaluation.retrieval_contents", false], [10, "module-autorag.evaluation.util", false], [11, "module-autorag.evaluation.metric", false], [11, "module-autorag.evaluation.metric.generation", false], [11, "module-autorag.evaluation.metric.retrieval", false], [11, "module-autorag.evaluation.metric.retrieval_contents", false], [11, "module-autorag.evaluation.metric.util", false], [12, "module-autorag.nodes", false], [13, "module-autorag.nodes.generator", false], [13, "module-autorag.nodes.generator.base", false], [13, "module-autorag.nodes.generator.llama_index_llm", false], [13, "module-autorag.nodes.generator.openai_llm", false], [13, "module-autorag.nodes.generator.run", false], [13, "module-autorag.nodes.generator.vllm", false], [14, "module-autorag.nodes.passageaugmenter", false], [14, "module-autorag.nodes.passageaugmenter.base", false], [14, "module-autorag.nodes.passageaugmenter.pass_passage_augmenter", false], [14, "module-autorag.nodes.passageaugmenter.prev_next_augmenter", false], [14, "module-autorag.nodes.passageaugmenter.run", false], [15, "module-autorag.nodes.passagecompressor", false], [15, "module-autorag.nodes.passagecompressor.base", false], [15, "module-autorag.nodes.passagecompressor.longllmlingua", false], [15, "module-autorag.nodes.passagecompressor.pass_compressor", false], [15, "module-autorag.nodes.passagecompressor.refine", false], [15, "module-autorag.nodes.passagecompressor.run", false], [15, "module-autorag.nodes.passagecompressor.tree_summarize", false], [16, "module-autorag.nodes.passagefilter", false], [16, "module-autorag.nodes.passagefilter.base", false], [16, "module-autorag.nodes.passagefilter.pass_passage_filter", false], [16, "module-autorag.nodes.passagefilter.percentile_cutoff", false], [16, "module-autorag.nodes.passagefilter.recency", false], [16, "module-autorag.nodes.passagefilter.run", false], [16, "module-autorag.nodes.passagefilter.similarity_percentile_cutoff", false], [16, "module-autorag.nodes.passagefilter.similarity_threshold_cutoff", false], [16, "module-autorag.nodes.passagefilter.threshold_cutoff", false], [17, "module-autorag.nodes.passagereranker", false], [17, "module-autorag.nodes.passagereranker.base", false], [17, "module-autorag.nodes.passagereranker.cohere", false], [17, "module-autorag.nodes.passagereranker.colbert", false], [17, "module-autorag.nodes.passagereranker.flag_embedding", false], [17, "module-autorag.nodes.passagereranker.flag_embedding_llm", false], [17, "module-autorag.nodes.passagereranker.jina", false], [17, "module-autorag.nodes.passagereranker.koreranker", false], [17, "module-autorag.nodes.passagereranker.monot5", false], [17, "module-autorag.nodes.passagereranker.pass_reranker", false], [17, "module-autorag.nodes.passagereranker.rankgpt", false], [17, "module-autorag.nodes.passagereranker.run", false], [17, "module-autorag.nodes.passagereranker.sentence_transformer", false], [17, "module-autorag.nodes.passagereranker.time_reranker", false], [17, "module-autorag.nodes.passagereranker.upr", false], [18, "module-autorag.nodes.passagereranker.tart", false], [18, "module-autorag.nodes.passagereranker.tart.modeling_enc_t5", false], [18, "module-autorag.nodes.passagereranker.tart.tart", false], [18, "module-autorag.nodes.passagereranker.tart.tokenization_enc_t5", false], [19, "module-autorag.nodes.promptmaker", false], [19, "module-autorag.nodes.promptmaker.base", false], [19, "module-autorag.nodes.promptmaker.fstring", false], [19, "module-autorag.nodes.promptmaker.long_context_reorder", false], [19, "module-autorag.nodes.promptmaker.run", false], [19, "module-autorag.nodes.promptmaker.window_replacement", false], [20, "module-autorag.nodes.queryexpansion", false], [20, "module-autorag.nodes.queryexpansion.base", false], [20, "module-autorag.nodes.queryexpansion.hyde", false], [20, "module-autorag.nodes.queryexpansion.multi_query_expansion", false], [20, "module-autorag.nodes.queryexpansion.pass_query_expansion", false], [20, "module-autorag.nodes.queryexpansion.query_decompose", false], [20, "module-autorag.nodes.queryexpansion.run", false], [21, "module-autorag.nodes.retrieval", false], [21, "module-autorag.nodes.retrieval.base", false], [21, "module-autorag.nodes.retrieval.bm25", false], [21, "module-autorag.nodes.retrieval.hybrid_cc", false], [21, "module-autorag.nodes.retrieval.hybrid_rrf", false], [21, "module-autorag.nodes.retrieval.run", false], [21, "module-autorag.nodes.retrieval.vectordb", false], [22, "module-autorag.schema", false], [22, "module-autorag.schema.module", false], [22, "module-autorag.schema.node", false], [23, "module-autorag.utils", false], [23, "module-autorag.utils.preprocess", false], [23, "module-autorag.utils.util", false]], "module (autorag.schema.module.module attribute)": [[22, "autorag.schema.module.Module.module", false]], "module (class in autorag.schema.module)": [[22, "autorag.schema.module.Module", false]], "module_param (autorag.schema.module.module attribute)": [[22, "autorag.schema.module.Module.module_param", false]], "module_type (autorag.schema.module.module attribute)": [[22, "autorag.schema.module.Module.module_type", false]], "module_type_exists() (in module autorag.schema.node)": [[22, "autorag.schema.node.module_type_exists", false]], "modules (autorag.schema.node.node attribute)": [[22, "autorag.schema.node.Node.modules", false]], "monot5() (in module autorag.nodes.passagereranker.monot5)": [[17, "autorag.nodes.passagereranker.monot5.monot5", false]], "monot5_run_model() (in module autorag.nodes.passagereranker.monot5)": [[17, "autorag.nodes.passagereranker.monot5.monot5_run_model", false]], "multi_query_expansion() (in module autorag.nodes.queryexpansion.multi_query_expansion)": [[20, "autorag.nodes.queryexpansion.multi_query_expansion.multi_query_expansion", false]], "node (class in autorag.schema.node)": [[22, "autorag.schema.node.Node", false]], "node_params (autorag.schema.node.node attribute)": [[22, "autorag.schema.node.Node.node_params", false]], "node_type (autorag.schema.node.node attribute)": [[22, "autorag.schema.node.Node.node_type", false]], "node_view() (in module autorag.dashboard)": [[0, "autorag.dashboard.node_view", false]], "normalize_dbsf() (in module autorag.nodes.retrieval.hybrid_cc)": [[21, "autorag.nodes.retrieval.hybrid_cc.normalize_dbsf", false]], "normalize_mm() (in module autorag.nodes.retrieval.hybrid_cc)": [[21, "autorag.nodes.retrieval.hybrid_cc.normalize_mm", false]], "normalize_string() (in module autorag.utils.util)": [[23, "autorag.utils.util.normalize_string", false]], "normalize_tmm() (in module autorag.nodes.retrieval.hybrid_cc)": [[21, "autorag.nodes.retrieval.hybrid_cc.normalize_tmm", false]], "normalize_unicode() (in module autorag.utils.util)": [[23, "autorag.utils.util.normalize_unicode", false]], "normalize_z() (in module autorag.nodes.retrieval.hybrid_cc)": [[21, "autorag.nodes.retrieval.hybrid_cc.normalize_z", false]], "one_hop_question (autorag.data.beta.query.openai_gen_query.twohopincrementalresponse attribute)": [[4, "autorag.data.beta.query.openai_gen_query.TwoHopIncrementalResponse.one_hop_question", false]], "openai_llm() (in module autorag.nodes.generator.openai_llm)": [[13, "autorag.nodes.generator.openai_llm.openai_llm", false]], "openai_truncate_by_token() (in module autorag.utils.util)": [[23, "autorag.utils.util.openai_truncate_by_token", false]], "optimize_hybrid() (in module autorag.nodes.retrieval.run)": [[21, "autorag.nodes.retrieval.run.optimize_hybrid", false]], "parallelize() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[18, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.parallelize", false]], "parse_output() (in module autorag.data.qacreation.llama_index)": [[8, "autorag.data.qacreation.llama_index.parse_output", false]], "pass_compressor() (in module autorag.nodes.passagecompressor.pass_compressor)": [[15, "autorag.nodes.passagecompressor.pass_compressor.pass_compressor", false]], "pass_passage_augmenter() (in module autorag.nodes.passageaugmenter.pass_passage_augmenter)": [[14, "autorag.nodes.passageaugmenter.pass_passage_augmenter.pass_passage_augmenter", false]], "pass_passage_filter() (in module autorag.nodes.passagefilter.pass_passage_filter)": [[16, "autorag.nodes.passagefilter.pass_passage_filter.pass_passage_filter", false]], "pass_query_expansion() (in module autorag.nodes.queryexpansion.pass_query_expansion)": [[20, "autorag.nodes.queryexpansion.pass_query_expansion.pass_query_expansion", false]], "pass_reranker() (in module autorag.nodes.passagereranker.pass_reranker)": [[17, "autorag.nodes.passagereranker.pass_reranker.pass_reranker", false]], "passage_augmenter_node() (in module autorag.nodes.passageaugmenter.base)": [[14, "autorag.nodes.passageaugmenter.base.passage_augmenter_node", false]], "passage_compressor_node() (in module autorag.nodes.passagecompressor.base)": [[15, "autorag.nodes.passagecompressor.base.passage_compressor_node", false]], "passage_filter_node() (in module autorag.nodes.passagefilter.base)": [[16, "autorag.nodes.passagefilter.base.passage_filter_node", false]], "passage_reranker_node() (in module autorag.nodes.passagereranker.base)": [[17, "autorag.nodes.passagereranker.base.passage_reranker_node", false]], "percentile_cutoff() (in module autorag.nodes.passagefilter.percentile_cutoff)": [[16, "autorag.nodes.passagefilter.percentile_cutoff.percentile_cutoff", false]], "prev_next_augmenter() (in module autorag.nodes.passageaugmenter.prev_next_augmenter)": [[14, "autorag.nodes.passageaugmenter.prev_next_augmenter.prev_next_augmenter", false]], "prev_next_augmenter_pure() (in module autorag.nodes.passageaugmenter.prev_next_augmenter)": [[14, "autorag.nodes.passageaugmenter.prev_next_augmenter.prev_next_augmenter_pure", false]], "process_batch() (in module autorag.utils.util)": [[23, "autorag.utils.util.process_batch", false]], "prompt_maker_node() (in module autorag.nodes.promptmaker.base)": [[19, "autorag.nodes.promptmaker.base.prompt_maker_node", false]], "qa (class in autorag.data.beta.schema)": [[2, "autorag.data.beta.schema.QA", false], [5, "autorag.data.beta.schema.QA", false]], "query (autorag.data.beta.query.openai_gen_query.response attribute)": [[4, "autorag.data.beta.query.openai_gen_query.Response.query", false]], "query (autorag.deploy.runnerinput attribute)": [[0, "autorag.deploy.RunnerInput.query", false]], "query_decompose() (in module autorag.nodes.queryexpansion.query_decompose)": [[20, "autorag.nodes.queryexpansion.query_decompose.query_decompose", false]], "query_expansion_node() (in module autorag.nodes.queryexpansion.base)": [[20, "autorag.nodes.queryexpansion.base.query_expansion_node", false]], "query_gen_openai_base() (in module autorag.data.beta.query.openai_gen_query)": [[4, "autorag.data.beta.query.openai_gen_query.query_gen_openai_base", false]], "random() (in module autorag)": [[0, "autorag.random", false]], "random_single_hop() (in module autorag.data.beta.sample)": [[2, "autorag.data.beta.sample.random_single_hop", false]], "range_single_hop() (in module autorag.data.beta.sample)": [[2, "autorag.data.beta.sample.range_single_hop", false]], "rankgpt() (in module autorag.nodes.passagereranker.rankgpt)": [[17, "autorag.nodes.passagereranker.rankgpt.rankgpt", false]], "rankgpt_rerank_prompt (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[17, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.rankgpt_rerank_prompt", false]], "raw (class in autorag.data.beta.schema)": [[2, "autorag.data.beta.schema.Raw", false], [5, "autorag.data.beta.schema.Raw", false]], "recency_filter() (in module autorag.nodes.passagefilter.recency)": [[16, "autorag.nodes.passagefilter.recency.recency_filter", false]], "reconstruct_list() (in module autorag.utils.util)": [[23, "autorag.utils.util.reconstruct_list", false]], "refine() (in module autorag.nodes.passagecompressor.refine)": [[15, "autorag.nodes.passagecompressor.refine.refine", false]], "replace_value_in_dict() (in module autorag.utils.util)": [[23, "autorag.utils.util.replace_value_in_dict", false]], "response (class in autorag.data.beta.generation_gt.openai_gen_gt)": [[3, "autorag.data.beta.generation_gt.openai_gen_gt.Response", false]], "response (class in autorag.data.beta.query.openai_gen_query)": [[4, "autorag.data.beta.query.openai_gen_query.Response", false]], "restart_trial() (autorag.evaluator.evaluator method)": [[0, "autorag.evaluator.Evaluator.restart_trial", false]], "result_column (autorag.deploy.runnerinput attribute)": [[0, "autorag.deploy.RunnerInput.result_column", false]], "result_to_dataframe() (in module autorag.utils.util)": [[23, "autorag.utils.util.result_to_dataframe", false]], "retrieval_f1() (in module autorag.evaluation.metric.retrieval)": [[11, "autorag.evaluation.metric.retrieval.retrieval_f1", false]], "retrieval_map() (in module autorag.evaluation.metric.retrieval)": [[11, "autorag.evaluation.metric.retrieval.retrieval_map", false]], "retrieval_mrr() (in module autorag.evaluation.metric.retrieval)": [[11, "autorag.evaluation.metric.retrieval.retrieval_mrr", false]], "retrieval_ndcg() (in module autorag.evaluation.metric.retrieval)": [[11, "autorag.evaluation.metric.retrieval.retrieval_ndcg", false]], "retrieval_node() (in module autorag.nodes.retrieval.base)": [[21, "autorag.nodes.retrieval.base.retrieval_node", false]], "retrieval_precision() (in module autorag.evaluation.metric.retrieval)": [[11, "autorag.evaluation.metric.retrieval.retrieval_precision", false]], "retrieval_recall() (in module autorag.evaluation.metric.retrieval)": [[11, "autorag.evaluation.metric.retrieval.retrieval_recall", false]], "retrieval_token_f1() (in module autorag.evaluation.metric.retrieval_contents)": [[11, "autorag.evaluation.metric.retrieval_contents.retrieval_token_f1", false]], "retrieval_token_precision() (in module autorag.evaluation.metric.retrieval_contents)": [[11, "autorag.evaluation.metric.retrieval_contents.retrieval_token_precision", false]], "retrieval_token_recall() (in module autorag.evaluation.metric.retrieval_contents)": [[11, "autorag.evaluation.metric.retrieval_contents.retrieval_token_recall", false]], "rouge() (in module autorag.evaluation.metric.generation)": [[11, "autorag.evaluation.metric.generation.rouge", false]], "rrf_calculate() (in module autorag.nodes.retrieval.hybrid_rrf)": [[21, "autorag.nodes.retrieval.hybrid_rrf.rrf_calculate", false]], "rrf_pure() (in module autorag.nodes.retrieval.hybrid_rrf)": [[21, "autorag.nodes.retrieval.hybrid_rrf.rrf_pure", false]], "run() (autorag.deploy.runner method)": [[0, "autorag.deploy.Runner.run", false]], "run() (autorag.schema.node.node method)": [[22, "autorag.schema.node.Node.run", false]], "run() (in module autorag.dashboard)": [[0, "autorag.dashboard.run", false]], "run_api_server() (autorag.deploy.runner method)": [[0, "autorag.deploy.Runner.run_api_server", false]], "run_generator_node() (in module autorag.nodes.generator.run)": [[13, "autorag.nodes.generator.run.run_generator_node", false]], "run_node (autorag.schema.node.node attribute)": [[22, "autorag.schema.node.Node.run_node", false]], "run_node_line() (in module autorag.node_line)": [[0, "autorag.node_line.run_node_line", false]], "run_passage_augmenter_node() (in module autorag.nodes.passageaugmenter.run)": [[14, "autorag.nodes.passageaugmenter.run.run_passage_augmenter_node", false]], "run_passage_compressor_node() (in module autorag.nodes.passagecompressor.run)": [[15, "autorag.nodes.passagecompressor.run.run_passage_compressor_node", false]], "run_passage_filter_node() (in module autorag.nodes.passagefilter.run)": [[16, "autorag.nodes.passagefilter.run.run_passage_filter_node", false]], "run_passage_reranker_node() (in module autorag.nodes.passagereranker.run)": [[17, "autorag.nodes.passagereranker.run.run_passage_reranker_node", false]], "run_prompt_maker_node() (in module autorag.nodes.promptmaker.run)": [[19, "autorag.nodes.promptmaker.run.run_prompt_maker_node", false]], "run_query_embedding_batch() (in module autorag.nodes.retrieval.vectordb)": [[21, "autorag.nodes.retrieval.vectordb.run_query_embedding_batch", false]], "run_query_expansion_node() (in module autorag.nodes.queryexpansion.run)": [[20, "autorag.nodes.queryexpansion.run.run_query_expansion_node", false]], "run_retrieval_node() (in module autorag.nodes.retrieval.run)": [[21, "autorag.nodes.retrieval.run.run_retrieval_node", false]], "run_web() (autorag.deploy.runner method)": [[0, "autorag.deploy.Runner.run_web", false]], "runner (class in autorag.deploy)": [[0, "autorag.deploy.Runner", false]], "runnerinput (class in autorag.deploy)": [[0, "autorag.deploy.RunnerInput", false]], "sample() (autorag.data.beta.schema.corpus method)": [[2, "autorag.data.beta.schema.Corpus.sample", false], [5, "autorag.data.beta.schema.Corpus.sample", false]], "save_parquet_safe() (in module autorag.utils.util)": [[23, "autorag.utils.util.save_parquet_safe", false]], "select_best() (in module autorag.strategy)": [[0, "autorag.strategy.select_best", false]], "select_best_average() (in module autorag.strategy)": [[0, "autorag.strategy.select_best_average", false]], "select_best_rr() (in module autorag.strategy)": [[0, "autorag.strategy.select_best_rr", false]], "select_bm25_tokenizer() (in module autorag.nodes.retrieval.bm25)": [[21, "autorag.nodes.retrieval.bm25.select_bm25_tokenizer", false]], "select_normalize_mean() (in module autorag.strategy)": [[0, "autorag.strategy.select_normalize_mean", false]], "select_top_k() (in module autorag.utils.util)": [[23, "autorag.utils.util.select_top_k", false]], "sem_score() (in module autorag.evaluation.metric.generation)": [[11, "autorag.evaluation.metric.generation.sem_score", false]], "sentence_transformer_reranker() (in module autorag.nodes.passagereranker.sentence_transformer)": [[17, "autorag.nodes.passagereranker.sentence_transformer.sentence_transformer_reranker", false]], "sentence_transformer_run_model() (in module autorag.nodes.passagereranker.sentence_transformer)": [[17, "autorag.nodes.passagereranker.sentence_transformer.sentence_transformer_run_model", false]], "set_initial_state() (in module autorag.web)": [[0, "autorag.web.set_initial_state", false]], "set_input_embeddings() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[18, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.set_input_embeddings", false]], "set_page_config() (in module autorag.web)": [[0, "autorag.web.set_page_config", false]], "set_page_header() (in module autorag.web)": [[0, "autorag.web.set_page_header", false]], "similarity_percentile_cutoff() (in module autorag.nodes.passagefilter.similarity_percentile_cutoff)": [[16, "autorag.nodes.passagefilter.similarity_percentile_cutoff.similarity_percentile_cutoff", false]], "similarity_percentile_cutoff_pure() (in module autorag.nodes.passagefilter.similarity_percentile_cutoff)": [[16, "autorag.nodes.passagefilter.similarity_percentile_cutoff.similarity_percentile_cutoff_pure", false]], "similarity_threshold_cutoff() (in module autorag.nodes.passagefilter.similarity_threshold_cutoff)": [[16, "autorag.nodes.passagefilter.similarity_threshold_cutoff.similarity_threshold_cutoff", false]], "similarity_threshold_cutoff_pure() (in module autorag.nodes.passagefilter.similarity_threshold_cutoff)": [[16, "autorag.nodes.passagefilter.similarity_threshold_cutoff.similarity_threshold_cutoff_pure", false]], "single_token_f1() (in module autorag.evaluation.metric.retrieval_contents)": [[11, "autorag.evaluation.metric.retrieval_contents.single_token_f1", false]], "slice_tensor() (in module autorag.nodes.passagereranker.colbert)": [[17, "autorag.nodes.passagereranker.colbert.slice_tensor", false]], "slice_tokenizer_result() (in module autorag.nodes.passagereranker.colbert)": [[17, "autorag.nodes.passagereranker.colbert.slice_tokenizer_result", false]], "sort_by_scores() (in module autorag.utils.util)": [[23, "autorag.utils.util.sort_by_scores", false]], "split_by_sentence_kiwi() (in module autorag.data)": [[1, "autorag.data.split_by_sentence_kiwi", false]], "split_dataframe() (in module autorag.utils.util)": [[23, "autorag.utils.util.split_dataframe", false]], "start_chunking() (autorag.chunker.chunker method)": [[0, "autorag.chunker.Chunker.start_chunking", false]], "start_trial() (autorag.evaluator.evaluator method)": [[0, "autorag.evaluator.Evaluator.start_trial", false]], "strategy (autorag.schema.node.node attribute)": [[22, "autorag.schema.node.Node.strategy", false]], "summary_df_to_yaml() (in module autorag.deploy)": [[0, "autorag.deploy.summary_df_to_yaml", false]], "tart() (in module autorag.nodes.passagereranker.tart.tart)": [[18, "autorag.nodes.passagereranker.tart.tart.tart", false]], "tart_run_model() (in module autorag.nodes.passagereranker.tart.tart)": [[18, "autorag.nodes.passagereranker.tart.tart.tart_run_model", false]], "threshold_cutoff() (in module autorag.nodes.passagefilter.threshold_cutoff)": [[16, "autorag.nodes.passagefilter.threshold_cutoff.threshold_cutoff", false]], "threshold_cutoff_pure() (in module autorag.nodes.passagefilter.threshold_cutoff)": [[16, "autorag.nodes.passagefilter.threshold_cutoff.threshold_cutoff_pure", false]], "time_reranker() (in module autorag.nodes.passagereranker.time_reranker)": [[17, "autorag.nodes.passagereranker.time_reranker.time_reranker", false]], "to_list() (in module autorag.utils.util)": [[23, "autorag.utils.util.to_list", false]], "to_parquet() (autorag.data.beta.schema.corpus method)": [[2, "autorag.data.beta.schema.Corpus.to_parquet", false], [5, "autorag.data.beta.schema.Corpus.to_parquet", false]], "to_parquet() (autorag.data.beta.schema.qa method)": [[2, "autorag.data.beta.schema.QA.to_parquet", false], [5, "autorag.data.beta.schema.QA.to_parquet", false]], "tokenize() (in module autorag.nodes.retrieval.bm25)": [[21, "autorag.nodes.retrieval.bm25.tokenize", false]], "tokenize_ko_kiwi() (in module autorag.nodes.retrieval.bm25)": [[21, "autorag.nodes.retrieval.bm25.tokenize_ko_kiwi", false]], "tokenize_ko_kkma() (in module autorag.nodes.retrieval.bm25)": [[21, "autorag.nodes.retrieval.bm25.tokenize_ko_kkma", false]], "tokenize_ko_okt() (in module autorag.nodes.retrieval.bm25)": [[21, "autorag.nodes.retrieval.bm25.tokenize_ko_okt", false]], "tokenize_porter_stemmer() (in module autorag.nodes.retrieval.bm25)": [[21, "autorag.nodes.retrieval.bm25.tokenize_porter_stemmer", false]], "tokenize_space() (in module autorag.nodes.retrieval.bm25)": [[21, "autorag.nodes.retrieval.bm25.tokenize_space", false]], "top_n (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[17, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.top_n", false]], "tree_summarize() (in module autorag.nodes.passagecompressor.tree_summarize)": [[15, "autorag.nodes.passagecompressor.tree_summarize.tree_summarize", false]], "truncate_by_token() (in module autorag.nodes.generator.openai_llm)": [[13, "autorag.nodes.generator.openai_llm.truncate_by_token", false]], "two_hop_incremental() (in module autorag.data.beta.query.llama_gen_query)": [[4, "autorag.data.beta.query.llama_gen_query.two_hop_incremental", false]], "two_hop_incremental() (in module autorag.data.beta.query.openai_gen_query)": [[4, "autorag.data.beta.query.openai_gen_query.two_hop_incremental", false]], "two_hop_question (autorag.data.beta.query.openai_gen_query.twohopincrementalresponse attribute)": [[4, "autorag.data.beta.query.openai_gen_query.TwoHopIncrementalResponse.two_hop_question", false]], "twohopincrementalresponse (class in autorag.data.beta.query.openai_gen_query)": [[4, "autorag.data.beta.query.openai_gen_query.TwoHopIncrementalResponse", false]], "update_corpus() (autorag.data.beta.schema.qa method)": [[2, "autorag.data.beta.schema.QA.update_corpus", false], [5, "autorag.data.beta.schema.QA.update_corpus", false]], "upr() (in module autorag.nodes.passagereranker.upr)": [[17, "autorag.nodes.passagereranker.upr.upr", false]], "uprscorer (class in autorag.nodes.passagereranker.upr)": [[17, "autorag.nodes.passagereranker.upr.UPRScorer", false]], "validate() (autorag.validator.validator method)": [[0, "autorag.validator.Validator.validate", false]], "validate_corpus_dataset() (in module autorag.utils.preprocess)": [[23, "autorag.utils.preprocess.validate_corpus_dataset", false]], "validate_llama_index_prompt() (in module autorag.data.qacreation.llama_index)": [[8, "autorag.data.qacreation.llama_index.validate_llama_index_prompt", false]], "validate_qa_dataset() (in module autorag.utils.preprocess)": [[23, "autorag.utils.preprocess.validate_qa_dataset", false]], "validate_qa_from_corpus_dataset() (in module autorag.utils.preprocess)": [[23, "autorag.utils.preprocess.validate_qa_from_corpus_dataset", false]], "validate_strategy_inputs() (in module autorag.strategy)": [[0, "autorag.strategy.validate_strategy_inputs", false]], "validator (class in autorag.validator)": [[0, "autorag.validator.Validator", false]], "vectordb() (in module autorag.nodes.retrieval.vectordb)": [[21, "autorag.nodes.retrieval.vectordb.vectordb", false]], "vectordb_ingest() (in module autorag.nodes.retrieval.vectordb)": [[21, "autorag.nodes.retrieval.vectordb.vectordb_ingest", false]], "vectordb_pure() (in module autorag.nodes.retrieval.vectordb)": [[21, "autorag.nodes.retrieval.vectordb.vectordb_pure", false]], "verbose (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[17, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.verbose", false]], "vllm() (in module autorag.nodes.generator.vllm)": [[13, "autorag.nodes.generator.vllm.vllm", false]], "window_replacement() (in module autorag.nodes.promptmaker.window_replacement)": [[19, "autorag.nodes.promptmaker.window_replacement.window_replacement", false]], "yaml_to_markdown() (in module autorag.dashboard)": [[0, "autorag.dashboard.yaml_to_markdown", false]]}, "objects": {"": [[0, 0, 0, "-", "autorag"]], "autorag": [[0, 1, 1, "", "LazyInit"], [0, 1, 1, "", "MockEmbeddingRandom"], [0, 0, 0, "-", "chunker"], [0, 0, 0, "-", "cli"], [0, 0, 0, "-", "dashboard"], [1, 0, 0, "-", "data"], [0, 0, 0, "-", "deploy"], [10, 0, 0, "-", "evaluation"], [0, 0, 0, "-", "evaluator"], [0, 4, 1, "", "handle_exception"], [0, 0, 0, "-", "node_line"], [12, 0, 0, "-", "nodes"], [0, 4, 1, "", "random"], [22, 0, 0, "-", "schema"], [0, 0, 0, "-", "strategy"], [0, 0, 0, "-", "support"], [23, 0, 0, "-", "utils"], [0, 0, 0, "-", "validator"], [0, 0, 0, "-", "web"]], "autorag.MockEmbeddingRandom": [[0, 2, 1, "", "embed_dim"], [0, 2, 1, "", "model_computed_fields"], [0, 2, 1, "", "model_config"], [0, 2, 1, "", "model_fields"]], "autorag.chunker": [[0, 1, 1, "", "Chunker"]], "autorag.chunker.Chunker": [[0, 3, 1, "", "from_parquet"], [0, 3, 1, "", "start_chunking"]], "autorag.dashboard": [[0, 4, 1, "", "find_node_dir"], [0, 4, 1, "", "get_metric_values"], [0, 4, 1, "", "make_trial_summary_md"], [0, 4, 1, "", "node_view"], [0, 4, 1, "", "run"], [0, 4, 1, "", "yaml_to_markdown"]], "autorag.data": [[2, 0, 0, "-", "beta"], [6, 0, 0, "-", "corpus"], [8, 0, 0, "-", "qacreation"], [1, 4, 1, "", "split_by_sentence_kiwi"], [9, 0, 0, "-", "utils"]], "autorag.data.beta": [[3, 0, 0, "-", "generation_gt"], [4, 0, 0, "-", "query"], [2, 0, 0, "-", "sample"], [5, 0, 0, "-", "schema"]], "autorag.data.beta.generation_gt": [[3, 0, 0, "-", "base"], [3, 0, 0, "-", "llama_index_gen_gt"], [3, 0, 0, "-", "openai_gen_gt"], [3, 0, 0, "-", "prompt"]], "autorag.data.beta.generation_gt.base": [[3, 4, 1, "", "add_gen_gt"]], "autorag.data.beta.generation_gt.llama_index_gen_gt": [[3, 4, 1, "", "make_basic_gen_gt"], [3, 4, 1, "", "make_concise_gen_gt"], [3, 4, 1, "", "make_gen_gt_llama_index"]], "autorag.data.beta.generation_gt.openai_gen_gt": [[3, 1, 1, "", "Response"], [3, 4, 1, "", "make_basic_gen_gt"], [3, 4, 1, "", "make_concise_gen_gt"], [3, 4, 1, "", "make_gen_gt_openai"]], "autorag.data.beta.generation_gt.openai_gen_gt.Response": [[3, 2, 1, "", "answer"], [3, 2, 1, "", "model_computed_fields"], [3, 2, 1, "", "model_config"], [3, 2, 1, "", "model_fields"]], "autorag.data.beta.query": [[4, 0, 0, "-", "llama_gen_query"], [4, 0, 0, "-", "openai_gen_query"], [4, 0, 0, "-", "prompt"]], "autorag.data.beta.query.llama_gen_query": [[4, 4, 1, "", "concept_completion_query_gen"], [4, 4, 1, "", "factoid_query_gen"], [4, 4, 1, "", "llama_index_generate_base"], [4, 4, 1, "", "two_hop_incremental"]], "autorag.data.beta.query.openai_gen_query": [[4, 1, 1, "", "Response"], [4, 1, 1, "", "TwoHopIncrementalResponse"], [4, 4, 1, "", "concept_completion_query_gen"], [4, 4, 1, "", "factoid_query_gen"], [4, 4, 1, "", "query_gen_openai_base"], [4, 4, 1, "", "two_hop_incremental"]], "autorag.data.beta.query.openai_gen_query.Response": [[4, 2, 1, "", "model_computed_fields"], [4, 2, 1, "", "model_config"], [4, 2, 1, "", "model_fields"], [4, 2, 1, "", "query"]], "autorag.data.beta.query.openai_gen_query.TwoHopIncrementalResponse": [[4, 2, 1, "", "answer"], [4, 2, 1, "", "model_computed_fields"], [4, 2, 1, "", "model_config"], [4, 2, 1, "", "model_fields"], [4, 2, 1, "", "one_hop_question"], [4, 2, 1, "", "two_hop_question"]], "autorag.data.beta.sample": [[2, 4, 1, "", "random_single_hop"], [2, 4, 1, "", "range_single_hop"]], "autorag.data.beta.schema": [[5, 1, 1, "", "Corpus"], [5, 1, 1, "", "QA"], [5, 1, 1, "", "Raw"]], "autorag.data.beta.schema.Corpus": [[5, 3, 1, "", "batch_apply"], [5, 5, 1, "", "linked_raw"], [5, 3, 1, "", "map"], [5, 3, 1, "", "sample"], [5, 3, 1, "", "to_parquet"]], "autorag.data.beta.schema.QA": [[5, 3, 1, "", "batch_apply"], [5, 3, 1, "", "batch_filter"], [5, 3, 1, "", "filter"], [5, 5, 1, "", "linked_corpus"], [5, 3, 1, "", "make_retrieval_gt_contents"], [5, 3, 1, "", "map"], [5, 3, 1, "", "to_parquet"], [5, 3, 1, "", "update_corpus"]], "autorag.data.beta.schema.Raw": [[5, 3, 1, "", "batch_apply"], [5, 3, 1, "", "chunk"], [5, 3, 1, "", "flatmap"], [5, 3, 1, "", "map"]], "autorag.data.corpus": [[6, 0, 0, "-", "langchain"], [6, 0, 0, "-", "llama_index"]], "autorag.data.corpus.langchain": [[6, 4, 1, "", "langchain_documents_to_parquet"]], "autorag.data.corpus.llama_index": [[6, 4, 1, "", "llama_documents_to_parquet"], [6, 4, 1, "", "llama_text_node_to_parquet"]], "autorag.data.qacreation": [[8, 0, 0, "-", "base"], [8, 0, 0, "-", "llama_index"], [8, 0, 0, "-", "ragas"], [8, 0, 0, "-", "simple"]], "autorag.data.qacreation.base": [[8, 4, 1, "", "make_qa_with_existing_qa"], [8, 4, 1, "", "make_single_content_qa"]], "autorag.data.qacreation.llama_index": [[8, 4, 1, "", "async_qa_gen_llama_index"], [8, 4, 1, "", "distribute_list_by_ratio"], [8, 4, 1, "", "generate_answers"], [8, 4, 1, "", "generate_basic_answer"], [8, 4, 1, "", "generate_qa_llama_index"], [8, 4, 1, "", "generate_qa_llama_index_by_ratio"], [8, 4, 1, "", "parse_output"], [8, 4, 1, "", "validate_llama_index_prompt"]], "autorag.data.qacreation.ragas": [[8, 4, 1, "", "generate_qa_ragas"]], "autorag.data.qacreation.simple": [[8, 4, 1, "", "generate_qa_row"], [8, 4, 1, "", "generate_simple_qa_dataset"]], "autorag.data.utils": [[9, 0, 0, "-", "util"]], "autorag.data.utils.util": [[9, 4, 1, "", "add_essential_metadata"], [9, 4, 1, "", "add_essential_metadata_llama_text_node"], [9, 4, 1, "", "corpus_df_to_langchain_documents"], [9, 4, 1, "", "get_file_metadata"], [9, 4, 1, "", "get_param_combinations"], [9, 4, 1, "", "get_start_end_idx"], [9, 4, 1, "", "load_yaml"]], "autorag.deploy": [[0, 1, 1, "", "Runner"], [0, 1, 1, "", "RunnerInput"], [0, 4, 1, "", "extract_best_config"], [0, 4, 1, "", "extract_node_line_names"], [0, 4, 1, "", "extract_node_strategy"], [0, 4, 1, "", "summary_df_to_yaml"]], "autorag.deploy.Runner": [[0, 3, 1, "", "from_trial_folder"], [0, 3, 1, "", "from_yaml"], [0, 3, 1, "", "run"], [0, 3, 1, "", "run_api_server"], [0, 3, 1, "", "run_web"]], "autorag.deploy.RunnerInput": [[0, 2, 1, "", "model_computed_fields"], [0, 2, 1, "", "model_config"], [0, 2, 1, "", "model_fields"], [0, 2, 1, "", "query"], [0, 2, 1, "", "result_column"]], "autorag.evaluation": [[10, 0, 0, "-", "generation"], [11, 0, 0, "-", "metric"], [10, 0, 0, "-", "retrieval"], [10, 0, 0, "-", "retrieval_contents"], [10, 0, 0, "-", "util"]], "autorag.evaluation.generation": [[10, 4, 1, "", "evaluate_generation"]], "autorag.evaluation.metric": [[11, 0, 0, "-", "generation"], [11, 0, 0, "-", "retrieval"], [11, 0, 0, "-", "retrieval_contents"], [11, 0, 0, "-", "util"]], "autorag.evaluation.metric.generation": [[11, 4, 1, "", "async_g_eval"], [11, 4, 1, "", "bert_score"], [11, 4, 1, "", "bleu"], [11, 4, 1, "", "g_eval"], [11, 4, 1, "", "huggingface_evaluate"], [11, 4, 1, "", "meteor"], [11, 4, 1, "", "rouge"], [11, 4, 1, "", "sem_score"]], "autorag.evaluation.metric.retrieval": [[11, 4, 1, "", "retrieval_f1"], [11, 4, 1, "", "retrieval_map"], [11, 4, 1, "", "retrieval_mrr"], [11, 4, 1, "", "retrieval_ndcg"], [11, 4, 1, "", "retrieval_precision"], [11, 4, 1, "", "retrieval_recall"]], "autorag.evaluation.metric.retrieval_contents": [[11, 4, 1, "", "retrieval_token_f1"], [11, 4, 1, "", "retrieval_token_precision"], [11, 4, 1, "", "retrieval_token_recall"], [11, 4, 1, "", "single_token_f1"]], "autorag.evaluation.metric.util": [[11, 4, 1, "", "autorag_metric"], [11, 4, 1, "", "autorag_metric_loop"], [11, 4, 1, "", "calculate_cosine_similarity"]], "autorag.evaluation.retrieval": [[10, 4, 1, "", "evaluate_retrieval"]], "autorag.evaluation.retrieval_contents": [[10, 4, 1, "", "evaluate_retrieval_contents"]], "autorag.evaluation.util": [[10, 4, 1, "", "cast_embedding_model"], [10, 4, 1, "", "cast_metrics"]], "autorag.evaluator": [[0, 1, 1, "", "Evaluator"]], "autorag.evaluator.Evaluator": [[0, 3, 1, "", "restart_trial"], [0, 3, 1, "", "start_trial"]], "autorag.node_line": [[0, 4, 1, "", "make_node_lines"], [0, 4, 1, "", "run_node_line"]], "autorag.nodes": [[13, 0, 0, "-", "generator"], [14, 0, 0, "-", "passageaugmenter"], [15, 0, 0, "-", "passagecompressor"], [16, 0, 0, "-", "passagefilter"], [17, 0, 0, "-", "passagereranker"], [19, 0, 0, "-", "promptmaker"], [20, 0, 0, "-", "queryexpansion"], [21, 0, 0, "-", "retrieval"]], "autorag.nodes.generator": [[13, 0, 0, "-", "base"], [13, 0, 0, "-", "llama_index_llm"], [13, 0, 0, "-", "openai_llm"], [13, 0, 0, "-", "run"], [13, 0, 0, "-", "vllm"]], "autorag.nodes.generator.base": [[13, 4, 1, "", "generator_node"]], "autorag.nodes.generator.llama_index_llm": [[13, 4, 1, "", "llama_index_llm"]], "autorag.nodes.generator.openai_llm": [[13, 4, 1, "", "get_result"], [13, 4, 1, "", "openai_llm"], [13, 4, 1, "", "truncate_by_token"]], "autorag.nodes.generator.run": [[13, 4, 1, "", "evaluate_generator_node"], [13, 4, 1, "", "run_generator_node"]], "autorag.nodes.generator.vllm": [[13, 4, 1, "", "destroy_vllm_instance"], [13, 4, 1, "", "make_vllm_instance"], [13, 4, 1, "", "vllm"]], "autorag.nodes.passageaugmenter": [[14, 0, 0, "-", "base"], [14, 0, 0, "-", "pass_passage_augmenter"], [14, 0, 0, "-", "prev_next_augmenter"], [14, 0, 0, "-", "run"]], "autorag.nodes.passageaugmenter.base": [[14, 4, 1, "", "passage_augmenter_node"]], "autorag.nodes.passageaugmenter.pass_passage_augmenter": [[14, 4, 1, "", "pass_passage_augmenter"]], "autorag.nodes.passageaugmenter.prev_next_augmenter": [[14, 4, 1, "", "prev_next_augmenter"], [14, 4, 1, "", "prev_next_augmenter_pure"]], "autorag.nodes.passageaugmenter.run": [[14, 4, 1, "", "run_passage_augmenter_node"]], "autorag.nodes.passagecompressor": [[15, 0, 0, "-", "base"], [15, 0, 0, "-", "longllmlingua"], [15, 0, 0, "-", "pass_compressor"], [15, 0, 0, "-", "refine"], [15, 0, 0, "-", "run"], [15, 0, 0, "-", "tree_summarize"]], "autorag.nodes.passagecompressor.base": [[15, 4, 1, "", "make_llm"], [15, 4, 1, "", "passage_compressor_node"]], "autorag.nodes.passagecompressor.longllmlingua": [[15, 4, 1, "", "llmlingua_pure"], [15, 4, 1, "", "longllmlingua"]], "autorag.nodes.passagecompressor.pass_compressor": [[15, 4, 1, "", "pass_compressor"]], "autorag.nodes.passagecompressor.refine": [[15, 4, 1, "", "refine"]], "autorag.nodes.passagecompressor.run": [[15, 4, 1, "", "evaluate_passage_compressor_node"], [15, 4, 1, "", "run_passage_compressor_node"]], "autorag.nodes.passagecompressor.tree_summarize": [[15, 4, 1, "", "tree_summarize"]], "autorag.nodes.passagefilter": [[16, 0, 0, "-", "base"], [16, 0, 0, "-", "pass_passage_filter"], [16, 0, 0, "-", "percentile_cutoff"], [16, 0, 0, "-", "recency"], [16, 0, 0, "-", "run"], [16, 0, 0, "-", "similarity_percentile_cutoff"], [16, 0, 0, "-", "similarity_threshold_cutoff"], [16, 0, 0, "-", "threshold_cutoff"]], "autorag.nodes.passagefilter.base": [[16, 4, 1, "", "passage_filter_node"]], "autorag.nodes.passagefilter.pass_passage_filter": [[16, 4, 1, "", "pass_passage_filter"]], "autorag.nodes.passagefilter.percentile_cutoff": [[16, 4, 1, "", "percentile_cutoff"]], "autorag.nodes.passagefilter.recency": [[16, 4, 1, "", "recency_filter"]], "autorag.nodes.passagefilter.run": [[16, 4, 1, "", "run_passage_filter_node"]], "autorag.nodes.passagefilter.similarity_percentile_cutoff": [[16, 4, 1, "", "similarity_percentile_cutoff"], [16, 4, 1, "", "similarity_percentile_cutoff_pure"]], "autorag.nodes.passagefilter.similarity_threshold_cutoff": [[16, 4, 1, "", "similarity_threshold_cutoff"], [16, 4, 1, "", "similarity_threshold_cutoff_pure"]], "autorag.nodes.passagefilter.threshold_cutoff": [[16, 4, 1, "", "threshold_cutoff"], [16, 4, 1, "", "threshold_cutoff_pure"]], "autorag.nodes.passagereranker": [[17, 0, 0, "-", "base"], [17, 0, 0, "-", "cohere"], [17, 0, 0, "-", "colbert"], [17, 0, 0, "-", "flag_embedding"], [17, 0, 0, "-", "flag_embedding_llm"], [17, 0, 0, "-", "jina"], [17, 0, 0, "-", "koreranker"], [17, 0, 0, "-", "monot5"], [17, 0, 0, "-", "pass_reranker"], [17, 0, 0, "-", "rankgpt"], [17, 0, 0, "-", "run"], [17, 0, 0, "-", "sentence_transformer"], [18, 0, 0, "-", "tart"], [17, 0, 0, "-", "time_reranker"], [17, 0, 0, "-", "upr"]], "autorag.nodes.passagereranker.base": [[17, 4, 1, "", "passage_reranker_node"]], "autorag.nodes.passagereranker.cohere": [[17, 4, 1, "", "cohere_rerank_pure"], [17, 4, 1, "", "cohere_reranker"]], "autorag.nodes.passagereranker.colbert": [[17, 4, 1, "", "colbert_reranker"], [17, 4, 1, "", "get_colbert_embedding_batch"], [17, 4, 1, "", "get_colbert_score"], [17, 4, 1, "", "slice_tensor"], [17, 4, 1, "", "slice_tokenizer_result"]], "autorag.nodes.passagereranker.flag_embedding": [[17, 4, 1, "", "flag_embedding_reranker"], [17, 4, 1, "", "flag_embedding_run_model"]], "autorag.nodes.passagereranker.flag_embedding_llm": [[17, 4, 1, "", "flag_embedding_llm_reranker"]], "autorag.nodes.passagereranker.jina": [[17, 4, 1, "", "jina_reranker"], [17, 4, 1, "", "jina_reranker_pure"]], "autorag.nodes.passagereranker.koreranker": [[17, 4, 1, "", "exp_normalize"], [17, 4, 1, "", "koreranker"], [17, 4, 1, "", "koreranker_run_model"]], "autorag.nodes.passagereranker.monot5": [[17, 4, 1, "", "monot5"], [17, 4, 1, "", "monot5_run_model"]], "autorag.nodes.passagereranker.pass_reranker": [[17, 4, 1, "", "pass_reranker"]], "autorag.nodes.passagereranker.rankgpt": [[17, 1, 1, "", "AsyncRankGPTRerank"], [17, 4, 1, "", "rankgpt"]], "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank": [[17, 3, 1, "", "async_postprocess_nodes"], [17, 3, 1, "", "async_run_llm"], [17, 2, 1, "", "llm"], [17, 2, 1, "", "model_computed_fields"], [17, 2, 1, "", "model_config"], [17, 2, 1, "", "model_fields"], [17, 2, 1, "", "rankgpt_rerank_prompt"], [17, 2, 1, "", "top_n"], [17, 2, 1, "", "verbose"]], "autorag.nodes.passagereranker.run": [[17, 4, 1, "", "run_passage_reranker_node"]], "autorag.nodes.passagereranker.sentence_transformer": [[17, 4, 1, "", "sentence_transformer_reranker"], [17, 4, 1, "", "sentence_transformer_run_model"]], "autorag.nodes.passagereranker.tart": [[18, 0, 0, "-", "modeling_enc_t5"], [18, 0, 0, "-", "tart"], [18, 0, 0, "-", "tokenization_enc_t5"]], "autorag.nodes.passagereranker.tart.modeling_enc_t5": [[18, 1, 1, "", "EncT5ForSequenceClassification"]], "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification": [[18, 3, 1, "", "deparallelize"], [18, 3, 1, "", "forward"], [18, 3, 1, "", "get_encoder"], [18, 3, 1, "", "get_input_embeddings"], [18, 3, 1, "", "parallelize"], [18, 3, 1, "", "set_input_embeddings"]], "autorag.nodes.passagereranker.tart.tart": [[18, 4, 1, "", "tart"], [18, 4, 1, "", "tart_run_model"]], "autorag.nodes.passagereranker.tart.tokenization_enc_t5": [[18, 1, 1, "", "EncT5Tokenizer"]], "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer": [[18, 3, 1, "", "build_inputs_with_special_tokens"], [18, 3, 1, "", "create_token_type_ids_from_sequences"], [18, 3, 1, "", "get_special_tokens_mask"]], "autorag.nodes.passagereranker.time_reranker": [[17, 4, 1, "", "time_reranker"]], "autorag.nodes.passagereranker.upr": [[17, 1, 1, "", "UPRScorer"], [17, 4, 1, "", "upr"]], "autorag.nodes.passagereranker.upr.UPRScorer": [[17, 3, 1, "", "compute"]], "autorag.nodes.promptmaker": [[19, 0, 0, "-", "base"], [19, 0, 0, "-", "fstring"], [19, 0, 0, "-", "long_context_reorder"], [19, 0, 0, "-", "run"], [19, 0, 0, "-", "window_replacement"]], "autorag.nodes.promptmaker.base": [[19, 4, 1, "", "prompt_maker_node"]], "autorag.nodes.promptmaker.fstring": [[19, 4, 1, "", "fstring"]], "autorag.nodes.promptmaker.long_context_reorder": [[19, 4, 1, "", "long_context_reorder"]], "autorag.nodes.promptmaker.run": [[19, 4, 1, "", "evaluate_generator_result"], [19, 4, 1, "", "evaluate_one_prompt_maker_node"], [19, 4, 1, "", "make_generator_callable_params"], [19, 4, 1, "", "run_prompt_maker_node"]], "autorag.nodes.promptmaker.window_replacement": [[19, 4, 1, "", "window_replacement"]], "autorag.nodes.queryexpansion": [[20, 0, 0, "-", "base"], [20, 0, 0, "-", "hyde"], [20, 0, 0, "-", "multi_query_expansion"], [20, 0, 0, "-", "pass_query_expansion"], [20, 0, 0, "-", "query_decompose"], [20, 0, 0, "-", "run"]], "autorag.nodes.queryexpansion.base": [[20, 4, 1, "", "make_generator_callable_param"], [20, 4, 1, "", "query_expansion_node"]], "autorag.nodes.queryexpansion.hyde": [[20, 4, 1, "", "hyde"]], "autorag.nodes.queryexpansion.multi_query_expansion": [[20, 4, 1, "", "get_multi_query_expansion"], [20, 4, 1, "", "multi_query_expansion"]], "autorag.nodes.queryexpansion.pass_query_expansion": [[20, 4, 1, "", "pass_query_expansion"]], "autorag.nodes.queryexpansion.query_decompose": [[20, 4, 1, "", "get_query_decompose"], [20, 4, 1, "", "query_decompose"]], "autorag.nodes.queryexpansion.run": [[20, 4, 1, "", "evaluate_one_query_expansion_node"], [20, 4, 1, "", "make_retrieval_callable_params"], [20, 4, 1, "", "run_query_expansion_node"]], "autorag.nodes.retrieval": [[21, 0, 0, "-", "base"], [21, 0, 0, "-", "bm25"], [21, 0, 0, "-", "hybrid_cc"], [21, 0, 0, "-", "hybrid_rrf"], [21, 0, 0, "-", "run"], [21, 0, 0, "-", "vectordb"]], "autorag.nodes.retrieval.base": [[21, 4, 1, "", "cast_queries"], [21, 4, 1, "", "evenly_distribute_passages"], [21, 4, 1, "", "get_bm25_pkl_name"], [21, 4, 1, "", "load_bm25_corpus"], [21, 4, 1, "", "load_chroma_collection"], [21, 4, 1, "", "retrieval_node"]], "autorag.nodes.retrieval.bm25": [[21, 4, 1, "", "bm25"], [21, 4, 1, "", "bm25_ingest"], [21, 4, 1, "", "bm25_pure"], [21, 4, 1, "", "get_bm25_scores"], [21, 4, 1, "", "select_bm25_tokenizer"], [21, 4, 1, "", "tokenize"], [21, 4, 1, "", "tokenize_ko_kiwi"], [21, 4, 1, "", "tokenize_ko_kkma"], [21, 4, 1, "", "tokenize_ko_okt"], [21, 4, 1, "", "tokenize_porter_stemmer"], [21, 4, 1, "", "tokenize_space"]], "autorag.nodes.retrieval.hybrid_cc": [[21, 4, 1, "", "fuse_per_query"], [21, 4, 1, "", "hybrid_cc"], [21, 4, 1, "", "normalize_dbsf"], [21, 4, 1, "", "normalize_mm"], [21, 4, 1, "", "normalize_tmm"], [21, 4, 1, "", "normalize_z"]], "autorag.nodes.retrieval.hybrid_rrf": [[21, 4, 1, "", "hybrid_rrf"], [21, 4, 1, "", "rrf_calculate"], [21, 4, 1, "", "rrf_pure"]], "autorag.nodes.retrieval.run": [[21, 4, 1, "", "edit_summary_df_params"], [21, 4, 1, "", "evaluate_retrieval_node"], [21, 4, 1, "", "find_unique_elems"], [21, 4, 1, "", "get_hybrid_execution_times"], [21, 4, 1, "", "get_ids_and_scores"], [21, 4, 1, "", "get_scores_by_ids"], [21, 4, 1, "", "optimize_hybrid"], [21, 4, 1, "", "run_retrieval_node"]], "autorag.nodes.retrieval.vectordb": [[21, 4, 1, "", "get_id_scores"], [21, 4, 1, "", "run_query_embedding_batch"], [21, 4, 1, "", "vectordb"], [21, 4, 1, "", "vectordb_ingest"], [21, 4, 1, "", "vectordb_pure"]], "autorag.schema": [[22, 0, 0, "-", "module"], [22, 0, 0, "-", "node"]], "autorag.schema.module": [[22, 1, 1, "", "Module"]], "autorag.schema.module.Module": [[22, 3, 1, "", "from_dict"], [22, 2, 1, "", "module"], [22, 2, 1, "", "module_param"], [22, 2, 1, "", "module_type"]], "autorag.schema.node": [[22, 1, 1, "", "Node"], [22, 4, 1, "", "extract_values"], [22, 4, 1, "", "extract_values_from_nodes"], [22, 4, 1, "", "module_type_exists"]], "autorag.schema.node.Node": [[22, 3, 1, "", "from_dict"], [22, 3, 1, "", "get_param_combinations"], [22, 2, 1, "", "modules"], [22, 2, 1, "", "node_params"], [22, 2, 1, "", "node_type"], [22, 3, 1, "", "run"], [22, 2, 1, "", "run_node"], [22, 2, 1, "", "strategy"]], "autorag.strategy": [[0, 4, 1, "", "avoid_empty_result"], [0, 4, 1, "", "filter_by_threshold"], [0, 4, 1, "", "measure_speed"], [0, 4, 1, "", "select_best"], [0, 4, 1, "", "select_best_average"], [0, 4, 1, "", "select_best_rr"], [0, 4, 1, "", "select_normalize_mean"], [0, 4, 1, "", "validate_strategy_inputs"]], "autorag.support": [[0, 4, 1, "", "dynamically_find_function"], [0, 4, 1, "", "get_support_modules"], [0, 4, 1, "", "get_support_nodes"]], "autorag.utils": [[23, 0, 0, "-", "preprocess"], [23, 0, 0, "-", "util"]], "autorag.utils.preprocess": [[23, 4, 1, "", "cast_corpus_dataset"], [23, 4, 1, "", "cast_qa_dataset"], [23, 4, 1, "", "validate_corpus_dataset"], [23, 4, 1, "", "validate_qa_dataset"], [23, 4, 1, "", "validate_qa_from_corpus_dataset"]], "autorag.utils.util": [[23, 4, 1, "", "convert_datetime_string"], [23, 4, 1, "", "convert_env_in_dict"], [23, 4, 1, "", "convert_inputs_to_list"], [23, 4, 1, "", "convert_string_to_tuple_in_dict"], [23, 4, 1, "", "dict_to_markdown"], [23, 4, 1, "", "dict_to_markdown_table"], [23, 4, 1, "", "embedding_query_content"], [23, 4, 1, "", "explode"], [23, 4, 1, "", "fetch_contents"], [23, 4, 1, "", "fetch_one_content"], [23, 4, 1, "", "filter_dict_keys"], [23, 4, 1, "", "find_node_summary_files"], [23, 4, 1, "", "find_trial_dir"], [23, 4, 1, "", "flatten_apply"], [23, 4, 1, "", "get_best_row"], [23, 4, 1, "", "get_event_loop"], [23, 4, 1, "", "load_summary_file"], [23, 4, 1, "", "make_batch"], [23, 4, 1, "", "make_combinations"], [23, 4, 1, "", "normalize_string"], [23, 4, 1, "", "normalize_unicode"], [23, 4, 1, "", "openai_truncate_by_token"], [23, 4, 1, "", "process_batch"], [23, 4, 1, "", "reconstruct_list"], [23, 4, 1, "", "replace_value_in_dict"], [23, 4, 1, "", "result_to_dataframe"], [23, 4, 1, "", "save_parquet_safe"], [23, 4, 1, "", "select_top_k"], [23, 4, 1, "", "sort_by_scores"], [23, 4, 1, "", "split_dataframe"], [23, 4, 1, "", "to_list"]], "autorag.validator": [[0, 1, 1, "", "Validator"]], "autorag.validator.Validator": [[0, 3, 1, "", "validate"]], "autorag.web": [[0, 4, 1, "", "chat_box"], [0, 4, 1, "", "get_runner"], [0, 4, 1, "", "set_initial_state"], [0, 4, 1, "", "set_page_config"], [0, 4, 1, "", "set_page_header"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:property"}, "terms": {"": [0, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 39, 41, 44, 46, 47, 49, 50, 51, 52, 58, 60, 62, 64, 65, 66, 79, 80, 81, 82, 83, 84, 85, 86, 91, 95, 96, 97, 100], "0": [0, 8, 11, 17, 18, 21, 25, 32, 40, 41, 42, 43, 44, 49, 50, 51, 52, 53, 61, 62, 64, 65, 66, 67, 68, 75, 87, 89, 91, 94, 95, 96, 99, 100], "002": 49, "01": 63, "0125": 11, "03172": 19, "04": 52, "06": [3, 4, 37], "07": [3, 37], "08": [3, 4, 37], "09": 52, "1": [0, 8, 11, 13, 14, 16, 18, 20, 21, 23, 28, 39, 41, 50, 51, 53, 56, 61, 86, 89, 91, 94, 95], "10": [0, 49, 50, 58, 74, 82, 87, 90, 91, 93, 96, 97], "100": [18, 99], "1000": 82, "100k": 73, "101": 89, "1024": [25, 27, 38], "10496": 20, "10k": [17, 73], "10x": 53, "11": 99, "1106": [50, 51, 82, 85, 86, 95, 99], "125m": 53, "128": [11, 16, 21, 23, 36, 38, 41], "13a": 11, "13b": 73, "16": [13, 15, 17, 51, 53, 59, 60, 71, 75], "16k": [17, 50, 51, 52, 58, 59, 60, 75, 82, 85, 86, 95, 99], "17": 48, "18": [3, 37], "1d": 39, "2": [8, 11, 15, 17, 20, 21, 28, 39, 41, 49, 53, 57, 76, 86, 87, 88, 89, 96], "2015": 63, "2022": 37, "2024": [3, 4, 37, 52], "2048": 0, "2212": 20, "2307": 19, "24": [25, 27, 38], "25": 40, "2d": [21, 39], "3": [8, 11, 13, 17, 19, 20, 21, 28, 31, 40, 41, 49, 50, 51, 58, 59, 60, 75, 82, 85, 86, 89, 93, 95, 97], "300": [15, 57], "32": [2, 5, 8, 41, 69, 70, 76], "3b": [17, 73], "4": [8, 11, 20, 28, 40, 46, 50, 52, 75, 86, 89, 90, 91], "4000": 50, "42": [0, 2, 8], "4o": [3, 4, 37], "5": [0, 8, 11, 13, 17, 19, 20, 38, 40, 41, 46, 49, 50, 51, 52, 55, 58, 59, 60, 74, 75, 82, 85, 86, 89, 93, 95, 96], "50": [20, 40, 41], "51": 91, "512": [17, 25, 27, 38, 41, 52, 53, 76], "514": 44, "6": [20, 41, 46, 50, 62, 64, 86, 89], "60": [21, 90], "64": [17, 18, 23, 41, 50, 64, 65, 67, 68, 69, 70, 72, 73, 76, 77, 84, 87, 92], "666": 46, "7": 89, "7039180890341347": 45, "72": 43, "7680": [0, 43], "777": 46, "797979": 46, "7b": [15, 49, 53, 57, 88], "8": [11, 17, 46, 71, 75, 89], "80": [90, 91], "8000": [0, 42, 100], "8191": 21, "822": 46, "85": [61, 65, 66], "9": [11, 41], "A": [0, 3, 4, 11, 13, 17, 18, 19, 21, 23, 25, 32, 37, 39, 41, 44, 50, 78, 81, 87, 95, 97, 98], "And": [0, 13, 20, 21, 23, 28, 36, 41, 42, 47, 48, 52, 53, 82, 88, 93, 95, 97, 100], "As": [8, 19, 39, 42, 43, 45, 49, 55, 92, 93], "At": [15, 28, 35, 36, 49, 67, 71, 93, 95, 97], "But": [35, 36, 39, 41, 47, 93, 95, 97], "By": [20, 44, 51, 58, 59, 60, 87, 89, 98], "For": [14, 15, 21, 25, 26, 32, 37, 38, 39, 41, 45, 48, 49, 52, 53, 95, 96, 97, 99, 100], "If": [0, 2, 5, 6, 8, 11, 13, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 31, 32, 33, 35, 37, 38, 39, 40, 43, 45, 47, 48, 53, 62, 63, 65, 66, 67, 68, 69, 70, 71, 76, 88, 89, 92, 93, 94, 95, 97, 98, 99, 100], "In": [15, 16, 17, 20, 25, 28, 32, 36, 37, 39, 45, 47, 52, 61, 93, 94, 95, 97, 99], "It": [0, 2, 3, 5, 8, 11, 13, 15, 16, 17, 19, 21, 22, 23, 25, 28, 29, 32, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 49, 50, 51, 52, 56, 60, 61, 63, 67, 71, 74, 77, 78, 79, 81, 82, 84, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100], "Its": [21, 23, 39, 53, 55, 58, 61, 74, 87], "No": 95, "Not": [2, 5, 78, 87], "Of": 47, "On": [39, 61], "Or": [17, 39, 48, 67, 71, 100], "That": [47, 97], "The": [0, 2, 3, 4, 5, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100], "Then": [37, 38, 39, 42, 48, 49, 95], "There": [21, 39, 41, 47, 52, 61, 78, 87, 89, 94, 97, 100], "These": [50, 51, 58, 59, 60, 74, 84, 85, 86, 91, 98, 100], "To": [21, 28, 33, 36, 39, 41, 48, 49, 52, 95, 96, 97, 100], "Will": 21, "With": [19, 38, 52, 97, 100], "_": 17, "__fields__": [0, 3, 4, 17], "ab": 19, "abil": 77, "abl": 87, "about": [0, 3, 4, 17, 25, 26, 27, 30, 31, 32, 37, 38, 39, 40, 51, 53, 59, 60, 64, 65, 80, 81, 82, 83, 88, 92, 93, 94, 95, 98, 100], "abov": [45, 49, 93, 94, 97, 100], "absolut": [8, 45], "abstracteventloop": 23, "accept": [42, 45], "access": [0, 19, 40, 43, 74], "accomplish": 33, "accord": [25, 32], "accumul": 58, "accur": [28, 41, 94], "accuraci": [11, 79, 87, 91], "achiev": [36, 44, 95, 98], "across": [15, 59, 82, 87, 91, 96, 98], "act": 98, "action": [93, 97], "actual": [17, 23, 39, 45, 90], "ad": [3, 18, 41, 98, 99], "ada": 49, "add": [8, 11, 14, 33, 41, 50, 55, 56, 64, 65, 92, 95, 97, 100], "add_essential_metadata": [1, 9], "add_essential_metadata_llama_text_nod": [1, 9], "add_file_nam": [25, 26, 27, 38], "add_gen_gt": [2, 3], "addit": [8, 11, 15, 48, 49, 51, 55, 56, 57, 59, 60, 82, 84, 85, 86, 99, 100], "addition": [19, 81], "additional_special_token": 18, "address": [58, 98], "adjust": [41, 99], "advanc": [40, 97], "advanced rag": [54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 97], "advantag": 52, "advent": [38, 41], "aespa": [37, 39], "aespa1": 39, "aespa2": 39, "aespa3": 39, "affect": [39, 95, 98], "afraid": 41, "after": [6, 14, 17, 23, 25, 28, 35, 36, 37, 38, 41, 43, 47, 48, 56, 74, 93, 95, 97, 100], "afterward": 18, "ag": [20, 86], "again": [38, 97, 100], "ai": [14, 15, 17, 20, 71], "aim": [41, 89, 91, 98], "album": 37, "algorithm": [88, 89, 90], "all": [0, 8, 11, 16, 18, 20, 23, 25, 32, 33, 38, 39, 41, 44, 45, 46, 47, 49, 50, 52, 53, 54, 61, 63, 65, 66, 82, 86, 87, 91, 93, 94, 96, 97, 98, 99, 100], "alloc": 86, "allow": [50, 51, 55, 56, 59, 60, 73, 84, 85, 86, 89, 98], "alon": [82, 87, 97], "along": 44, "alpha": [11, 95], "alreadi": [0, 8, 18, 21, 38, 95], "already_has_special_token": 18, "also": [22, 25, 39, 40, 41, 44, 45, 47, 52, 53, 67, 89, 97], "altern": [20, 48], "although": 18, "alwai": [26, 27, 30, 41, 43, 95], "among": [0, 13, 15, 16, 17, 19, 20, 21, 90, 95], "amount": 58, "an": [0, 8, 11, 15, 16, 20, 21, 25, 28, 30, 32, 39, 41, 43, 44, 45, 47, 48, 49, 58, 74, 83, 84, 85, 92, 93, 94, 95, 97, 99], "analysi": 58, "ani": [0, 2, 5, 8, 10, 15, 18, 23, 39, 45, 47, 48, 53, 55, 57, 58, 61, 74, 82, 87, 91, 97, 98, 99], "annot": [0, 3, 4, 17], "anoth": [37, 75, 98, 100], "answer": [0, 2, 3, 4, 8, 13, 18, 19, 20, 28, 37, 39, 41, 42, 44, 45, 46, 52, 57, 61, 77, 80, 81, 82, 83, 97], "answer_creation_func": [8, 41], "answer_gt": 46, "anywher": 43, "ap": [11, 45], "api": [0, 13, 17, 21, 52, 67, 71, 92, 93], "api_bas": [49, 99], "api_kei": [13, 17, 49, 52, 67, 71, 93, 99], "app": 0, "appear": 99, "appli": [23, 50, 74, 82, 87, 91, 98], "applic": [42, 58, 78, 87], "approach": [20, 58, 89], "appropri": 18, "apt": 99, "ar": [16, 17, 20, 21, 23, 25, 28, 32, 33, 35, 36, 37, 38, 39, 41, 44, 45, 47, 48, 49, 50, 51, 52, 53, 58, 59, 60, 61, 62, 63, 64, 65, 66, 78, 82, 84, 85, 86, 87, 91, 93, 94, 95, 96, 97, 98, 99, 100], "arbitrari": [50, 55, 58, 61, 74, 82, 87], "arbitrary_types_allow": [0, 17], "arg": [0, 8, 9, 11, 18], "argument": [0, 8, 11, 15, 23, 51, 59, 60, 84, 85, 86], "aris": [19, 81], "arrai": 17, "arrang": 98, "articl": 23, "arxiv": [19, 20], "asap": 97, "ask": [37, 39, 44, 47, 97], "aspect": 98, "assess": [44, 74], "assign": 11, "assist": 20, "associ": 58, "ast": 93, "async": [0, 3, 4, 8, 11, 13, 17, 21, 23], "async_g_ev": [10, 11], "async_postprocess_nod": [12, 17], "async_qa_gen_llama_index": [1, 8], "async_run_llm": [12, 17], "asynccli": 17, "asynchron": [8, 23], "asyncio": 23, "asyncopenai": [3, 4, 13, 34, 35, 37, 82], "asyncrankgptrerank": [12, 17], "atom": [20, 86], "attempt": 94, "attention_mask": 18, "augment": [14, 98], "auto": [8, 48, 89], "auto rag": 47, "autom": 85, "automat": [17, 22, 41, 47, 50, 55, 58, 61, 74, 82, 87, 92, 95, 100], "automl": 47, "autorag": [25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99], "autorag config": 93, "autorag doc": 47, "autorag fold": 94, "autorag instal": 48, "autorag multi gpu": 53, "autorag system": 98, "autorag tutori": 100, "autorag yaml": 93, "autorag_metr": [10, 11], "autorag_metric_loop": [10, 11], "autotoken": [21, 82], "avail": [17, 19, 41, 83, 99], "averag": [0, 11, 46, 50, 82, 87, 91], "avoid": 0, "avoid_empty_result": [0, 24], "awai": 100, "await": [2, 5], "b": [11, 18, 95], "baai": [17, 49, 69, 70], "back": 11, "backbon": 44, "backward": 56, "bad": [35, 36, 97], "badminton": [20, 86], "band": 37, "base": [0, 1, 2, 4, 5, 11, 12, 18, 22, 25, 41, 44, 49, 51, 57, 59, 60, 66, 69, 71, 72, 73, 74, 75, 77, 79, 80, 83, 89, 90, 91, 96, 97, 98], "basechatmodel": 8, "baseembed": [11, 21], "basellm": [3, 4], "basemodel": [0, 3, 4], "baseprompttempl": 17, "basi": [32, 46, 98], "basic": [3, 8, 36], "batch": [0, 8, 11, 13, 15, 16, 17, 18, 23, 41, 50, 51, 52, 59, 60, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 92, 99], "batch_appli": [1, 2, 5, 34, 36, 37, 38], "batch_filt": [1, 2, 5, 35], "batch_siz": [2, 5, 11, 17, 18, 21, 23], "becaus": [17, 19, 21, 25, 28, 32, 33, 35, 36, 37, 39, 53, 55, 58, 61, 74, 79, 87, 92, 97, 99, 100], "becom": [38, 41, 93], "been": [96, 100], "befor": [14, 21, 25, 37, 38, 49, 56, 58, 93, 97, 99, 100], "behavior": [39, 51, 59, 60, 79, 84, 85, 86, 98], "being": [18, 51, 59, 60], "belong": 94, "below": [0, 2, 5, 16, 25, 34, 35, 36, 38, 43, 45, 48, 50, 62, 63, 64, 65, 66, 97, 99, 100], "benz": [20, 86], "bert": 17, "bert_scor": [10, 11, 50], "best": [0, 13, 15, 16, 17, 19, 20, 21, 23, 38, 47, 81, 89, 94, 96, 97, 100], "best_": 94, "best_0": 94, "best_column_nam": 23, "beta": [0, 1, 11, 28, 34, 35, 36, 37, 38], "better": [16, 36, 55, 58, 61, 62, 66, 74, 87, 95, 100], "between": [11, 17, 33, 44, 45, 50, 55, 88, 89, 96], "bfloat16": [17, 79], "bge": [17, 49, 69, 70], "bigram": 11, "bilingu": 44, "bird": [20, 86], "bleu": [10, 11, 50, 82, 93, 96, 97, 99], "blob": 11, "blue": 97, "bm": 49, "bm25": [0, 12, 20, 87, 91, 93, 94, 97], "bm25_api": 21, "bm25_corpu": 21, "bm25_ingest": [12, 21], "bm25_path": 21, "bm25_pure": [12, 21], "bm25_token": [21, 88], "bm25okapi": [21, 88], "bodi": [0, 42], "bool": [0, 2, 5, 6, 8, 11, 13, 16, 17, 18, 22, 23], "boolean": [8, 79], "boost": 52, "bos_token": 18, "both": [14, 45, 56, 99], "bottom": [15, 60], "bowl": 37, "branch": 97, "break": [33, 46], "brew": 99, "brief": 37, "broader": 98, "browser": 0, "bshtml": 30, "bug": 28, "bui": 46, "build": [18, 38, 39, 94, 95, 97], "build_inputs_with_special_token": [17, 18], "bulb": 37, "c": 99, "cach": 8, "cache_batch": [8, 41], "calcul": [11, 16, 45, 55, 58, 64, 65, 79, 89, 90, 96], "calculate_cosine_similar": [10, 11], "call": [0, 13, 18, 49, 51, 52, 59, 60, 79, 88, 89], "callabl": [0, 1, 2, 5, 8, 9, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25], "callback_manag": [0, 17], "callbackmanag": [0, 17], "can": [0, 2, 5, 6, 8, 13, 15, 16, 17, 18, 19, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 69, 70, 71, 72, 74, 75, 78, 79, 82, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 100], "cannot": [82, 87], "capit": 37, "care": 18, "carefulli": 19, "case": [20, 21, 38, 39, 41, 45, 47, 95, 97, 99], "cast_corpus_dataset": [0, 23], "cast_embedding_model": [0, 10], "cast_metr": [0, 10], "cast_qa_dataset": [0, 23], "cast_queri": [12, 21], "castorini": [17, 73], "caus": [67, 71, 95, 99, 100], "cc": [21, 91], "cd": 48, "center": 19, "certain": 23, "cg": 45, "chain": [44, 95], "chang": [18, 23, 36, 41, 49, 67, 71, 88, 97, 98, 99], "channel": [47, 99, 100], "charact": 32, "chat": [8, 13, 15, 52, 99], "chat_box": [0, 24], "chat_prompt": 15, "chatinterfac": 0, "chatmessag": [4, 17], "chatmodel": 40, "chatopenai": 40, "chatrespons": 17, "check": [0, 11, 22, 28, 36, 38, 39, 47, 48, 49, 50, 53, 54, 69, 70, 88, 93, 94, 97, 99, 100], "child": [20, 86], "choic": [88, 95], "choos": [11, 17, 20, 39, 75, 88, 92, 95, 96], "chroma": [21, 94], "chromadb": [8, 21, 41, 92], "chunk": [1, 2, 5, 6, 15, 19, 21, 28, 36, 39, 41, 59, 83, 97], "chunk_config": 25, "chunk_method": [25, 27, 36, 38], "chunk_modul": [26, 27], "chunk_overlap": [25, 27, 36, 38, 41], "chunk_project_dir": 38, "chunk_siz": [23, 25, 27, 36, 38, 41], "chunked_cont": 25, "chunked_str": 25, "chunker": [24, 32, 38], "circl": 97, "ciudad": 37, "clarifi": 41, "class": [0, 2, 3, 4, 5, 17, 18, 22, 39, 40, 49, 75, 77, 92], "classif": [18, 36], "classifi": [35, 45], "classmethod": [0, 22], "classvar": [0, 3, 4, 17], "clear": 34, "cli": 24, "client": [3, 4, 13, 21, 34, 35, 37, 41], "clone": 48, "close": [17, 79], "clova": [0, 1, 32, 33], "co": [17, 49], "code": [2, 3, 5, 8, 11, 25, 26, 27, 29, 30, 38, 48, 49, 93, 100], "coher": [0, 11, 12, 50, 67, 71], "cohere_api_kei": [17, 67], "cohere_cli": 17, "cohere_rerank": [12, 17, 74], "cohere_rerank_pur": [12, 17], "cointegr": 49, "colber": 68, "colbert": [0, 12, 71, 74], "colbert_rerank": [12, 17, 68], "colbertv2": [17, 68], "collect": [8, 21, 23, 39, 41, 93, 97, 98], "collection_nam": [21, 94], "column": [0, 2, 5, 8, 13, 15, 16, 17, 19, 20, 21, 23, 28, 37, 39, 41, 42, 100], "column_nam": 23, "com": [8, 11, 13, 15, 17, 18, 47, 48, 97], "combin": [20, 21, 22, 23, 33, 82, 89, 90, 93, 95, 98], "come": [16, 20, 37, 45, 47, 84, 85, 86, 95, 97], "comedi": [20, 86], "command": [43, 99], "commit": 99, "common": [11, 20, 21, 48, 86, 96, 98, 99, 100], "compar": [46, 50, 96], "comparison": 46, "compat": [2, 5, 53], "compatibilti": 53, "complet": [13, 25, 32, 52], "complex": [29, 97], "compon": 98, "compress": [15, 46, 57, 58, 61, 97], "compressor": [15, 46, 57, 58, 59, 60], "comput": [0, 3, 4, 11, 12, 17, 18, 58], "computedfieldinfo": [0, 3, 4, 17], "concaten": 18, "concept": 44, "concept_completion_query_gen": [2, 4, 37], "concis": [3, 36], "conclud": [17, 79], "conclus": [19, 81], "condit": [39, 40], "config": [0, 3, 4, 17, 18, 19, 49, 96, 97, 99], "config_dict": 0, "config_path": [42, 100], "configdict": [0, 3, 4, 17], "configur": [0, 3, 4, 17, 47, 50, 51, 58, 59, 60, 74, 79, 82, 87, 91, 95, 98, 100], "conflict": 44, "conform": [0, 3, 4, 17], "confus": 61, "connect": [44, 92], "consid": [8, 45, 53, 87], "consist": [11, 50], "constraint": 34, "consum": 47, "contain": [2, 5, 8, 11, 13, 15, 16, 17, 18, 19, 20, 21, 23, 32, 33, 39, 41, 45, 80, 81, 83, 86, 94, 95, 98, 99, 100], "content": [24, 25, 30, 41, 42, 58, 62, 63, 64, 65, 66, 74, 82, 91, 92], "content_embed": [16, 17], "content_list": 16, "content_s": [8, 41], "contents_list": [14, 16, 17, 18, 23], "context": [17, 19, 34, 44, 45, 57, 79, 82, 98], "context_msg": 15, "context_str": 15, "contextu": 44, "contradict": 44, "contributor": 48, "control": [11, 53], "conveni": [41, 43], "convert": [0, 23, 29, 31, 41, 93], "convert_datetime_str": [0, 23], "convert_env_in_dict": [0, 23], "convert_inputs_to_list": [0, 23], "convert_string_to_tuple_in_dict": [0, 23], "convex": [21, 89], "cool": 97, "core": [27, 41, 44, 49], "coroutin": 23, "corpu": [0, 1, 2, 5, 8, 14, 17, 19, 21, 28, 35, 36, 37, 44, 55, 63, 78, 83, 91, 94, 100], "corpus_data": [8, 21, 23], "corpus_data_path": [0, 100], "corpus_data_row": 8, "corpus_df": [2, 5, 8, 9, 14, 23, 40, 41], "corpus_df_to_langchain_docu": [1, 9], "corpus_path": 21, "corpus_save_path": [2, 5], "corpus_test": 100, "correct": 45, "correl": 44, "correspond": [0, 3, 4, 17, 22], "cosin": [11, 44, 55], "cost": [33, 58, 100], "cot": 44, "could": [13, 15, 16, 17, 19, 21], "couldn": 43, "count": [11, 57, 88], "cours": 47, "cover": [25, 28, 32, 36, 37, 38, 41], "cpu": 11, "creat": [0, 2, 4, 5, 6, 8, 13, 17, 18, 19, 20, 23, 25, 28, 29, 32, 36, 38, 39, 43, 47, 80, 83, 89, 94, 97], "create_token_type_ids_from_sequ": [17, 18], "creation": [2, 5, 8, 37, 47, 100], "criterion": 98, "critic": 8, "critic_llm": [8, 40], "cross": [17, 76], "crucial": [19, 25, 28, 32, 36, 39, 58, 74, 81, 98], "csv": [25, 32, 95, 100], "cucumb": [20, 86], "cuda": [17, 68, 69, 70, 76], "cue": [17, 79], "cumul": 53, "curl": 42, "current": [0, 16, 23, 25, 32, 46, 98, 100], "custom": [43, 51, 59, 60, 64, 65, 75, 79, 84, 85, 86, 92, 96, 98, 99], "cut": 16, "cutoff": 61, "cycl": 97, "czech": 25, "d": [8, 20, 21, 23, 39, 42], "dag": 97, "dai": 97, "danish": 25, "dashboard": 24, "data": [0, 17, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 34, 35, 37, 39, 42, 44, 47, 50, 58, 74, 81, 87, 92, 98, 100], "databas": [20, 92], "dataformat": 25, "datafram": [0, 2, 3, 5, 6, 8, 9, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23], "dataset": [2, 5, 8, 23, 25, 28, 35, 37, 41, 45, 47, 89, 94, 99], "date": [16, 37, 63], "datetim": [16, 17, 32, 39, 63, 78], "db": [8, 97], "db_path": 21, "dbsf": [21, 89, 91], "dcg": 45, "dd": 63, "de": 37, "deal": 58, "decid": [53, 97, 98], "decis": 98, "decompos": [20, 87], "decomposit": [20, 86], "decor": [0, 23], "decreas": [52, 68, 69, 70, 76], "def": 25, "default": [0, 3, 6, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 39, 41, 42, 49, 51, 52, 56, 57, 59, 60, 62, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 79, 82, 84, 85, 88, 89, 90, 93, 96, 98], "default_config": 100, "default_factori": [0, 17], "defaulttoken": 11, "defin": [0, 3, 4, 17, 18, 55, 73, 74, 91, 92, 96], "delet": 61, "deliv": 97, "dens": [20, 21, 84, 88, 92], "deparallel": [17, 18], "depend": [25, 48, 88, 94, 100], "deploi": [24, 42, 43, 47], "deploy": [47, 89], "deportiva": 37, "deprec": [21, 28], "descript": [0, 17, 36, 50, 55, 74, 91], "design": [8, 19, 41, 44, 50, 77, 81, 89, 90], "destroy_vllm_inst": [12, 13], "detail": [13, 19, 29, 37, 38, 44, 50, 53, 72, 75, 82, 83, 87, 98, 100], "detect": 89, "determin": [50, 94, 96], "develop": [28, 53, 95, 98], "devic": [17, 18], "device_map": 18, "devsinghsachan": 17, "df": [23, 35, 36, 38, 99], "diagram": [95, 97], "dict": [0, 2, 3, 4, 5, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 33], "dict_": 23, "dict_column": 23, "dict_to_markdown": [0, 23], "dict_to_markdown_t": [0, 23], "dictionari": [0, 3, 4, 8, 10, 17, 21, 23, 25, 39, 40, 41, 50, 73], "did": 0, "didn": 40, "differ": [8, 18, 20, 23, 25, 36, 38, 39, 41, 44, 49, 50, 73, 85, 87, 88, 90, 94, 98], "difficulti": 99, "dimens": [20, 23], "direct": [78, 87], "directli": [2, 5, 17, 37, 40, 44, 45, 58, 67, 71, 93, 95, 99], "directori": [0, 6, 8, 13, 15, 16, 17, 19, 20, 21, 25, 30, 32, 38, 43, 100], "directoryload": 41, "discord": [47, 97, 99, 100], "distanc": 20, "distinct": 58, "distinguish": [33, 89], "distribut": [8, 40, 41], "distribute_list_by_ratio": [1, 8], "divid": [29, 45, 88], "dl": 73, "do": [2, 5, 6, 8, 14, 15, 16, 17, 20, 33, 39, 45, 46, 47, 48, 93, 94, 97, 100], "doc": [8, 13, 14, 15, 39, 45, 48, 49, 53, 96], "doc_id": [21, 23, 25], "document": [2, 5, 6, 8, 9, 17, 20, 21, 25, 28, 29, 30, 31, 32, 33, 37, 39, 48, 50, 58, 74, 82, 83, 87, 88, 91, 93, 95, 96, 97, 98, 100], "document_load": [30, 41], "doe": [0, 13, 16, 18, 21, 34, 44, 50, 51, 52, 53, 58, 61, 74, 82, 93, 95], "doesn": [8, 28, 45, 86, 97, 99], "domain": 88, "don": [19, 21, 23, 32, 36, 39, 41, 45, 47, 82, 89, 97, 99, 100], "done": 100, "dongjin": 17, "dontknow": [35, 36, 38], "dontknow_filter_llama_index": 35, "dontknow_filter_openai": 35, "dontknow_filter_rule_bas": [35, 36, 38], "dotenv": [48, 99], "doubl": 39, "down": 45, "download": [39, 100], "drive": [20, 86], "drop": [19, 35, 36, 38, 81, 99], "dropout": 18, "duplic": [22, 39, 93], "dure": [87, 99], "dutch": 25, "dynam": 98, "dynamically_find_funct": [0, 24], "e": [48, 51, 59, 60], "each": [0, 2, 5, 8, 16, 20, 21, 22, 23, 39, 40, 41, 44, 64, 65, 86, 89, 90, 93, 94, 95, 96, 97, 98], "earli": 39, "easier": 93, "easili": [25, 32, 37, 92, 97, 100], "echo": 99, "edit": 48, "edit_summary_df_param": [12, 21], "editor": 93, "effect": [4, 33, 50, 74, 90, 91, 98, 100], "effici": 58, "effort": 98, "either": 45, "elem": 23, "element": [13, 21, 22, 23], "emb": [21, 92, 97], "embed": [0, 8, 11, 16, 18, 21, 41, 44, 47, 48, 50, 55, 64, 65, 74, 88, 92, 94, 100], "embed_batch_s": 0, "embed_dim": [0, 24], "embedding model": 49, "embedding_batch": [21, 92], "embedding_model": [8, 11, 16, 20, 21, 23, 40, 41, 49, 50, 55, 64, 65, 87, 91, 92, 93], "embedding_query_cont": [0, 23], "emploi": [20, 86], "empti": [0, 15, 21, 39, 93], "en": [3, 4, 11, 14, 15, 17, 25, 31, 35, 36, 37, 38, 49, 50, 71, 73], "encod": [13, 17, 76], "encount": 99, "enct5forsequenceclassif": [17, 18], "enct5token": [17, 18], "end": [17, 23, 79], "endpoint": 100, "engin": 99, "enginearg": 53, "english": [17, 25, 27, 38, 67, 88], "enhanc": [74, 79, 96, 98], "enough": [39, 61], "ensur": [50, 58, 74, 82, 87, 91], "entri": 58, "env": [13, 17, 48, 52], "environ": [17, 23, 30, 43, 48, 53, 67, 71, 99, 100], "eos_token": 18, "equal": [8, 45], "error": [3, 13, 15, 20, 21, 52, 67, 71, 75, 86, 92], "essenc": 37, "essenti": [62, 63, 64, 65, 66, 82, 89, 90, 95, 98, 99], "estonian": 25, "etc": [39, 41, 93], "eval": 11, "evalu": [13, 15, 16, 17, 19, 20, 21, 23, 24, 25, 28, 32, 39, 44, 47, 50, 58, 74, 82, 87, 89, 91, 93, 94, 96, 98], "evaluate_gener": [0, 10], "evaluate_generator_nod": [12, 13], "evaluate_generator_result": [12, 19], "evaluate_one_prompt_maker_nod": [12, 19], "evaluate_one_query_expansion_nod": [12, 20], "evaluate_passage_compressor_nod": [12, 15], "evaluate_retriev": [0, 10], "evaluate_retrieval_cont": [0, 10], "evaluate_retrieval_nod": [12, 21], "even": [0, 19, 81, 89], "evenly_distribute_passag": [12, 21], "event": [23, 37], "ever": 97, "everi": [13, 18, 52, 98], "evolut": [8, 40], "evolv": 37, "exact": 44, "exactli": 45, "exampl": [8, 14, 15, 20, 21, 32, 36, 38, 39, 41, 44, 49, 93, 95, 97, 99, 100], "example_node_line_1": 96, "example_node_line_2": 96, "exc_traceback": 0, "exc_typ": 0, "exc_valu": 0, "exce": [20, 50, 52, 58, 74, 82, 86], "exceed": [82, 87, 91], "except": 46, "exclud": [0, 17], "exclus": 92, "execut": [0, 21, 23, 38, 49, 87, 100], "exist": [6, 8, 21, 22, 39, 94], "exist_gen_gt": [8, 41], "existing_qa": 41, "existing_qa_df": 41, "existing_query_df": 8, "exp": 11, "exp_norm": [12, 17], "expand": [20, 87, 95], "expanded_queri": 20, "expans": [19, 20, 21, 39, 58, 84, 86, 97], "expect": [17, 39, 79], "expens": [33, 35], "experi": [47, 94, 97, 99, 100], "experiment": 50, "expir": 43, "explain": [94, 96, 97], "explan": 37, "explicit": 44, "explod": [0, 23], "explode_valu": 23, "explor": [89, 90], "export": [48, 67, 71, 99], "extend": 19, "extens": [6, 8, 32, 93], "extent": 44, "extra": [13, 23, 88], "extra_id": 18, "extract": [0, 17, 22, 30, 42, 63, 78, 88, 89], "extract_best_config": [0, 24, 100], "extract_node_line_nam": [0, 24], "extract_node_strategi": [0, 24], "extract_valu": [0, 22], "extract_values_from_nod": [0, 22], "f": [19, 82], "f1": [11, 58], "face": [13, 15, 47], "facebook": [18, 53], "facebookresearch": 18, "facilit": 50, "fact": 97, "factoid": 36, "factoid_query_gen": [2, 4, 36, 37, 38], "factori": 0, "factual": 37, "fall": 11, "fallback": 11, "fals": [0, 6, 8, 11, 16, 17, 18, 23, 62, 66, 69, 70, 75, 79], "familiar": 97, "fashion": [15, 60], "fast": [35, 53, 67, 71], "faster": [17, 53, 58], "fate": 97, "favorit": 93, "featur": [28, 29, 39, 44, 50, 97, 100], "fee": 92, "feedback": [95, 97], "feel": [47, 97, 100], "fetch": [55, 56, 91], "fetch_cont": [0, 23], "fetch_one_cont": [0, 23], "few": [20, 86, 97, 100], "field": [0, 3, 4, 11, 17, 45, 63, 78], "fieldinfo": [0, 3, 4, 17], "fields_to_check": 11, "file": [0, 2, 5, 6, 8, 9, 11, 17, 19, 21, 23, 38, 39, 41, 42, 43, 44, 47, 48, 49, 53, 67, 71, 75, 89, 94, 95, 96, 97, 98, 99], "file_dir": [6, 8], "file_nam": 25, "file_path": 9, "filenam": [6, 8, 21], "filepath": [6, 8, 23, 38], "filesystem": 9, "fill": [23, 44], "filter": [0, 1, 2, 5, 16, 38, 52, 55, 62, 64, 65, 66], "filter_by_threshold": [0, 24], "filter_dict_kei": [0, 23], "filtered_qa": 35, "final": [0, 25, 32, 33, 57, 90, 95, 97], "find": [18, 23, 26, 27, 29, 30, 31, 37, 38, 41, 44, 45, 47, 49, 57, 77, 82, 89, 90, 91, 94, 95, 98], "find_node_dir": [0, 24], "find_node_summary_fil": [0, 23], "find_trial_dir": [0, 23], "find_unique_elem": [12, 21], "fine": 83, "finnish": 25, "first": [0, 2, 5, 11, 13, 21, 23, 25, 32, 36, 37, 38, 41, 45, 46, 47, 48, 53, 67, 71, 74, 92, 93, 94, 95, 97], "fit": [44, 98], "five": 39, "fix": [44, 99], "fixed_min_valu": 21, "flag": 74, "flag_embed": [0, 12], "flag_embedding_llm": [0, 12], "flag_embedding_llm_rerank": [12, 17, 69], "flag_embedding_rerank": [12, 17, 70], "flag_embedding_run_model": [12, 17], "flagembed": [69, 70], "flagembeddingllm": 70, "flan": 18, "flask": [0, 42, 47], "flat_list": 23, "flatmap": [1, 2, 5], "flatten": 23, "flatten_appli": [0, 23], "flexibl": [73, 89, 98], "float": [11, 13, 14, 16, 17, 18, 19, 21, 53], "floor": 11, "flow": 44, "fluenci": [11, 50], "fn": [2, 5], "focu": [58, 100], "focus": 98, "folder": [0, 42, 48, 97], "follow": [8, 17, 18, 21, 25, 26, 27, 28, 30, 32, 33, 38, 39, 40, 41, 42, 43, 45, 49, 63, 79, 89, 94, 97, 99], "forget": 100, "form": [8, 25, 28, 29, 38, 41, 44], "format": [16, 17, 18, 23, 25, 29, 32, 41, 45, 63, 79, 94], "former": 18, "forward": [17, 18, 56], "found": [19, 37, 41, 44, 51, 59, 60, 64, 65, 72, 75, 92, 100], "four": 46, "fp16": [17, 69, 70], "fragment": 11, "framework": [40, 44, 97], "franc": 37, "free": [47, 97, 100], "french": 25, "frequent": 49, "friendli": 43, "from": [0, 2, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 32, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 49, 51, 52, 53, 55, 58, 63, 67, 71, 74, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 100], "from_dict": [0, 22], "from_parquet": [0, 24, 25, 38], "from_trial_fold": [0, 24, 42, 43], "from_yaml": [0, 24, 42, 43, 100], "fstring": [0, 12, 80, 82, 83, 97], "full": [18, 39, 53, 94, 98], "func": [0, 8, 13, 14, 15, 16, 17, 19, 20, 21, 23], "function": [0, 2, 5, 6, 8, 11, 15, 18, 19, 20, 21, 22, 23, 25, 29, 32, 36, 37, 41, 77, 98, 100], "fundament": 91, "further": [21, 45, 51, 59, 60, 84, 85, 86], "fuse": [21, 89], "fuse_per_queri": [12, 21], "fusion": [21, 90], "futur": [39, 52, 95, 97, 98], "g": [11, 51, 59, 60], "g_eval": [10, 11, 44, 50], "gamma": 11, "gcc": 99, "gemma": [17, 69], "gener": [0, 2, 3, 5, 8, 12, 17, 19, 20, 21, 23, 24, 28, 35, 39, 41, 49, 51, 52, 53, 58, 79, 82, 84, 85, 86, 87, 95, 97, 98, 99], "generate_answ": [1, 8, 41], "generate_basic_answ": [1, 8], "generate_qa_llama_index": [1, 8, 41], "generate_qa_llama_index_by_ratio": [1, 8, 41], "generate_qa_raga": [1, 8, 40], "generate_qa_row": [1, 8], "generate_row_funct": 8, "generate_simple_qa_dataset": [1, 8], "generate_with_langchain_doc": 8, "generated_text": [0, 11], "generation_gt": [1, 2, 8, 11, 34, 35, 36, 38], "generator_dict": 20, "generator_func": [19, 20], "generator_llm": [8, 40], "generator_model": 49, "generator_modul": [19, 82], "generator_module_typ": [84, 85, 86], "generator_nod": [12, 13], "generator_param": [19, 20], "german": 25, "get": [0, 9, 13, 17, 21, 23, 37, 38, 40, 41, 42, 44, 48, 51, 52, 61, 67, 71, 92, 93, 95, 97, 99, 100], "get_best_row": [0, 23], "get_bm25_pkl_nam": [12, 21], "get_bm25_scor": [12, 21], "get_colbert_embedding_batch": [12, 17], "get_colbert_scor": [12, 17], "get_default_llm": 17, "get_encod": [17, 18], "get_event_loop": [0, 23], "get_file_metadata": [1, 9], "get_hybrid_execution_tim": [12, 21], "get_id_scor": [12, 21], "get_ids_and_scor": [12, 21], "get_input_embed": [17, 18], "get_metric_valu": [0, 24], "get_multi_query_expans": [12, 20], "get_nodes_from_docu": 41, "get_or_create_collect": 41, "get_param_combin": [0, 1, 9, 22], "get_query_decompos": [12, 20], "get_result": [12, 13], "get_runn": [0, 24], "get_scores_by_id": [12, 21], "get_special_tokens_mask": [17, 18], "get_start_end_idx": [1, 9], "get_support_modul": [0, 24], "get_support_nod": [0, 24], "gg": [47, 97], "girl": [20, 39, 86], "gist": 44, "git": 48, "github": [11, 15, 17, 18, 39, 47, 48, 97, 99, 100], "give": [0, 45], "given": [0, 6, 8, 11, 13, 14, 16, 17, 18, 20, 21, 34, 35, 41, 57, 73, 75, 77, 84, 85, 95], "glob": [32, 41], "glossari": 18, "go": [39, 45, 47, 88, 96, 100], "goal": [20, 87, 95], "goe": 97, "gone": 52, "good": [35, 36, 38, 39, 41, 44, 97, 100], "got": 52, "gpt": [3, 4, 11, 13, 17, 19, 37, 40, 41, 44, 50, 51, 52, 58, 59, 60, 75, 82, 85, 86, 95, 99], "gpt-3.5": 52, "gpt-4": 52, "gpt2": [50, 52, 82, 88], "gpt2token": 13, "gpu": [17, 100], "gr": 0, "grain": 83, "gram": [11, 44], "great": [28, 35, 41, 47, 88, 95], "greek": 25, "ground": [8, 11, 34, 39, 44, 45, 50, 95], "ground_truth": 11, "group": [37, 39], "gt": [0, 11, 34, 39, 44, 45, 46, 95], "guarante": [61, 95], "guid": [28, 38, 41, 47, 50, 58, 74, 82, 87, 88, 91, 97, 98, 100], "guidanc": 8, "h": 42, "ha": [2, 3, 4, 5, 8, 18, 21, 35, 37, 38, 39, 41, 44, 46, 58, 96, 97, 100], "had": 100, "halftim": 37, "hallucin": [25, 97], "hamlet": [20, 86], "hand": [39, 61], "handi": 9, "handle_except": [0, 24], "happen": 97, "hard": [41, 47, 95, 97], "harmon": [44, 45, 46], "have": [0, 2, 5, 8, 16, 21, 23, 25, 28, 29, 31, 34, 36, 37, 38, 39, 48, 49, 62, 63, 64, 65, 66, 68, 69, 70, 71, 76, 78, 86, 88, 89, 90, 92, 93, 94, 95, 97, 98, 99, 100], "head": 23, "head_mask": 18, "header": 42, "help": [20, 58, 83, 89], "here": [8, 25, 26, 27, 28, 30, 31, 32, 38, 39, 40, 44, 47, 48, 49, 52, 53, 54, 57, 64, 65, 69, 70, 72, 88, 92, 93, 94, 95, 97, 99, 100], "hf": [15, 57], "hh": 63, "hidden": 18, "high": [11, 74], "higher": [44, 45, 53, 58, 71, 98], "highest": 16, "highli": [38, 44, 88, 100], "hit": 45, "home": 37, "hood": 95, "hook": 18, "hop": [2, 4, 5, 8, 36, 41, 86], "hope": 94, "hopefulli": 45, "host": [0, 42, 100], "hour": 43, "how": [8, 17, 20, 25, 28, 32, 34, 36, 37, 38, 41, 45, 51, 59, 60, 64, 65, 79, 86, 88, 92, 93, 94, 96, 97, 100], "howev": [38, 41, 45, 89, 95, 97], "html": [8, 15, 27], "htmlnodepars": 27, "http": [0, 8, 11, 13, 14, 15, 17, 18, 19, 20, 42, 47, 48, 49, 97], "huggingfac": [11, 17, 20, 21, 39, 49, 53, 82, 100], "huggingface_all_mpnet_base_v2": 49, "huggingface_baai_bge_smal": 49, "huggingface_bge_m3": 49, "huggingface_cointegrated_rubert_tiny2": 49, "huggingface_evalu": [10, 11], "huggingfaceembed": 49, "huggingfacellm": [49, 51, 59, 60], "human": 44, "hybrid": [21, 32, 91, 93], "hybrid cc": 89, "hybrid rrf": 90, "hybrid_cc": [0, 12, 87, 89, 91], "hybrid_module_func": 21, "hybrid_module_param": 21, "hybrid_rrf": [0, 12, 87, 90, 91, 93], "hyde": [0, 12, 49, 87], "hydrogen": [20, 86], "hyperparamet": [21, 93], "hypothet": [20, 84], "i": [0, 2, 3, 4, 5, 6, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 88, 89, 90, 91, 92, 94, 98, 100], "id": [13, 14, 15, 16, 17, 18, 21, 23, 25, 36, 39, 66, 91], "id_": 23, "id_column_nam": 23, "idcg": 45, "ideal": 45, "ident": 37, "identifi": [39, 74, 91], "idf": [44, 88], "ids_list": [14, 16, 17, 18], "idx_rang": 2, "ignor": [18, 21], "imag": [39, 94, 100], "imagin": 39, "imdb": [20, 86], "immedi": 87, "impact": [45, 58, 82, 87, 92], "implement": [16, 28, 97], "import": [20, 25, 26, 27, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 48, 49, 61, 86, 88, 90, 97, 100], "importerror": 99, "imposs": 97, "improv": [11, 58, 74, 79, 87], "inc": [47, 48, 97], "includ": [4, 8, 13, 39, 44, 45, 49, 51, 59, 60, 82, 87, 89, 96, 98], "incorrect": [16, 45, 63], "increas": [45, 71, 87, 98, 99], "increment": 4, "index": [0, 6, 8, 13, 15, 16, 21, 23, 25, 35, 51, 52, 83, 99], "index_valu": 23, "indic": [11, 16, 23, 45], "indici": 39, "individu": 98, "infer": 17, "influenc": 45, "info": 48, "inform": [14, 15, 17, 21, 25, 26, 27, 30, 31, 32, 37, 39, 44, 45, 49, 51, 59, 60, 63, 64, 65, 74, 78, 88, 89, 90, 91, 92, 94, 96, 97, 98, 100], "ingest": [8, 21, 92], "ini": 48, "initi": [0, 17, 18, 20, 36, 38, 49, 53, 74, 79, 99], "initial_corpu": [36, 38], "initial_corpus_df": 38, "initial_qa": [36, 38], "initial_qa_df": 38, "initial_raw": [36, 38], "initial_raw_df": 38, "input": [0, 3, 4, 8, 13, 17, 18, 19, 20, 21, 23, 39, 40, 41, 43, 51, 52, 58, 76, 80, 81, 83, 85, 89, 90, 95, 97], "input_arg": 13, "input_id": 18, "input_list": 8, "input_metr": 21, "input_str": 17, "input_tensor": 17, "input_text": [17, 18], "inputs_emb": 18, "inquir": 37, "insid": [0, 99, 100], "inspir": [20, 56, 62, 63, 64, 65, 66, 84], "instal": [47, 49, 88, 100], "instanc": [2, 5, 11, 13, 15, 18, 21, 23, 37, 38, 39, 49, 51], "instead": [15, 17, 18, 37, 100], "instruct": [15, 17, 18, 39, 48, 49, 53, 57, 77, 79, 88], "int": [0, 2, 5, 8, 9, 11, 13, 14, 15, 16, 17, 18, 21, 23], "integ": 18, "integr": [49, 73, 98], "intend": 98, "interact": [0, 43], "interchang": 98, "interest": 97, "interfac": [0, 49], "intermedi": 17, "internet": 92, "interv": 0, "introduc": [44, 96], "invent": 37, "involv": [74, 91], "ir": [17, 68], "irrelev": 61, "is_async": 8, "is_best": 23, "issu": [47, 50, 97, 99, 100], "italian": 25, "item": [11, 16, 23, 45, 65, 66], "iter": [0, 2], "its": [0, 3, 8, 15, 19, 21, 22, 23, 39, 41, 43, 77, 82, 87, 92, 95, 96, 97], "itself": [49, 89, 95], "java_hom": 48, "jdk": 48, "jean": [37, 39], "jina": [0, 12, 71], "jina_rerank": [12, 17, 74], "jina_reranker_pur": [12, 17], "jinaai": 71, "jinaai_api_kei": [17, 71], "job": 95, "jq_schema": 30, "json": [0, 29, 31, 42, 100], "json_to_html_t": 29, "judgment": 44, "just": [0, 2, 3, 5, 21, 34, 35, 39, 41, 52, 88, 97, 100], "k": [11, 17, 39, 49, 55, 74, 91], "keep": [0, 16, 23, 38, 52, 63, 65, 66, 93, 100], "kei": [0, 10, 11, 13, 17, 22, 23, 25, 26, 27, 30, 39, 41, 49, 52, 67, 71, 92, 93, 99, 100], "key_column_nam": 23, "keyword": [8, 15, 44, 49, 51, 59, 60, 84, 85, 86], "kf1_polici": 97, "kind": [39, 97, 99], "kiwi": [25, 38, 88], "kiwi_result": 25, "kiwipiepi": 25, "kkma": 88, "know": [36, 39, 47, 82, 93, 94, 95, 98, 100], "knowledg": 39, "known": [41, 45], "ko": [17, 25, 35, 37, 48, 74], "ko-rerank": 72, "ko_kiwi": 21, "konlpi": [26, 48, 88], "korea": [47, 48, 97], "korean": [17, 25, 26, 49, 72], "korerank": [0, 12, 72], "koreranker_run_model": [12, 17], "kosimcs": 49, "kr": 17, "kwarg": [0, 2, 5, 8, 11, 13, 14, 15, 17, 18, 23, 51, 59, 60, 84, 85, 86], "l": [17, 76], "label": [18, 20, 45, 84], "lama_index": 41, "lambda": [0, 25, 35, 36, 38], "lang": [3, 4, 11, 35, 36, 37, 38, 50], "langchain": [0, 1, 8, 20, 25, 32, 40, 41, 85, 97], "langchain_chunk": 26, "langchain_commun": [30, 41], "langchain_docu": 6, "langchain_document_to_parquet": 41, "langchain_documents_to_parquet": [1, 6, 41], "langchain_openai": 40, "langchain_pars": [0, 1, 30, 32, 33, 38], "langchain_text_splitt": 41, "languag": [3, 8, 11, 17, 20, 25, 35, 37, 44, 48, 50, 51, 58, 59, 60, 67, 79, 88, 98], "laredo": 37, "larg": [17, 44, 49, 50, 51, 58, 59, 60, 67, 70, 71, 73, 83, 98], "last": [32, 42], "last_modified_datetim": [17, 25, 32, 39, 63, 78], "lastli": [92, 93], "later": [45, 63, 100], "latest": [15, 53, 63, 78], "latter": 18, "launch": [0, 43, 100], "lazyinit": [0, 24, 25, 49], "le": 0, "lead": 58, "learn": [40, 47, 64, 65, 92, 93, 95, 97, 100], "least": [8, 16, 45, 65, 66, 95, 99], "legaci": 28, "legal": [20, 86], "length": [0, 15, 16, 17, 21, 23, 45, 46, 50, 52, 62, 64, 76, 82], "lengthen": [19, 81], "less": [16, 41, 45, 55, 58], "let": [45, 46, 95, 97, 100], "level": [23, 44, 55, 58, 74, 91, 98], "lexcial": 89, "lexic": [21, 89], "lexical_id": 21, "lexical_scor": 21, "lexical_summari": 21, "lexical_summary_df": 21, "lexical_theoretical_min_valu": [21, 89], "li": 77, "librari": [13, 53, 100], "licens": [20, 86], "life": 39, "light": 37, "like": [0, 8, 19, 20, 21, 25, 32, 34, 36, 38, 39, 42, 45, 48, 51, 52, 58, 59, 60, 79, 82, 88, 89, 90, 93, 95, 97, 99, 100], "likelihood": [17, 79], "limit": [13, 20, 52, 68, 69, 70, 71, 75, 76, 97, 98, 99], "line": [0, 13, 15, 16, 17, 19, 20, 21, 50, 55, 58, 61, 74, 82, 87], "linear": 97, "lingua": 58, "link": [0, 2, 5, 43, 44], "linked_corpu": [1, 2, 5], "linked_raw": [1, 2, 5], "linux": 99, "list": [0, 1, 4, 6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 39, 40, 41, 45, 51, 59, 60, 69, 70, 77, 86, 89, 93], "list1": 21, "list2": 21, "liter": 45, "literal_ev": 93, "littl": [20, 38, 41, 97], "ll": [43, 45, 87, 99], "llama": [6, 8, 13, 15, 25, 32, 35, 41, 51, 52, 57], "llama3": [35, 99], "llama_docu": 6, "llama_document_to_parquet": 41, "llama_documents_to_parquet": [1, 6], "llama_gen_queri": [1, 2, 36, 37, 38], "llama_index": [0, 1, 15, 27, 34, 35, 36, 37, 38, 41, 49, 50, 59, 60, 83, 99], "llama_index_chunk": [25, 27, 36, 38], "llama_index_gen_gt": [1, 2, 34, 36, 38], "llama_index_generate_bas": [2, 4], "llama_index_llm": [0, 12, 19, 49, 50, 51, 52, 53, 75, 82, 84, 85, 86, 95, 97, 99], "llama_pars": [31, 32, 33], "llama_text_node_to_parquet": [1, 6, 41], "llamaindex": [14, 15, 17, 37, 41, 49, 51, 53, 56, 63, 64, 65, 75, 97], "llamapars": [0, 1], "llm": [3, 4, 8, 11, 12, 13, 15, 17, 20, 28, 29, 34, 36, 37, 38, 39, 41, 44, 47, 48, 50, 53, 58, 59, 60, 61, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 95, 97, 100], "llm evalu": 50, "llm infer": 53, "llm metric": [44, 96, 99], "llm_lingua": [15, 57], "llm_name": 15, "llmlingua": [15, 57], "llmlingua_pur": [12, 15], "load": [0, 6, 21, 23, 39, 41, 48], "load_bm25_corpu": [12, 21], "load_chroma_collect": [12, 21], "load_data": 41, "load_dotenv": 48, "load_summary_fil": [0, 23], "load_yaml": [1, 9], "loader": [30, 32, 41], "local": [41, 47, 49, 75, 92, 100], "local model": 49, "local_model": 8, "locat": 97, "log": [13, 51], "log2": 45, "log_cli": 48, "log_cli_level": 48, "logarithm": 45, "logarithmic": 45, "logic": 44, "logprob": [13, 52], "long": [19, 58, 82, 94, 97], "long context reord": 81, "long_context_reord": [0, 12, 81], "longer": 8, "longest": 11, "longllmlingua": [0, 12, 57], "look": [20, 21, 25, 32, 36, 38, 39, 42, 45, 46, 88, 89, 90, 93, 97], "loop": [23, 98], "lost in the middl": 81, "lot": [35, 39, 95, 100], "low": [13, 15], "lower": [13, 16, 23, 35, 45, 58, 62, 66, 92, 99], "lowercas": [26, 27, 30], "m": [17, 48, 76], "m3": 49, "mac": [48, 99], "made": [19, 35, 46, 97, 100], "magic": 97, "mai": [45, 98, 99], "main": [28, 97], "major": 49, "make": [0, 2, 5, 8, 17, 18, 19, 21, 23, 28, 37, 38, 39, 40, 47, 48, 51, 53, 58, 59, 60, 80, 81, 82, 83, 95, 97, 100], "make_basic_gen_gt": [2, 3, 34, 36, 38], "make_batch": [0, 23], "make_combin": [0, 23], "make_concise_gen_gt": [2, 3, 34, 36, 38], "make_gen_gt_llama_index": [2, 3], "make_gen_gt_openai": [2, 3], "make_generator_callable_param": [12, 19, 20], "make_llm": [12, 15], "make_node_lin": [0, 24], "make_qa_with_existing_qa": [1, 8, 41], "make_retrieval_callable_param": [12, 20], "make_retrieval_gt_cont": [1, 2, 5, 36, 38], "make_single_content_qa": [1, 8, 41], "make_trial_summary_md": [0, 24], "make_vllm_inst": [12, 13], "maker": [13, 19, 80, 83, 95, 97], "malayalam": 25, "malfunct": 100, "manag": 93, "mani": [20, 45, 51, 53, 59, 60, 86, 95], "manual": 100, "map": [0, 1, 2, 3, 4, 5, 11, 17, 18, 25, 28, 35, 36], "marco": [17, 76], "margin": 44, "markdown": [23, 31, 33], "marker": [47, 48, 97], "markov": 95, "mask": 18, "master": 11, "match": [11, 39, 44], "matter": 97, "max": [21, 52, 89], "max_ngram_ord": 11, "max_retri": 8, "max_token": [49, 51, 52, 53, 59, 60, 84, 85, 86, 87], "max_token_s": 13, "maximum": [8, 11, 17, 53, 76], "md": 41, "me": [80, 81, 82, 83, 95, 97], "mean": [0, 8, 11, 15, 16, 17, 21, 23, 34, 39, 41, 44, 46, 53, 61, 88, 89, 94, 95, 98, 99], "meant": 13, "measur": [0, 44, 46, 82, 87, 91], "measure_spe": [0, 24], "mechan": 98, "med": 73, "meet": 44, "meger": 97, "member": [37, 39], "memori": [68, 69, 70, 76, 99], "mention": [42, 43], "merced": [20, 86], "mere": 17, "merg": [15, 33, 60, 97, 98], "messag": [4, 17, 30], "metad": 9, "metadata": [0, 3, 4, 9, 17, 19, 25, 63, 78], "meteor": [10, 11, 50, 82, 93, 96, 97, 99], "method": [0, 6, 8, 11, 18, 19, 21, 22, 25, 32, 33, 34, 35, 36, 37, 38, 40, 44, 50, 82, 83, 87, 88, 89, 91, 93, 95, 96, 99], "metric": [0, 10, 13, 15, 19, 20, 21, 39, 50, 55, 58, 61, 74, 82, 87, 91, 93, 94, 96, 97, 98, 99], "metric_input": [10, 11, 13, 15, 19, 20, 21], "metric_nam": [44, 50], "metricinput": [10, 11, 13, 15, 19, 20, 21], "mexican": 37, "microsoft": 15, "might": [11, 40, 52, 95, 100], "min": [21, 89], "mind": [93, 100], "mini": [3, 37], "minilm": [17, 76], "minimum": [16, 20, 21, 86, 89, 100], "mip": 92, "miss": 99, "mistak": [35, 99, 100], "mistral": [49, 53, 88], "mistralai": [49, 53, 88], "mix": 98, "mjpost": 11, "mm": [21, 63, 89, 91], "mmarco": 73, "mock": [0, 49], "mockembed": 0, "mockembeddingrandom": [0, 24], "mockllm": 49, "modal": 39, "mode": [14, 55, 56], "model": [0, 3, 4, 8, 11, 13, 15, 16, 17, 18, 19, 20, 21, 33, 35, 36, 37, 39, 41, 43, 44, 45, 47, 48, 50, 51, 52, 53, 55, 58, 59, 60, 64, 65, 67, 68, 69, 70, 71, 72, 75, 76, 77, 79, 81, 82, 84, 85, 86, 88, 92, 94, 95, 97, 98, 99, 100], "model_computed_field": [0, 2, 3, 4, 12, 17, 24], "model_config": [0, 2, 3, 4, 12, 17, 24], "model_field": [0, 2, 3, 4, 12, 17, 24], "model_nam": [0, 3, 4, 15, 17, 23, 49, 57, 68, 69, 70, 73, 76], "modeling_enc_t5": [12, 17], "modest": 45, "modifi": [32, 39, 100], "modul": [24, 26, 27, 29, 30, 31, 38, 47, 54, 55, 61, 94, 96, 97, 99, 100], "modular": [94, 98], "modular rag": 97, "module_dict": 22, "module_nam": [0, 2, 5], "module_param": [0, 2, 5, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23], "module_summary_df": 21, "module_typ": [0, 19, 20, 22, 25, 26, 27, 29, 30, 31, 32, 33, 38, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 99], "module_type_exist": [0, 22], "monot5": [0, 12, 74], "monot5_run_model": [12, 17], "more": [4, 8, 13, 14, 15, 17, 20, 21, 26, 27, 30, 31, 36, 37, 38, 39, 40, 44, 45, 50, 53, 58, 72, 74, 75, 82, 83, 86, 87, 88, 94, 96, 98, 100], "most": [8, 38, 41, 45, 49, 50, 74, 83, 88, 91, 92, 93, 95, 100], "mpnet": [11, 49], "mrr": 11, "msmarco": [17, 73], "mt5": 73, "much": [35, 97, 99], "multi": [2, 4, 5, 20, 37, 39, 86, 87], "multi query expans": 85, "multi_context": [8, 40], "multi_query_expans": [0, 12, 49, 85], "multilingu": [17, 67, 88], "multipl": [2, 5, 19, 20, 21, 32, 85, 86, 89, 90, 93, 94, 95, 97, 98], "multiqueryretriev": [20, 85], "multitask": 49, "must": [0, 2, 5, 6, 8, 13, 15, 16, 17, 19, 21, 23, 26, 27, 37, 38, 39, 41, 42, 45, 49, 53, 55, 63, 73, 78, 80, 81, 83, 86, 89, 93, 97, 98, 99, 100], "n": [2, 11, 17, 20, 25, 29, 36, 38, 44, 48, 52, 78, 80, 81, 82, 83, 87, 97], "n_thread": 11, "naiv": 97, "name": [0, 2, 3, 4, 5, 10, 11, 13, 15, 17, 20, 21, 23, 37, 50, 52, 53, 55, 57, 58, 61, 64, 65, 74, 75, 82, 87, 88, 89, 90, 94, 100], "natur": [36, 44], "naver": 29, "necessari": [41, 87], "need": [8, 18, 20, 21, 25, 28, 33, 38, 39, 40, 41, 43, 45, 48, 58, 67, 71, 82, 86, 88, 92, 93, 94, 97, 99, 100], "nest": 23, "nested_list": 23, "never": 47, "new": [2, 5, 28, 37, 38, 39, 43, 48, 49, 53, 93, 96, 97, 100], "new_corpu": [2, 5], "new_corpus_df": 38, "new_embed": 18, "new_gen_gt": 3, "new_qa": 38, "newjeans1": 39, "newjeans2": 39, "newlin": [11, 20], "next": [14, 46, 55, 67, 71, 82, 97], "nlg": 44, "nn": 18, "node": [0, 6, 24, 39, 41, 46, 49, 51, 54, 84, 85, 86, 89, 96], "node_dict": 22, "node_dir": [0, 21], "node_lin": [24, 55, 58, 61, 74, 82, 87, 93, 94, 96, 97], "node_line_1": [49, 93, 97], "node_line_2": [93, 97], "node_line_3": 93, "node_line_dict": 0, "node_line_dir": [0, 13, 14, 15, 16, 17, 19, 20, 21, 22], "node_line_nam": [49, 50, 55, 58, 61, 74, 82, 87, 91, 93, 94, 96, 97], "node_nam": 0, "node_param": [0, 22], "node_pars": [27, 41], "node_postprocessor": 14, "node_summary_df": 0, "node_typ": [0, 19, 22, 49, 50, 55, 58, 61, 74, 82, 87, 91, 93, 96, 97, 99], "node_view": [0, 24], "nodewithscor": 17, "non": 33, "none": [0, 2, 5, 6, 8, 11, 13, 15, 16, 17, 18, 20, 21, 23, 50, 58, 82], "nonetyp": 0, "normal": [15, 17, 21, 70, 89], "normalize_dbsf": [12, 21], "normalize_mean": 96, "normalize_method": [21, 89, 91], "normalize_mm": [12, 21], "normalize_str": [0, 23], "normalize_tmm": [12, 21], "normalize_unicod": [0, 23], "normalize_z": [12, 21], "norwegian": 25, "notabl": [19, 81], "note": [17, 18, 55], "noth": 16, "nousresearch": [15, 57], "now": [36, 38, 39, 40, 41, 53, 92, 93, 95, 96, 97, 99, 100], "ntabl": 29, "nuevo": 37, "num_passag": [14, 56], "num_quest": [8, 41], "num_work": 0, "number": [0, 8, 14, 16, 17, 18, 20, 21, 23, 32, 41, 45, 46, 53, 55, 56, 58, 61, 86, 87, 94, 98, 100], "numer": 47, "object": [0, 2, 3, 4, 5, 17, 22, 41, 51, 59, 60, 63, 78, 84, 85, 86], "observ": [19, 43, 81], "obtain": 74, "occur": [39, 52, 93, 97, 99], "ocr": [29, 33], "off": 16, "offer": 89, "offici": [13, 23], "often": [37, 41, 88, 99], "okai": 39, "okt": 88, "ollama": [35, 49], "onc": [39, 51, 53, 59, 60, 67, 71, 89, 94, 97, 100], "one": [0, 2, 4, 5, 8, 15, 16, 17, 18, 19, 23, 25, 36, 37, 38, 39, 41, 42, 45, 63, 65, 66, 82, 93, 94, 95, 98, 99], "one_hop_quest": [2, 4], "onli": [8, 11, 15, 16, 17, 19, 23, 25, 32, 36, 37, 39, 46, 51, 59, 60, 63, 82, 83, 94, 95, 97, 100], "oom": [75, 99], "open": [92, 95, 99], "openai": [3, 4, 8, 11, 13, 17, 19, 20, 35, 36, 37, 38, 41, 49, 50, 51, 55, 58, 59, 60, 64, 65, 75, 82, 84, 85, 86, 87, 91, 92, 93, 95, 97], "openai_api_kei": [13, 48, 52, 93, 99], "openai_cli": [35, 37], "openai_embed_3_larg": [8, 41, 49], "openai_embed_3_smal": 49, "openai_gen_gt": [1, 2, 34], "openai_gen_queri": [1, 2, 37], "openai_llm": [0, 12, 82], "openai_truncate_by_token": [0, 23], "openaiembed": [16, 21, 40], "openailik": [49, 99], "oper": [39, 42, 58, 91, 98], "oppos": 55, "opt": 53, "optim": [0, 25, 28, 32, 35, 36, 39, 40, 47, 52, 53, 58, 64, 65, 88, 89, 90, 93, 94, 96, 97, 98], "optimize_hybrid": [12, 21], "option": [6, 8, 11, 13, 18, 21, 25, 32, 43, 48, 50, 55, 57, 58, 61, 72, 73, 74, 77, 79, 82, 87, 89, 90, 93, 95, 96, 98, 100], "order": [0, 11, 44, 45], "org": [19, 20, 47], "organ": 94, "orient": 44, "origin": [0, 16, 20, 21, 23, 63, 79], "original_str": 25, "original_text": 9, "other": [0, 11, 13, 21, 23, 39, 44, 45, 48, 51, 58, 59, 60, 61, 75, 84, 85, 86, 89, 93, 94, 95, 97, 100], "otherwis": 32, "our": [21, 25, 29, 32, 39, 41, 47, 48, 54, 62, 66, 84, 85, 86, 95, 97, 99, 100], "out": [16, 38, 39, 45, 47, 48, 49, 50, 53, 61, 62, 63, 64, 65, 66, 93, 94, 97, 99, 100], "outcom": [82, 87], "outperform": 44, "output": [0, 3, 8, 16, 17, 28, 37, 40, 42, 44, 50, 57, 79, 82, 87, 99], "output_attent": 18, "output_filepath": [6, 8, 41], "output_hidden_st": 18, "output_path": [0, 100], "over": [53, 98], "overal": [44, 74, 95], "overcom": 20, "overfit": 100, "overlap": 46, "overrid": [11, 16], "overridden": 18, "overview": 28, "overwrit": [6, 8], "own": [8, 29, 39, 47, 61, 84, 85, 86, 95, 98, 100], "p4dyxfmsa": [47, 97], "packag": [24, 48, 49, 99], "pad": 18, "pad_token": 18, "page": [25, 29, 32, 33, 36, 48, 75], "paid": 33, "pair": [8, 18, 23, 28, 41, 44], "panda": [21, 23, 40, 41], "paper": [11, 18, 37, 44, 79, 84, 86, 97], "paradigm": [44, 97], "paragraph": 17, "parallel": [17, 18, 21, 53], "param": [0, 11, 19, 20, 53, 94], "paramet": [0, 2, 3, 5, 6, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 31, 41, 43, 44, 49, 93, 94, 95, 98, 99, 100], "parent": 0, "parquet": [0, 2, 5, 6, 8, 25, 32, 36, 38, 39, 40, 41, 94, 99, 100], "pars": [0, 1, 2, 5, 25, 26, 27, 28, 29, 93], "parse_config": [25, 32], "parse_method": [26, 30, 32, 33, 38], "parse_modul": 30, "parse_output": [1, 8], "parse_project_dir": 38, "parsed_data_path": [0, 25], "parser": [24, 25, 38], "part": [28, 45, 98], "pass": [8, 13, 15, 18, 19, 21, 40, 51, 59, 60, 84, 85, 86, 97], "pass_compressor": [0, 12], "pass_passage_augment": [0, 12], "pass_passage_filt": [0, 12], "pass_query_expans": [0, 12], "pass_rerank": [0, 12], "pass_valu": 97, "passag": [2, 4, 5, 14, 15, 16, 17, 18, 19, 20, 21, 25, 35, 39, 45, 46, 56, 58, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 84, 88, 89, 90, 92, 97], "passage augment": [55, 56], "passage compressor": [58, 59, 60], "passage compressor metr": 46, "passage filt": [61, 62, 63, 64, 65, 66], "passage_augment": 55, "passage_augmenter_nod": [12, 14], "passage_compressor_nod": [12, 15], "passage_filt": 61, "passage_filter_nod": [12, 16], "passage_id": 21, "passage_rerank": 97, "passage_reranker_nod": [12, 17], "passage_str": 8, "passageaugment": [0, 12], "passagecompressor": [0, 12], "passagefilt": [0, 12], "passagererank": [0, 12], "path": [0, 2, 5, 8, 9, 17, 23, 25, 32, 40, 41, 42, 48, 88, 100], "pattern": 32, "payload": 42, "pd": [0, 6, 8, 23, 40, 41], "pdf": [20, 32, 38], "pdfminer": [30, 32, 38], "pdfplumber": [30, 32, 33, 38], "penalti": 11, "per": [16, 32, 41, 46, 65, 66, 96], "percentag": 45, "percentil": [16, 61], "percentile cutoff": 62, "percentile_cutoff": [0, 12, 62], "perfect": [35, 97], "perform": [2, 5, 11, 14, 15, 16, 17, 18, 19, 20, 25, 32, 33, 35, 37, 38, 39, 43, 45, 46, 47, 50, 52, 55, 58, 61, 74, 81, 82, 87, 95, 97], "persistentcli": 41, "perspect": [20, 85], "pertin": 74, "phase": [74, 87], "phrase": 3, "pickl": 21, "piec": 20, "pip": [47, 48, 99], "pipelin": [0, 28, 36, 38, 42, 43, 47, 89, 94, 95, 97], "pipeline_dict": 100, "pkl": 94, "place": 37, "placehold": [8, 41], "plan": [39, 50, 97], "platform": 13, "pleas": [8, 17, 20, 21, 38, 39, 45, 48, 49, 50, 53, 57, 79, 82, 87, 88, 93, 97, 98, 99, 100], "plu": [8, 21, 28, 39, 40, 48, 49, 53, 63, 64, 65, 78, 82, 86, 88, 92, 93], "polish": 25, "pop": 39, "popular": [44, 88], "port": [0, 42, 100], "porter": 11, "porter_stemm": 21, "portugues": 25, "posit": [19, 45, 81], "possibl": [95, 97, 99], "post": [0, 42, 97], "post_retrieve_node_lin": [50, 82], "potenti": [11, 28, 58], "power": [67, 71, 97], "ppv": 45, "pre": [35, 97, 100], "pre_retrieve_node_lin": 87, "precis": [11, 20, 44, 58, 84, 91], "pred": [11, 45], "predefin": [50, 58, 74], "predict": [11, 45], "prefix": [17, 79], "prefix_prompt": [17, 79], "prepare_for_model": 18, "preprocess": [0, 24], "present": 44, "pretti": 97, "prev": [14, 55], "prev next augment": 56, "prev_next_augment": [0, 12, 55, 56], "prev_next_augmenter_pur": [12, 14], "prevent": [3, 21, 25, 52, 75, 97], "preview": 11, "previou": [0, 13, 15, 16, 17, 19, 20, 21, 44, 66, 95, 97], "previous_result": [0, 13, 14, 15, 16, 17, 19, 20, 21, 22], "prevnextpostprocessordemo": 14, "primari": [55, 61, 74, 77], "primarili": 33, "primit": 41, "print": [17, 42], "prior": [41, 58], "priorit": 74, "prob": [13, 51], "probabl": [52, 53, 95], "problem": [38, 41, 44, 97, 99], "process": [8, 11, 16, 17, 18, 21, 23, 28, 41, 43, 47, 50, 53, 58, 74, 77, 82, 85, 87, 91, 92, 94, 95, 98, 100], "process_batch": [0, 23], "processed_data": [6, 8], "produc": 44, "product": 100, "project": [0, 47, 48], "project_dir": [0, 19, 20, 21, 23, 25, 32, 43, 100], "project_directori": 100, "prompt": [1, 2, 8, 13, 15, 17, 19, 20, 51, 53, 75, 79, 80, 81, 83, 84, 85, 95, 97], "prompt1": [8, 41], "prompt2": [8, 41], "prompt3": 41, "prompt_mak": [19, 82, 95, 97], "prompt_maker_nod": [12, 19], "promptcompressor": 15, "promptmak": [0, 12], "prompts_ratio": [8, 41], "proper": [8, 52], "properli": [23, 88], "properti": [2, 5], "propos": 97, "protected_namespac": 0, "provid": [17, 20, 29, 41, 43, 44, 51, 59, 60, 73, 79, 100], "pseudo": [13, 17, 52], "pt": 73, "ptt5": 73, "publicli": 0, "punctuat": 23, "punktsentencetoken": 25, "purpos": [55, 61, 74, 87, 98], "push": 99, "put": [15, 39, 41, 57, 99], "py": 11, "pyarrow": 99, "pydant": [0, 3, 4, 17], "pydantic_model_": 0, "pymupdf": 30, "pypdf": 30, "pypdfdirectori": 30, "pypdfdirectoryload": 30, "pypdfium2": 30, "pypi": 47, "pytest": 48, "python": [23, 26, 39, 41, 48, 80, 93, 99], "pythoncodetextsplitt": 26, "q": 41, "qa": [0, 1, 2, 3, 5, 8, 19, 20, 21, 25, 28, 34, 35, 37, 94, 100], "qa_cnt": 0, "qa_creation_func": [8, 41], "qa_data_path": [0, 100], "qa_dataset": 8, "qa_df": [2, 5, 23, 34, 35, 37, 40, 41], "qa_save_path": [2, 5], "qa_test": 100, "qacreat": [0, 1, 40, 41], "qid": [2, 5, 37], "qualiti": [44, 74, 100], "quantit": 98, "quantiz": 99, "queri": [0, 1, 2, 8, 11, 15, 16, 17, 18, 19, 20, 21, 23, 24, 30, 38, 42, 43, 55, 58, 59, 61, 64, 65, 66, 72, 73, 74, 75, 77, 80, 81, 82, 83, 84, 91, 92, 95, 97], "query decompos": 86, "query expans": [84, 85, 86, 87], "query_bundl": 17, "query_decompos": [0, 12, 49, 86, 87], "query_embed": [16, 17, 21], "query_expans": [0, 20, 82, 87, 95], "query_expansion_nod": [12, 20], "query_gen_openai_bas": [2, 4], "query_str": 15, "querybundl": 17, "queryexpans": [0, 12], "question": [2, 4, 5, 8, 17, 18, 19, 20, 28, 34, 39, 41, 42, 44, 47, 57, 77, 79, 80, 81, 82, 83, 86, 97, 100], "question_num": 8, "question_num_per_cont": [8, 41], "quickli": 58, "quit": [44, 50], "r": 48, "rag": [8, 25, 28, 32, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99], "rag api": 42, "rag dataset": [39, 40, 41], "rag deploi": [42, 43], "rag evalu": [39, 40, 41, 44, 45, 46, 50, 96, 99], "rag llm": 49, "rag metr": [44, 45, 46, 96, 99], "rag model": 49, "rag optim": [47, 93, 95, 98], "rag perform": 95, "rag structur": 98, "rag tutori": 100, "rag web": 43, "raga": [0, 1, 45], "rais": 11, "raise_except": 8, "ran": 94, "random": [0, 8, 24, 53], "random_single_hop": [1, 2, 36, 38], "random_st": [0, 2, 8], "randomli": [8, 36, 41], "rang": [18, 36, 89, 90], "range_single_hop": [1, 2, 36], "rank": [11, 17, 18, 21, 88, 90], "rankgpt": [0, 12, 74], "rankgpt_rerank_prompt": [12, 17, 75], "rankgptrerank": 17, "rate": [45, 99], "ratio": [8, 41], "ratio_dict": 41, "raw": [1, 2, 5, 28, 29, 30, 31, 32, 33, 36, 38, 47], "raw_df": [0, 2, 5], "raw_end_idx": [2, 5], "raw_id": [2, 5], "raw_start_idx": [2, 5], "re": [16, 64, 65, 97], "read": [19, 47, 80, 81, 82, 83, 93, 97, 99], "read_parquet": [40, 41], "readi": [41, 48, 95, 100], "real": [13, 39, 41, 43, 52, 97], "realli": [21, 39, 53, 95, 97], "reason": [8, 40], "reassess": 74, "recal": [11, 44, 58, 91], "receiv": [17, 43], "recenc": [0, 12, 61], "recency_filt": [12, 16, 63], "recip": 18, "reciproc": [11, 21, 90, 96], "recogn": 99, "recommend": [11, 17, 19, 37, 38, 39, 52, 82, 88, 94, 97, 99, 100], "reconstruct": 23, "reconstruct_list": [0, 23], "record": 94, "recurs": [15, 23, 60], "recursivecharact": 26, "recursivecharactertextsplitt": 41, "reduc": [45, 58], "reduct": 58, "refer": [8, 13, 38, 44, 45, 50, 82, 87, 98, 100], "refin": [0, 12, 58, 74], "reflect": 88, "regist": 18, "rel": 11, "relat": [39, 44, 45, 51, 59, 60, 61, 79, 84, 85, 86], "relationship": 9, "releas": [28, 37], "relev": [11, 17, 18, 20, 39, 41, 45, 50, 58, 73, 74, 75, 84, 87, 91], "remain": [16, 98], "remeb": 41, "rememb": [45, 48, 95], "remind": 100, "remov": [21, 22, 23, 35, 41], "reorder": [19, 74, 82], "repeat": 8, "replac": [0, 2, 3, 4, 5, 15, 17, 19, 23, 43, 82], "replace_valu": 23, "replace_value_in_dict": [0, 23], "repo": [39, 47, 88, 100], "repositori": 48, "repres": [92, 95], "request": [0, 42, 97], "request_timeout": 99, "requir": [0, 3, 4, 8, 11, 17, 32, 37, 44, 48, 51, 58, 59, 60, 73, 84, 85, 86, 89, 90, 98], "rerank": [15, 16, 17, 18, 39, 58, 63, 67, 71, 73, 74, 75, 77, 79, 97], "reranker_recal": 97, "reset": [35, 39, 99], "reset_index": [35, 36, 38, 99], "resid": 98, "resolv": 99, "resourc": [21, 95], "respect": 46, "respond": 87, "respons": [0, 2, 3, 4, 15, 42, 43, 58, 59, 87], "response_synthes": 15, "rest": 75, "restart_evalu": 100, "restart_tri": [0, 24, 100], "result": [0, 2, 5, 8, 11, 13, 15, 16, 17, 19, 20, 21, 23, 26, 27, 31, 33, 35, 37, 38, 41, 42, 44, 45, 46, 47, 52, 55, 66, 74, 82, 87, 89, 91, 94, 96, 97, 99], "result_column": [0, 24, 42], "result_df": [13, 15, 19, 21], "result_qa": [34, 37], "result_to_datafram": [0, 23], "result_typ": [31, 33], "retreived_cont": [80, 81, 83], "retri": [8, 95], "retriev": [0, 8, 12, 14, 15, 16, 17, 18, 19, 20, 24, 25, 34, 35, 39, 49, 55, 56, 57, 58, 60, 67, 71, 74, 79, 82, 83, 84, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98], "retrieval metr": 45, "retrieval_cont": [0, 24], "retrieval_f1": [10, 11, 16, 17, 20, 55, 61, 74, 87, 91], "retrieval_func": 20, "retrieval_gt": [2, 4, 5, 25, 37, 38, 41], "retrieval_gt_cont": [2, 5], "retrieval_map": [10, 11], "retrieval_modul": [20, 87], "retrieval_mrr": [10, 11], "retrieval_ndcg": [10, 11], "retrieval_nod": [12, 21], "retrieval_param": 20, "retrieval_precis": [10, 11, 16, 17, 55, 61, 74, 87, 91, 96], "retrieval_recal": [10, 11, 16, 17, 20, 55, 61, 74, 87, 91, 96, 97], "retrieval_result": 45, "retrieval_token_f1": [10, 11, 58], "retrieval_token_precis": [10, 11, 58], "retrieval_token_recal": [10, 11, 58], "retrieve metr": 45, "retrieve_node_lin": [55, 58, 61, 74, 91], "retrieve_scor": [15, 16, 17, 19, 21], "retrieved_cont": [15, 16, 17, 19, 21, 80, 81, 82, 83, 97], "retrieved_id": [15, 16, 17, 21], "retrieved_metadata": 19, "return": [0, 2, 3, 4, 5, 6, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 33, 51, 52, 61, 63, 86, 92, 93], "return_dict": 18, "return_index": 0, "revers": [16, 23, 62, 66], "right": [13, 41, 49, 97, 100], "rl_polici": 97, "roadmap": 94, "roberta": 49, "robust": 37, "root": 48, "roug": [10, 11, 50, 82, 93, 96, 97, 99], "rouge1": 11, "rouge2": 11, "rouge_typ": 11, "rougel": 11, "rougelsum": 11, "row": [3, 4, 21, 23, 39, 94], "rpm": 71, "rr": [11, 45], "rrf": [21, 89, 91], "rrf_calcul": [12, 21], "rrf_k": [21, 87, 90, 93], "rrf_pure": [12, 21], "rubert": 49, "run": [0, 1, 2, 5, 12, 18, 22, 24, 28, 36, 47, 48, 58, 62, 63, 64, 65, 66, 93, 94, 95], "run_api": [42, 100], "run_api_serv": [0, 24, 42, 100], "run_config": 8, "run_generator_nod": [12, 13], "run_nod": [0, 22], "run_node_lin": [0, 24], "run_passage_augmenter_nod": [12, 14], "run_passage_compressor_nod": [12, 15], "run_passage_filter_nod": [12, 16], "run_passage_reranker_nod": [12, 17], "run_prompt_maker_nod": [12, 19], "run_query_embedding_batch": [12, 21], "run_query_expansion_nod": [12, 20], "run_retrieval_nod": [12, 21], "run_web": [0, 24, 43, 100], "runner": [0, 24, 42, 100], "runnerinput": [0, 24], "russian": 25, "sacrebleu": 11, "safe": 23, "said": 44, "same": [0, 20, 21, 23, 25, 32, 42, 43, 45, 55, 75, 86, 94, 95, 98, 100], "sampl": [0, 1, 5, 8, 25, 32, 37, 38, 41, 45, 53, 99, 100], "sample_config": 100, "samplingparam": 53, "satisfactori": [38, 41], "save": [0, 2, 5, 6, 8, 13, 25, 29, 31, 32, 39, 93, 100], "save_parquet_saf": [0, 23], "save_path": [2, 5], "scalabl": 41, "scale": [21, 58, 89, 96], "schema": [0, 1, 11, 21, 24, 28, 30, 34, 35, 37, 38], "score": [11, 14, 15, 16, 17, 18, 19, 21, 23, 46, 58, 62, 65, 66, 88, 89, 90, 91], "scores_list": [14, 16, 17, 18], "script": [23, 39], "search": [20, 87, 88, 92], "search_str": 9, "second": [13, 18, 37, 46, 94, 97], "secret": 93, "section": [25, 32, 36, 93, 96, 98, 100], "secur": 99, "see": [13, 25, 28, 32, 38, 45, 46, 49, 93, 94, 95, 97, 99], "seed": 8, "seek": [37, 44], "segment": 44, "select": [0, 2, 5, 8, 13, 15, 16, 17, 19, 20, 21, 37, 38, 41, 88, 94, 95, 96, 97, 98], "select_best": [0, 24], "select_best_averag": [0, 24], "select_best_rr": [0, 24], "select_bm25_token": [12, 21], "select_normalize_mean": [0, 24], "select_top_k": [0, 23], "self": [20, 86], "sem": 11, "sem_scor": [10, 11, 82, 93], "semant": [21, 44, 50, 88, 89], "semantic_id": 21, "semantic_llama_index": [25, 27], "semantic_scor": 21, "semantic_summari": 21, "semantic_summary_df": 21, "semantic_theoretical_min_valu": [21, 89], "semanticdoubl": 25, "semanticdoublemerg": 27, "semscor": 44, "send": [0, 67, 71], "sensit": 45, "sentenc": [11, 17, 19, 35, 38, 44, 49, 64, 65, 74, 83, 88], "sentence transform": 76, "sentence_splitt": [25, 38], "sentence_splitter_modul": 25, "sentence_transform": [0, 12], "sentence_transformer_max_length": [17, 76], "sentence_transformer_rerank": [12, 17, 76], "sentence_transformer_run_model": [12, 17], "sentencetransformerstoken": 26, "sentencewindow": [25, 27, 38], "separ": 20, "sequenc": [17, 18, 98], "seri": 23, "serializeasani": 17, "seriou": [99, 100], "serv": [17, 50, 58, 74, 79, 82, 87, 91, 98], "server": [0, 47, 52, 92, 99], "server_nam": [0, 43], "server_port": [0, 43], "set": [0, 2, 5, 8, 13, 15, 17, 18, 19, 21, 29, 30, 31, 41, 47, 48, 49, 50, 51, 52, 53, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 74, 75, 79, 82, 84, 85, 86, 87, 89, 92, 93, 94, 95, 97, 98, 99], "set_initial_st": [0, 24], "set_input_embed": [17, 18], "set_page_config": [0, 24], "set_page_head": [0, 24], "setup": 95, "sever": [44, 52, 100], "shape": [11, 23], "share": [0, 43, 100], "shareabl": 0, "short": [34, 97], "shot": [20, 79, 84, 86], "should": [0, 3, 4, 8, 11, 13, 15, 17, 18, 25, 30, 44, 49, 52, 63, 99], "show": [37, 94, 95, 97], "shown": 38, "side": 52, "sigma": [21, 89], "signal": [17, 79], "signific": 19, "significantli": [58, 87, 98], "silent": 18, "similar": [11, 16, 20, 44, 50, 55, 61, 62, 66, 88, 89, 90, 92, 95], "similarity percentile cutoff": 64, "similarity_percentile_cutoff": [0, 12, 64], "similarity_percentile_cutoff_pur": [12, 16], "similarity_threshold_cutoff": [0, 12, 61, 65], "similarity_threshold_cutoff_pur": [12, 16], "simpl": [0, 1, 3, 35, 40, 44, 50, 88, 97], "simpledirectoryread": 41, "simpli": [49, 78, 100], "simul": 98, "sinc": [17, 18, 35, 38, 41, 43, 45, 50, 52, 75, 80, 82, 83], "singl": [0, 2, 5, 8, 18, 23, 36, 39, 41, 47, 86, 93, 94, 97, 98], "single_token_f1": [10, 11], "situat": 89, "six": 46, "size": [0, 8, 11, 13, 15, 38, 52, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 89, 92, 99], "sk": 48, "skip": [15, 16, 17, 19, 82], "slice_tensor": [12, 17], "slice_tokenizer_result": [12, 17], "slovenian": 25, "slow": 53, "slower": [35, 58], "small": [8, 49], "smaller": 45, "smooth": 11, "smooth_method": 11, "smooth_valu": 11, "so": [0, 3, 13, 15, 17, 21, 25, 28, 29, 35, 36, 38, 39, 41, 43, 44, 45, 46, 48, 49, 53, 55, 58, 61, 62, 63, 64, 65, 66, 74, 82, 86, 87, 90, 93, 94, 95, 97, 100], "softwar": 92, "solut": [38, 41, 97], "some": [9, 13, 15, 20, 21, 28, 35, 36, 39, 44, 46, 48, 49, 52, 67, 71, 89, 95, 99], "someon": [20, 86], "someth": [41, 80, 81, 82, 83, 99], "sometim": [35, 52, 99], "soon": 97, "sort": [23, 78], "sort_by_scor": [0, 23], "sound": 45, "sourc": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 39, 89, 90, 92], "sp_model_kwarg": 18, "spanish": 25, "spars": [21, 88], "spearman": 44, "special": [18, 23, 58], "specif": [11, 32, 34, 37, 50, 58, 73, 77, 88, 98, 100], "specifi": [15, 21, 39, 42, 49, 50, 51, 59, 60, 72, 73, 77, 78, 82, 87, 89, 90, 95, 96, 98], "speed": [0, 50, 53, 58, 74, 82, 87, 91, 93, 98], "speed_threshold": [50, 55, 58, 61, 74, 82, 87, 91, 93, 96, 98], "spice": [20, 86], "split": [11, 25, 33, 94, 98, 100], "split_by_sentence_kiwi": [0, 1, 25], "split_datafram": [0, 23], "split_docu": 41, "split_into_s": 25, "split_summari": 11, "splitter": [26, 27], "squad": 23, "squar": [20, 86], "ss": 63, "stabl": [14, 15, 37], "stage": [17, 79], "standalon": 53, "standard": [0, 44], "start": [0, 19, 23, 39, 81, 100], "start_chunk": [0, 24, 25, 38], "start_end_idx": 25, "start_pars": [32, 38], "start_trial": [0, 24, 100], "starter": [47, 100], "state": [8, 18, 37, 95], "statist": 45, "stem": [44, 88], "stemmer": [11, 88], "step": [2, 5, 17, 25, 32, 33, 36, 48, 74, 97], "still": [95, 97, 99], "storag": 29, "store": [2, 5, 17, 25, 92], "str": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 33, 41], "straight": 97, "strateg": 98, "strategi": [13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 39, 55, 61, 93, 97, 99], "strategy_dict": [19, 20], "strategy_nam": [0, 19, 20], "strategyqa": [20, 86], "stream": 52, "string": [8, 10, 16, 19, 21, 23, 25, 39, 41, 79, 82, 93], "strip": 11, "structur": [3, 8, 21, 37, 93, 97, 100], "struggl": 19, "studi": [19, 81, 88], "sub": [20, 86], "subclass": 18, "submodul": [1, 12, 24], "subpackag": 24, "subsequ": 11, "subset": [2, 5], "successfulli": [25, 32, 100], "sudo": 99, "suffix": [11, 17, 79], "suffix_prompt": [17, 79], "suggest": [39, 95, 97, 99], "sum": [8, 45], "summar": [15, 44, 58], "summari": [0, 13, 23, 25, 32, 34, 45, 95, 100], "summary_df": [0, 21, 23], "summary_df_to_yaml": [0, 24], "summary_path": 23, "super": 37, "support": [3, 21, 24, 35, 36, 37, 39, 40, 41, 45, 47, 51, 52, 54, 59, 60, 64, 65, 67, 71, 89, 93, 97, 98], "sure": 100, "survei": 97, "swap": 98, "swedish": 25, "synonym": 44, "synthet": [38, 41], "system": [39, 50, 51, 58, 59, 60, 74, 82, 91, 98], "system_prompt": 3, "t": [8, 19, 21, 23, 28, 32, 36, 39, 40, 41, 43, 45, 47, 82, 86, 89, 97, 99], "t5": [17, 18], "t5config": 18, "t5pretrainedmodel": 18, "t5token": 18, "tabl": 32, "table_detect": [29, 33], "table_hybrid_pars": [0, 1, 32, 33], "table_param": 33, "table_parse_modul": 33, "tailor": [58, 90, 98], "take": [18, 49, 97], "taken": 23, "target": [8, 15, 23, 57, 97], "target_dict": [0, 23], "target_modul": [21, 87, 89, 93], "target_module_param": [21, 89], "target_node_lin": 97, "target_token": [15, 57], "tart": [12, 17, 73, 74], "tart_run_model": [17, 18], "tartrerank": 18, "task": [18, 20, 23, 44, 50], "team": 29, "techniqu": 98, "tecolot": 37, "tell": [80, 81, 82, 83], "temp_client": 21, "temperatur": [40, 41, 49, 50, 51, 52, 53, 59, 60, 75, 84, 85, 86, 87, 95, 99], "templat": [15, 17], "temporari": [8, 98], "temporarili": 98, "tensor_parallel_s": 53, "term": [45, 87], "test": [43, 45, 48, 49, 50, 55, 58, 61, 74, 87, 89, 93, 94, 95], "test_siz": [8, 40], "test_weight_s": [89, 91], "testset": 40, "text": [6, 8, 11, 13, 15, 17, 21, 23, 25, 26, 27, 28, 31, 32, 33, 39, 41, 42, 49, 50, 51, 53, 57, 59, 60, 76, 79], "text_nod": 6, "text_param": 33, "text_parse_modul": 33, "text_splitt": 26, "textnod": [6, 41], "textur": [20, 86], "tf": 88, "than": [4, 8, 16, 20, 21, 35, 39, 44, 53, 55, 63, 86, 88, 94, 95, 97, 99], "thei": [37, 41, 44, 58, 93, 97, 98], "them": [15, 18, 19, 20, 21, 31, 39, 45, 60, 95], "theoret": [21, 89], "therefor": [17, 18, 33, 41, 45, 46, 82, 87], "thi": [0, 3, 4, 6, 8, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 48, 49, 50, 51, 52, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "thing": [93, 100], "think": [39, 93, 95, 97], "third": [13, 21, 45, 46], "those": [37, 89], "thought": 44, "three": [13, 25, 28, 32, 46, 63, 94, 97], "threshold": [0, 16, 50, 58, 61, 63, 74, 82, 87, 91, 93, 98], "threshold cutoff": 66, "threshold_cutoff": [0, 12, 66], "threshold_cutoff_pur": [12, 16], "through": [18, 47, 82, 87], "thu": 45, "tier": 99, "time": [8, 16, 28, 38, 39, 43, 47, 50, 58, 61, 62, 63, 64, 74, 82, 87, 91, 94, 95, 98, 100], "time_list": [16, 17], "time_rerank": [0, 12, 78], "timeout": 99, "timererank": 78, "tiny2": 49, "tmm": [21, 89, 91], "to_list": [0, 23], "to_parquet": [1, 2, 5, 36, 38], "token": [11, 12, 13, 15, 17, 18, 21, 25, 36, 38, 44, 50, 53, 57, 58, 75, 82], "token_false_id": 17, "token_ids_0": 18, "token_ids_1": 18, "token_limit": 23, "token_threshold": [50, 82], "token_true_id": 17, "tokenization_enc_t5": [12, 17], "tokenize_ko_kiwi": [12, 21], "tokenize_ko_kkma": [12, 21], "tokenize_ko_okt": [12, 21], "tokenize_porter_stemm": [12, 21], "tokenize_spac": [12, 21], "tokenizer_output": 17, "tokentextsplitt": 41, "too": [8, 67, 71, 94, 95], "took": 94, "tool": 47, "top": [17, 53, 55, 74, 87, 91, 94], "top_k": [8, 17, 18, 20, 21, 23, 41, 55, 61, 74, 87, 89, 90, 91, 93, 96, 97], "top_logprob": 52, "top_n": [12, 17], "top_p": 53, "topic": 44, "topn": 45, "torch": 18, "total": 46, "tpm": 71, "trail": [94, 100], "trail_fold": 0, "train": [94, 100], "transform": [17, 49, 53, 74], "translat": 44, "treat": [39, 93], "tree": 58, "tree summar": 60, "tree_summar": [0, 12, 49, 58, 60], "treesummar": 15, "trg_lang": 11, "trial": [0, 42], "trial_dir": [0, 23, 100], "trial_fold": [25, 32, 42, 43, 100], "trial_path": [0, 43], "troubl": [47, 99], "troubleshoot": [47, 48], "true": [0, 3, 4, 6, 8, 13, 16, 17, 22, 23, 29, 33, 35, 36, 38, 41, 43, 45, 48, 52, 62, 66, 99], "truncat": [13, 21], "truncate_by_token": [12, 13], "truth": [8, 11, 34, 39, 44, 45, 50, 95], "try": [48, 92, 97, 99], "tune": 85, "tupl": [0, 9, 10, 13, 16, 17, 18, 21, 22, 23, 89, 90], "turbo": [13, 17, 19, 40, 41, 50, 51, 52, 58, 59, 60, 75, 82, 85, 86, 95, 99], "turkish": 25, "turn": 10, "tutori": [28, 40, 42, 43, 47, 97], "twist": 17, "two": [2, 4, 5, 18, 21, 39, 41, 44, 45, 53, 71, 96, 97, 100], "two_hop_increment": [2, 4, 37], "two_hop_quest": [2, 4], "twohopincrementalrespons": [2, 4], "txt": [8, 41, 48], "type": [0, 8, 11, 18, 19, 21, 22, 23, 25, 31, 32, 36, 39, 41, 42, 45, 49, 50, 52, 53, 67, 68, 69, 70, 71, 76, 84, 85, 86, 87, 88, 91, 97, 100], "typic": [19, 37, 81], "tyre": 97, "u": [20, 86], "ultim": 47, "unanswer": 36, "under": [95, 99], "underscor": 58, "understand": [94, 95], "understudi": 44, "unexpect": [39, 100], "unicamp": 73, "uniform": 40, "unigram": [11, 44], "unintend": [35, 93], "union": 0, "uniqu": [21, 39, 58, 98], "unit": 41, "unk": 18, "unk_token": 18, "unknown": 0, "unless": 23, "unstructur": 30, "unstructured_api_kei": 30, "unstructuredmarkdown": 30, "unstructuredpdf": 30, "unstructuredxml": 30, "unsupervis": 17, "until": 98, "up": [15, 39, 46, 58, 60, 98, 100], "updat": [2, 5, 38, 49], "update_corpu": [1, 2, 5, 38], "upgrad": [53, 99], "upr": [0, 12, 74, 97], "uprscor": [12, 17], "upsert": [6, 8, 23], "upstage_api_kei": 30, "upstagelayoutanalysi": [30, 33], "url": 42, "us": [0, 2, 3, 4, 5, 6, 8, 11, 13, 15, 16, 17, 18, 19, 20, 21, 23, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 45, 46, 47, 48, 50, 51, 55, 57, 58, 59, 60, 61, 63, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 97, 99], "usag": [21, 58, 75, 92], "use_bf16": [17, 79], "use_fp16": [17, 69, 70], "use_stemm": 11, "user": [0, 20, 39, 41, 42, 43, 48, 55, 56, 79, 82, 85, 91, 94, 96, 97, 100], "usual": 34, "util": [0, 1, 24, 74], "v0": [28, 41, 49, 50, 53, 88], "v1": [0, 3, 4, 17, 23, 49, 67, 71, 73], "v2": [11, 17, 49, 67, 69, 73, 76], "vagu": 35, "valid": [2, 5, 8, 24, 95], "validate_corpus_dataset": [0, 23], "validate_llama_index_prompt": [1, 8], "validate_qa_dataset": [0, 23], "validate_qa_from_corpus_dataset": [0, 23], "validate_strategy_input": [0, 24], "valu": [0, 8, 10, 11, 16, 18, 21, 22, 23, 26, 27, 30, 39, 41, 44, 45, 49, 62, 63, 64, 65, 66, 78, 89, 90, 93, 95, 96, 99], "valuabl": 41, "value_column_nam": 23, "vari": [87, 89, 98], "variabl": [13, 17, 23, 30, 48, 52, 67, 71, 99], "variant": 73, "variat": [39, 87], "variou": [25, 32, 38, 47, 50, 58, 74, 82, 91], "vector": [0, 8, 20, 92, 97], "vector db": 92, "vector_db": 21, "vectordb": [0, 12, 20, 41, 49, 87, 88, 91, 93, 94], "vectordb_ingest": [12, 21], "vectordb_pur": [12, 21], "verbos": [12, 17, 75], "veri": 47, "verifi": 37, "version": [20, 21, 28, 37, 39, 53, 95, 96, 99, 100], "video": 39, "viscond": [20, 86], "visit": [14, 15, 21], "vllm": [0, 12, 50, 82, 99], "vllm_instanc": 13, "vocab_fil": 18, "vocabulari": 18, "voil\u00e0": 97, "vram": 99, "wa": [21, 25, 29, 32, 37, 44, 45, 49, 95, 99], "wai": [20, 25, 32, 35, 43, 93, 95, 97, 99], "wait": [48, 53], "want": [0, 2, 5, 8, 15, 18, 19, 21, 22, 23, 26, 27, 30, 33, 35, 37, 39, 41, 46, 47, 48, 49, 63, 67, 68, 69, 70, 71, 76, 78, 89, 90, 93, 95, 98], "warn": 11, "water": 46, "we": [11, 15, 16, 17, 25, 28, 32, 35, 36, 37, 38, 39, 41, 43, 44, 45, 47, 48, 49, 50, 53, 82, 87, 88, 92, 93, 94, 95, 97, 99, 100], "web": 24, "weight": [11, 21, 44, 87, 89, 90], "weight_rang": [89, 90, 91], "welcom": 97, "well": [25, 32, 36, 41, 44, 45, 47], "were": 43, "what": [17, 20, 25, 32, 37, 39, 45, 47, 49, 79, 80, 81, 82, 83, 86, 94, 98], "when": [0, 8, 11, 15, 16, 17, 18, 19, 20, 21, 29, 37, 39, 46, 48, 49, 50, 52, 53, 61, 63, 71, 78, 81, 82, 86, 92, 93, 94, 98, 99, 100], "where": [15, 47, 58, 91, 94], "whether": [0, 6, 11, 13, 17, 18, 44, 52, 69, 70, 79], "which": [0, 8, 11, 13, 18, 19, 20, 21, 23, 37, 39, 41, 43, 44, 45, 46, 47, 49, 51, 58, 59, 60, 61, 71, 82, 88, 89, 90, 93, 95, 97, 99, 100], "whichev": 45, "while": [18, 35, 41, 48, 98], "whitespac": [21, 23], "who": [37, 100], "whole": [0, 2, 5, 11, 95, 100], "why": [39, 95, 97], "wikipedia": 37, "wildcard": 32, "window": [19, 82, 99], "window_replac": [0, 12, 83], "window_s": [25, 38], "wise": 75, "with_debugging_log": 8, "within": [18, 50, 58, 74, 82, 91, 98], "without": [20, 33, 47, 51, 52, 55, 58, 59, 60, 61, 74, 84, 87, 89, 97], "wonder": 95, "word": [3, 11, 34, 44, 88], "work": [41, 89, 93, 99, 100], "workaround": 99, "worker": 0, "would": [20, 45, 94], "wrapper": 15, "write": [17, 20, 28, 48, 75, 79, 86, 89, 93, 95, 97], "written": [26, 27, 30], "wrong": [25, 41, 97], "wsl": 99, "x": [0, 17, 18, 25, 42], "xl": 18, "yaml": [0, 17, 19, 38, 42, 44, 47, 49, 95, 96, 97, 98, 99], "yaml_filepath": 0, "yaml_path": [0, 9, 43, 100], "yaml_to_markdown": [0, 24], "ye": 37, "yet": [28, 40, 97], "yml": [0, 93], "you": [0, 2, 5, 6, 8, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 78, 82, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98, 99, 100], "your": [0, 8, 11, 20, 25, 28, 29, 31, 32, 39, 42, 43, 47, 48, 52, 53, 61, 67, 71, 80, 81, 82, 83, 84, 85, 86, 90, 93, 95, 96, 97, 99], "your_api_bas": 49, "your_api_kei": [49, 99], "your_cohere_api_kei": 67, "your_dir_path": 41, "your_jina_api_kei": 71, "your_result_column": 42, "yourself": [21, 89], "yyyi": 63, "z": [21, 89, 91], "zero": [18, 20, 79, 84]}, "titles": ["autorag package", "autorag.data package", "autorag.data.beta package", "autorag.data.beta.generation_gt package", "autorag.data.beta.query package", "autorag.data.beta.schema package", "autorag.data.corpus package", "autorag.data.parse package", "autorag.data.qacreation package", "autorag.data.utils package", "autorag.evaluation package", "autorag.evaluation.metric package", "autorag.nodes package", "autorag.nodes.generator package", "autorag.nodes.passageaugmenter package", "autorag.nodes.passagecompressor package", "autorag.nodes.passagefilter package", "autorag.nodes.passagereranker package", "autorag.nodes.passagereranker.tart package", "autorag.nodes.promptmaker package", "autorag.nodes.queryexpansion package", "autorag.nodes.retrieval package", "autorag.schema package", "autorag.utils package", "autorag", "Chunk", "Langchain Chunk", "Llama Index Chunk", "Data Creation", "Clova", "Langchain Parse", "Llama Parse", "Parse", "Table Hybrid Parse", "Answer Generation", "Filtering", "QA creation", "Query Generation", "Evaluation data creation tutorial", "Dataset Format", "RAGAS evaluation data generation", "Start creating your own evaluation data", "API endpoint", "Web Interface", "Generation Metrics", "Retrieval Metrics", "Retrieval Token Metrics", "AutoRAG documentation", "Installation and Setup", "Configure LLM &amp; Embedding models", "8. Generator", "llama_index LLM", "OpenAI LLM", "vllm", "Available List", "3. Passage Augmenter", "Prev Next Augmenter", "Long LLM Lingua", "6. Passage_Compressor", "Refine", "Tree Summarize", "5. Passage Filter", "Percentile Cutoff", "Recency Filter", "Similarity Percentile Cutoff", "Similarity Threshold Cutoff", "Threshold Cutoff", "cohere_reranker", "Colbert Reranker", "Flag Embedding LLM Reranker", "Flag Embedding Reranker", "jina_reranker", "Ko-reranker", "MonoT5", "4. Passage_Reranker", "RankGPT", "Sentence Transformer Reranker", "TART", "Time Reranker", "UPR", "F-String", "Long Context Reorder", "7. Prompt Maker", "Window Replacement", "HyDE", "Multi Query Expansion", "Query Decompose", "<strong>1. Query Expansion</strong>", "BM25", "Hybrid - cc", "Hybrid - rrf", "2. Retrieval", "Vectordb", "Make a custom config YAML file", "Folder Structure", "How optimization works", "Strategy", "Road to Modular RAG", "Structure", "TroubleShooting", "Tutorial"], "titleterms": {"": 45, "0": [45, 46], "1": [25, 26, 27, 29, 30, 32, 35, 36, 37, 38, 43, 44, 45, 46, 52, 87, 99, 100], "2": [25, 26, 27, 29, 30, 32, 36, 37, 38, 43, 44, 45, 46, 52, 91, 99, 100], "3": [25, 26, 27, 30, 32, 36, 37, 38, 43, 44, 45, 46, 52, 55, 99, 100], "4": [25, 27, 30, 32, 36, 38, 44, 45, 74, 99], "5": [27, 30, 36, 44, 45, 61, 99], "6": [30, 36, 44, 45, 58, 99], "7": [30, 82], "8": 50, "For": 88, "If": 41, "The": [29, 99], "about": 97, "accur": 52, "add": [25, 49], "addit": [89, 90], "all": [30, 95], "also": 100, "an": 100, "ani": 88, "answer": [34, 36], "api": [30, 42, 48, 99, 100], "appli": [45, 46], "augment": [55, 56], "auto": [41, 52], "autorag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 43, 45, 46, 47, 97, 100], "autotoken": 88, "avail": [25, 26, 27, 30, 33, 54], "averag": 45, "backend": 92, "base": [3, 7, 8, 13, 14, 15, 16, 17, 19, 20, 21, 35], "basic": [28, 34, 45, 46], "befor": [67, 71], "benefit": [55, 58, 61, 74, 87], "bert": 44, "best": 95, "beta": [2, 3, 4, 5], "between": 61, "bleu": 44, "bm25": [21, 88], "both": 41, "build": [48, 99], "can": [47, 95], "cc": 89, "charact": 26, "check": [25, 32], "chunk": [25, 26, 27, 38], "chunker": [0, 25], "cli": [0, 43, 100], "clova": [7, 29], "coher": [17, 44], "cohere_rerank": 67, "colab": 100, "colbert": [17, 68], "column": [25, 32], "come": 29, "command": 100, "complet": 37, "concept": [28, 37, 98], "concis": 34, "config": [50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 100], "configur": [49, 96], "consist": 44, "contact": 97, "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 36, 39], "context": 81, "corpu": [6, 38, 39, 40, 41], "could": 99, "creat": [41, 100], "creation": [28, 36, 38], "csv": [30, 94], "cumul": 45, "custom": [40, 41, 93, 100], "cutoff": [62, 64, 65, 66], "dashboard": [0, 100], "data": [1, 2, 3, 4, 5, 6, 7, 8, 9, 28, 36, 38, 40, 41, 94, 99], "data_path_glob": 32, "dataset": [39, 100], "decompos": 86, "default": 86, "definit": [44, 45, 46, 50, 55, 58, 61, 74, 82, 87, 91], "deploi": [0, 100], "detect": [29, 33], "didn": 100, "differ": [61, 99], "discount": 45, "do": 95, "doc_id": 39, "document": [41, 47], "don": 35, "dure": 100, "earli": 97, "ecosystem": 47, "embed": [49, 69, 70], "endpoint": 42, "environ": 93, "error": [99, 100], "eval": 44, "evalu": [0, 10, 11, 38, 40, 41, 95, 100], "exampl": [25, 26, 27, 29, 30, 31, 33, 37, 43, 45, 46, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 98], "exist": 41, "expans": [85, 87], "explan": [89, 90, 98], "extract": [31, 100], "f": 80, "f1": [45, 46], "face": 99, "factoid": 37, "featur": [25, 41], "file": [25, 30, 32, 50, 55, 58, 61, 74, 82, 87, 91, 93, 100], "filter": [35, 36, 61, 63], "find": 100, "first": 100, "flag": [69, 70], "flag_embed": 17, "flag_embedding_llm": 17, "fluenci": 44, "folder": [25, 32, 43, 94, 100], "format": [39, 100], "from": [29, 40, 41, 48, 99], "fstring": 19, "g": 44, "gain": 45, "gener": [10, 11, 13, 34, 36, 37, 40, 44, 50], "generation_gt": [3, 39, 41], "get": [36, 47], "gpu": [53, 99], "gradio": 43, "gt": 36, "have": [30, 41], "help": 47, "hop": 37, "how": [26, 27, 30, 44, 47, 95], "html": [29, 30], "huggingfac": 88, "hybrid": [33, 89, 90], "hybrid_cc": 21, "hybrid_rrf": 21, "hyde": [20, 84], "i": [25, 26, 27, 30, 41, 55, 58, 61, 74, 87, 93, 95, 97, 99], "import": 99, "increment": 37, "index": [27, 41, 49, 94], "inform": 29, "instal": [48, 99], "instanc": [25, 32], "instead": 43, "interfac": [43, 100], "jina": 17, "jina_rerank": 71, "json": [30, 94], "kei": 48, "know": [35, 97], "ko": 72, "ko_kiwi": 88, "ko_kkma": 88, "ko_okt": 88, "korean": [48, 88], "korerank": 17, "langchain": [6, 26, 30], "langchain_pars": 7, "languag": 31, "length": 99, "line": [93, 94, 97, 98, 100], "lingua": 57, "list": 54, "llama": [27, 31], "llama_gen_queri": 4, "llama_index": [6, 8, 51], "llama_index_gen_gt": 3, "llama_index_llm": 13, "llamaindex": [34, 99], "llamapars": 7, "llm": [35, 49, 51, 52, 57, 69, 99], "log": 52, "long": [39, 57, 81], "long_context_reord": 19, "longllmlingua": 15, "make": [41, 93], "maker": 82, "map": [38, 45], "markdown": 30, "mean": [45, 96], "merger": 97, "metadata": 39, "meteor": 44, "method": [26, 27, 30], "metric": [11, 44, 45, 46], "model": [40, 49, 73], "modeling_enc_t5": 18, "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 32, 33, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 98], "modular": 97, "monot5": [17, 73], "more": [49, 95, 97], "mrr": 45, "multi": [53, 85], "multi_query_expans": 20, "multipl": 41, "must": 30, "name": [25, 73], "ndcg": 45, "need": [30, 95], "next": [56, 95, 100], "node": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 50, 55, 58, 61, 74, 82, 87, 90, 91, 93, 94, 95, 97, 98, 100], "node_lin": 0, "normal": [45, 96], "note": 100, "occur": 100, "ollama": 99, "onli": 41, "openai": [34, 48, 52, 99], "openai_gen_gt": 3, "openai_gen_queri": 4, "openai_llm": [13, 52], "optim": [38, 95, 99, 100], "origin": 99, "output": [25, 32, 52], "overview": [25, 32, 36, 37, 38, 41, 50, 58, 74, 82, 87, 91, 96], "own": 41, "packag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "paramet": [30, 32, 33, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96], "pars": [7, 30, 31, 32, 33, 38], "parser": [0, 29, 32], "pass": 95, "pass_compressor": [15, 58], "pass_passage_augment": [14, 55], "pass_passage_filt": [16, 61], "pass_query_expans": [20, 87], "pass_rerank": [17, 74], "passag": [41, 55, 61], "passage_compressor": 58, "passage_rerank": 74, "passageaugment": 14, "passagecompressor": 15, "passagefilt": 16, "passagererank": [17, 18], "path": 43, "pdf": 30, "percentil": [62, 64], "percentile_cutoff": 16, "pipelin": [25, 32, 100], "point": 29, "polici": 97, "porter_stemm": 88, "pre_retrieve_node_lin": 94, "precis": [45, 46], "prepar": 100, "preprocess": 23, "prev": 56, "prev_next_augment": 14, "prob": 52, "project": [25, 32, 43, 94, 100], "prompt": [3, 4, 41, 52, 82, 86], "promptmak": 19, "purpos": [50, 58, 91], "python": 100, "qa": [36, 38, 39, 40, 41], "qacreat": 8, "qid": 39, "queri": [4, 36, 37, 39, 41, 85, 86, 87], "query_decompos": 20, "query_expans": 94, "queryexpans": 20, "question": [35, 36, 37, 40], "rag": [97, 100], "raga": [8, 40], "rank": [45, 96], "rankgpt": [17, 75], "raw": 41, "recal": [45, 46], "recenc": [16, 63], "reciproc": 45, "refin": [15, 59], "relat": 99, "relev": 44, "reorder": 81, "replac": 83, "requesttimeout": 99, "rerank": [61, 68, 69, 70, 72, 76, 78], "resourc": 94, "restart": 100, "result": [25, 32, 95, 100], "retriev": [10, 11, 21, 36, 45, 46, 91], "retrieval_cont": [10, 11], "retrieval_gt": [39, 45], "retrieve_node_lin": 94, "road": 97, "roug": 44, "row": 99, "rrf": 90, "rule": 35, "run": [7, 13, 14, 15, 16, 17, 19, 20, 21, 25, 32, 42, 43, 99, 100], "runner": 43, "sampl": [2, 36, 39, 94], "save": [36, 41], "schema": [2, 5, 22], "score": [44, 45], "see": 100, "sem": 44, "sem_scor": 50, "semant": 27, "sentenc": [25, 26, 27, 76], "sentence_transform": 17, "separ": 29, "server": [42, 100], "set": [25, 32, 40], "setup": 48, "short": 39, "similar": [64, 65], "similarity_percentile_cutoff": 16, "similarity_threshold_cutoff": 16, "simpl": [8, 27], "sourc": 48, "space": 88, "specif": 44, "specifi": [25, 32, 43, 93, 100], "splitter": 25, "start": [25, 32, 41, 47], "step": 100, "stori": 39, "strategi": [0, 50, 58, 74, 82, 87, 91, 95, 96, 98], "streamlit": 43, "string": 80, "structur": [94, 98], "submodul": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "subpackag": [0, 1, 2, 10, 12, 17], "summar": [60, 98], "summari": 94, "support": [0, 25, 31, 32, 49, 50, 58, 73, 74, 82, 87, 91, 92], "swap": 95, "system": 100, "t": [35, 95, 100], "tabl": [29, 31, 33], "table_hybrid_pars": 7, "tart": [18, 77], "test": 100, "text": 29, "threshold": [65, 66], "threshold_cutoff": 16, "time": 78, "time_rerank": 17, "token": [26, 27, 46, 52, 88], "tokenization_enc_t5": 18, "transform": 76, "tree": 60, "tree_summar": 15, "trial": [43, 94, 100], "trial_path": 100, "troubl": [48, 88], "troubleshoot": 99, "truncat": 52, "tupl": 93, "tutori": [38, 100], "two": 37, "type": [30, 37, 40], "u": 97, "unanswer": 35, "understand": 45, "unicodedecodeerror": 99, "upr": [17, 79], "us": [25, 26, 27, 30, 40, 41, 43, 44, 49, 52, 53, 88, 93, 95, 96, 100], "usag": [37, 67, 71], "util": [9, 10, 11, 23], "valid": [0, 100], "variabl": 93, "vectordb": [21, 92], "version": 97, "vllm": [13, 49, 53], "want": [25, 32, 43, 97, 100], "web": [0, 43, 100], "what": [41, 55, 58, 61, 74, 87, 93, 97, 100], "wheel": 99, "when": 41, "while": 99, "why": [43, 47, 52, 53, 100], "window": [27, 83], "window_replac": 19, "work": 95, "write": 100, "xml": 30, "yaml": [25, 26, 27, 29, 30, 31, 32, 33, 43, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 100], "you": 41, "your": [41, 49, 100]}})
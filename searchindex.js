Search.setIndex({"alltitles": {"0. Retrieval token metric in AutoRAG": [[55, "retrieval-token-metric-in-autorag"]], "0. Understanding AutoRAG\u2019s retrieval_gt": [[54, "understanding-autorag-s-retrieval-gt"]], "1. Add File Name": [[34, "add-file-name"]], "1. Auto-truncate prompt": [[62, "auto-truncate-prompt"]], "1. Bleu": [[53, "bleu"]], "1. Factoid": [[49, "factoid"]], "1. HTML Parser": [[41, "html-parser"]], "1. Installation": [[109, "installation"]], "1. PDF": [[42, "pdf"]], "1. Parse": [[50, "parse"]], "1. Precision": [[54, "precision"]], "1. Query Expansion": [[97, null]], "1. Run as a CLI": [[110, "run-as-a-cli"]], "1. Sample retrieval gt": [[48, "sample-retrieval-gt"]], "1. Set chunker instance": [[34, "set-chunker-instance"]], "1. Set parser instance": [[44, "set-parser-instance"]], "1. Token": [[35, "token"], [36, "token"]], "1. Token Precision": [[55, "token-precision"]], "1. Unanswerable question filtering": [[47, "unanswerable-question-filtering"]], "1. Use YAML path": [[52, "use-yaml-path"]], "2. Accurate token output": [[62, "accurate-token-output"]], "2. CSV": [[42, "csv"]], "2. Character": [[35, "character"]], "2. Concept Completion": [[49, "concept-completion"]], "2. Get retrieval gt contents to generate questions": [[48, "get-retrieval-gt-contents-to-generate-questions"]], "2. Optimization": [[109, "optimization"]], "2. QA Creation": [[50, "qa-creation"]], "2. Recall": [[54, "recall"]], "2. Retrieval": [[101, null]], "2. Rouge": [[53, "rouge"]], "2. Run as an API server": [[110, "run-as-an-api-server"]], "2. Sentence": [[36, "sentence"]], "2. Sentence Splitter": [[34, "sentence-splitter"]], "2. Set YAML file": [[34, "set-yaml-file"], [44, "set-yaml-file"]], "2. The text information comes separately from the table information.": [[41, "the-text-information-comes-separately-from-the-table-information"]], "2. Token Recall": [[55, "token-recall"]], "2. Use a trial path": [[52, "use-a-trial-path"]], "3. Accurate log prob output": [[62, "accurate-log-prob-output"]], "3. Chunking Optimization": [[50, "chunking-optimization"]], "3. F1 Score": [[54, "f1-score"]], "3. Generate queries": [[48, "generate-queries"]], "3. JSON": [[42, "json"]], "3. LlamaIndex": [[109, "llamaindex"]], "3. METEOR": [[53, "meteor"]], "3. Passage Augmenter": [[65, null]], "3. Run as a Web Interface": [[110, "run-as-a-web-interface"]], "3. Sentence": [[35, "sentence"]], "3. Start chunking": [[34, "start-chunking"]], "3. Start parsing": [[44, "start-parsing"]], "3. Token F1": [[55, "token-f1"]], "3. Two-hop Incremental": [[49, "two-hop-incremental"]], "3. Use Runner": [[52, "use-runner"]], "3. Window": [[36, "window"]], "4. Check the result": [[34, "check-the-result"], [44, "check-the-result"]], "4. GPU-related Error": [[109, "gpu-related-error"]], "4. Generate answers": [[48, "generate-answers"]], "4. MRR (Mean Reciprocal Rank)": [[54, "mrr-mean-reciprocal-rank"]], "4. Markdown": [[42, "markdown"]], "4. Passage_Reranker": [[84, null]], "4. QA - Corpus mapping": [[50, "qa-corpus-mapping"]], "4. Sem Score": [[53, "sem-score"]], "4. Semantic": [[36, "semantic"]], "5-1. Coherence": [[53, "coherence"]], "5-2. Consistency": [[53, "consistency"]], "5-3. Fluency": [[53, "fluency"]], "5-4. Relevance": [[53, "relevance"]], "5. Filtering questions": [[48, "filtering-questions"]], "5. G-Eval": [[53, "g-eval"]], "5. HTML": [[42, "html"]], "5. MAP (Mean Average Precision)": [[54, "map-mean-average-precision"]], "5. Passage Filter": [[71, null]], "5. Simple": [[36, "simple"]], "5. UnicodeDecodeError": [[109, "unicodedecodeerror"]], "6. Bert Score": [[53, "bert-score"]], "6. NDCG (Normalized Discounted Cumulative Gain)": [[54, "ndcg-normalized-discounted-cumulative-gain"]], "6. Ollama RequestTimeOut Error": [[109, "ollama-requesttimeout-error"]], "6. Passage_Compressor": [[68, null]], "6. Save the QA data": [[48, "save-the-qa-data"]], "6. XML": [[42, "xml"]], "7. All files": [[42, "all-files"]], "7. Prompt Maker": [[92, null]], "8. Generator": [[60, null]], "API Endpoint": [[51, "id1"]], "API endpoint": [[51, null]], "Add more LLM models": [[58, "add-more-llm-models"]], "Add your embedding models": [[58, "add-your-embedding-models"]], "Answer Generation": [[46, null]], "Any trouble to use Korean tokenizer?": [[98, null]], "Auto-save feature": [[40, null]], "AutoRAG documentation": [[56, null]], "Available Chunk Method": [[35, "available-chunk-method"], [36, "available-chunk-method"]], "Available List": [[64, null]], "Available Parse Method by File Type": [[42, "available-parse-method-by-file-type"]], "Available Sentence Splitter": [[34, "available-sentence-splitter"]], "BM25": [[98, null]], "Backend Support": [[102, "backend-support"]], "Basic Concepts": [[37, "basic-concepts"]], "Basic Generation": [[46, "basic-generation"]], "Before Usage": [[77, "before-usage"], [81, "before-usage"]], "Build from source": [[57, "build-from-source"]], "Chunk": [[34, null]], "Clova": [[41, null]], "Colab Tutorial": [[110, null]], "Colbert Reranker": [[78, null]], "Concise Generation": [[46, "concise-generation"]], "Configuration": [[106, "configuration"]], "Configure LLM & Embedding models": [[58, null]], "Configure the Embedding model": [[58, "configure-the-embedding-model"]], "Configure the LLM model": [[58, "configure-the-llm-model"]], "Contact": [[107, null]], "Contact us": [[107, "contact-us"]], "Corpus Dataset": [[38, "corpus-dataset"]], "Could not build wheels": [[109, "could-not-build-wheels"]], "Data Creation": [[37, null], [59, "data-creation"]], "Dataset Format": [[38, null]], "Default Prompt": [[96, "default-prompt"]], "Deploy your optimal RAG pipeline": [[110, "deploy-your-optimal-rag-pipeline"]], "Do I need to use all nodes?": [[105, null]], "Don\u2019t know Filter": [[47, "don-t-know-filter"]], "Early version of AutoRAG": [[107, "early-version-of-autorag"]], "Error while running LLM": [[109, "error-while-running-llm"]], "Evaluate Nodes that can\u2019t evaluate": [[105, "evaluate-nodes-that-can-t-evaluate"]], "Evaluation data creation tutorial": [[50, null]], "Example": [[49, "example"]], "Example Configuration Using Normalize Mean Strategy": [[106, "example-configuration-using-normalize-mean-strategy"]], "Example Configuration Using mean Strategy": [[106, "example-configuration-using-mean-strategy"]], "Example Configuration Using rank Strategy": [[106, "example-configuration-using-rank-strategy"]], "Example Node Lines": [[108, "example-node-lines"]], "Example YAML": [[34, "example-yaml"], [34, "id1"], [35, "example-yaml"], [36, "example-yaml"], [41, "example-yaml"], [42, "example-yaml"], [42, "id1"], [42, "id2"], [42, "id3"], [42, "id4"], [42, "id5"], [42, "id6"], [43, "example-yaml"], [45, "example-yaml"]], "Example config.yaml": [[61, "example-config-yaml"], [62, "example-config-yaml"], [63, "example-config-yaml"], [66, "example-config-yaml"], [67, "example-config-yaml"], [69, "example-config-yaml"], [70, "example-config-yaml"], [72, "example-config-yaml"], [73, "example-config-yaml"], [74, "example-config-yaml"], [75, "example-config-yaml"], [76, "example-config-yaml"], [77, "example-config-yaml"], [78, "example-config-yaml"], [79, "example-config-yaml"], [80, "example-config-yaml"], [81, "example-config-yaml"], [82, "example-config-yaml"], [83, "example-config-yaml"], [85, "example-config-yaml"], [86, "example-config-yaml"], [87, "example-config-yaml"], [88, "example-config-yaml"], [89, "example-config-yaml"], [90, "example-config-yaml"], [91, "example-config-yaml"], [93, "example-config-yaml"], [94, "example-config-yaml"], [95, "example-config-yaml"], [96, "example-config-yaml"], [98, "example-config-yaml"], [99, "example-config-yaml"], [100, "example-config-yaml"], [102, "example-config-yaml"]], "Example config.yaml file": [[60, "example-config-yaml-file"], [65, "example-config-yaml-file"], [68, "example-config-yaml-file"], [71, "example-config-yaml-file"], [84, "example-config-yaml-file"], [92, "example-config-yaml-file"], [97, "example-config-yaml-file"], [101, "example-config-yaml-file"]], "Explanation of concepts": [[108, "explanation-of-concepts"]], "Extract pipeline and evaluate test dataset": [[110, "extract-pipeline-and-evaluate-test-dataset"]], "F-String": [[90, null]], "Facing Import Error": [[109, "facing-import-error"]], "Facing OPENAI API error": [[109, "facing-openai-api-error"]], "Factoid Example": [[49, "factoid-example"]], "Features": [[34, "features"]], "Filtering": [[47, null]], "Find Optimal RAG Pipeline": [[110, "find-optimal-rag-pipeline"]], "Flag Embedding LLM Reranker": [[79, null]], "Flag Embedding Reranker": [[80, null]], "Folder Structure": [[104, null]], "Generate QA set from Corpus data using RAGAS": [[39, "generate-qa-set-from-corpus-data-using-ragas"]], "Generation Metrics": [[53, null]], "How optimization works": [[105, null]], "How to Use": [[35, "how-to-use"], [36, "how-to-use"], [42, "how-to-use"]], "Huggingface AutoTokenizer": [[98, "huggingface-autotokenizer"]], "HyDE": [[94, null]], "Hybrid - cc": [[99, null]], "Hybrid - rrf": [[100, null]], "If you have both query and generation_gt:": [[40, "if-you-have-both-query-and-generation-gt"]], "If you only have query data:": [[40, "if-you-only-have-query-data"]], "Index": [[40, "index"], [58, "index"]], "Installation and Setup": [[57, null]], "Installation for Korean \ud83c\uddf0\ud83c\uddf7": [[57, "installation-for-korean"]], "Ko-reranker": [[82, null]], "LLM-based Don\u2019t know Filter": [[47, "llm-based-don-t-know-filter"]], "Langchain Chunk": [[35, null]], "Langchain Parse": [[42, null]], "Language Support": [[43, "language-support"]], "Llama Index Chunk": [[36, null]], "Llama Parse": [[43, null]], "LlamaIndex": [[46, "llamaindex"], [46, "id2"]], "Long Context Reorder": [[91, null]], "Long LLM Lingua": [[67, null]], "Long story short": [[38, null], [38, null], [38, null], [38, null]], "Make Node Line": [[103, "make-node-line"]], "Make YAML file": [[103, "make-yaml-file"]], "Make a custom config YAML file": [[103, null]], "Make corpus data from raw documents": [[40, "make-corpus-data-from-raw-documents"]], "Make qa data from corpus data": [[40, "make-qa-data-from-corpus-data"]], "Merger Node": [[107, "merger-node"]], "Migration Guide": [[59, null]], "Module Parameters": [[61, "module-parameters"], [62, "module-parameters"], [63, "module-parameters"], [66, "module-parameters"], [67, "module-parameters"], [69, "module-parameters"], [70, "module-parameters"], [72, "module-parameters"], [73, "module-parameters"], [74, "module-parameters"], [75, "module-parameters"], [76, "module-parameters"], [77, "module-parameters"], [78, "module-parameters"], [79, "module-parameters"], [80, "module-parameters"], [81, "module-parameters"], [82, "module-parameters"], [83, "module-parameters"], [85, "module-parameters"], [86, "module-parameters"], [87, "module-parameters"], [88, "module-parameters"], [89, "module-parameters"], [90, "module-parameters"], [91, "module-parameters"], [93, "module-parameters"], [94, "module-parameters"], [95, "module-parameters"], [96, "module-parameters"], [98, "module-parameters"], [99, "module-parameters"], [100, "module-parameters"], [102, "module-parameters"]], "Module contents": [[0, "module-autorag"], [1, "module-autorag.data"], [2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-autorag.data.chunk"], [8, "module-contents"], [9, "module-autorag.data.legacy"], [10, "module-autorag.data.legacy.corpus"], [11, "module-autorag.data.legacy.qacreation"], [12, "module-autorag.data.parse"], [13, "module-autorag.data.qa"], [14, "module-autorag.data.qa.filter"], [15, "module-autorag.data.qa.generation_gt"], [16, "module-autorag.data.qa.query"], [17, "module-contents"], [18, "module-autorag.data.utils"], [19, "module-autorag.evaluation"], [20, "module-autorag.evaluation.metric"], [21, "module-autorag.nodes"], [22, "module-autorag.nodes.generator"], [23, "module-autorag.nodes.passageaugmenter"], [24, "module-autorag.nodes.passagecompressor"], [25, "module-autorag.nodes.passagefilter"], [26, "module-autorag.nodes.passagereranker"], [27, "module-autorag.nodes.passagereranker.tart"], [28, "module-autorag.nodes.promptmaker"], [29, "module-autorag.nodes.queryexpansion"], [30, "module-autorag.nodes.retrieval"], [31, "module-autorag.schema"], [32, "module-autorag.utils"]], "Modules that use Embedding model": [[58, "modules-that-use-embedding-model"]], "Modules that use LLM model": [[58, "modules-that-use-llm-model"]], "MonoT5": [[83, null]], "More optimization strategies": [[105, "more-optimization-strategies"]], "Multi Query Expansion": [[95, null]], "Next Step": [[110, null]], "Node & Module": [[108, "node-module"]], "Node Line": [[108, "node-line"]], "Node Parameters": [[60, "node-parameters"], [65, "node-parameters"], [68, "node-parameters"], [71, "node-parameters"], [84, "node-parameters"], [92, "node-parameters"], [97, "node-parameters"], [100, "node-parameters"], [101, "node-parameters"]], "Node line for Modular RAG": [[107, "node-line-for-modular-rag"]], "Note: Dataset Format": [[110, null]], "OpenAI": [[46, "openai"], [46, "id1"]], "OpenAI LLM": [[62, null]], "Output Columns": [[34, "output-columns"], [44, "output-columns"]], "Overview": [[34, "overview"], [40, "overview"], [44, "overview"], [48, "overview"], [49, "overview"], [50, "overview"], [60, "overview"], [101, "overview"], [106, "overview"]], "Overview:": [[68, "overview"], [84, "overview"], [92, "overview"], [97, "overview"]], "Parameters": [[45, "parameters"]], "Parse": [[44, null]], "Pass the best result to the next node": [[105, "pass-the-best-result-to-the-next-node"]], "Percentile Cutoff": [[72, null]], "Point": [[41, "point"]], "Policy Node": [[107, "policy-node"]], "Prepare Evaluation Dataset": [[110, "prepare-evaluation-dataset"]], "Prev Next Augmenter": [[66, null]], "Project": [[104, "project"]], "Purpose": [[60, null], [68, null], [101, null]], "QA Dataset": [[38, "qa-dataset"]], "QA creation": [[48, null]], "Query Decompose": [[96, null]], "Query Generation": [[49, null]], "Question types": [[49, "question-types"]], "RAGAS evaluation data generation": [[39, null]], "RAGAS question types": [[39, "ragas-question-types"]], "RankGPT": [[85, null]], "Recency Filter": [[73, null]], "Refine": [[69, null]], "Retrieval Metrics": [[54, null]], "Retrieval Token Metrics": [[55, null]], "Road to Modular RAG": [[107, null]], "Rule-based Don\u2019t know Filter": [[47, "rule-based-don-t-know-filter"]], "Run AutoRAG optimization": [[110, "run-autorag-optimization"]], "Run Chunk Pipeline": [[34, "run-chunk-pipeline"]], "Run Dashboard to see your trial result!": [[110, "run-dashboard-to-see-your-trial-result"]], "Run Parse Pipeline": [[44, "run-parse-pipeline"]], "Run with AutoRAG Runner": [[52, "run-with-autorag-runner"]], "Run with CLI": [[52, "run-with-cli"]], "Running API server": [[51, "running-api-server"]], "Running the Web Interface": [[52, "running-the-web-interface"]], "Sample Structure Index": [[104, "sample-structure-index"]], "Samples": [[38, "samples"]], "Sentence Transformer Reranker": [[86, null]], "Setup OPENAI API KEY": [[57, "setup-openai-api-key"]], "Similarity Percentile Cutoff": [[74, null]], "Similarity Threshold Cutoff": [[75, null]], "Specify modules": [[103, "specify-modules"]], "Specify nodes": [[103, "specify-nodes"]], "Start creating your own evaluation data": [[40, null]], "Strategy": [[92, "strategy"], [97, "strategy"], [106, null], [108, "strategy"]], "Strategy Parameter": [[106, "strategy-parameter"]], "Strategy Parameters": [[60, "strategy-parameters"], [68, "strategy-parameters"], [84, "strategy-parameters"], [101, "strategy-parameters"]], "Strategy Parameters:": [[92, "strategy-parameters"], [97, "strategy-parameters"]], "Structure": [[108, null]], "Submodules": [[0, "submodules"], [2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [10, "submodules"], [11, "submodules"], [12, "submodules"], [13, "submodules"], [14, "submodules"], [15, "submodules"], [16, "submodules"], [17, "submodules"], [18, "submodules"], [19, "submodules"], [20, "submodules"], [21, "submodules"], [22, "submodules"], [23, "submodules"], [24, "submodules"], [25, "submodules"], [26, "submodules"], [27, "submodules"], [28, "submodules"], [29, "submodules"], [30, "submodules"], [31, "submodules"], [32, "submodules"]], "Subpackages": [[0, "subpackages"], [1, "subpackages"], [2, "subpackages"], [9, "subpackages"], [13, "subpackages"], [19, "subpackages"], [21, "subpackages"], [26, "subpackages"]], "Summarize": [[108, null], [108, null], [108, null]], "Supported Chunk Modules": [[34, "supported-chunk-modules"]], "Supported Model Names": [[83, "supported-model-names"]], "Supported Modules": [[60, "supported-modules"], [68, "supported-modules"], [84, "supported-modules"], [92, "supported-modules"], [97, "supported-modules"], [101, "supported-modules"]], "Supported Parse Modules": [[44, "supported-parse-modules"]], "Supporting Embedding models": [[58, "supporting-embedding-models"]], "Supporting LLM models": [[58, "supporting-llm-models"]], "Swapping modules in Node": [[105, "swapping-modules-in-node"]], "TART": [[87, null]], "Table Detection": [[41, "table-detection"], [45, "table-detection"]], "Table Extraction": [[43, "table-extraction"]], "Table Hybrid Parse": [[45, null]], "Table Parse Available Modules": [[45, "table-parse-available-modules"]], "The length or row is different from the original data": [[109, "the-length-or-row-is-different-from-the-original-data"]], "Threshold Cutoff": [[76, null]], "Time Reranker": [[88, null]], "Tree Summarize": [[70, null]], "Trouble with installation?": [[57, null]], "TroubleShooting": [[109, null]], "Tutorial": [[110, null]], "UPR": [[89, null]], "Usage": [[49, "usage"], [49, "id1"], [49, "id2"]], "Use custom models": [[39, "use-custom-models"]], "Use custom prompt": [[40, "use-custom-prompt"]], "Use environment variable in the YAML file": [[103, "use-environment-variable-in-the-yaml-file"]], "Use in Multi-GPU": [[63, "use-in-multi-gpu"]], "Use multiple prompts": [[40, "use-multiple-prompts"]], "Use vllm": [[58, "use-vllm"]], "Using Langchain Chunk Method that is not in the Available Chunk Method": [[35, "using-langchain-chunk-method-that-is-not-in-the-available-chunk-method"]], "Using Llama Index Chunk Method that is not in the Available Chunk Method": [[36, "using-llama-index-chunk-method-that-is-not-in-the-available-chunk-method"]], "Using Parse Method that is not in the Available Parse Method": [[42, "using-parse-method-that-is-not-in-the-available-parse-method"]], "Using sentence splitter that is not in the Available Sentence Splitter": [[34, "using-sentence-splitter-that-is-not-in-the-available-sentence-splitter"]], "Validate your system": [[110, "validate-your-system"]], "Vectordb": [[102, null]], "Want to know more about Modular RAG?": [[107, null]], "Want to specify project folder?": [[34, null], [44, null], [52, null], [110, null], [110, null], [110, null]], "Web Interface": [[52, null]], "Web Interface example": [[52, "web-interface-example"]], "What if Trial_Path didn\u2019t also create a First Node Line?": [[110, null]], "What is Node Line?": [[107, null]], "What is difference between Passage Filter and Passage Reranker?": [[71, null]], "What is pass_compressor?": [[68, null]], "What is pass_passage_augmenter?": [[65, null]], "What is pass_passage_filter?": [[71, null]], "What is pass_query_expansion?": [[97, null]], "What is pass_reranker?": [[84, null]], "What is passage?": [[40, null]], "What is tuple in the yaml file?": [[103, null]], "When you have existing qa data": [[40, "when-you-have-existing-qa-data"]], "Why use Gradio instead of Streamlit?": [[52, null]], "Why use openai_llm module?": [[62, "why-use-openai-llm-module"]], "Why use python command?": [[110, null]], "Why use vllm module?": [[63, "why-use-vllm-module"]], "Window Replacement": [[93, null]], "Write custom config yaml file": [[110, null]], "[Node Line] summary.csv": [[104, "node-line-summary-csv"]], "[Node] summary.csv": [[104, "node-summary-csv"]], "[trial] summary.csv": [[104, "trial-summary-csv"]], "autorag": [[33, null]], "autorag package": [[0, null]], "autorag.chunker module": [[0, "module-autorag.chunker"]], "autorag.cli module": [[0, "module-autorag.cli"]], "autorag.dashboard module": [[0, "module-autorag.dashboard"]], "autorag.data package": [[1, null]], "autorag.data.beta package": [[2, null]], "autorag.data.beta.extract_evidence module": [[2, "autorag-data-beta-extract-evidence-module"]], "autorag.data.beta.filter package": [[3, null]], "autorag.data.beta.filter.dontknow module": [[3, "autorag-data-beta-filter-dontknow-module"]], "autorag.data.beta.filter.prompt module": [[3, "autorag-data-beta-filter-prompt-module"]], "autorag.data.beta.generation_gt package": [[4, null]], "autorag.data.beta.generation_gt.base module": [[4, "autorag-data-beta-generation-gt-base-module"]], "autorag.data.beta.generation_gt.llama_index_gen_gt module": [[4, "autorag-data-beta-generation-gt-llama-index-gen-gt-module"]], "autorag.data.beta.generation_gt.openai_gen_gt module": [[4, "autorag-data-beta-generation-gt-openai-gen-gt-module"]], "autorag.data.beta.generation_gt.prompt module": [[4, "autorag-data-beta-generation-gt-prompt-module"]], "autorag.data.beta.query package": [[5, null]], "autorag.data.beta.query.llama_gen_query module": [[5, "autorag-data-beta-query-llama-gen-query-module"]], "autorag.data.beta.query.openai_gen_query module": [[5, "autorag-data-beta-query-openai-gen-query-module"]], "autorag.data.beta.query.prompt module": [[5, "autorag-data-beta-query-prompt-module"]], "autorag.data.beta.sample module": [[2, "autorag-data-beta-sample-module"]], "autorag.data.beta.schema module": [[2, "autorag-data-beta-schema-module"]], "autorag.data.beta.schema package": [[6, null]], "autorag.data.beta.schema.data module": [[6, "autorag-data-beta-schema-data-module"]], "autorag.data.chunk package": [[7, null]], "autorag.data.chunk.base module": [[7, "module-autorag.data.chunk.base"]], "autorag.data.chunk.langchain_chunk module": [[7, "module-autorag.data.chunk.langchain_chunk"]], "autorag.data.chunk.llama_index_chunk module": [[7, "module-autorag.data.chunk.llama_index_chunk"]], "autorag.data.chunk.run module": [[7, "module-autorag.data.chunk.run"]], "autorag.data.corpus package": [[8, null]], "autorag.data.corpus.langchain module": [[8, "autorag-data-corpus-langchain-module"]], "autorag.data.corpus.llama_index module": [[8, "autorag-data-corpus-llama-index-module"]], "autorag.data.legacy package": [[9, null]], "autorag.data.legacy.corpus package": [[10, null]], "autorag.data.legacy.corpus.langchain module": [[10, "module-autorag.data.legacy.corpus.langchain"]], "autorag.data.legacy.corpus.llama_index module": [[10, "module-autorag.data.legacy.corpus.llama_index"]], "autorag.data.legacy.qacreation package": [[11, null]], "autorag.data.legacy.qacreation.base module": [[11, "module-autorag.data.legacy.qacreation.base"]], "autorag.data.legacy.qacreation.llama_index module": [[11, "module-autorag.data.legacy.qacreation.llama_index"]], "autorag.data.legacy.qacreation.ragas module": [[11, "module-autorag.data.legacy.qacreation.ragas"]], "autorag.data.legacy.qacreation.simple module": [[11, "module-autorag.data.legacy.qacreation.simple"]], "autorag.data.parse package": [[12, null]], "autorag.data.parse.base module": [[12, "module-autorag.data.parse.base"]], "autorag.data.parse.clova module": [[12, "autorag-data-parse-clova-module"]], "autorag.data.parse.langchain_parse module": [[12, "module-autorag.data.parse.langchain_parse"]], "autorag.data.parse.llamaparse module": [[12, "module-autorag.data.parse.llamaparse"]], "autorag.data.parse.run module": [[12, "module-autorag.data.parse.run"]], "autorag.data.parse.table_hybrid_parse module": [[12, "autorag-data-parse-table-hybrid-parse-module"]], "autorag.data.qa package": [[13, null]], "autorag.data.qa.extract_evidence module": [[13, "module-autorag.data.qa.extract_evidence"]], "autorag.data.qa.filter package": [[14, null]], "autorag.data.qa.filter.dontknow module": [[14, "module-autorag.data.qa.filter.dontknow"]], "autorag.data.qa.filter.prompt module": [[14, "module-autorag.data.qa.filter.prompt"]], "autorag.data.qa.generation_gt package": [[15, null]], "autorag.data.qa.generation_gt.base module": [[15, "module-autorag.data.qa.generation_gt.base"]], "autorag.data.qa.generation_gt.llama_index_gen_gt module": [[15, "module-autorag.data.qa.generation_gt.llama_index_gen_gt"]], "autorag.data.qa.generation_gt.openai_gen_gt module": [[15, "module-autorag.data.qa.generation_gt.openai_gen_gt"]], "autorag.data.qa.generation_gt.prompt module": [[15, "module-autorag.data.qa.generation_gt.prompt"]], "autorag.data.qa.query package": [[16, null]], "autorag.data.qa.query.llama_gen_query module": [[16, "module-autorag.data.qa.query.llama_gen_query"]], "autorag.data.qa.query.openai_gen_query module": [[16, "module-autorag.data.qa.query.openai_gen_query"]], "autorag.data.qa.query.prompt module": [[16, "module-autorag.data.qa.query.prompt"]], "autorag.data.qa.sample module": [[13, "module-autorag.data.qa.sample"]], "autorag.data.qa.schema module": [[13, "module-autorag.data.qa.schema"]], "autorag.data.qacreation package": [[17, null]], "autorag.data.qacreation.base module": [[17, "autorag-data-qacreation-base-module"]], "autorag.data.qacreation.llama_index module": [[17, "autorag-data-qacreation-llama-index-module"]], "autorag.data.qacreation.ragas module": [[17, "autorag-data-qacreation-ragas-module"]], "autorag.data.qacreation.simple module": [[17, "autorag-data-qacreation-simple-module"]], "autorag.data.utils package": [[18, null]], "autorag.data.utils.util module": [[18, "module-autorag.data.utils.util"]], "autorag.deploy module": [[0, "module-autorag.deploy"]], "autorag.evaluation package": [[19, null]], "autorag.evaluation.generation module": [[19, "module-autorag.evaluation.generation"]], "autorag.evaluation.metric package": [[20, null]], "autorag.evaluation.metric.generation module": [[20, "module-autorag.evaluation.metric.generation"]], "autorag.evaluation.metric.retrieval module": [[20, "module-autorag.evaluation.metric.retrieval"]], "autorag.evaluation.metric.retrieval_contents module": [[20, "module-autorag.evaluation.metric.retrieval_contents"]], "autorag.evaluation.metric.util module": [[20, "module-autorag.evaluation.metric.util"]], "autorag.evaluation.retrieval module": [[19, "module-autorag.evaluation.retrieval"]], "autorag.evaluation.retrieval_contents module": [[19, "module-autorag.evaluation.retrieval_contents"]], "autorag.evaluation.util module": [[19, "module-autorag.evaluation.util"]], "autorag.evaluator module": [[0, "module-autorag.evaluator"]], "autorag.node_line module": [[0, "module-autorag.node_line"]], "autorag.nodes package": [[21, null]], "autorag.nodes.generator package": [[22, null]], "autorag.nodes.generator.base module": [[22, "module-autorag.nodes.generator.base"]], "autorag.nodes.generator.llama_index_llm module": [[22, "module-autorag.nodes.generator.llama_index_llm"]], "autorag.nodes.generator.openai_llm module": [[22, "module-autorag.nodes.generator.openai_llm"]], "autorag.nodes.generator.run module": [[22, "module-autorag.nodes.generator.run"]], "autorag.nodes.generator.vllm module": [[22, "module-autorag.nodes.generator.vllm"]], "autorag.nodes.passageaugmenter package": [[23, null]], "autorag.nodes.passageaugmenter.base module": [[23, "module-autorag.nodes.passageaugmenter.base"]], "autorag.nodes.passageaugmenter.pass_passage_augmenter module": [[23, "module-autorag.nodes.passageaugmenter.pass_passage_augmenter"]], "autorag.nodes.passageaugmenter.prev_next_augmenter module": [[23, "module-autorag.nodes.passageaugmenter.prev_next_augmenter"]], "autorag.nodes.passageaugmenter.run module": [[23, "module-autorag.nodes.passageaugmenter.run"]], "autorag.nodes.passagecompressor package": [[24, null]], "autorag.nodes.passagecompressor.base module": [[24, "module-autorag.nodes.passagecompressor.base"]], "autorag.nodes.passagecompressor.longllmlingua module": [[24, "module-autorag.nodes.passagecompressor.longllmlingua"]], "autorag.nodes.passagecompressor.pass_compressor module": [[24, "module-autorag.nodes.passagecompressor.pass_compressor"]], "autorag.nodes.passagecompressor.refine module": [[24, "module-autorag.nodes.passagecompressor.refine"]], "autorag.nodes.passagecompressor.run module": [[24, "module-autorag.nodes.passagecompressor.run"]], "autorag.nodes.passagecompressor.tree_summarize module": [[24, "module-autorag.nodes.passagecompressor.tree_summarize"]], "autorag.nodes.passagefilter package": [[25, null]], "autorag.nodes.passagefilter.base module": [[25, "module-autorag.nodes.passagefilter.base"]], "autorag.nodes.passagefilter.pass_passage_filter module": [[25, "module-autorag.nodes.passagefilter.pass_passage_filter"]], "autorag.nodes.passagefilter.percentile_cutoff module": [[25, "module-autorag.nodes.passagefilter.percentile_cutoff"]], "autorag.nodes.passagefilter.recency module": [[25, "module-autorag.nodes.passagefilter.recency"]], "autorag.nodes.passagefilter.run module": [[25, "module-autorag.nodes.passagefilter.run"]], "autorag.nodes.passagefilter.similarity_percentile_cutoff module": [[25, "module-autorag.nodes.passagefilter.similarity_percentile_cutoff"]], "autorag.nodes.passagefilter.similarity_threshold_cutoff module": [[25, "module-autorag.nodes.passagefilter.similarity_threshold_cutoff"]], "autorag.nodes.passagefilter.threshold_cutoff module": [[25, "module-autorag.nodes.passagefilter.threshold_cutoff"]], "autorag.nodes.passagereranker package": [[26, null]], "autorag.nodes.passagereranker.base module": [[26, "module-autorag.nodes.passagereranker.base"]], "autorag.nodes.passagereranker.cohere module": [[26, "module-autorag.nodes.passagereranker.cohere"]], "autorag.nodes.passagereranker.colbert module": [[26, "module-autorag.nodes.passagereranker.colbert"]], "autorag.nodes.passagereranker.flag_embedding module": [[26, "module-autorag.nodes.passagereranker.flag_embedding"]], "autorag.nodes.passagereranker.flag_embedding_llm module": [[26, "module-autorag.nodes.passagereranker.flag_embedding_llm"]], "autorag.nodes.passagereranker.jina module": [[26, "module-autorag.nodes.passagereranker.jina"]], "autorag.nodes.passagereranker.koreranker module": [[26, "module-autorag.nodes.passagereranker.koreranker"]], "autorag.nodes.passagereranker.monot5 module": [[26, "module-autorag.nodes.passagereranker.monot5"]], "autorag.nodes.passagereranker.pass_reranker module": [[26, "module-autorag.nodes.passagereranker.pass_reranker"]], "autorag.nodes.passagereranker.rankgpt module": [[26, "module-autorag.nodes.passagereranker.rankgpt"]], "autorag.nodes.passagereranker.run module": [[26, "module-autorag.nodes.passagereranker.run"]], "autorag.nodes.passagereranker.sentence_transformer module": [[26, "module-autorag.nodes.passagereranker.sentence_transformer"]], "autorag.nodes.passagereranker.tart package": [[27, null]], "autorag.nodes.passagereranker.tart.modeling_enc_t5 module": [[27, "module-autorag.nodes.passagereranker.tart.modeling_enc_t5"]], "autorag.nodes.passagereranker.tart.tart module": [[27, "module-autorag.nodes.passagereranker.tart.tart"]], "autorag.nodes.passagereranker.tart.tokenization_enc_t5 module": [[27, "module-autorag.nodes.passagereranker.tart.tokenization_enc_t5"]], "autorag.nodes.passagereranker.time_reranker module": [[26, "module-autorag.nodes.passagereranker.time_reranker"]], "autorag.nodes.passagereranker.upr module": [[26, "module-autorag.nodes.passagereranker.upr"]], "autorag.nodes.promptmaker package": [[28, null]], "autorag.nodes.promptmaker.base module": [[28, "module-autorag.nodes.promptmaker.base"]], "autorag.nodes.promptmaker.fstring module": [[28, "module-autorag.nodes.promptmaker.fstring"]], "autorag.nodes.promptmaker.long_context_reorder module": [[28, "module-autorag.nodes.promptmaker.long_context_reorder"]], "autorag.nodes.promptmaker.run module": [[28, "module-autorag.nodes.promptmaker.run"]], "autorag.nodes.promptmaker.window_replacement module": [[28, "module-autorag.nodes.promptmaker.window_replacement"]], "autorag.nodes.queryexpansion package": [[29, null]], "autorag.nodes.queryexpansion.base module": [[29, "module-autorag.nodes.queryexpansion.base"]], "autorag.nodes.queryexpansion.hyde module": [[29, "module-autorag.nodes.queryexpansion.hyde"]], "autorag.nodes.queryexpansion.multi_query_expansion module": [[29, "module-autorag.nodes.queryexpansion.multi_query_expansion"]], "autorag.nodes.queryexpansion.pass_query_expansion module": [[29, "module-autorag.nodes.queryexpansion.pass_query_expansion"]], "autorag.nodes.queryexpansion.query_decompose module": [[29, "module-autorag.nodes.queryexpansion.query_decompose"]], "autorag.nodes.queryexpansion.run module": [[29, "module-autorag.nodes.queryexpansion.run"]], "autorag.nodes.retrieval package": [[30, null]], "autorag.nodes.retrieval.base module": [[30, "module-autorag.nodes.retrieval.base"]], "autorag.nodes.retrieval.bm25 module": [[30, "module-autorag.nodes.retrieval.bm25"]], "autorag.nodes.retrieval.hybrid_cc module": [[30, "module-autorag.nodes.retrieval.hybrid_cc"]], "autorag.nodes.retrieval.hybrid_rrf module": [[30, "module-autorag.nodes.retrieval.hybrid_rrf"]], "autorag.nodes.retrieval.run module": [[30, "module-autorag.nodes.retrieval.run"]], "autorag.nodes.retrieval.vectordb module": [[30, "module-autorag.nodes.retrieval.vectordb"]], "autorag.nodes.util module": [[21, "module-autorag.nodes.util"]], "autorag.parser module": [[0, "module-autorag.parser"]], "autorag.schema package": [[31, null]], "autorag.schema.base module": [[31, "module-autorag.schema.base"]], "autorag.schema.metricinput module": [[31, "module-autorag.schema.metricinput"]], "autorag.schema.module module": [[31, "module-autorag.schema.module"]], "autorag.schema.node module": [[31, "module-autorag.schema.node"]], "autorag.strategy module": [[0, "module-autorag.strategy"]], "autorag.support module": [[0, "module-autorag.support"]], "autorag.utils package": [[32, null]], "autorag.utils.preprocess module": [[32, "module-autorag.utils.preprocess"]], "autorag.utils.util module": [[32, "module-autorag.utils.util"]], "autorag.validator module": [[0, "module-autorag.validator"]], "autorag.web module": [[0, "module-autorag.web"]], "cohere_reranker": [[77, null]], "config.yaml": [[104, "config-yaml"]], "contents": [[38, "contents"]], "data": [[104, "data"]], "doc_id": [[38, "doc-id"]], "generation_gt": [[38, "generation-gt"]], "jina_reranker": [[81, null]], "ko_kiwi (For Korean \ud83c\uddf0\ud83c\uddf7)": [[98, "ko-kiwi-for-korean"]], "ko_kkma (For Korean \ud83c\uddf0\ud83c\uddf7)": [[98, "ko-kkma-for-korean"]], "ko_okt (For Korean \ud83c\uddf0\ud83c\uddf7)": [[98, "ko-okt-for-korean"]], "llama_index LLM": [[61, null]], "metadata": [[38, "metadata"]], "porter_stemmer": [[98, "porter-stemmer"]], "pre_retrieve_node_line": [[104, "pre-retrieve-node-line"]], "qid": [[38, "qid"]], "query": [[38, "query"]], "query_expansion": [[104, "query-expansion"]], "resources": [[104, "resources"]], "retrieval_gt": [[38, "retrieval-gt"]], "retrieve_node_line": [[104, "retrieve-node-line"]], "sem_score": [[60, null]], "space": [[98, "space"]], "trial": [[104, "trial"]], "trial.json": [[104, "trial-json"]], "v0.3 migration guide": [[59, "v0-3-migration-guide"]], "vllm": [[63, null]], "\u2705Apply Basic Example": [[54, "apply-basic-example"], [54, "id2"], [54, "id4"], [54, "id6"], [54, "id8"], [54, "id10"], [55, "apply-basic-example"], [55, "id2"], [55, "id4"]], "\u2705Basic Example": [[54, "basic-example"], [55, "basic-example"]], "\u2757How to use specific G-Eval metrics": [[53, "how-to-use-specific-g-eval-metrics"]], "\u2757Must have Parameter": [[42, "must-have-parameter"]], "\u2757Restart a trial if an error occurs during the trial": [[110, "restart-a-trial-if-an-error-occurs-during-the-trial"]], "\u2757\ufe0fHybrid additional explanation": [[99, "hybrid-additional-explanation"], [100, "hybrid-additional-explanation"]], "\ud83c\udfc3\u200d\u2642\ufe0f Getting Started": [[56, "getting-started"]], "\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc66 Ecosystem": [[56, "ecosystem"]], "\ud83d\udccc API Needed": [[42, "api-needed"]], "\ud83d\udccc Definition": [[53, "id4"]], "\ud83d\udccc Parameter: data_path_glob": [[44, "parameter-data-path-glob"]], "\ud83d\udcccDefinition": [[53, "definition"], [53, "id1"], [53, "id2"], [53, "id3"], [53, "id5"], [54, "definition"], [54, "id1"], [54, "id3"], [54, "id5"], [54, "id7"], [54, "id9"], [55, "definition"], [55, "id1"], [55, "id3"]], "\ud83d\udd0e Definition": [[60, "definition"], [65, "definition"], [68, "definition"], [71, "definition"], [84, "definition"], [92, "definition"], [97, "definition"], [101, "definition"]], "\ud83d\udd22 Parameters": [[60, "parameters"], [68, "parameters"], [84, "parameters"], [92, "parameters"], [97, "parameters"], [101, "parameters"]], "\ud83d\ude80 Road to Modular RAG": [[107, "id1"]], "\ud83e\udd37\u200d\u2642\ufe0f What is Modular RAG?": [[107, "what-is-modular-rag"]], "\ud83e\udd37\u200d\u2642\ufe0f Why AutoRAG?": [[56, "why-autorag"]], "\ud83e\udd38 Benefits": [[65, "benefits"], [68, "benefits"], [71, "benefits"], [84, "benefits"], [97, "benefits"]], "\ud83e\udd38\u200d\u2642\ufe0f How can AutoRAG helps?": [[56, "how-can-autorag-helps"]]}, "docnames": ["api_spec/autorag", "api_spec/autorag.data", "api_spec/autorag.data.beta", "api_spec/autorag.data.beta.filter", "api_spec/autorag.data.beta.generation_gt", "api_spec/autorag.data.beta.query", "api_spec/autorag.data.beta.schema", "api_spec/autorag.data.chunk", "api_spec/autorag.data.corpus", "api_spec/autorag.data.legacy", "api_spec/autorag.data.legacy.corpus", "api_spec/autorag.data.legacy.qacreation", "api_spec/autorag.data.parse", "api_spec/autorag.data.qa", "api_spec/autorag.data.qa.filter", "api_spec/autorag.data.qa.generation_gt", "api_spec/autorag.data.qa.query", "api_spec/autorag.data.qacreation", "api_spec/autorag.data.utils", "api_spec/autorag.evaluation", "api_spec/autorag.evaluation.metric", "api_spec/autorag.nodes", "api_spec/autorag.nodes.generator", "api_spec/autorag.nodes.passageaugmenter", "api_spec/autorag.nodes.passagecompressor", "api_spec/autorag.nodes.passagefilter", "api_spec/autorag.nodes.passagereranker", "api_spec/autorag.nodes.passagereranker.tart", "api_spec/autorag.nodes.promptmaker", "api_spec/autorag.nodes.queryexpansion", "api_spec/autorag.nodes.retrieval", "api_spec/autorag.schema", "api_spec/autorag.utils", "api_spec/modules", "data_creation/chunk/chunk", "data_creation/chunk/langchain_chunk", "data_creation/chunk/llama_index_chunk", "data_creation/data_creation", "data_creation/data_format", "data_creation/legacy/ragas", "data_creation/legacy/tutorial", "data_creation/parse/clova", "data_creation/parse/langchain_parse", "data_creation/parse/llama_parse", "data_creation/parse/parse", "data_creation/parse/table_hybrid_parse", "data_creation/qa_creation/answer_gen", "data_creation/qa_creation/filter", "data_creation/qa_creation/qa_creation", "data_creation/qa_creation/query_gen", "data_creation/tutorial", "deploy/api_endpoint", "deploy/web", "evaluate_metrics/generation", "evaluate_metrics/retrieval", "evaluate_metrics/retrieval_contents", "index", "install", "local_model", "migration", "nodes/generator/generator", "nodes/generator/llama_index_llm", "nodes/generator/openai_llm", "nodes/generator/vllm", "nodes/index", "nodes/passage_augmenter/passage_augmenter", "nodes/passage_augmenter/prev_next_augmenter", "nodes/passage_compressor/longllmlingua", "nodes/passage_compressor/passage_compressor", "nodes/passage_compressor/refine", "nodes/passage_compressor/tree_summarize", "nodes/passage_filter/passage_filter", "nodes/passage_filter/percentile_cutoff", "nodes/passage_filter/recency_filter", "nodes/passage_filter/similarity_percentile_cutoff", "nodes/passage_filter/similarity_threshold_cutoff", "nodes/passage_filter/threshold_cutoff", "nodes/passage_reranker/cohere", "nodes/passage_reranker/colbert", "nodes/passage_reranker/flag_embedding_llm_reranker", "nodes/passage_reranker/flag_embedding_reranker", "nodes/passage_reranker/jina_reranker", "nodes/passage_reranker/koreranker", "nodes/passage_reranker/monot5", "nodes/passage_reranker/passage_reranker", "nodes/passage_reranker/rankgpt", "nodes/passage_reranker/sentence_transformer_reranker", "nodes/passage_reranker/tart", "nodes/passage_reranker/time_reranker", "nodes/passage_reranker/upr", "nodes/prompt_maker/fstring", "nodes/prompt_maker/long_context_reorder", "nodes/prompt_maker/prompt_maker", "nodes/prompt_maker/window_replacement", "nodes/query_expansion/hyde", "nodes/query_expansion/multi_query_expansion", "nodes/query_expansion/query_decompose", "nodes/query_expansion/query_expansion", "nodes/retrieval/bm25", "nodes/retrieval/hybrid_cc", "nodes/retrieval/hybrid_rrf", "nodes/retrieval/retrieval", "nodes/retrieval/vectordb", "optimization/custom_config", "optimization/folder_structure", "optimization/optimization", "optimization/strategies", "roadmap/modular_rag", "structure", "troubleshooting", "tutorial"], "envversion": {"sphinx": 63, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["api_spec/autorag.rst", "api_spec/autorag.data.rst", "api_spec/autorag.data.beta.rst", "api_spec/autorag.data.beta.filter.rst", "api_spec/autorag.data.beta.generation_gt.rst", "api_spec/autorag.data.beta.query.rst", "api_spec/autorag.data.beta.schema.rst", "api_spec/autorag.data.chunk.rst", "api_spec/autorag.data.corpus.rst", "api_spec/autorag.data.legacy.rst", "api_spec/autorag.data.legacy.corpus.rst", "api_spec/autorag.data.legacy.qacreation.rst", "api_spec/autorag.data.parse.rst", "api_spec/autorag.data.qa.rst", "api_spec/autorag.data.qa.filter.rst", "api_spec/autorag.data.qa.generation_gt.rst", "api_spec/autorag.data.qa.query.rst", "api_spec/autorag.data.qacreation.rst", "api_spec/autorag.data.utils.rst", "api_spec/autorag.evaluation.rst", "api_spec/autorag.evaluation.metric.rst", "api_spec/autorag.nodes.rst", "api_spec/autorag.nodes.generator.rst", "api_spec/autorag.nodes.passageaugmenter.rst", "api_spec/autorag.nodes.passagecompressor.rst", "api_spec/autorag.nodes.passagefilter.rst", "api_spec/autorag.nodes.passagereranker.rst", "api_spec/autorag.nodes.passagereranker.tart.rst", "api_spec/autorag.nodes.promptmaker.rst", "api_spec/autorag.nodes.queryexpansion.rst", "api_spec/autorag.nodes.retrieval.rst", "api_spec/autorag.schema.rst", "api_spec/autorag.utils.rst", "api_spec/modules.rst", "data_creation/chunk/chunk.md", "data_creation/chunk/langchain_chunk.md", "data_creation/chunk/llama_index_chunk.md", "data_creation/data_creation.md", "data_creation/data_format.md", "data_creation/legacy/ragas.md", "data_creation/legacy/tutorial.md", "data_creation/parse/clova.md", "data_creation/parse/langchain_parse.md", "data_creation/parse/llama_parse.md", "data_creation/parse/parse.md", "data_creation/parse/table_hybrid_parse.md", "data_creation/qa_creation/answer_gen.md", "data_creation/qa_creation/filter.md", "data_creation/qa_creation/qa_creation.md", "data_creation/qa_creation/query_gen.md", "data_creation/tutorial.md", "deploy/api_endpoint.md", "deploy/web.md", "evaluate_metrics/generation.md", "evaluate_metrics/retrieval.md", "evaluate_metrics/retrieval_contents.md", "index.rst", "install.md", "local_model.md", "migration.md", "nodes/generator/generator.md", "nodes/generator/llama_index_llm.md", "nodes/generator/openai_llm.md", "nodes/generator/vllm.md", "nodes/index.md", "nodes/passage_augmenter/passage_augmenter.md", "nodes/passage_augmenter/prev_next_augmenter.md", "nodes/passage_compressor/longllmlingua.md", "nodes/passage_compressor/passage_compressor.md", "nodes/passage_compressor/refine.md", "nodes/passage_compressor/tree_summarize.md", "nodes/passage_filter/passage_filter.md", "nodes/passage_filter/percentile_cutoff.md", "nodes/passage_filter/recency_filter.md", "nodes/passage_filter/similarity_percentile_cutoff.md", "nodes/passage_filter/similarity_threshold_cutoff.md", "nodes/passage_filter/threshold_cutoff.md", "nodes/passage_reranker/cohere.md", "nodes/passage_reranker/colbert.md", "nodes/passage_reranker/flag_embedding_llm_reranker.md", "nodes/passage_reranker/flag_embedding_reranker.md", "nodes/passage_reranker/jina_reranker.md", "nodes/passage_reranker/koreranker.md", "nodes/passage_reranker/monot5.md", "nodes/passage_reranker/passage_reranker.md", "nodes/passage_reranker/rankgpt.md", "nodes/passage_reranker/sentence_transformer_reranker.md", "nodes/passage_reranker/tart.md", "nodes/passage_reranker/time_reranker.md", "nodes/passage_reranker/upr.md", "nodes/prompt_maker/fstring.md", "nodes/prompt_maker/long_context_reorder.md", "nodes/prompt_maker/prompt_maker.md", "nodes/prompt_maker/window_replacement.md", "nodes/query_expansion/hyde.md", "nodes/query_expansion/multi_query_expansion.md", "nodes/query_expansion/query_decompose.md", "nodes/query_expansion/query_expansion.md", "nodes/retrieval/bm25.md", "nodes/retrieval/hybrid_cc.md", "nodes/retrieval/hybrid_rrf.md", "nodes/retrieval/retrieval.md", "nodes/retrieval/vectordb.md", "optimization/custom_config.md", "optimization/folder_structure.md", "optimization/optimization.md", "optimization/strategies.md", "roadmap/modular_rag.md", "structure.md", "troubleshooting.md", "tutorial.md"], "indexentries": {"add_essential_metadata() (in module autorag.data.utils.util)": [[18, "autorag.data.utils.util.add_essential_metadata", false]], "add_essential_metadata_llama_text_node() (in module autorag.data.utils.util)": [[18, "autorag.data.utils.util.add_essential_metadata_llama_text_node", false]], "add_file_name() (in module autorag.data.chunk.base)": [[7, "autorag.data.chunk.base.add_file_name", false]], "add_gen_gt() (in module autorag.data.qa.generation_gt.base)": [[15, "autorag.data.qa.generation_gt.base.add_gen_gt", false]], "answer (autorag.data.qa.generation_gt.openai_gen_gt.response attribute)": [[15, "autorag.data.qa.generation_gt.openai_gen_gt.Response.answer", false]], "answer (autorag.data.qa.query.openai_gen_query.twohopincrementalresponse attribute)": [[16, "autorag.data.qa.query.openai_gen_query.TwoHopIncrementalResponse.answer", false]], "async_g_eval() (in module autorag.evaluation.metric.generation)": [[20, "autorag.evaluation.metric.generation.async_g_eval", false]], "async_postprocess_nodes() (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank method)": [[26, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.async_postprocess_nodes", false]], "async_qa_gen_llama_index() (in module autorag.data.legacy.qacreation.llama_index)": [[11, "autorag.data.legacy.qacreation.llama_index.async_qa_gen_llama_index", false]], "async_run_llm() (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank method)": [[26, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.async_run_llm", false]], "asyncrankgptrerank (class in autorag.nodes.passagereranker.rankgpt)": [[26, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank", false]], "autorag": [[0, "module-autorag", false]], "autorag.chunker": [[0, "module-autorag.chunker", false]], "autorag.cli": [[0, "module-autorag.cli", false]], "autorag.dashboard": [[0, "module-autorag.dashboard", false]], "autorag.data": [[1, "module-autorag.data", false]], "autorag.data.chunk": [[7, "module-autorag.data.chunk", false]], "autorag.data.chunk.base": [[7, "module-autorag.data.chunk.base", false]], "autorag.data.chunk.langchain_chunk": [[7, "module-autorag.data.chunk.langchain_chunk", false]], "autorag.data.chunk.llama_index_chunk": [[7, "module-autorag.data.chunk.llama_index_chunk", false]], "autorag.data.chunk.run": [[7, "module-autorag.data.chunk.run", false]], "autorag.data.legacy": [[9, "module-autorag.data.legacy", false]], "autorag.data.legacy.corpus": [[10, "module-autorag.data.legacy.corpus", false]], "autorag.data.legacy.corpus.langchain": [[10, "module-autorag.data.legacy.corpus.langchain", false]], "autorag.data.legacy.corpus.llama_index": [[10, "module-autorag.data.legacy.corpus.llama_index", false]], "autorag.data.legacy.qacreation": [[11, "module-autorag.data.legacy.qacreation", false]], "autorag.data.legacy.qacreation.base": [[11, "module-autorag.data.legacy.qacreation.base", false]], "autorag.data.legacy.qacreation.llama_index": [[11, "module-autorag.data.legacy.qacreation.llama_index", false]], "autorag.data.legacy.qacreation.ragas": [[11, "module-autorag.data.legacy.qacreation.ragas", false]], "autorag.data.legacy.qacreation.simple": [[11, "module-autorag.data.legacy.qacreation.simple", false]], "autorag.data.parse": [[12, "module-autorag.data.parse", false]], "autorag.data.parse.base": [[12, "module-autorag.data.parse.base", false]], "autorag.data.parse.langchain_parse": [[12, "module-autorag.data.parse.langchain_parse", false]], "autorag.data.parse.llamaparse": [[12, "module-autorag.data.parse.llamaparse", false]], "autorag.data.parse.run": [[12, "module-autorag.data.parse.run", false]], "autorag.data.qa": [[13, "module-autorag.data.qa", false]], "autorag.data.qa.extract_evidence": [[13, "module-autorag.data.qa.extract_evidence", false]], "autorag.data.qa.filter": [[14, "module-autorag.data.qa.filter", false]], "autorag.data.qa.filter.dontknow": [[14, "module-autorag.data.qa.filter.dontknow", false]], "autorag.data.qa.filter.prompt": [[14, "module-autorag.data.qa.filter.prompt", false]], "autorag.data.qa.generation_gt": [[15, "module-autorag.data.qa.generation_gt", false]], "autorag.data.qa.generation_gt.base": [[15, "module-autorag.data.qa.generation_gt.base", false]], "autorag.data.qa.generation_gt.llama_index_gen_gt": [[15, "module-autorag.data.qa.generation_gt.llama_index_gen_gt", false]], "autorag.data.qa.generation_gt.openai_gen_gt": [[15, "module-autorag.data.qa.generation_gt.openai_gen_gt", false]], "autorag.data.qa.generation_gt.prompt": [[15, "module-autorag.data.qa.generation_gt.prompt", false]], "autorag.data.qa.query": [[16, "module-autorag.data.qa.query", false]], "autorag.data.qa.query.llama_gen_query": [[16, "module-autorag.data.qa.query.llama_gen_query", false]], "autorag.data.qa.query.openai_gen_query": [[16, "module-autorag.data.qa.query.openai_gen_query", false]], "autorag.data.qa.query.prompt": [[16, "module-autorag.data.qa.query.prompt", false]], "autorag.data.qa.sample": [[13, "module-autorag.data.qa.sample", false]], "autorag.data.qa.schema": [[13, "module-autorag.data.qa.schema", false]], "autorag.data.utils": [[18, "module-autorag.data.utils", false]], "autorag.data.utils.util": [[18, "module-autorag.data.utils.util", false]], "autorag.deploy": [[0, "module-autorag.deploy", false]], "autorag.evaluation": [[19, "module-autorag.evaluation", false]], "autorag.evaluation.generation": [[19, "module-autorag.evaluation.generation", false]], "autorag.evaluation.metric": [[20, "module-autorag.evaluation.metric", false]], "autorag.evaluation.metric.generation": [[20, "module-autorag.evaluation.metric.generation", false]], "autorag.evaluation.metric.retrieval": [[20, "module-autorag.evaluation.metric.retrieval", false]], "autorag.evaluation.metric.retrieval_contents": [[20, "module-autorag.evaluation.metric.retrieval_contents", false]], "autorag.evaluation.metric.util": [[20, "module-autorag.evaluation.metric.util", false]], "autorag.evaluation.retrieval": [[19, "module-autorag.evaluation.retrieval", false]], "autorag.evaluation.retrieval_contents": [[19, "module-autorag.evaluation.retrieval_contents", false]], "autorag.evaluation.util": [[19, "module-autorag.evaluation.util", false]], "autorag.evaluator": [[0, "module-autorag.evaluator", false]], "autorag.node_line": [[0, "module-autorag.node_line", false]], "autorag.nodes": [[21, "module-autorag.nodes", false]], "autorag.nodes.generator": [[22, "module-autorag.nodes.generator", false]], "autorag.nodes.generator.base": [[22, "module-autorag.nodes.generator.base", false]], "autorag.nodes.generator.llama_index_llm": [[22, "module-autorag.nodes.generator.llama_index_llm", false]], "autorag.nodes.generator.openai_llm": [[22, "module-autorag.nodes.generator.openai_llm", false]], "autorag.nodes.generator.run": [[22, "module-autorag.nodes.generator.run", false]], "autorag.nodes.generator.vllm": [[22, "module-autorag.nodes.generator.vllm", false]], "autorag.nodes.passageaugmenter": [[23, "module-autorag.nodes.passageaugmenter", false]], "autorag.nodes.passageaugmenter.base": [[23, "module-autorag.nodes.passageaugmenter.base", false]], "autorag.nodes.passageaugmenter.pass_passage_augmenter": [[23, "module-autorag.nodes.passageaugmenter.pass_passage_augmenter", false]], "autorag.nodes.passageaugmenter.prev_next_augmenter": [[23, "module-autorag.nodes.passageaugmenter.prev_next_augmenter", false]], "autorag.nodes.passageaugmenter.run": [[23, "module-autorag.nodes.passageaugmenter.run", false]], "autorag.nodes.passagecompressor": [[24, "module-autorag.nodes.passagecompressor", false]], "autorag.nodes.passagecompressor.base": [[24, "module-autorag.nodes.passagecompressor.base", false]], "autorag.nodes.passagecompressor.longllmlingua": [[24, "module-autorag.nodes.passagecompressor.longllmlingua", false]], "autorag.nodes.passagecompressor.pass_compressor": [[24, "module-autorag.nodes.passagecompressor.pass_compressor", false]], "autorag.nodes.passagecompressor.refine": [[24, "module-autorag.nodes.passagecompressor.refine", false]], "autorag.nodes.passagecompressor.run": [[24, "module-autorag.nodes.passagecompressor.run", false]], "autorag.nodes.passagecompressor.tree_summarize": [[24, "module-autorag.nodes.passagecompressor.tree_summarize", false]], "autorag.nodes.passagefilter": [[25, "module-autorag.nodes.passagefilter", false]], "autorag.nodes.passagefilter.base": [[25, "module-autorag.nodes.passagefilter.base", false]], "autorag.nodes.passagefilter.pass_passage_filter": [[25, "module-autorag.nodes.passagefilter.pass_passage_filter", false]], "autorag.nodes.passagefilter.percentile_cutoff": [[25, "module-autorag.nodes.passagefilter.percentile_cutoff", false]], "autorag.nodes.passagefilter.recency": [[25, "module-autorag.nodes.passagefilter.recency", false]], "autorag.nodes.passagefilter.run": [[25, "module-autorag.nodes.passagefilter.run", false]], "autorag.nodes.passagefilter.similarity_percentile_cutoff": [[25, "module-autorag.nodes.passagefilter.similarity_percentile_cutoff", false]], "autorag.nodes.passagefilter.similarity_threshold_cutoff": [[25, "module-autorag.nodes.passagefilter.similarity_threshold_cutoff", false]], "autorag.nodes.passagefilter.threshold_cutoff": [[25, "module-autorag.nodes.passagefilter.threshold_cutoff", false]], "autorag.nodes.passagereranker": [[26, "module-autorag.nodes.passagereranker", false]], "autorag.nodes.passagereranker.base": [[26, "module-autorag.nodes.passagereranker.base", false]], "autorag.nodes.passagereranker.cohere": [[26, "module-autorag.nodes.passagereranker.cohere", false]], "autorag.nodes.passagereranker.colbert": [[26, "module-autorag.nodes.passagereranker.colbert", false]], "autorag.nodes.passagereranker.flag_embedding": [[26, "module-autorag.nodes.passagereranker.flag_embedding", false]], "autorag.nodes.passagereranker.flag_embedding_llm": [[26, "module-autorag.nodes.passagereranker.flag_embedding_llm", false]], "autorag.nodes.passagereranker.jina": [[26, "module-autorag.nodes.passagereranker.jina", false]], "autorag.nodes.passagereranker.koreranker": [[26, "module-autorag.nodes.passagereranker.koreranker", false]], "autorag.nodes.passagereranker.monot5": [[26, "module-autorag.nodes.passagereranker.monot5", false]], "autorag.nodes.passagereranker.pass_reranker": [[26, "module-autorag.nodes.passagereranker.pass_reranker", false]], "autorag.nodes.passagereranker.rankgpt": [[26, "module-autorag.nodes.passagereranker.rankgpt", false]], "autorag.nodes.passagereranker.run": [[26, "module-autorag.nodes.passagereranker.run", false]], "autorag.nodes.passagereranker.sentence_transformer": [[26, "module-autorag.nodes.passagereranker.sentence_transformer", false]], "autorag.nodes.passagereranker.tart": [[27, "module-autorag.nodes.passagereranker.tart", false]], "autorag.nodes.passagereranker.tart.modeling_enc_t5": [[27, "module-autorag.nodes.passagereranker.tart.modeling_enc_t5", false]], "autorag.nodes.passagereranker.tart.tart": [[27, "module-autorag.nodes.passagereranker.tart.tart", false]], "autorag.nodes.passagereranker.tart.tokenization_enc_t5": [[27, "module-autorag.nodes.passagereranker.tart.tokenization_enc_t5", false]], "autorag.nodes.passagereranker.time_reranker": [[26, "module-autorag.nodes.passagereranker.time_reranker", false]], "autorag.nodes.passagereranker.upr": [[26, "module-autorag.nodes.passagereranker.upr", false]], "autorag.nodes.promptmaker": [[28, "module-autorag.nodes.promptmaker", false]], "autorag.nodes.promptmaker.base": [[28, "module-autorag.nodes.promptmaker.base", false]], "autorag.nodes.promptmaker.fstring": [[28, "module-autorag.nodes.promptmaker.fstring", false]], "autorag.nodes.promptmaker.long_context_reorder": [[28, "module-autorag.nodes.promptmaker.long_context_reorder", false]], "autorag.nodes.promptmaker.run": [[28, "module-autorag.nodes.promptmaker.run", false]], "autorag.nodes.promptmaker.window_replacement": [[28, "module-autorag.nodes.promptmaker.window_replacement", false]], "autorag.nodes.queryexpansion": [[29, "module-autorag.nodes.queryexpansion", false]], "autorag.nodes.queryexpansion.base": [[29, "module-autorag.nodes.queryexpansion.base", false]], "autorag.nodes.queryexpansion.hyde": [[29, "module-autorag.nodes.queryexpansion.hyde", false]], "autorag.nodes.queryexpansion.multi_query_expansion": [[29, "module-autorag.nodes.queryexpansion.multi_query_expansion", false]], "autorag.nodes.queryexpansion.pass_query_expansion": [[29, "module-autorag.nodes.queryexpansion.pass_query_expansion", false]], "autorag.nodes.queryexpansion.query_decompose": [[29, "module-autorag.nodes.queryexpansion.query_decompose", false]], "autorag.nodes.queryexpansion.run": [[29, "module-autorag.nodes.queryexpansion.run", false]], "autorag.nodes.retrieval": [[30, "module-autorag.nodes.retrieval", false]], "autorag.nodes.retrieval.base": [[30, "module-autorag.nodes.retrieval.base", false]], "autorag.nodes.retrieval.bm25": [[30, "module-autorag.nodes.retrieval.bm25", false]], "autorag.nodes.retrieval.hybrid_cc": [[30, "module-autorag.nodes.retrieval.hybrid_cc", false]], "autorag.nodes.retrieval.hybrid_rrf": [[30, "module-autorag.nodes.retrieval.hybrid_rrf", false]], "autorag.nodes.retrieval.run": [[30, "module-autorag.nodes.retrieval.run", false]], "autorag.nodes.retrieval.vectordb": [[30, "module-autorag.nodes.retrieval.vectordb", false]], "autorag.nodes.util": [[21, "module-autorag.nodes.util", false]], "autorag.parser": [[0, "module-autorag.parser", false]], "autorag.schema": [[31, "module-autorag.schema", false]], "autorag.schema.base": [[31, "module-autorag.schema.base", false]], "autorag.schema.metricinput": [[31, "module-autorag.schema.metricinput", false]], "autorag.schema.module": [[31, "module-autorag.schema.module", false]], "autorag.schema.node": [[31, "module-autorag.schema.node", false]], "autorag.strategy": [[0, "module-autorag.strategy", false]], "autorag.support": [[0, "module-autorag.support", false]], "autorag.utils": [[32, "module-autorag.utils", false]], "autorag.utils.preprocess": [[32, "module-autorag.utils.preprocess", false]], "autorag.utils.util": [[32, "module-autorag.utils.util", false]], "autorag.validator": [[0, "module-autorag.validator", false]], "autorag.web": [[0, "module-autorag.web", false]], "autorag_metric() (in module autorag.evaluation.metric.util)": [[20, "autorag.evaluation.metric.util.autorag_metric", false]], "autorag_metric_loop() (in module autorag.evaluation.metric.util)": [[20, "autorag.evaluation.metric.util.autorag_metric_loop", false]], "avoid_empty_result() (in module autorag.strategy)": [[0, "autorag.strategy.avoid_empty_result", false]], "basegenerator (class in autorag.nodes.generator.base)": [[22, "autorag.nodes.generator.base.BaseGenerator", false]], "basemodule (class in autorag.schema.base)": [[31, "autorag.schema.base.BaseModule", false]], "basepassageaugmenter (class in autorag.nodes.passageaugmenter.base)": [[23, "autorag.nodes.passageaugmenter.base.BasePassageAugmenter", false]], "basepassagecompressor (class in autorag.nodes.passagecompressor.base)": [[24, "autorag.nodes.passagecompressor.base.BasePassageCompressor", false]], "basepassagefilter (class in autorag.nodes.passagefilter.base)": [[25, "autorag.nodes.passagefilter.base.BasePassageFilter", false]], "basepassagereranker (class in autorag.nodes.passagereranker.base)": [[26, "autorag.nodes.passagereranker.base.BasePassageReranker", false]], "basepromptmaker (class in autorag.nodes.promptmaker.base)": [[28, "autorag.nodes.promptmaker.base.BasePromptMaker", false]], "basequeryexpansion (class in autorag.nodes.queryexpansion.base)": [[29, "autorag.nodes.queryexpansion.base.BaseQueryExpansion", false]], "baseretrieval (class in autorag.nodes.retrieval.base)": [[30, "autorag.nodes.retrieval.base.BaseRetrieval", false]], "batch_apply() (autorag.data.qa.schema.corpus method)": [[13, "autorag.data.qa.schema.Corpus.batch_apply", false]], "batch_apply() (autorag.data.qa.schema.qa method)": [[13, "autorag.data.qa.schema.QA.batch_apply", false]], "batch_apply() (autorag.data.qa.schema.raw method)": [[13, "autorag.data.qa.schema.Raw.batch_apply", false]], "batch_filter() (autorag.data.qa.schema.qa method)": [[13, "autorag.data.qa.schema.QA.batch_filter", false]], "bert_score() (in module autorag.evaluation.metric.generation)": [[20, "autorag.evaluation.metric.generation.bert_score", false]], "bleu() (in module autorag.evaluation.metric.generation)": [[20, "autorag.evaluation.metric.generation.bleu", false]], "bm25 (class in autorag.nodes.retrieval.bm25)": [[30, "autorag.nodes.retrieval.bm25.BM25", false]], "bm25_ingest() (in module autorag.nodes.retrieval.bm25)": [[30, "autorag.nodes.retrieval.bm25.bm25_ingest", false]], "bm25_pure() (in module autorag.nodes.retrieval.bm25)": [[30, "autorag.nodes.retrieval.bm25.bm25_pure", false]], "build_inputs_with_special_tokens() (autorag.nodes.passagereranker.tart.tokenization_enc_t5.enct5tokenizer method)": [[27, "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer.build_inputs_with_special_tokens", false]], "calculate_cosine_similarity() (in module autorag.evaluation.metric.util)": [[20, "autorag.evaluation.metric.util.calculate_cosine_similarity", false]], "cast_corpus_dataset() (in module autorag.utils.preprocess)": [[32, "autorag.utils.preprocess.cast_corpus_dataset", false]], "cast_embedding_model() (in module autorag.evaluation.util)": [[19, "autorag.evaluation.util.cast_embedding_model", false]], "cast_metrics() (in module autorag.evaluation.util)": [[19, "autorag.evaluation.util.cast_metrics", false]], "cast_qa_dataset() (in module autorag.utils.preprocess)": [[32, "autorag.utils.preprocess.cast_qa_dataset", false]], "cast_queries() (in module autorag.nodes.retrieval.base)": [[30, "autorag.nodes.retrieval.base.cast_queries", false]], "cast_to_run() (autorag.nodes.generator.base.basegenerator method)": [[22, "autorag.nodes.generator.base.BaseGenerator.cast_to_run", false]], "cast_to_run() (autorag.nodes.passageaugmenter.base.basepassageaugmenter method)": [[23, "autorag.nodes.passageaugmenter.base.BasePassageAugmenter.cast_to_run", false]], "cast_to_run() (autorag.nodes.passagecompressor.base.basepassagecompressor method)": [[24, "autorag.nodes.passagecompressor.base.BasePassageCompressor.cast_to_run", false]], "cast_to_run() (autorag.nodes.passagefilter.base.basepassagefilter method)": [[25, "autorag.nodes.passagefilter.base.BasePassageFilter.cast_to_run", false]], "cast_to_run() (autorag.nodes.passagereranker.base.basepassagereranker method)": [[26, "autorag.nodes.passagereranker.base.BasePassageReranker.cast_to_run", false]], "cast_to_run() (autorag.nodes.promptmaker.base.basepromptmaker method)": [[28, "autorag.nodes.promptmaker.base.BasePromptMaker.cast_to_run", false]], "cast_to_run() (autorag.nodes.queryexpansion.base.basequeryexpansion method)": [[29, "autorag.nodes.queryexpansion.base.BaseQueryExpansion.cast_to_run", false]], "cast_to_run() (autorag.nodes.retrieval.base.baseretrieval method)": [[30, "autorag.nodes.retrieval.base.BaseRetrieval.cast_to_run", false]], "cast_to_run() (autorag.schema.base.basemodule method)": [[31, "autorag.schema.base.BaseModule.cast_to_run", false]], "chat_box() (in module autorag.web)": [[0, "autorag.web.chat_box", false]], "check_expanded_query() (in module autorag.nodes.queryexpansion.base)": [[29, "autorag.nodes.queryexpansion.base.check_expanded_query", false]], "chunk() (autorag.data.qa.schema.raw method)": [[13, "autorag.data.qa.schema.Raw.chunk", false]], "chunker (class in autorag.chunker)": [[0, "autorag.chunker.Chunker", false]], "chunker_node() (in module autorag.data.chunk.base)": [[7, "autorag.data.chunk.base.chunker_node", false]], "cohere_rerank_pure() (in module autorag.nodes.passagereranker.cohere)": [[26, "autorag.nodes.passagereranker.cohere.cohere_rerank_pure", false]], "coherereranker (class in autorag.nodes.passagereranker.cohere)": [[26, "autorag.nodes.passagereranker.cohere.CohereReranker", false]], "colbertreranker (class in autorag.nodes.passagereranker.colbert)": [[26, "autorag.nodes.passagereranker.colbert.ColbertReranker", false]], "compute() (autorag.nodes.passagereranker.upr.uprscorer method)": [[26, "autorag.nodes.passagereranker.upr.UPRScorer.compute", false]], "concept_completion_query_gen() (in module autorag.data.qa.query.llama_gen_query)": [[16, "autorag.data.qa.query.llama_gen_query.concept_completion_query_gen", false]], "concept_completion_query_gen() (in module autorag.data.qa.query.openai_gen_query)": [[16, "autorag.data.qa.query.openai_gen_query.concept_completion_query_gen", false]], "convert_datetime_string() (in module autorag.utils.util)": [[32, "autorag.utils.util.convert_datetime_string", false]], "convert_env_in_dict() (in module autorag.utils.util)": [[32, "autorag.utils.util.convert_env_in_dict", false]], "convert_inputs_to_list() (in module autorag.utils.util)": [[32, "autorag.utils.util.convert_inputs_to_list", false]], "convert_string_to_tuple_in_dict() (in module autorag.utils.util)": [[32, "autorag.utils.util.convert_string_to_tuple_in_dict", false]], "corpus (class in autorag.data.qa.schema)": [[13, "autorag.data.qa.schema.Corpus", false]], "corpus_df_to_langchain_documents() (in module autorag.data.utils.util)": [[18, "autorag.data.utils.util.corpus_df_to_langchain_documents", false]], "create_token_type_ids_from_sequences() (autorag.nodes.passagereranker.tart.tokenization_enc_t5.enct5tokenizer method)": [[27, "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer.create_token_type_ids_from_sequences", false]], "deparallelize() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[27, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.deparallelize", false]], "dict_to_markdown() (in module autorag.utils.util)": [[32, "autorag.utils.util.dict_to_markdown", false]], "dict_to_markdown_table() (in module autorag.utils.util)": [[32, "autorag.utils.util.dict_to_markdown_table", false]], "distribute_list_by_ratio() (in module autorag.data.legacy.qacreation.llama_index)": [[11, "autorag.data.legacy.qacreation.llama_index.distribute_list_by_ratio", false]], "dontknow_filter_llama_index() (in module autorag.data.qa.filter.dontknow)": [[14, "autorag.data.qa.filter.dontknow.dontknow_filter_llama_index", false]], "dontknow_filter_openai() (in module autorag.data.qa.filter.dontknow)": [[14, "autorag.data.qa.filter.dontknow.dontknow_filter_openai", false]], "dontknow_filter_rule_based() (in module autorag.data.qa.filter.dontknow)": [[14, "autorag.data.qa.filter.dontknow.dontknow_filter_rule_based", false]], "dynamically_find_function() (in module autorag.support)": [[0, "autorag.support.dynamically_find_function", false]], "edit_summary_df_params() (in module autorag.nodes.retrieval.run)": [[30, "autorag.nodes.retrieval.run.edit_summary_df_params", false]], "embed_dim (autorag.mockembeddingrandom attribute)": [[0, "autorag.MockEmbeddingRandom.embed_dim", false]], "embedding_query_content() (in module autorag.utils.util)": [[32, "autorag.utils.util.embedding_query_content", false]], "enct5forsequenceclassification (class in autorag.nodes.passagereranker.tart.modeling_enc_t5)": [[27, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification", false]], "enct5tokenizer (class in autorag.nodes.passagereranker.tart.tokenization_enc_t5)": [[27, "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer", false]], "evaluate_generation() (in module autorag.evaluation.generation)": [[19, "autorag.evaluation.generation.evaluate_generation", false]], "evaluate_generator_node() (in module autorag.nodes.generator.run)": [[22, "autorag.nodes.generator.run.evaluate_generator_node", false]], "evaluate_generator_result() (in module autorag.nodes.promptmaker.run)": [[28, "autorag.nodes.promptmaker.run.evaluate_generator_result", false]], "evaluate_one_prompt_maker_node() (in module autorag.nodes.promptmaker.run)": [[28, "autorag.nodes.promptmaker.run.evaluate_one_prompt_maker_node", false]], "evaluate_one_query_expansion_node() (in module autorag.nodes.queryexpansion.run)": [[29, "autorag.nodes.queryexpansion.run.evaluate_one_query_expansion_node", false]], "evaluate_passage_compressor_node() (in module autorag.nodes.passagecompressor.run)": [[24, "autorag.nodes.passagecompressor.run.evaluate_passage_compressor_node", false]], "evaluate_retrieval() (in module autorag.evaluation.retrieval)": [[19, "autorag.evaluation.retrieval.evaluate_retrieval", false]], "evaluate_retrieval_contents() (in module autorag.evaluation.retrieval_contents)": [[19, "autorag.evaluation.retrieval_contents.evaluate_retrieval_contents", false]], "evaluate_retrieval_node() (in module autorag.nodes.retrieval.run)": [[30, "autorag.nodes.retrieval.run.evaluate_retrieval_node", false]], "evaluator (class in autorag.evaluator)": [[0, "autorag.evaluator.Evaluator", false]], "evenly_distribute_passages() (in module autorag.nodes.retrieval.base)": [[30, "autorag.nodes.retrieval.base.evenly_distribute_passages", false]], "exp_normalize() (in module autorag.nodes.passagereranker.koreranker)": [[26, "autorag.nodes.passagereranker.koreranker.exp_normalize", false]], "explode() (in module autorag.utils.util)": [[32, "autorag.utils.util.explode", false]], "extract_best_config() (in module autorag.deploy)": [[0, "autorag.deploy.extract_best_config", false]], "extract_node_line_names() (in module autorag.deploy)": [[0, "autorag.deploy.extract_node_line_names", false]], "extract_node_strategy() (in module autorag.deploy)": [[0, "autorag.deploy.extract_node_strategy", false]], "extract_values() (in module autorag.schema.node)": [[31, "autorag.schema.node.extract_values", false]], "extract_values_from_nodes() (in module autorag.schema.node)": [[31, "autorag.schema.node.extract_values_from_nodes", false]], "extract_values_from_nodes_strategy() (in module autorag.schema.node)": [[31, "autorag.schema.node.extract_values_from_nodes_strategy", false]], "factoid_query_gen() (in module autorag.data.qa.query.llama_gen_query)": [[16, "autorag.data.qa.query.llama_gen_query.factoid_query_gen", false]], "factoid_query_gen() (in module autorag.data.qa.query.openai_gen_query)": [[16, "autorag.data.qa.query.openai_gen_query.factoid_query_gen", false]], "fetch_contents() (in module autorag.utils.util)": [[32, "autorag.utils.util.fetch_contents", false]], "fetch_one_content() (in module autorag.utils.util)": [[32, "autorag.utils.util.fetch_one_content", false]], "filter() (autorag.data.qa.schema.qa method)": [[13, "autorag.data.qa.schema.QA.filter", false]], "filter_by_threshold() (in module autorag.strategy)": [[0, "autorag.strategy.filter_by_threshold", false]], "filter_dict_keys() (in module autorag.utils.util)": [[32, "autorag.utils.util.filter_dict_keys", false]], "find_key_values() (in module autorag.utils.util)": [[32, "autorag.utils.util.find_key_values", false]], "find_node_dir() (in module autorag.dashboard)": [[0, "autorag.dashboard.find_node_dir", false]], "find_node_summary_files() (in module autorag.utils.util)": [[32, "autorag.utils.util.find_node_summary_files", false]], "find_trial_dir() (in module autorag.utils.util)": [[32, "autorag.utils.util.find_trial_dir", false]], "find_unique_elems() (in module autorag.nodes.retrieval.run)": [[30, "autorag.nodes.retrieval.run.find_unique_elems", false]], "flag_embedding_run_model() (in module autorag.nodes.passagereranker.flag_embedding)": [[26, "autorag.nodes.passagereranker.flag_embedding.flag_embedding_run_model", false]], "flagembeddingllmreranker (class in autorag.nodes.passagereranker.flag_embedding_llm)": [[26, "autorag.nodes.passagereranker.flag_embedding_llm.FlagEmbeddingLLMReranker", false]], "flagembeddingreranker (class in autorag.nodes.passagereranker.flag_embedding)": [[26, "autorag.nodes.passagereranker.flag_embedding.FlagEmbeddingReranker", false]], "flatmap() (autorag.data.qa.schema.raw method)": [[13, "autorag.data.qa.schema.Raw.flatmap", false]], "flatten_apply() (in module autorag.utils.util)": [[32, "autorag.utils.util.flatten_apply", false]], "forward() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[27, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.forward", false]], "from_dataframe() (autorag.schema.metricinput.metricinput class method)": [[31, "autorag.schema.metricinput.MetricInput.from_dataframe", false]], "from_dict() (autorag.schema.module.module class method)": [[31, "autorag.schema.module.Module.from_dict", false]], "from_dict() (autorag.schema.node.node class method)": [[31, "autorag.schema.node.Node.from_dict", false]], "from_parquet() (autorag.chunker.chunker class method)": [[0, "autorag.chunker.Chunker.from_parquet", false]], "from_trial_folder() (autorag.deploy.runner class method)": [[0, "autorag.deploy.Runner.from_trial_folder", false]], "from_yaml() (autorag.deploy.runner class method)": [[0, "autorag.deploy.Runner.from_yaml", false]], "fstring (class in autorag.nodes.promptmaker.fstring)": [[28, "autorag.nodes.promptmaker.fstring.Fstring", false]], "fuse_per_query() (in module autorag.nodes.retrieval.hybrid_cc)": [[30, "autorag.nodes.retrieval.hybrid_cc.fuse_per_query", false]], "g_eval() (in module autorag.evaluation.metric.generation)": [[20, "autorag.evaluation.metric.generation.g_eval", false]], "generate_answers() (in module autorag.data.legacy.qacreation.llama_index)": [[11, "autorag.data.legacy.qacreation.llama_index.generate_answers", false]], "generate_basic_answer() (in module autorag.data.legacy.qacreation.llama_index)": [[11, "autorag.data.legacy.qacreation.llama_index.generate_basic_answer", false]], "generate_qa_llama_index() (in module autorag.data.legacy.qacreation.llama_index)": [[11, "autorag.data.legacy.qacreation.llama_index.generate_qa_llama_index", false]], "generate_qa_llama_index_by_ratio() (in module autorag.data.legacy.qacreation.llama_index)": [[11, "autorag.data.legacy.qacreation.llama_index.generate_qa_llama_index_by_ratio", false]], "generate_qa_ragas() (in module autorag.data.legacy.qacreation.ragas)": [[11, "autorag.data.legacy.qacreation.ragas.generate_qa_ragas", false]], "generate_qa_row() (in module autorag.data.legacy.qacreation.simple)": [[11, "autorag.data.legacy.qacreation.simple.generate_qa_row", false]], "generate_simple_qa_dataset() (in module autorag.data.legacy.qacreation.simple)": [[11, "autorag.data.legacy.qacreation.simple.generate_simple_qa_dataset", false]], "generated_log_probs (autorag.schema.metricinput.metricinput attribute)": [[31, "autorag.schema.metricinput.MetricInput.generated_log_probs", false]], "generated_texts (autorag.schema.metricinput.metricinput attribute)": [[31, "autorag.schema.metricinput.MetricInput.generated_texts", false]], "generation_gt (autorag.schema.metricinput.metricinput attribute)": [[31, "autorag.schema.metricinput.MetricInput.generation_gt", false]], "generator_node() (in module autorag.nodes.generator.base)": [[22, "autorag.nodes.generator.base.generator_node", false]], "get_best_row() (in module autorag.utils.util)": [[32, "autorag.utils.util.get_best_row", false]], "get_bm25_pkl_name() (in module autorag.nodes.retrieval.base)": [[30, "autorag.nodes.retrieval.base.get_bm25_pkl_name", false]], "get_bm25_scores() (in module autorag.nodes.retrieval.bm25)": [[30, "autorag.nodes.retrieval.bm25.get_bm25_scores", false]], "get_colbert_embedding_batch() (in module autorag.nodes.passagereranker.colbert)": [[26, "autorag.nodes.passagereranker.colbert.get_colbert_embedding_batch", false]], "get_colbert_score() (in module autorag.nodes.passagereranker.colbert)": [[26, "autorag.nodes.passagereranker.colbert.get_colbert_score", false]], "get_encoder() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[27, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.get_encoder", false]], "get_event_loop() (in module autorag.utils.util)": [[32, "autorag.utils.util.get_event_loop", false]], "get_file_metadata() (in module autorag.data.utils.util)": [[18, "autorag.data.utils.util.get_file_metadata", false]], "get_hybrid_execution_times() (in module autorag.nodes.retrieval.run)": [[30, "autorag.nodes.retrieval.run.get_hybrid_execution_times", false]], "get_id_scores() (in module autorag.nodes.retrieval.vectordb)": [[30, "autorag.nodes.retrieval.vectordb.get_id_scores", false]], "get_ids_and_scores() (in module autorag.nodes.retrieval.run)": [[30, "autorag.nodes.retrieval.run.get_ids_and_scores", false]], "get_input_embeddings() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[27, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.get_input_embeddings", false]], "get_metric_values() (in module autorag.dashboard)": [[0, "autorag.dashboard.get_metric_values", false]], "get_multi_query_expansion() (in module autorag.nodes.queryexpansion.multi_query_expansion)": [[29, "autorag.nodes.queryexpansion.multi_query_expansion.get_multi_query_expansion", false]], "get_param_combinations() (autorag.schema.node.node method)": [[31, "autorag.schema.node.Node.get_param_combinations", false]], "get_param_combinations() (in module autorag.data.utils.util)": [[18, "autorag.data.utils.util.get_param_combinations", false]], "get_query_decompose() (in module autorag.nodes.queryexpansion.query_decompose)": [[29, "autorag.nodes.queryexpansion.query_decompose.get_query_decompose", false]], "get_result() (autorag.nodes.generator.openai_llm.openaillm method)": [[22, "autorag.nodes.generator.openai_llm.OpenAILLM.get_result", false]], "get_result_o1() (autorag.nodes.generator.openai_llm.openaillm method)": [[22, "autorag.nodes.generator.openai_llm.OpenAILLM.get_result_o1", false]], "get_runner() (in module autorag.web)": [[0, "autorag.web.get_runner", false]], "get_scores_by_ids() (in module autorag.nodes.retrieval.run)": [[30, "autorag.nodes.retrieval.run.get_scores_by_ids", false]], "get_special_tokens_mask() (autorag.nodes.passagereranker.tart.tokenization_enc_t5.enct5tokenizer method)": [[27, "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer.get_special_tokens_mask", false]], "get_start_end_idx() (in module autorag.data.utils.util)": [[18, "autorag.data.utils.util.get_start_end_idx", false]], "get_support_modules() (in module autorag.support)": [[0, "autorag.support.get_support_modules", false]], "get_support_nodes() (in module autorag.support)": [[0, "autorag.support.get_support_nodes", false]], "handle_exception() (in module autorag)": [[0, "autorag.handle_exception", false]], "huggingface_evaluate() (in module autorag.evaluation.metric.generation)": [[20, "autorag.evaluation.metric.generation.huggingface_evaluate", false]], "hybrid_cc() (in module autorag.nodes.retrieval.hybrid_cc)": [[30, "autorag.nodes.retrieval.hybrid_cc.hybrid_cc", false]], "hybrid_rrf() (in module autorag.nodes.retrieval.hybrid_rrf)": [[30, "autorag.nodes.retrieval.hybrid_rrf.hybrid_rrf", false]], "hybridcc (class in autorag.nodes.retrieval.hybrid_cc)": [[30, "autorag.nodes.retrieval.hybrid_cc.HybridCC", false]], "hybridretrieval (class in autorag.nodes.retrieval.base)": [[30, "autorag.nodes.retrieval.base.HybridRetrieval", false]], "hybridrrf (class in autorag.nodes.retrieval.hybrid_rrf)": [[30, "autorag.nodes.retrieval.hybrid_rrf.HybridRRF", false]], "hyde (class in autorag.nodes.queryexpansion.hyde)": [[29, "autorag.nodes.queryexpansion.hyde.HyDE", false]], "is_dont_know (autorag.data.qa.filter.dontknow.response attribute)": [[14, "autorag.data.qa.filter.dontknow.Response.is_dont_know", false]], "is_fields_notnone() (autorag.schema.metricinput.metricinput method)": [[31, "autorag.schema.metricinput.MetricInput.is_fields_notnone", false]], "jina_reranker_pure() (in module autorag.nodes.passagereranker.jina)": [[26, "autorag.nodes.passagereranker.jina.jina_reranker_pure", false]], "jinareranker (class in autorag.nodes.passagereranker.jina)": [[26, "autorag.nodes.passagereranker.jina.JinaReranker", false]], "koreranker (class in autorag.nodes.passagereranker.koreranker)": [[26, "autorag.nodes.passagereranker.koreranker.KoReranker", false]], "koreranker_run_model() (in module autorag.nodes.passagereranker.koreranker)": [[26, "autorag.nodes.passagereranker.koreranker.koreranker_run_model", false]], "langchain_chunk() (in module autorag.data.chunk.langchain_chunk)": [[7, "autorag.data.chunk.langchain_chunk.langchain_chunk", false]], "langchain_chunk_pure() (in module autorag.data.chunk.langchain_chunk)": [[7, "autorag.data.chunk.langchain_chunk.langchain_chunk_pure", false]], "langchain_documents_to_parquet() (in module autorag.data.legacy.corpus.langchain)": [[10, "autorag.data.legacy.corpus.langchain.langchain_documents_to_parquet", false]], "langchain_parse() (in module autorag.data.parse.langchain_parse)": [[12, "autorag.data.parse.langchain_parse.langchain_parse", false]], "langchain_parse_pure() (in module autorag.data.parse.langchain_parse)": [[12, "autorag.data.parse.langchain_parse.langchain_parse_pure", false]], "lazyinit (class in autorag)": [[0, "autorag.LazyInit", false]], "linked_corpus (autorag.data.qa.schema.qa property)": [[13, "autorag.data.qa.schema.QA.linked_corpus", false]], "linked_raw (autorag.data.qa.schema.corpus property)": [[13, "autorag.data.qa.schema.Corpus.linked_raw", false]], "llama_documents_to_parquet() (in module autorag.data.legacy.corpus.llama_index)": [[10, "autorag.data.legacy.corpus.llama_index.llama_documents_to_parquet", false]], "llama_index_chunk() (in module autorag.data.chunk.llama_index_chunk)": [[7, "autorag.data.chunk.llama_index_chunk.llama_index_chunk", false]], "llama_index_chunk_pure() (in module autorag.data.chunk.llama_index_chunk)": [[7, "autorag.data.chunk.llama_index_chunk.llama_index_chunk_pure", false]], "llama_index_generate_base() (in module autorag.data.qa.query.llama_gen_query)": [[16, "autorag.data.qa.query.llama_gen_query.llama_index_generate_base", false]], "llama_parse() (in module autorag.data.parse.llamaparse)": [[12, "autorag.data.parse.llamaparse.llama_parse", false]], "llama_parse_pure() (in module autorag.data.parse.llamaparse)": [[12, "autorag.data.parse.llamaparse.llama_parse_pure", false]], "llama_text_node_to_parquet() (in module autorag.data.legacy.corpus.llama_index)": [[10, "autorag.data.legacy.corpus.llama_index.llama_text_node_to_parquet", false]], "llamaindexcompressor (class in autorag.nodes.passagecompressor.base)": [[24, "autorag.nodes.passagecompressor.base.LlamaIndexCompressor", false]], "llamaindexllm (class in autorag.nodes.generator.llama_index_llm)": [[22, "autorag.nodes.generator.llama_index_llm.LlamaIndexLLM", false]], "llm (autorag.nodes.passagecompressor.refine.refine attribute)": [[24, "autorag.nodes.passagecompressor.refine.Refine.llm", false]], "llm (autorag.nodes.passagecompressor.tree_summarize.treesummarize attribute)": [[24, "autorag.nodes.passagecompressor.tree_summarize.TreeSummarize.llm", false]], "llm (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[26, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.llm", false]], "llmlingua_pure() (in module autorag.nodes.passagecompressor.longllmlingua)": [[24, "autorag.nodes.passagecompressor.longllmlingua.llmlingua_pure", false]], "load_bm25_corpus() (in module autorag.nodes.retrieval.bm25)": [[30, "autorag.nodes.retrieval.bm25.load_bm25_corpus", false]], "load_chroma_collection() (in module autorag.nodes.retrieval.vectordb)": [[30, "autorag.nodes.retrieval.vectordb.load_chroma_collection", false]], "load_summary_file() (in module autorag.utils.util)": [[32, "autorag.utils.util.load_summary_file", false]], "load_yaml() (in module autorag.data.utils.util)": [[18, "autorag.data.utils.util.load_yaml", false]], "longcontextreorder (class in autorag.nodes.promptmaker.long_context_reorder)": [[28, "autorag.nodes.promptmaker.long_context_reorder.LongContextReorder", false]], "longllmlingua (class in autorag.nodes.passagecompressor.longllmlingua)": [[24, "autorag.nodes.passagecompressor.longllmlingua.LongLLMLingua", false]], "make_basic_gen_gt() (in module autorag.data.qa.generation_gt.llama_index_gen_gt)": [[15, "autorag.data.qa.generation_gt.llama_index_gen_gt.make_basic_gen_gt", false]], "make_basic_gen_gt() (in module autorag.data.qa.generation_gt.openai_gen_gt)": [[15, "autorag.data.qa.generation_gt.openai_gen_gt.make_basic_gen_gt", false]], "make_batch() (in module autorag.utils.util)": [[32, "autorag.utils.util.make_batch", false]], "make_combinations() (in module autorag.utils.util)": [[32, "autorag.utils.util.make_combinations", false]], "make_concise_gen_gt() (in module autorag.data.qa.generation_gt.llama_index_gen_gt)": [[15, "autorag.data.qa.generation_gt.llama_index_gen_gt.make_concise_gen_gt", false]], "make_concise_gen_gt() (in module autorag.data.qa.generation_gt.openai_gen_gt)": [[15, "autorag.data.qa.generation_gt.openai_gen_gt.make_concise_gen_gt", false]], "make_gen_gt_llama_index() (in module autorag.data.qa.generation_gt.llama_index_gen_gt)": [[15, "autorag.data.qa.generation_gt.llama_index_gen_gt.make_gen_gt_llama_index", false]], "make_gen_gt_openai() (in module autorag.data.qa.generation_gt.openai_gen_gt)": [[15, "autorag.data.qa.generation_gt.openai_gen_gt.make_gen_gt_openai", false]], "make_generator_callable_param() (in module autorag.nodes.util)": [[21, "autorag.nodes.util.make_generator_callable_param", false]], "make_generator_callable_params() (in module autorag.nodes.promptmaker.run)": [[28, "autorag.nodes.promptmaker.run.make_generator_callable_params", false]], "make_llm() (in module autorag.nodes.passagecompressor.base)": [[24, "autorag.nodes.passagecompressor.base.make_llm", false]], "make_metadata_list() (in module autorag.data.chunk.base)": [[7, "autorag.data.chunk.base.make_metadata_list", false]], "make_node_lines() (in module autorag.node_line)": [[0, "autorag.node_line.make_node_lines", false]], "make_qa_with_existing_qa() (in module autorag.data.legacy.qacreation.base)": [[11, "autorag.data.legacy.qacreation.base.make_qa_with_existing_qa", false]], "make_retrieval_callable_params() (in module autorag.nodes.queryexpansion.run)": [[29, "autorag.nodes.queryexpansion.run.make_retrieval_callable_params", false]], "make_retrieval_gt_contents() (autorag.data.qa.schema.qa method)": [[13, "autorag.data.qa.schema.QA.make_retrieval_gt_contents", false]], "make_single_content_qa() (in module autorag.data.legacy.qacreation.base)": [[11, "autorag.data.legacy.qacreation.base.make_single_content_qa", false]], "make_trial_summary_md() (in module autorag.dashboard)": [[0, "autorag.dashboard.make_trial_summary_md", false]], "map() (autorag.data.qa.schema.corpus method)": [[13, "autorag.data.qa.schema.Corpus.map", false]], "map() (autorag.data.qa.schema.qa method)": [[13, "autorag.data.qa.schema.QA.map", false]], "map() (autorag.data.qa.schema.raw method)": [[13, "autorag.data.qa.schema.Raw.map", false]], "measure_speed() (in module autorag.strategy)": [[0, "autorag.strategy.measure_speed", false]], "meteor() (in module autorag.evaluation.metric.generation)": [[20, "autorag.evaluation.metric.generation.meteor", false]], "metricinput (class in autorag.schema.metricinput)": [[31, "autorag.schema.metricinput.MetricInput", false]], "mockembeddingrandom (class in autorag)": [[0, "autorag.MockEmbeddingRandom", false]], "model_computed_fields (autorag.data.qa.filter.dontknow.response attribute)": [[14, "autorag.data.qa.filter.dontknow.Response.model_computed_fields", false]], "model_computed_fields (autorag.data.qa.generation_gt.openai_gen_gt.response attribute)": [[15, "autorag.data.qa.generation_gt.openai_gen_gt.Response.model_computed_fields", false]], "model_computed_fields (autorag.data.qa.query.openai_gen_query.response attribute)": [[16, "autorag.data.qa.query.openai_gen_query.Response.model_computed_fields", false]], "model_computed_fields (autorag.data.qa.query.openai_gen_query.twohopincrementalresponse attribute)": [[16, "autorag.data.qa.query.openai_gen_query.TwoHopIncrementalResponse.model_computed_fields", false]], "model_computed_fields (autorag.deploy.runnerinput attribute)": [[0, "autorag.deploy.RunnerInput.model_computed_fields", false]], "model_computed_fields (autorag.mockembeddingrandom attribute)": [[0, "autorag.MockEmbeddingRandom.model_computed_fields", false]], "model_computed_fields (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[26, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.model_computed_fields", false]], "model_config (autorag.data.qa.filter.dontknow.response attribute)": [[14, "autorag.data.qa.filter.dontknow.Response.model_config", false]], "model_config (autorag.data.qa.generation_gt.openai_gen_gt.response attribute)": [[15, "autorag.data.qa.generation_gt.openai_gen_gt.Response.model_config", false]], "model_config (autorag.data.qa.query.openai_gen_query.response attribute)": [[16, "autorag.data.qa.query.openai_gen_query.Response.model_config", false]], "model_config (autorag.data.qa.query.openai_gen_query.twohopincrementalresponse attribute)": [[16, "autorag.data.qa.query.openai_gen_query.TwoHopIncrementalResponse.model_config", false]], "model_config (autorag.deploy.runnerinput attribute)": [[0, "autorag.deploy.RunnerInput.model_config", false]], "model_config (autorag.mockembeddingrandom attribute)": [[0, "autorag.MockEmbeddingRandom.model_config", false]], "model_config (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[26, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.model_config", false]], "model_fields (autorag.data.qa.filter.dontknow.response attribute)": [[14, "autorag.data.qa.filter.dontknow.Response.model_fields", false]], "model_fields (autorag.data.qa.generation_gt.openai_gen_gt.response attribute)": [[15, "autorag.data.qa.generation_gt.openai_gen_gt.Response.model_fields", false]], "model_fields (autorag.data.qa.query.openai_gen_query.response attribute)": [[16, "autorag.data.qa.query.openai_gen_query.Response.model_fields", false]], "model_fields (autorag.data.qa.query.openai_gen_query.twohopincrementalresponse attribute)": [[16, "autorag.data.qa.query.openai_gen_query.TwoHopIncrementalResponse.model_fields", false]], "model_fields (autorag.deploy.runnerinput attribute)": [[0, "autorag.deploy.RunnerInput.model_fields", false]], "model_fields (autorag.mockembeddingrandom attribute)": [[0, "autorag.MockEmbeddingRandom.model_fields", false]], "model_fields (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[26, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.model_fields", false]], "module": [[0, "module-autorag", false], [0, "module-autorag.chunker", false], [0, "module-autorag.cli", false], [0, "module-autorag.dashboard", false], [0, "module-autorag.deploy", false], [0, "module-autorag.evaluator", false], [0, "module-autorag.node_line", false], [0, "module-autorag.parser", false], [0, "module-autorag.strategy", false], [0, "module-autorag.support", false], [0, "module-autorag.validator", false], [0, "module-autorag.web", false], [1, "module-autorag.data", false], [7, "module-autorag.data.chunk", false], [7, "module-autorag.data.chunk.base", false], [7, "module-autorag.data.chunk.langchain_chunk", false], [7, "module-autorag.data.chunk.llama_index_chunk", false], [7, "module-autorag.data.chunk.run", false], [9, "module-autorag.data.legacy", false], [10, "module-autorag.data.legacy.corpus", false], [10, "module-autorag.data.legacy.corpus.langchain", false], [10, "module-autorag.data.legacy.corpus.llama_index", false], [11, "module-autorag.data.legacy.qacreation", false], [11, "module-autorag.data.legacy.qacreation.base", false], [11, "module-autorag.data.legacy.qacreation.llama_index", false], [11, "module-autorag.data.legacy.qacreation.ragas", false], [11, "module-autorag.data.legacy.qacreation.simple", false], [12, "module-autorag.data.parse", false], [12, "module-autorag.data.parse.base", false], [12, "module-autorag.data.parse.langchain_parse", false], [12, "module-autorag.data.parse.llamaparse", false], [12, "module-autorag.data.parse.run", false], [13, "module-autorag.data.qa", false], [13, "module-autorag.data.qa.extract_evidence", false], [13, "module-autorag.data.qa.sample", false], [13, "module-autorag.data.qa.schema", false], [14, "module-autorag.data.qa.filter", false], [14, "module-autorag.data.qa.filter.dontknow", false], [14, "module-autorag.data.qa.filter.prompt", false], [15, "module-autorag.data.qa.generation_gt", false], [15, "module-autorag.data.qa.generation_gt.base", false], [15, "module-autorag.data.qa.generation_gt.llama_index_gen_gt", false], [15, "module-autorag.data.qa.generation_gt.openai_gen_gt", false], [15, "module-autorag.data.qa.generation_gt.prompt", false], [16, "module-autorag.data.qa.query", false], [16, "module-autorag.data.qa.query.llama_gen_query", false], [16, "module-autorag.data.qa.query.openai_gen_query", false], [16, "module-autorag.data.qa.query.prompt", false], [18, "module-autorag.data.utils", false], [18, "module-autorag.data.utils.util", false], [19, "module-autorag.evaluation", false], [19, "module-autorag.evaluation.generation", false], [19, "module-autorag.evaluation.retrieval", false], [19, "module-autorag.evaluation.retrieval_contents", false], [19, "module-autorag.evaluation.util", false], [20, "module-autorag.evaluation.metric", false], [20, "module-autorag.evaluation.metric.generation", false], [20, "module-autorag.evaluation.metric.retrieval", false], [20, "module-autorag.evaluation.metric.retrieval_contents", false], [20, "module-autorag.evaluation.metric.util", false], [21, "module-autorag.nodes", false], [21, "module-autorag.nodes.util", false], [22, "module-autorag.nodes.generator", false], [22, "module-autorag.nodes.generator.base", false], [22, "module-autorag.nodes.generator.llama_index_llm", false], [22, "module-autorag.nodes.generator.openai_llm", false], [22, "module-autorag.nodes.generator.run", false], [22, "module-autorag.nodes.generator.vllm", false], [23, "module-autorag.nodes.passageaugmenter", false], [23, "module-autorag.nodes.passageaugmenter.base", false], [23, "module-autorag.nodes.passageaugmenter.pass_passage_augmenter", false], [23, "module-autorag.nodes.passageaugmenter.prev_next_augmenter", false], [23, "module-autorag.nodes.passageaugmenter.run", false], [24, "module-autorag.nodes.passagecompressor", false], [24, "module-autorag.nodes.passagecompressor.base", false], [24, "module-autorag.nodes.passagecompressor.longllmlingua", false], [24, "module-autorag.nodes.passagecompressor.pass_compressor", false], [24, "module-autorag.nodes.passagecompressor.refine", false], [24, "module-autorag.nodes.passagecompressor.run", false], [24, "module-autorag.nodes.passagecompressor.tree_summarize", false], [25, "module-autorag.nodes.passagefilter", false], [25, "module-autorag.nodes.passagefilter.base", false], [25, "module-autorag.nodes.passagefilter.pass_passage_filter", false], [25, "module-autorag.nodes.passagefilter.percentile_cutoff", false], [25, "module-autorag.nodes.passagefilter.recency", false], [25, "module-autorag.nodes.passagefilter.run", false], [25, "module-autorag.nodes.passagefilter.similarity_percentile_cutoff", false], [25, "module-autorag.nodes.passagefilter.similarity_threshold_cutoff", false], [25, "module-autorag.nodes.passagefilter.threshold_cutoff", false], [26, "module-autorag.nodes.passagereranker", false], [26, "module-autorag.nodes.passagereranker.base", false], [26, "module-autorag.nodes.passagereranker.cohere", false], [26, "module-autorag.nodes.passagereranker.colbert", false], [26, "module-autorag.nodes.passagereranker.flag_embedding", false], [26, "module-autorag.nodes.passagereranker.flag_embedding_llm", false], [26, "module-autorag.nodes.passagereranker.jina", false], [26, "module-autorag.nodes.passagereranker.koreranker", false], [26, "module-autorag.nodes.passagereranker.monot5", false], [26, "module-autorag.nodes.passagereranker.pass_reranker", false], [26, "module-autorag.nodes.passagereranker.rankgpt", false], [26, "module-autorag.nodes.passagereranker.run", false], [26, "module-autorag.nodes.passagereranker.sentence_transformer", false], [26, "module-autorag.nodes.passagereranker.time_reranker", false], [26, "module-autorag.nodes.passagereranker.upr", false], [27, "module-autorag.nodes.passagereranker.tart", false], [27, "module-autorag.nodes.passagereranker.tart.modeling_enc_t5", false], [27, "module-autorag.nodes.passagereranker.tart.tart", false], [27, "module-autorag.nodes.passagereranker.tart.tokenization_enc_t5", false], [28, "module-autorag.nodes.promptmaker", false], [28, "module-autorag.nodes.promptmaker.base", false], [28, "module-autorag.nodes.promptmaker.fstring", false], [28, "module-autorag.nodes.promptmaker.long_context_reorder", false], [28, "module-autorag.nodes.promptmaker.run", false], [28, "module-autorag.nodes.promptmaker.window_replacement", false], [29, "module-autorag.nodes.queryexpansion", false], [29, "module-autorag.nodes.queryexpansion.base", false], [29, "module-autorag.nodes.queryexpansion.hyde", false], [29, "module-autorag.nodes.queryexpansion.multi_query_expansion", false], [29, "module-autorag.nodes.queryexpansion.pass_query_expansion", false], [29, "module-autorag.nodes.queryexpansion.query_decompose", false], [29, "module-autorag.nodes.queryexpansion.run", false], [30, "module-autorag.nodes.retrieval", false], [30, "module-autorag.nodes.retrieval.base", false], [30, "module-autorag.nodes.retrieval.bm25", false], [30, "module-autorag.nodes.retrieval.hybrid_cc", false], [30, "module-autorag.nodes.retrieval.hybrid_rrf", false], [30, "module-autorag.nodes.retrieval.run", false], [30, "module-autorag.nodes.retrieval.vectordb", false], [31, "module-autorag.schema", false], [31, "module-autorag.schema.base", false], [31, "module-autorag.schema.metricinput", false], [31, "module-autorag.schema.module", false], [31, "module-autorag.schema.node", false], [32, "module-autorag.utils", false], [32, "module-autorag.utils.preprocess", false], [32, "module-autorag.utils.util", false]], "module (autorag.schema.module.module attribute)": [[31, "autorag.schema.module.Module.module", false]], "module (class in autorag.schema.module)": [[31, "autorag.schema.module.Module", false]], "module_param (autorag.schema.module.module attribute)": [[31, "autorag.schema.module.Module.module_param", false]], "module_type (autorag.schema.module.module attribute)": [[31, "autorag.schema.module.Module.module_type", false]], "module_type_exists() (in module autorag.schema.node)": [[31, "autorag.schema.node.module_type_exists", false]], "modules (autorag.schema.node.node attribute)": [[31, "autorag.schema.node.Node.modules", false]], "monot5 (class in autorag.nodes.passagereranker.monot5)": [[26, "autorag.nodes.passagereranker.monot5.MonoT5", false]], "monot5_run_model() (in module autorag.nodes.passagereranker.monot5)": [[26, "autorag.nodes.passagereranker.monot5.monot5_run_model", false]], "multiqueryexpansion (class in autorag.nodes.queryexpansion.multi_query_expansion)": [[29, "autorag.nodes.queryexpansion.multi_query_expansion.MultiQueryExpansion", false]], "node (class in autorag.schema.node)": [[31, "autorag.schema.node.Node", false]], "node_params (autorag.schema.node.node attribute)": [[31, "autorag.schema.node.Node.node_params", false]], "node_type (autorag.schema.node.node attribute)": [[31, "autorag.schema.node.Node.node_type", false]], "node_view() (in module autorag.dashboard)": [[0, "autorag.dashboard.node_view", false]], "normalize_dbsf() (in module autorag.nodes.retrieval.hybrid_cc)": [[30, "autorag.nodes.retrieval.hybrid_cc.normalize_dbsf", false]], "normalize_mm() (in module autorag.nodes.retrieval.hybrid_cc)": [[30, "autorag.nodes.retrieval.hybrid_cc.normalize_mm", false]], "normalize_string() (in module autorag.utils.util)": [[32, "autorag.utils.util.normalize_string", false]], "normalize_tmm() (in module autorag.nodes.retrieval.hybrid_cc)": [[30, "autorag.nodes.retrieval.hybrid_cc.normalize_tmm", false]], "normalize_unicode() (in module autorag.utils.util)": [[32, "autorag.utils.util.normalize_unicode", false]], "normalize_z() (in module autorag.nodes.retrieval.hybrid_cc)": [[30, "autorag.nodes.retrieval.hybrid_cc.normalize_z", false]], "one_hop_question (autorag.data.qa.query.openai_gen_query.twohopincrementalresponse attribute)": [[16, "autorag.data.qa.query.openai_gen_query.TwoHopIncrementalResponse.one_hop_question", false]], "openai_truncate_by_token() (in module autorag.utils.util)": [[32, "autorag.utils.util.openai_truncate_by_token", false]], "openaillm (class in autorag.nodes.generator.openai_llm)": [[22, "autorag.nodes.generator.openai_llm.OpenAILLM", false]], "optimize_hybrid() (in module autorag.nodes.retrieval.run)": [[30, "autorag.nodes.retrieval.run.optimize_hybrid", false]], "parallelize() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[27, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.parallelize", false]], "param_list (autorag.nodes.passagecompressor.base.llamaindexcompressor attribute)": [[24, "autorag.nodes.passagecompressor.base.LlamaIndexCompressor.param_list", false]], "parse_all_files() (in module autorag.data.parse.langchain_parse)": [[12, "autorag.data.parse.langchain_parse.parse_all_files", false]], "parse_output() (in module autorag.data.legacy.qacreation.llama_index)": [[11, "autorag.data.legacy.qacreation.llama_index.parse_output", false]], "parser (class in autorag.parser)": [[0, "autorag.parser.Parser", false]], "parser_node() (in module autorag.data.parse.base)": [[12, "autorag.data.parse.base.parser_node", false]], "passage_filter_node() (in module autorag.nodes.passagefilter.base)": [[25, "autorag.nodes.passagefilter.base.passage_filter_node", false]], "passcompressor (class in autorag.nodes.passagecompressor.pass_compressor)": [[24, "autorag.nodes.passagecompressor.pass_compressor.PassCompressor", false]], "passpassageaugmenter (class in autorag.nodes.passageaugmenter.pass_passage_augmenter)": [[23, "autorag.nodes.passageaugmenter.pass_passage_augmenter.PassPassageAugmenter", false]], "passpassagefilter (class in autorag.nodes.passagefilter.pass_passage_filter)": [[25, "autorag.nodes.passagefilter.pass_passage_filter.PassPassageFilter", false]], "passqueryexpansion (class in autorag.nodes.queryexpansion.pass_query_expansion)": [[29, "autorag.nodes.queryexpansion.pass_query_expansion.PassQueryExpansion", false]], "passreranker (class in autorag.nodes.passagereranker.pass_reranker)": [[26, "autorag.nodes.passagereranker.pass_reranker.PassReranker", false]], "percentilecutoff (class in autorag.nodes.passagefilter.percentile_cutoff)": [[25, "autorag.nodes.passagefilter.percentile_cutoff.PercentileCutoff", false]], "pop_params() (in module autorag.utils.util)": [[32, "autorag.utils.util.pop_params", false]], "prev_next_augmenter_pure() (in module autorag.nodes.passageaugmenter.prev_next_augmenter)": [[23, "autorag.nodes.passageaugmenter.prev_next_augmenter.prev_next_augmenter_pure", false]], "prevnextpassageaugmenter (class in autorag.nodes.passageaugmenter.prev_next_augmenter)": [[23, "autorag.nodes.passageaugmenter.prev_next_augmenter.PrevNextPassageAugmenter", false]], "process_batch() (in module autorag.utils.util)": [[32, "autorag.utils.util.process_batch", false]], "prompt (autorag.schema.metricinput.metricinput attribute)": [[31, "autorag.schema.metricinput.MetricInput.prompt", false]], "pure() (autorag.nodes.generator.llama_index_llm.llamaindexllm method)": [[22, "autorag.nodes.generator.llama_index_llm.LlamaIndexLLM.pure", false]], "pure() (autorag.nodes.generator.openai_llm.openaillm method)": [[22, "autorag.nodes.generator.openai_llm.OpenAILLM.pure", false]], "pure() (autorag.nodes.generator.vllm.vllm method)": [[22, "autorag.nodes.generator.vllm.Vllm.pure", false]], "pure() (autorag.nodes.passageaugmenter.pass_passage_augmenter.passpassageaugmenter method)": [[23, "autorag.nodes.passageaugmenter.pass_passage_augmenter.PassPassageAugmenter.pure", false]], "pure() (autorag.nodes.passageaugmenter.prev_next_augmenter.prevnextpassageaugmenter method)": [[23, "autorag.nodes.passageaugmenter.prev_next_augmenter.PrevNextPassageAugmenter.pure", false]], "pure() (autorag.nodes.passagecompressor.base.llamaindexcompressor method)": [[24, "autorag.nodes.passagecompressor.base.LlamaIndexCompressor.pure", false]], "pure() (autorag.nodes.passagecompressor.longllmlingua.longllmlingua method)": [[24, "autorag.nodes.passagecompressor.longllmlingua.LongLLMLingua.pure", false]], "pure() (autorag.nodes.passagecompressor.pass_compressor.passcompressor method)": [[24, "autorag.nodes.passagecompressor.pass_compressor.PassCompressor.pure", false]], "pure() (autorag.nodes.passagefilter.pass_passage_filter.passpassagefilter method)": [[25, "autorag.nodes.passagefilter.pass_passage_filter.PassPassageFilter.pure", false]], "pure() (autorag.nodes.passagefilter.percentile_cutoff.percentilecutoff method)": [[25, "autorag.nodes.passagefilter.percentile_cutoff.PercentileCutoff.pure", false]], "pure() (autorag.nodes.passagefilter.recency.recencyfilter method)": [[25, "autorag.nodes.passagefilter.recency.RecencyFilter.pure", false]], "pure() (autorag.nodes.passagefilter.similarity_percentile_cutoff.similaritypercentilecutoff method)": [[25, "autorag.nodes.passagefilter.similarity_percentile_cutoff.SimilarityPercentileCutoff.pure", false]], "pure() (autorag.nodes.passagefilter.similarity_threshold_cutoff.similaritythresholdcutoff method)": [[25, "autorag.nodes.passagefilter.similarity_threshold_cutoff.SimilarityThresholdCutoff.pure", false]], "pure() (autorag.nodes.passagefilter.threshold_cutoff.thresholdcutoff method)": [[25, "autorag.nodes.passagefilter.threshold_cutoff.ThresholdCutoff.pure", false]], "pure() (autorag.nodes.passagereranker.cohere.coherereranker method)": [[26, "autorag.nodes.passagereranker.cohere.CohereReranker.pure", false]], "pure() (autorag.nodes.passagereranker.colbert.colbertreranker method)": [[26, "autorag.nodes.passagereranker.colbert.ColbertReranker.pure", false]], "pure() (autorag.nodes.passagereranker.flag_embedding.flagembeddingreranker method)": [[26, "autorag.nodes.passagereranker.flag_embedding.FlagEmbeddingReranker.pure", false]], "pure() (autorag.nodes.passagereranker.flag_embedding_llm.flagembeddingllmreranker method)": [[26, "autorag.nodes.passagereranker.flag_embedding_llm.FlagEmbeddingLLMReranker.pure", false]], "pure() (autorag.nodes.passagereranker.jina.jinareranker method)": [[26, "autorag.nodes.passagereranker.jina.JinaReranker.pure", false]], "pure() (autorag.nodes.passagereranker.koreranker.koreranker method)": [[26, "autorag.nodes.passagereranker.koreranker.KoReranker.pure", false]], "pure() (autorag.nodes.passagereranker.monot5.monot5 method)": [[26, "autorag.nodes.passagereranker.monot5.MonoT5.pure", false]], "pure() (autorag.nodes.passagereranker.pass_reranker.passreranker method)": [[26, "autorag.nodes.passagereranker.pass_reranker.PassReranker.pure", false]], "pure() (autorag.nodes.passagereranker.rankgpt.rankgpt method)": [[26, "autorag.nodes.passagereranker.rankgpt.RankGPT.pure", false]], "pure() (autorag.nodes.passagereranker.sentence_transformer.sentencetransformerreranker method)": [[26, "autorag.nodes.passagereranker.sentence_transformer.SentenceTransformerReranker.pure", false]], "pure() (autorag.nodes.passagereranker.tart.tart.tart method)": [[27, "autorag.nodes.passagereranker.tart.tart.Tart.pure", false]], "pure() (autorag.nodes.passagereranker.time_reranker.timereranker method)": [[26, "autorag.nodes.passagereranker.time_reranker.TimeReranker.pure", false]], "pure() (autorag.nodes.passagereranker.upr.upr method)": [[26, "autorag.nodes.passagereranker.upr.Upr.pure", false]], "pure() (autorag.nodes.promptmaker.fstring.fstring method)": [[28, "autorag.nodes.promptmaker.fstring.Fstring.pure", false]], "pure() (autorag.nodes.promptmaker.long_context_reorder.longcontextreorder method)": [[28, "autorag.nodes.promptmaker.long_context_reorder.LongContextReorder.pure", false]], "pure() (autorag.nodes.promptmaker.window_replacement.windowreplacement method)": [[28, "autorag.nodes.promptmaker.window_replacement.WindowReplacement.pure", false]], "pure() (autorag.nodes.queryexpansion.hyde.hyde method)": [[29, "autorag.nodes.queryexpansion.hyde.HyDE.pure", false]], "pure() (autorag.nodes.queryexpansion.multi_query_expansion.multiqueryexpansion method)": [[29, "autorag.nodes.queryexpansion.multi_query_expansion.MultiQueryExpansion.pure", false]], "pure() (autorag.nodes.queryexpansion.pass_query_expansion.passqueryexpansion method)": [[29, "autorag.nodes.queryexpansion.pass_query_expansion.PassQueryExpansion.pure", false]], "pure() (autorag.nodes.queryexpansion.query_decompose.querydecompose method)": [[29, "autorag.nodes.queryexpansion.query_decompose.QueryDecompose.pure", false]], "pure() (autorag.nodes.retrieval.base.hybridretrieval method)": [[30, "autorag.nodes.retrieval.base.HybridRetrieval.pure", false]], "pure() (autorag.nodes.retrieval.bm25.bm25 method)": [[30, "autorag.nodes.retrieval.bm25.BM25.pure", false]], "pure() (autorag.nodes.retrieval.vectordb.vectordb method)": [[30, "autorag.nodes.retrieval.vectordb.VectorDB.pure", false]], "pure() (autorag.schema.base.basemodule method)": [[31, "autorag.schema.base.BaseModule.pure", false]], "qa (class in autorag.data.qa.schema)": [[13, "autorag.data.qa.schema.QA", false]], "queries (autorag.schema.metricinput.metricinput attribute)": [[31, "autorag.schema.metricinput.MetricInput.queries", false]], "query (autorag.data.qa.query.openai_gen_query.response attribute)": [[16, "autorag.data.qa.query.openai_gen_query.Response.query", false]], "query (autorag.deploy.runnerinput attribute)": [[0, "autorag.deploy.RunnerInput.query", false]], "query (autorag.schema.metricinput.metricinput attribute)": [[31, "autorag.schema.metricinput.MetricInput.query", false]], "query_gen_openai_base() (in module autorag.data.qa.query.openai_gen_query)": [[16, "autorag.data.qa.query.openai_gen_query.query_gen_openai_base", false]], "querydecompose (class in autorag.nodes.queryexpansion.query_decompose)": [[29, "autorag.nodes.queryexpansion.query_decompose.QueryDecompose", false]], "random() (in module autorag)": [[0, "autorag.random", false]], "random_single_hop() (in module autorag.data.qa.sample)": [[13, "autorag.data.qa.sample.random_single_hop", false]], "range_single_hop() (in module autorag.data.qa.sample)": [[13, "autorag.data.qa.sample.range_single_hop", false]], "rankgpt (class in autorag.nodes.passagereranker.rankgpt)": [[26, "autorag.nodes.passagereranker.rankgpt.RankGPT", false]], "rankgpt_rerank_prompt (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[26, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.rankgpt_rerank_prompt", false]], "raw (class in autorag.data.qa.schema)": [[13, "autorag.data.qa.schema.Raw", false]], "recencyfilter (class in autorag.nodes.passagefilter.recency)": [[25, "autorag.nodes.passagefilter.recency.RecencyFilter", false]], "reconstruct_list() (in module autorag.utils.util)": [[32, "autorag.utils.util.reconstruct_list", false]], "refine (class in autorag.nodes.passagecompressor.refine)": [[24, "autorag.nodes.passagecompressor.refine.Refine", false]], "replace_value_in_dict() (in module autorag.utils.util)": [[32, "autorag.utils.util.replace_value_in_dict", false]], "response (class in autorag.data.qa.filter.dontknow)": [[14, "autorag.data.qa.filter.dontknow.Response", false]], "response (class in autorag.data.qa.generation_gt.openai_gen_gt)": [[15, "autorag.data.qa.generation_gt.openai_gen_gt.Response", false]], "response (class in autorag.data.qa.query.openai_gen_query)": [[16, "autorag.data.qa.query.openai_gen_query.Response", false]], "restart_trial() (autorag.evaluator.evaluator method)": [[0, "autorag.evaluator.Evaluator.restart_trial", false]], "result_column (autorag.deploy.runnerinput attribute)": [[0, "autorag.deploy.RunnerInput.result_column", false]], "result_to_dataframe() (in module autorag.utils.util)": [[32, "autorag.utils.util.result_to_dataframe", false]], "retrieval_f1() (in module autorag.evaluation.metric.retrieval)": [[20, "autorag.evaluation.metric.retrieval.retrieval_f1", false]], "retrieval_gt (autorag.schema.metricinput.metricinput attribute)": [[31, "autorag.schema.metricinput.MetricInput.retrieval_gt", false]], "retrieval_gt_contents (autorag.schema.metricinput.metricinput attribute)": [[31, "autorag.schema.metricinput.MetricInput.retrieval_gt_contents", false]], "retrieval_map() (in module autorag.evaluation.metric.retrieval)": [[20, "autorag.evaluation.metric.retrieval.retrieval_map", false]], "retrieval_mrr() (in module autorag.evaluation.metric.retrieval)": [[20, "autorag.evaluation.metric.retrieval.retrieval_mrr", false]], "retrieval_ndcg() (in module autorag.evaluation.metric.retrieval)": [[20, "autorag.evaluation.metric.retrieval.retrieval_ndcg", false]], "retrieval_precision() (in module autorag.evaluation.metric.retrieval)": [[20, "autorag.evaluation.metric.retrieval.retrieval_precision", false]], "retrieval_recall() (in module autorag.evaluation.metric.retrieval)": [[20, "autorag.evaluation.metric.retrieval.retrieval_recall", false]], "retrieval_token_f1() (in module autorag.evaluation.metric.retrieval_contents)": [[20, "autorag.evaluation.metric.retrieval_contents.retrieval_token_f1", false]], "retrieval_token_precision() (in module autorag.evaluation.metric.retrieval_contents)": [[20, "autorag.evaluation.metric.retrieval_contents.retrieval_token_precision", false]], "retrieval_token_recall() (in module autorag.evaluation.metric.retrieval_contents)": [[20, "autorag.evaluation.metric.retrieval_contents.retrieval_token_recall", false]], "retrieved_contents (autorag.schema.metricinput.metricinput attribute)": [[31, "autorag.schema.metricinput.MetricInput.retrieved_contents", false]], "retrieved_ids (autorag.schema.metricinput.metricinput attribute)": [[31, "autorag.schema.metricinput.MetricInput.retrieved_ids", false]], "rouge() (in module autorag.evaluation.metric.generation)": [[20, "autorag.evaluation.metric.generation.rouge", false]], "rrf_calculate() (in module autorag.nodes.retrieval.hybrid_rrf)": [[30, "autorag.nodes.retrieval.hybrid_rrf.rrf_calculate", false]], "rrf_pure() (in module autorag.nodes.retrieval.hybrid_rrf)": [[30, "autorag.nodes.retrieval.hybrid_rrf.rrf_pure", false]], "run() (autorag.deploy.runner method)": [[0, "autorag.deploy.Runner.run", false]], "run() (autorag.schema.node.node method)": [[31, "autorag.schema.node.Node.run", false]], "run() (in module autorag.dashboard)": [[0, "autorag.dashboard.run", false]], "run_api_server() (autorag.deploy.runner method)": [[0, "autorag.deploy.Runner.run_api_server", false]], "run_chunker() (in module autorag.data.chunk.run)": [[7, "autorag.data.chunk.run.run_chunker", false]], "run_evaluator() (autorag.nodes.retrieval.hybrid_cc.hybridcc class method)": [[30, "autorag.nodes.retrieval.hybrid_cc.HybridCC.run_evaluator", false]], "run_evaluator() (autorag.nodes.retrieval.hybrid_rrf.hybridrrf class method)": [[30, "autorag.nodes.retrieval.hybrid_rrf.HybridRRF.run_evaluator", false]], "run_evaluator() (autorag.schema.base.basemodule class method)": [[31, "autorag.schema.base.BaseModule.run_evaluator", false]], "run_generator_node() (in module autorag.nodes.generator.run)": [[22, "autorag.nodes.generator.run.run_generator_node", false]], "run_node (autorag.schema.node.node attribute)": [[31, "autorag.schema.node.Node.run_node", false]], "run_node_line() (in module autorag.node_line)": [[0, "autorag.node_line.run_node_line", false]], "run_parser() (in module autorag.data.parse.run)": [[12, "autorag.data.parse.run.run_parser", false]], "run_passage_augmenter_node() (in module autorag.nodes.passageaugmenter.run)": [[23, "autorag.nodes.passageaugmenter.run.run_passage_augmenter_node", false]], "run_passage_compressor_node() (in module autorag.nodes.passagecompressor.run)": [[24, "autorag.nodes.passagecompressor.run.run_passage_compressor_node", false]], "run_passage_filter_node() (in module autorag.nodes.passagefilter.run)": [[25, "autorag.nodes.passagefilter.run.run_passage_filter_node", false]], "run_passage_reranker_node() (in module autorag.nodes.passagereranker.run)": [[26, "autorag.nodes.passagereranker.run.run_passage_reranker_node", false]], "run_prompt_maker_node() (in module autorag.nodes.promptmaker.run)": [[28, "autorag.nodes.promptmaker.run.run_prompt_maker_node", false]], "run_query_embedding_batch() (in module autorag.nodes.retrieval.vectordb)": [[30, "autorag.nodes.retrieval.vectordb.run_query_embedding_batch", false]], "run_query_expansion_node() (in module autorag.nodes.queryexpansion.run)": [[29, "autorag.nodes.queryexpansion.run.run_query_expansion_node", false]], "run_retrieval_node() (in module autorag.nodes.retrieval.run)": [[30, "autorag.nodes.retrieval.run.run_retrieval_node", false]], "run_web() (autorag.deploy.runner method)": [[0, "autorag.deploy.Runner.run_web", false]], "runner (class in autorag.deploy)": [[0, "autorag.deploy.Runner", false]], "runnerinput (class in autorag.deploy)": [[0, "autorag.deploy.RunnerInput", false]], "sample() (autorag.data.qa.schema.corpus method)": [[13, "autorag.data.qa.schema.Corpus.sample", false]], "save_parquet_safe() (in module autorag.utils.util)": [[32, "autorag.utils.util.save_parquet_safe", false]], "select_best() (in module autorag.strategy)": [[0, "autorag.strategy.select_best", false]], "select_best_average() (in module autorag.strategy)": [[0, "autorag.strategy.select_best_average", false]], "select_best_rr() (in module autorag.strategy)": [[0, "autorag.strategy.select_best_rr", false]], "select_bm25_tokenizer() (in module autorag.nodes.retrieval.bm25)": [[30, "autorag.nodes.retrieval.bm25.select_bm25_tokenizer", false]], "select_normalize_mean() (in module autorag.strategy)": [[0, "autorag.strategy.select_normalize_mean", false]], "select_top_k() (in module autorag.utils.util)": [[32, "autorag.utils.util.select_top_k", false]], "sem_score() (in module autorag.evaluation.metric.generation)": [[20, "autorag.evaluation.metric.generation.sem_score", false]], "sentence_transformer_run_model() (in module autorag.nodes.passagereranker.sentence_transformer)": [[26, "autorag.nodes.passagereranker.sentence_transformer.sentence_transformer_run_model", false]], "sentencetransformerreranker (class in autorag.nodes.passagereranker.sentence_transformer)": [[26, "autorag.nodes.passagereranker.sentence_transformer.SentenceTransformerReranker", false]], "set_initial_state() (in module autorag.web)": [[0, "autorag.web.set_initial_state", false]], "set_input_embeddings() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[27, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.set_input_embeddings", false]], "set_page_config() (in module autorag.web)": [[0, "autorag.web.set_page_config", false]], "set_page_header() (in module autorag.web)": [[0, "autorag.web.set_page_header", false]], "similaritypercentilecutoff (class in autorag.nodes.passagefilter.similarity_percentile_cutoff)": [[25, "autorag.nodes.passagefilter.similarity_percentile_cutoff.SimilarityPercentileCutoff", false]], "similaritythresholdcutoff (class in autorag.nodes.passagefilter.similarity_threshold_cutoff)": [[25, "autorag.nodes.passagefilter.similarity_threshold_cutoff.SimilarityThresholdCutoff", false]], "single_token_f1() (in module autorag.evaluation.metric.retrieval_contents)": [[20, "autorag.evaluation.metric.retrieval_contents.single_token_f1", false]], "slice_tensor() (in module autorag.nodes.passagereranker.colbert)": [[26, "autorag.nodes.passagereranker.colbert.slice_tensor", false]], "slice_tokenizer_result() (in module autorag.nodes.passagereranker.colbert)": [[26, "autorag.nodes.passagereranker.colbert.slice_tokenizer_result", false]], "sort_by_scores() (autorag.nodes.passageaugmenter.base.basepassageaugmenter static method)": [[23, "autorag.nodes.passageaugmenter.base.BasePassageAugmenter.sort_by_scores", false]], "sort_by_scores() (in module autorag.utils.util)": [[32, "autorag.utils.util.sort_by_scores", false]], "split_by_sentence_kiwi() (in module autorag.data)": [[1, "autorag.data.split_by_sentence_kiwi", false]], "split_dataframe() (in module autorag.utils.util)": [[32, "autorag.utils.util.split_dataframe", false]], "start_chunking() (autorag.chunker.chunker method)": [[0, "autorag.chunker.Chunker.start_chunking", false]], "start_parsing() (autorag.parser.parser method)": [[0, "autorag.parser.Parser.start_parsing", false]], "start_trial() (autorag.evaluator.evaluator method)": [[0, "autorag.evaluator.Evaluator.start_trial", false]], "strategy (autorag.schema.node.node attribute)": [[31, "autorag.schema.node.Node.strategy", false]], "summary_df_to_yaml() (in module autorag.deploy)": [[0, "autorag.deploy.summary_df_to_yaml", false]], "tart (class in autorag.nodes.passagereranker.tart.tart)": [[27, "autorag.nodes.passagereranker.tart.tart.Tart", false]], "tart_run_model() (in module autorag.nodes.passagereranker.tart.tart)": [[27, "autorag.nodes.passagereranker.tart.tart.tart_run_model", false]], "thresholdcutoff (class in autorag.nodes.passagefilter.threshold_cutoff)": [[25, "autorag.nodes.passagefilter.threshold_cutoff.ThresholdCutoff", false]], "timereranker (class in autorag.nodes.passagereranker.time_reranker)": [[26, "autorag.nodes.passagereranker.time_reranker.TimeReranker", false]], "to_list() (in module autorag.utils.util)": [[32, "autorag.utils.util.to_list", false]], "to_parquet() (autorag.data.qa.schema.corpus method)": [[13, "autorag.data.qa.schema.Corpus.to_parquet", false]], "to_parquet() (autorag.data.qa.schema.qa method)": [[13, "autorag.data.qa.schema.QA.to_parquet", false]], "tokenize() (in module autorag.nodes.retrieval.bm25)": [[30, "autorag.nodes.retrieval.bm25.tokenize", false]], "tokenize_ko_kiwi() (in module autorag.nodes.retrieval.bm25)": [[30, "autorag.nodes.retrieval.bm25.tokenize_ko_kiwi", false]], "tokenize_ko_kkma() (in module autorag.nodes.retrieval.bm25)": [[30, "autorag.nodes.retrieval.bm25.tokenize_ko_kkma", false]], "tokenize_ko_okt() (in module autorag.nodes.retrieval.bm25)": [[30, "autorag.nodes.retrieval.bm25.tokenize_ko_okt", false]], "tokenize_porter_stemmer() (in module autorag.nodes.retrieval.bm25)": [[30, "autorag.nodes.retrieval.bm25.tokenize_porter_stemmer", false]], "tokenize_space() (in module autorag.nodes.retrieval.bm25)": [[30, "autorag.nodes.retrieval.bm25.tokenize_space", false]], "top_n (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[26, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.top_n", false]], "treesummarize (class in autorag.nodes.passagecompressor.tree_summarize)": [[24, "autorag.nodes.passagecompressor.tree_summarize.TreeSummarize", false]], "truncate_by_token() (in module autorag.nodes.generator.openai_llm)": [[22, "autorag.nodes.generator.openai_llm.truncate_by_token", false]], "two_hop_incremental() (in module autorag.data.qa.query.llama_gen_query)": [[16, "autorag.data.qa.query.llama_gen_query.two_hop_incremental", false]], "two_hop_incremental() (in module autorag.data.qa.query.openai_gen_query)": [[16, "autorag.data.qa.query.openai_gen_query.two_hop_incremental", false]], "two_hop_question (autorag.data.qa.query.openai_gen_query.twohopincrementalresponse attribute)": [[16, "autorag.data.qa.query.openai_gen_query.TwoHopIncrementalResponse.two_hop_question", false]], "twohopincrementalresponse (class in autorag.data.qa.query.openai_gen_query)": [[16, "autorag.data.qa.query.openai_gen_query.TwoHopIncrementalResponse", false]], "update_corpus() (autorag.data.qa.schema.qa method)": [[13, "autorag.data.qa.schema.QA.update_corpus", false]], "upr (class in autorag.nodes.passagereranker.upr)": [[26, "autorag.nodes.passagereranker.upr.Upr", false]], "uprscorer (class in autorag.nodes.passagereranker.upr)": [[26, "autorag.nodes.passagereranker.upr.UPRScorer", false]], "validate() (autorag.validator.validator method)": [[0, "autorag.validator.Validator.validate", false]], "validate_corpus_dataset() (in module autorag.utils.preprocess)": [[32, "autorag.utils.preprocess.validate_corpus_dataset", false]], "validate_llama_index_prompt() (in module autorag.data.legacy.qacreation.llama_index)": [[11, "autorag.data.legacy.qacreation.llama_index.validate_llama_index_prompt", false]], "validate_qa_dataset() (in module autorag.utils.preprocess)": [[32, "autorag.utils.preprocess.validate_qa_dataset", false]], "validate_qa_from_corpus_dataset() (in module autorag.utils.preprocess)": [[32, "autorag.utils.preprocess.validate_qa_from_corpus_dataset", false]], "validate_strategy_inputs() (in module autorag.strategy)": [[0, "autorag.strategy.validate_strategy_inputs", false]], "validator (class in autorag.validator)": [[0, "autorag.validator.Validator", false]], "vectordb (class in autorag.nodes.retrieval.vectordb)": [[30, "autorag.nodes.retrieval.vectordb.VectorDB", false]], "vectordb_ingest() (in module autorag.nodes.retrieval.vectordb)": [[30, "autorag.nodes.retrieval.vectordb.vectordb_ingest", false]], "vectordb_pure() (in module autorag.nodes.retrieval.vectordb)": [[30, "autorag.nodes.retrieval.vectordb.vectordb_pure", false]], "verbose (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[26, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.verbose", false]], "vllm (class in autorag.nodes.generator.vllm)": [[22, "autorag.nodes.generator.vllm.Vllm", false]], "windowreplacement (class in autorag.nodes.promptmaker.window_replacement)": [[28, "autorag.nodes.promptmaker.window_replacement.WindowReplacement", false]], "yaml_to_markdown() (in module autorag.dashboard)": [[0, "autorag.dashboard.yaml_to_markdown", false]]}, "objects": {"": [[0, 0, 0, "-", "autorag"]], "autorag": [[0, 1, 1, "", "LazyInit"], [0, 1, 1, "", "MockEmbeddingRandom"], [0, 0, 0, "-", "chunker"], [0, 0, 0, "-", "cli"], [0, 0, 0, "-", "dashboard"], [1, 0, 0, "-", "data"], [0, 0, 0, "-", "deploy"], [19, 0, 0, "-", "evaluation"], [0, 0, 0, "-", "evaluator"], [0, 4, 1, "", "handle_exception"], [0, 0, 0, "-", "node_line"], [21, 0, 0, "-", "nodes"], [0, 0, 0, "-", "parser"], [0, 4, 1, "", "random"], [31, 0, 0, "-", "schema"], [0, 0, 0, "-", "strategy"], [0, 0, 0, "-", "support"], [32, 0, 0, "-", "utils"], [0, 0, 0, "-", "validator"], [0, 0, 0, "-", "web"]], "autorag.MockEmbeddingRandom": [[0, 2, 1, "", "embed_dim"], [0, 2, 1, "", "model_computed_fields"], [0, 2, 1, "", "model_config"], [0, 2, 1, "", "model_fields"]], "autorag.chunker": [[0, 1, 1, "", "Chunker"]], "autorag.chunker.Chunker": [[0, 3, 1, "", "from_parquet"], [0, 3, 1, "", "start_chunking"]], "autorag.dashboard": [[0, 4, 1, "", "find_node_dir"], [0, 4, 1, "", "get_metric_values"], [0, 4, 1, "", "make_trial_summary_md"], [0, 4, 1, "", "node_view"], [0, 4, 1, "", "run"], [0, 4, 1, "", "yaml_to_markdown"]], "autorag.data": [[7, 0, 0, "-", "chunk"], [9, 0, 0, "-", "legacy"], [12, 0, 0, "-", "parse"], [13, 0, 0, "-", "qa"], [1, 4, 1, "", "split_by_sentence_kiwi"], [18, 0, 0, "-", "utils"]], "autorag.data.chunk": [[7, 0, 0, "-", "base"], [7, 0, 0, "-", "langchain_chunk"], [7, 0, 0, "-", "llama_index_chunk"], [7, 0, 0, "-", "run"]], "autorag.data.chunk.base": [[7, 4, 1, "", "add_file_name"], [7, 4, 1, "", "chunker_node"], [7, 4, 1, "", "make_metadata_list"]], "autorag.data.chunk.langchain_chunk": [[7, 4, 1, "", "langchain_chunk"], [7, 4, 1, "", "langchain_chunk_pure"]], "autorag.data.chunk.llama_index_chunk": [[7, 4, 1, "", "llama_index_chunk"], [7, 4, 1, "", "llama_index_chunk_pure"]], "autorag.data.chunk.run": [[7, 4, 1, "", "run_chunker"]], "autorag.data.legacy": [[10, 0, 0, "-", "corpus"], [11, 0, 0, "-", "qacreation"]], "autorag.data.legacy.corpus": [[10, 0, 0, "-", "langchain"], [10, 0, 0, "-", "llama_index"]], "autorag.data.legacy.corpus.langchain": [[10, 4, 1, "", "langchain_documents_to_parquet"]], "autorag.data.legacy.corpus.llama_index": [[10, 4, 1, "", "llama_documents_to_parquet"], [10, 4, 1, "", "llama_text_node_to_parquet"]], "autorag.data.legacy.qacreation": [[11, 0, 0, "-", "base"], [11, 0, 0, "-", "llama_index"], [11, 0, 0, "-", "ragas"], [11, 0, 0, "-", "simple"]], "autorag.data.legacy.qacreation.base": [[11, 4, 1, "", "make_qa_with_existing_qa"], [11, 4, 1, "", "make_single_content_qa"]], "autorag.data.legacy.qacreation.llama_index": [[11, 4, 1, "", "async_qa_gen_llama_index"], [11, 4, 1, "", "distribute_list_by_ratio"], [11, 4, 1, "", "generate_answers"], [11, 4, 1, "", "generate_basic_answer"], [11, 4, 1, "", "generate_qa_llama_index"], [11, 4, 1, "", "generate_qa_llama_index_by_ratio"], [11, 4, 1, "", "parse_output"], [11, 4, 1, "", "validate_llama_index_prompt"]], "autorag.data.legacy.qacreation.ragas": [[11, 4, 1, "", "generate_qa_ragas"]], "autorag.data.legacy.qacreation.simple": [[11, 4, 1, "", "generate_qa_row"], [11, 4, 1, "", "generate_simple_qa_dataset"]], "autorag.data.parse": [[12, 0, 0, "-", "base"], [12, 0, 0, "-", "langchain_parse"], [12, 0, 0, "-", "llamaparse"], [12, 0, 0, "-", "run"]], "autorag.data.parse.base": [[12, 4, 1, "", "parser_node"]], "autorag.data.parse.langchain_parse": [[12, 4, 1, "", "langchain_parse"], [12, 4, 1, "", "langchain_parse_pure"], [12, 4, 1, "", "parse_all_files"]], "autorag.data.parse.llamaparse": [[12, 4, 1, "", "llama_parse"], [12, 4, 1, "", "llama_parse_pure"]], "autorag.data.parse.run": [[12, 4, 1, "", "run_parser"]], "autorag.data.qa": [[13, 0, 0, "-", "extract_evidence"], [14, 0, 0, "-", "filter"], [15, 0, 0, "-", "generation_gt"], [16, 0, 0, "-", "query"], [13, 0, 0, "-", "sample"], [13, 0, 0, "-", "schema"]], "autorag.data.qa.filter": [[14, 0, 0, "-", "dontknow"], [14, 0, 0, "-", "prompt"]], "autorag.data.qa.filter.dontknow": [[14, 1, 1, "", "Response"], [14, 4, 1, "", "dontknow_filter_llama_index"], [14, 4, 1, "", "dontknow_filter_openai"], [14, 4, 1, "", "dontknow_filter_rule_based"]], "autorag.data.qa.filter.dontknow.Response": [[14, 2, 1, "", "is_dont_know"], [14, 2, 1, "", "model_computed_fields"], [14, 2, 1, "", "model_config"], [14, 2, 1, "", "model_fields"]], "autorag.data.qa.generation_gt": [[15, 0, 0, "-", "base"], [15, 0, 0, "-", "llama_index_gen_gt"], [15, 0, 0, "-", "openai_gen_gt"], [15, 0, 0, "-", "prompt"]], "autorag.data.qa.generation_gt.base": [[15, 4, 1, "", "add_gen_gt"]], "autorag.data.qa.generation_gt.llama_index_gen_gt": [[15, 4, 1, "", "make_basic_gen_gt"], [15, 4, 1, "", "make_concise_gen_gt"], [15, 4, 1, "", "make_gen_gt_llama_index"]], "autorag.data.qa.generation_gt.openai_gen_gt": [[15, 1, 1, "", "Response"], [15, 4, 1, "", "make_basic_gen_gt"], [15, 4, 1, "", "make_concise_gen_gt"], [15, 4, 1, "", "make_gen_gt_openai"]], "autorag.data.qa.generation_gt.openai_gen_gt.Response": [[15, 2, 1, "", "answer"], [15, 2, 1, "", "model_computed_fields"], [15, 2, 1, "", "model_config"], [15, 2, 1, "", "model_fields"]], "autorag.data.qa.query": [[16, 0, 0, "-", "llama_gen_query"], [16, 0, 0, "-", "openai_gen_query"], [16, 0, 0, "-", "prompt"]], "autorag.data.qa.query.llama_gen_query": [[16, 4, 1, "", "concept_completion_query_gen"], [16, 4, 1, "", "factoid_query_gen"], [16, 4, 1, "", "llama_index_generate_base"], [16, 4, 1, "", "two_hop_incremental"]], "autorag.data.qa.query.openai_gen_query": [[16, 1, 1, "", "Response"], [16, 1, 1, "", "TwoHopIncrementalResponse"], [16, 4, 1, "", "concept_completion_query_gen"], [16, 4, 1, "", "factoid_query_gen"], [16, 4, 1, "", "query_gen_openai_base"], [16, 4, 1, "", "two_hop_incremental"]], "autorag.data.qa.query.openai_gen_query.Response": [[16, 2, 1, "", "model_computed_fields"], [16, 2, 1, "", "model_config"], [16, 2, 1, "", "model_fields"], [16, 2, 1, "", "query"]], "autorag.data.qa.query.openai_gen_query.TwoHopIncrementalResponse": [[16, 2, 1, "", "answer"], [16, 2, 1, "", "model_computed_fields"], [16, 2, 1, "", "model_config"], [16, 2, 1, "", "model_fields"], [16, 2, 1, "", "one_hop_question"], [16, 2, 1, "", "two_hop_question"]], "autorag.data.qa.sample": [[13, 4, 1, "", "random_single_hop"], [13, 4, 1, "", "range_single_hop"]], "autorag.data.qa.schema": [[13, 1, 1, "", "Corpus"], [13, 1, 1, "", "QA"], [13, 1, 1, "", "Raw"]], "autorag.data.qa.schema.Corpus": [[13, 3, 1, "", "batch_apply"], [13, 5, 1, "", "linked_raw"], [13, 3, 1, "", "map"], [13, 3, 1, "", "sample"], [13, 3, 1, "", "to_parquet"]], "autorag.data.qa.schema.QA": [[13, 3, 1, "", "batch_apply"], [13, 3, 1, "", "batch_filter"], [13, 3, 1, "", "filter"], [13, 5, 1, "", "linked_corpus"], [13, 3, 1, "", "make_retrieval_gt_contents"], [13, 3, 1, "", "map"], [13, 3, 1, "", "to_parquet"], [13, 3, 1, "", "update_corpus"]], "autorag.data.qa.schema.Raw": [[13, 3, 1, "", "batch_apply"], [13, 3, 1, "", "chunk"], [13, 3, 1, "", "flatmap"], [13, 3, 1, "", "map"]], "autorag.data.utils": [[18, 0, 0, "-", "util"]], "autorag.data.utils.util": [[18, 4, 1, "", "add_essential_metadata"], [18, 4, 1, "", "add_essential_metadata_llama_text_node"], [18, 4, 1, "", "corpus_df_to_langchain_documents"], [18, 4, 1, "", "get_file_metadata"], [18, 4, 1, "", "get_param_combinations"], [18, 4, 1, "", "get_start_end_idx"], [18, 4, 1, "", "load_yaml"]], "autorag.deploy": [[0, 1, 1, "", "Runner"], [0, 1, 1, "", "RunnerInput"], [0, 4, 1, "", "extract_best_config"], [0, 4, 1, "", "extract_node_line_names"], [0, 4, 1, "", "extract_node_strategy"], [0, 4, 1, "", "summary_df_to_yaml"]], "autorag.deploy.Runner": [[0, 3, 1, "", "from_trial_folder"], [0, 3, 1, "", "from_yaml"], [0, 3, 1, "", "run"], [0, 3, 1, "", "run_api_server"], [0, 3, 1, "", "run_web"]], "autorag.deploy.RunnerInput": [[0, 2, 1, "", "model_computed_fields"], [0, 2, 1, "", "model_config"], [0, 2, 1, "", "model_fields"], [0, 2, 1, "", "query"], [0, 2, 1, "", "result_column"]], "autorag.evaluation": [[19, 0, 0, "-", "generation"], [20, 0, 0, "-", "metric"], [19, 0, 0, "-", "retrieval"], [19, 0, 0, "-", "retrieval_contents"], [19, 0, 0, "-", "util"]], "autorag.evaluation.generation": [[19, 4, 1, "", "evaluate_generation"]], "autorag.evaluation.metric": [[20, 0, 0, "-", "generation"], [20, 0, 0, "-", "retrieval"], [20, 0, 0, "-", "retrieval_contents"], [20, 0, 0, "-", "util"]], "autorag.evaluation.metric.generation": [[20, 4, 1, "", "async_g_eval"], [20, 4, 1, "", "bert_score"], [20, 4, 1, "", "bleu"], [20, 4, 1, "", "g_eval"], [20, 4, 1, "", "huggingface_evaluate"], [20, 4, 1, "", "meteor"], [20, 4, 1, "", "rouge"], [20, 4, 1, "", "sem_score"]], "autorag.evaluation.metric.retrieval": [[20, 4, 1, "", "retrieval_f1"], [20, 4, 1, "", "retrieval_map"], [20, 4, 1, "", "retrieval_mrr"], [20, 4, 1, "", "retrieval_ndcg"], [20, 4, 1, "", "retrieval_precision"], [20, 4, 1, "", "retrieval_recall"]], "autorag.evaluation.metric.retrieval_contents": [[20, 4, 1, "", "retrieval_token_f1"], [20, 4, 1, "", "retrieval_token_precision"], [20, 4, 1, "", "retrieval_token_recall"], [20, 4, 1, "", "single_token_f1"]], "autorag.evaluation.metric.util": [[20, 4, 1, "", "autorag_metric"], [20, 4, 1, "", "autorag_metric_loop"], [20, 4, 1, "", "calculate_cosine_similarity"]], "autorag.evaluation.retrieval": [[19, 4, 1, "", "evaluate_retrieval"]], "autorag.evaluation.retrieval_contents": [[19, 4, 1, "", "evaluate_retrieval_contents"]], "autorag.evaluation.util": [[19, 4, 1, "", "cast_embedding_model"], [19, 4, 1, "", "cast_metrics"]], "autorag.evaluator": [[0, 1, 1, "", "Evaluator"]], "autorag.evaluator.Evaluator": [[0, 3, 1, "", "restart_trial"], [0, 3, 1, "", "start_trial"]], "autorag.node_line": [[0, 4, 1, "", "make_node_lines"], [0, 4, 1, "", "run_node_line"]], "autorag.nodes": [[22, 0, 0, "-", "generator"], [23, 0, 0, "-", "passageaugmenter"], [24, 0, 0, "-", "passagecompressor"], [25, 0, 0, "-", "passagefilter"], [26, 0, 0, "-", "passagereranker"], [28, 0, 0, "-", "promptmaker"], [29, 0, 0, "-", "queryexpansion"], [30, 0, 0, "-", "retrieval"], [21, 0, 0, "-", "util"]], "autorag.nodes.generator": [[22, 0, 0, "-", "base"], [22, 0, 0, "-", "llama_index_llm"], [22, 0, 0, "-", "openai_llm"], [22, 0, 0, "-", "run"], [22, 0, 0, "-", "vllm"]], "autorag.nodes.generator.base": [[22, 1, 1, "", "BaseGenerator"], [22, 4, 1, "", "generator_node"]], "autorag.nodes.generator.base.BaseGenerator": [[22, 3, 1, "", "cast_to_run"]], "autorag.nodes.generator.llama_index_llm": [[22, 1, 1, "", "LlamaIndexLLM"]], "autorag.nodes.generator.llama_index_llm.LlamaIndexLLM": [[22, 3, 1, "", "pure"]], "autorag.nodes.generator.openai_llm": [[22, 1, 1, "", "OpenAILLM"], [22, 4, 1, "", "truncate_by_token"]], "autorag.nodes.generator.openai_llm.OpenAILLM": [[22, 3, 1, "", "get_result"], [22, 3, 1, "", "get_result_o1"], [22, 3, 1, "", "pure"]], "autorag.nodes.generator.run": [[22, 4, 1, "", "evaluate_generator_node"], [22, 4, 1, "", "run_generator_node"]], "autorag.nodes.generator.vllm": [[22, 1, 1, "", "Vllm"]], "autorag.nodes.generator.vllm.Vllm": [[22, 3, 1, "", "pure"]], "autorag.nodes.passageaugmenter": [[23, 0, 0, "-", "base"], [23, 0, 0, "-", "pass_passage_augmenter"], [23, 0, 0, "-", "prev_next_augmenter"], [23, 0, 0, "-", "run"]], "autorag.nodes.passageaugmenter.base": [[23, 1, 1, "", "BasePassageAugmenter"]], "autorag.nodes.passageaugmenter.base.BasePassageAugmenter": [[23, 3, 1, "", "cast_to_run"], [23, 3, 1, "", "sort_by_scores"]], "autorag.nodes.passageaugmenter.pass_passage_augmenter": [[23, 1, 1, "", "PassPassageAugmenter"]], "autorag.nodes.passageaugmenter.pass_passage_augmenter.PassPassageAugmenter": [[23, 3, 1, "", "pure"]], "autorag.nodes.passageaugmenter.prev_next_augmenter": [[23, 1, 1, "", "PrevNextPassageAugmenter"], [23, 4, 1, "", "prev_next_augmenter_pure"]], "autorag.nodes.passageaugmenter.prev_next_augmenter.PrevNextPassageAugmenter": [[23, 3, 1, "", "pure"]], "autorag.nodes.passageaugmenter.run": [[23, 4, 1, "", "run_passage_augmenter_node"]], "autorag.nodes.passagecompressor": [[24, 0, 0, "-", "base"], [24, 0, 0, "-", "longllmlingua"], [24, 0, 0, "-", "pass_compressor"], [24, 0, 0, "-", "refine"], [24, 0, 0, "-", "run"], [24, 0, 0, "-", "tree_summarize"]], "autorag.nodes.passagecompressor.base": [[24, 1, 1, "", "BasePassageCompressor"], [24, 1, 1, "", "LlamaIndexCompressor"], [24, 4, 1, "", "make_llm"]], "autorag.nodes.passagecompressor.base.BasePassageCompressor": [[24, 3, 1, "", "cast_to_run"]], "autorag.nodes.passagecompressor.base.LlamaIndexCompressor": [[24, 2, 1, "", "param_list"], [24, 3, 1, "", "pure"]], "autorag.nodes.passagecompressor.longllmlingua": [[24, 1, 1, "", "LongLLMLingua"], [24, 4, 1, "", "llmlingua_pure"]], "autorag.nodes.passagecompressor.longllmlingua.LongLLMLingua": [[24, 3, 1, "", "pure"]], "autorag.nodes.passagecompressor.pass_compressor": [[24, 1, 1, "", "PassCompressor"]], "autorag.nodes.passagecompressor.pass_compressor.PassCompressor": [[24, 3, 1, "", "pure"]], "autorag.nodes.passagecompressor.refine": [[24, 1, 1, "", "Refine"]], "autorag.nodes.passagecompressor.refine.Refine": [[24, 2, 1, "", "llm"]], "autorag.nodes.passagecompressor.run": [[24, 4, 1, "", "evaluate_passage_compressor_node"], [24, 4, 1, "", "run_passage_compressor_node"]], "autorag.nodes.passagecompressor.tree_summarize": [[24, 1, 1, "", "TreeSummarize"]], "autorag.nodes.passagecompressor.tree_summarize.TreeSummarize": [[24, 2, 1, "", "llm"]], "autorag.nodes.passagefilter": [[25, 0, 0, "-", "base"], [25, 0, 0, "-", "pass_passage_filter"], [25, 0, 0, "-", "percentile_cutoff"], [25, 0, 0, "-", "recency"], [25, 0, 0, "-", "run"], [25, 0, 0, "-", "similarity_percentile_cutoff"], [25, 0, 0, "-", "similarity_threshold_cutoff"], [25, 0, 0, "-", "threshold_cutoff"]], "autorag.nodes.passagefilter.base": [[25, 1, 1, "", "BasePassageFilter"], [25, 4, 1, "", "passage_filter_node"]], "autorag.nodes.passagefilter.base.BasePassageFilter": [[25, 3, 1, "", "cast_to_run"]], "autorag.nodes.passagefilter.pass_passage_filter": [[25, 1, 1, "", "PassPassageFilter"]], "autorag.nodes.passagefilter.pass_passage_filter.PassPassageFilter": [[25, 3, 1, "", "pure"]], "autorag.nodes.passagefilter.percentile_cutoff": [[25, 1, 1, "", "PercentileCutoff"]], "autorag.nodes.passagefilter.percentile_cutoff.PercentileCutoff": [[25, 3, 1, "", "pure"]], "autorag.nodes.passagefilter.recency": [[25, 1, 1, "", "RecencyFilter"]], "autorag.nodes.passagefilter.recency.RecencyFilter": [[25, 3, 1, "", "pure"]], "autorag.nodes.passagefilter.run": [[25, 4, 1, "", "run_passage_filter_node"]], "autorag.nodes.passagefilter.similarity_percentile_cutoff": [[25, 1, 1, "", "SimilarityPercentileCutoff"]], "autorag.nodes.passagefilter.similarity_percentile_cutoff.SimilarityPercentileCutoff": [[25, 3, 1, "", "pure"]], "autorag.nodes.passagefilter.similarity_threshold_cutoff": [[25, 1, 1, "", "SimilarityThresholdCutoff"]], "autorag.nodes.passagefilter.similarity_threshold_cutoff.SimilarityThresholdCutoff": [[25, 3, 1, "", "pure"]], "autorag.nodes.passagefilter.threshold_cutoff": [[25, 1, 1, "", "ThresholdCutoff"]], "autorag.nodes.passagefilter.threshold_cutoff.ThresholdCutoff": [[25, 3, 1, "", "pure"]], "autorag.nodes.passagereranker": [[26, 0, 0, "-", "base"], [26, 0, 0, "-", "cohere"], [26, 0, 0, "-", "colbert"], [26, 0, 0, "-", "flag_embedding"], [26, 0, 0, "-", "flag_embedding_llm"], [26, 0, 0, "-", "jina"], [26, 0, 0, "-", "koreranker"], [26, 0, 0, "-", "monot5"], [26, 0, 0, "-", "pass_reranker"], [26, 0, 0, "-", "rankgpt"], [26, 0, 0, "-", "run"], [26, 0, 0, "-", "sentence_transformer"], [27, 0, 0, "-", "tart"], [26, 0, 0, "-", "time_reranker"], [26, 0, 0, "-", "upr"]], "autorag.nodes.passagereranker.base": [[26, 1, 1, "", "BasePassageReranker"]], "autorag.nodes.passagereranker.base.BasePassageReranker": [[26, 3, 1, "", "cast_to_run"]], "autorag.nodes.passagereranker.cohere": [[26, 1, 1, "", "CohereReranker"], [26, 4, 1, "", "cohere_rerank_pure"]], "autorag.nodes.passagereranker.cohere.CohereReranker": [[26, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.colbert": [[26, 1, 1, "", "ColbertReranker"], [26, 4, 1, "", "get_colbert_embedding_batch"], [26, 4, 1, "", "get_colbert_score"], [26, 4, 1, "", "slice_tensor"], [26, 4, 1, "", "slice_tokenizer_result"]], "autorag.nodes.passagereranker.colbert.ColbertReranker": [[26, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.flag_embedding": [[26, 1, 1, "", "FlagEmbeddingReranker"], [26, 4, 1, "", "flag_embedding_run_model"]], "autorag.nodes.passagereranker.flag_embedding.FlagEmbeddingReranker": [[26, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.flag_embedding_llm": [[26, 1, 1, "", "FlagEmbeddingLLMReranker"]], "autorag.nodes.passagereranker.flag_embedding_llm.FlagEmbeddingLLMReranker": [[26, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.jina": [[26, 1, 1, "", "JinaReranker"], [26, 4, 1, "", "jina_reranker_pure"]], "autorag.nodes.passagereranker.jina.JinaReranker": [[26, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.koreranker": [[26, 1, 1, "", "KoReranker"], [26, 4, 1, "", "exp_normalize"], [26, 4, 1, "", "koreranker_run_model"]], "autorag.nodes.passagereranker.koreranker.KoReranker": [[26, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.monot5": [[26, 1, 1, "", "MonoT5"], [26, 4, 1, "", "monot5_run_model"]], "autorag.nodes.passagereranker.monot5.MonoT5": [[26, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.pass_reranker": [[26, 1, 1, "", "PassReranker"]], "autorag.nodes.passagereranker.pass_reranker.PassReranker": [[26, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.rankgpt": [[26, 1, 1, "", "AsyncRankGPTRerank"], [26, 1, 1, "", "RankGPT"]], "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank": [[26, 3, 1, "", "async_postprocess_nodes"], [26, 3, 1, "", "async_run_llm"], [26, 2, 1, "", "llm"], [26, 2, 1, "", "model_computed_fields"], [26, 2, 1, "", "model_config"], [26, 2, 1, "", "model_fields"], [26, 2, 1, "", "rankgpt_rerank_prompt"], [26, 2, 1, "", "top_n"], [26, 2, 1, "", "verbose"]], "autorag.nodes.passagereranker.rankgpt.RankGPT": [[26, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.run": [[26, 4, 1, "", "run_passage_reranker_node"]], "autorag.nodes.passagereranker.sentence_transformer": [[26, 1, 1, "", "SentenceTransformerReranker"], [26, 4, 1, "", "sentence_transformer_run_model"]], "autorag.nodes.passagereranker.sentence_transformer.SentenceTransformerReranker": [[26, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.tart": [[27, 0, 0, "-", "modeling_enc_t5"], [27, 0, 0, "-", "tart"], [27, 0, 0, "-", "tokenization_enc_t5"]], "autorag.nodes.passagereranker.tart.modeling_enc_t5": [[27, 1, 1, "", "EncT5ForSequenceClassification"]], "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification": [[27, 3, 1, "", "deparallelize"], [27, 3, 1, "", "forward"], [27, 3, 1, "", "get_encoder"], [27, 3, 1, "", "get_input_embeddings"], [27, 3, 1, "", "parallelize"], [27, 3, 1, "", "set_input_embeddings"]], "autorag.nodes.passagereranker.tart.tart": [[27, 1, 1, "", "Tart"], [27, 4, 1, "", "tart_run_model"]], "autorag.nodes.passagereranker.tart.tart.Tart": [[27, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.tart.tokenization_enc_t5": [[27, 1, 1, "", "EncT5Tokenizer"]], "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer": [[27, 3, 1, "", "build_inputs_with_special_tokens"], [27, 3, 1, "", "create_token_type_ids_from_sequences"], [27, 3, 1, "", "get_special_tokens_mask"]], "autorag.nodes.passagereranker.time_reranker": [[26, 1, 1, "", "TimeReranker"]], "autorag.nodes.passagereranker.time_reranker.TimeReranker": [[26, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.upr": [[26, 1, 1, "", "UPRScorer"], [26, 1, 1, "", "Upr"]], "autorag.nodes.passagereranker.upr.UPRScorer": [[26, 3, 1, "", "compute"]], "autorag.nodes.passagereranker.upr.Upr": [[26, 3, 1, "", "pure"]], "autorag.nodes.promptmaker": [[28, 0, 0, "-", "base"], [28, 0, 0, "-", "fstring"], [28, 0, 0, "-", "long_context_reorder"], [28, 0, 0, "-", "run"], [28, 0, 0, "-", "window_replacement"]], "autorag.nodes.promptmaker.base": [[28, 1, 1, "", "BasePromptMaker"]], "autorag.nodes.promptmaker.base.BasePromptMaker": [[28, 3, 1, "", "cast_to_run"]], "autorag.nodes.promptmaker.fstring": [[28, 1, 1, "", "Fstring"]], "autorag.nodes.promptmaker.fstring.Fstring": [[28, 3, 1, "", "pure"]], "autorag.nodes.promptmaker.long_context_reorder": [[28, 1, 1, "", "LongContextReorder"]], "autorag.nodes.promptmaker.long_context_reorder.LongContextReorder": [[28, 3, 1, "", "pure"]], "autorag.nodes.promptmaker.run": [[28, 4, 1, "", "evaluate_generator_result"], [28, 4, 1, "", "evaluate_one_prompt_maker_node"], [28, 4, 1, "", "make_generator_callable_params"], [28, 4, 1, "", "run_prompt_maker_node"]], "autorag.nodes.promptmaker.window_replacement": [[28, 1, 1, "", "WindowReplacement"]], "autorag.nodes.promptmaker.window_replacement.WindowReplacement": [[28, 3, 1, "", "pure"]], "autorag.nodes.queryexpansion": [[29, 0, 0, "-", "base"], [29, 0, 0, "-", "hyde"], [29, 0, 0, "-", "multi_query_expansion"], [29, 0, 0, "-", "pass_query_expansion"], [29, 0, 0, "-", "query_decompose"], [29, 0, 0, "-", "run"]], "autorag.nodes.queryexpansion.base": [[29, 1, 1, "", "BaseQueryExpansion"], [29, 4, 1, "", "check_expanded_query"]], "autorag.nodes.queryexpansion.base.BaseQueryExpansion": [[29, 3, 1, "", "cast_to_run"]], "autorag.nodes.queryexpansion.hyde": [[29, 1, 1, "", "HyDE"]], "autorag.nodes.queryexpansion.hyde.HyDE": [[29, 3, 1, "", "pure"]], "autorag.nodes.queryexpansion.multi_query_expansion": [[29, 1, 1, "", "MultiQueryExpansion"], [29, 4, 1, "", "get_multi_query_expansion"]], "autorag.nodes.queryexpansion.multi_query_expansion.MultiQueryExpansion": [[29, 3, 1, "", "pure"]], "autorag.nodes.queryexpansion.pass_query_expansion": [[29, 1, 1, "", "PassQueryExpansion"]], "autorag.nodes.queryexpansion.pass_query_expansion.PassQueryExpansion": [[29, 3, 1, "", "pure"]], "autorag.nodes.queryexpansion.query_decompose": [[29, 1, 1, "", "QueryDecompose"], [29, 4, 1, "", "get_query_decompose"]], "autorag.nodes.queryexpansion.query_decompose.QueryDecompose": [[29, 3, 1, "", "pure"]], "autorag.nodes.queryexpansion.run": [[29, 4, 1, "", "evaluate_one_query_expansion_node"], [29, 4, 1, "", "make_retrieval_callable_params"], [29, 4, 1, "", "run_query_expansion_node"]], "autorag.nodes.retrieval": [[30, 0, 0, "-", "base"], [30, 0, 0, "-", "bm25"], [30, 0, 0, "-", "hybrid_cc"], [30, 0, 0, "-", "hybrid_rrf"], [30, 0, 0, "-", "run"], [30, 0, 0, "-", "vectordb"]], "autorag.nodes.retrieval.base": [[30, 1, 1, "", "BaseRetrieval"], [30, 1, 1, "", "HybridRetrieval"], [30, 4, 1, "", "cast_queries"], [30, 4, 1, "", "evenly_distribute_passages"], [30, 4, 1, "", "get_bm25_pkl_name"]], "autorag.nodes.retrieval.base.BaseRetrieval": [[30, 3, 1, "", "cast_to_run"]], "autorag.nodes.retrieval.base.HybridRetrieval": [[30, 3, 1, "", "pure"]], "autorag.nodes.retrieval.bm25": [[30, 1, 1, "", "BM25"], [30, 4, 1, "", "bm25_ingest"], [30, 4, 1, "", "bm25_pure"], [30, 4, 1, "", "get_bm25_scores"], [30, 4, 1, "", "load_bm25_corpus"], [30, 4, 1, "", "select_bm25_tokenizer"], [30, 4, 1, "", "tokenize"], [30, 4, 1, "", "tokenize_ko_kiwi"], [30, 4, 1, "", "tokenize_ko_kkma"], [30, 4, 1, "", "tokenize_ko_okt"], [30, 4, 1, "", "tokenize_porter_stemmer"], [30, 4, 1, "", "tokenize_space"]], "autorag.nodes.retrieval.bm25.BM25": [[30, 3, 1, "", "pure"]], "autorag.nodes.retrieval.hybrid_cc": [[30, 1, 1, "", "HybridCC"], [30, 4, 1, "", "fuse_per_query"], [30, 4, 1, "", "hybrid_cc"], [30, 4, 1, "", "normalize_dbsf"], [30, 4, 1, "", "normalize_mm"], [30, 4, 1, "", "normalize_tmm"], [30, 4, 1, "", "normalize_z"]], "autorag.nodes.retrieval.hybrid_cc.HybridCC": [[30, 3, 1, "", "run_evaluator"]], "autorag.nodes.retrieval.hybrid_rrf": [[30, 1, 1, "", "HybridRRF"], [30, 4, 1, "", "hybrid_rrf"], [30, 4, 1, "", "rrf_calculate"], [30, 4, 1, "", "rrf_pure"]], "autorag.nodes.retrieval.hybrid_rrf.HybridRRF": [[30, 3, 1, "", "run_evaluator"]], "autorag.nodes.retrieval.run": [[30, 4, 1, "", "edit_summary_df_params"], [30, 4, 1, "", "evaluate_retrieval_node"], [30, 4, 1, "", "find_unique_elems"], [30, 4, 1, "", "get_hybrid_execution_times"], [30, 4, 1, "", "get_ids_and_scores"], [30, 4, 1, "", "get_scores_by_ids"], [30, 4, 1, "", "optimize_hybrid"], [30, 4, 1, "", "run_retrieval_node"]], "autorag.nodes.retrieval.vectordb": [[30, 1, 1, "", "VectorDB"], [30, 4, 1, "", "get_id_scores"], [30, 4, 1, "", "load_chroma_collection"], [30, 4, 1, "", "run_query_embedding_batch"], [30, 4, 1, "", "vectordb_ingest"], [30, 4, 1, "", "vectordb_pure"]], "autorag.nodes.retrieval.vectordb.VectorDB": [[30, 3, 1, "", "pure"]], "autorag.nodes.util": [[21, 4, 1, "", "make_generator_callable_param"]], "autorag.parser": [[0, 1, 1, "", "Parser"]], "autorag.parser.Parser": [[0, 3, 1, "", "start_parsing"]], "autorag.schema": [[31, 0, 0, "-", "base"], [31, 0, 0, "-", "metricinput"], [31, 0, 0, "-", "module"], [31, 0, 0, "-", "node"]], "autorag.schema.base": [[31, 1, 1, "", "BaseModule"]], "autorag.schema.base.BaseModule": [[31, 3, 1, "", "cast_to_run"], [31, 3, 1, "", "pure"], [31, 3, 1, "", "run_evaluator"]], "autorag.schema.metricinput": [[31, 1, 1, "", "MetricInput"]], "autorag.schema.metricinput.MetricInput": [[31, 3, 1, "", "from_dataframe"], [31, 2, 1, "", "generated_log_probs"], [31, 2, 1, "", "generated_texts"], [31, 2, 1, "", "generation_gt"], [31, 3, 1, "", "is_fields_notnone"], [31, 2, 1, "", "prompt"], [31, 2, 1, "", "queries"], [31, 2, 1, "", "query"], [31, 2, 1, "", "retrieval_gt"], [31, 2, 1, "", "retrieval_gt_contents"], [31, 2, 1, "", "retrieved_contents"], [31, 2, 1, "", "retrieved_ids"]], "autorag.schema.module": [[31, 1, 1, "", "Module"]], "autorag.schema.module.Module": [[31, 3, 1, "", "from_dict"], [31, 2, 1, "", "module"], [31, 2, 1, "", "module_param"], [31, 2, 1, "", "module_type"]], "autorag.schema.node": [[31, 1, 1, "", "Node"], [31, 4, 1, "", "extract_values"], [31, 4, 1, "", "extract_values_from_nodes"], [31, 4, 1, "", "extract_values_from_nodes_strategy"], [31, 4, 1, "", "module_type_exists"]], "autorag.schema.node.Node": [[31, 3, 1, "", "from_dict"], [31, 3, 1, "", "get_param_combinations"], [31, 2, 1, "", "modules"], [31, 2, 1, "", "node_params"], [31, 2, 1, "", "node_type"], [31, 3, 1, "", "run"], [31, 2, 1, "", "run_node"], [31, 2, 1, "", "strategy"]], "autorag.strategy": [[0, 4, 1, "", "avoid_empty_result"], [0, 4, 1, "", "filter_by_threshold"], [0, 4, 1, "", "measure_speed"], [0, 4, 1, "", "select_best"], [0, 4, 1, "", "select_best_average"], [0, 4, 1, "", "select_best_rr"], [0, 4, 1, "", "select_normalize_mean"], [0, 4, 1, "", "validate_strategy_inputs"]], "autorag.support": [[0, 4, 1, "", "dynamically_find_function"], [0, 4, 1, "", "get_support_modules"], [0, 4, 1, "", "get_support_nodes"]], "autorag.utils": [[32, 0, 0, "-", "preprocess"], [32, 0, 0, "-", "util"]], "autorag.utils.preprocess": [[32, 4, 1, "", "cast_corpus_dataset"], [32, 4, 1, "", "cast_qa_dataset"], [32, 4, 1, "", "validate_corpus_dataset"], [32, 4, 1, "", "validate_qa_dataset"], [32, 4, 1, "", "validate_qa_from_corpus_dataset"]], "autorag.utils.util": [[32, 4, 1, "", "convert_datetime_string"], [32, 4, 1, "", "convert_env_in_dict"], [32, 4, 1, "", "convert_inputs_to_list"], [32, 4, 1, "", "convert_string_to_tuple_in_dict"], [32, 4, 1, "", "dict_to_markdown"], [32, 4, 1, "", "dict_to_markdown_table"], [32, 4, 1, "", "embedding_query_content"], [32, 4, 1, "", "explode"], [32, 4, 1, "", "fetch_contents"], [32, 4, 1, "", "fetch_one_content"], [32, 4, 1, "", "filter_dict_keys"], [32, 4, 1, "", "find_key_values"], [32, 4, 1, "", "find_node_summary_files"], [32, 4, 1, "", "find_trial_dir"], [32, 4, 1, "", "flatten_apply"], [32, 4, 1, "", "get_best_row"], [32, 4, 1, "", "get_event_loop"], [32, 4, 1, "", "load_summary_file"], [32, 4, 1, "", "make_batch"], [32, 4, 1, "", "make_combinations"], [32, 4, 1, "", "normalize_string"], [32, 4, 1, "", "normalize_unicode"], [32, 4, 1, "", "openai_truncate_by_token"], [32, 4, 1, "", "pop_params"], [32, 4, 1, "", "process_batch"], [32, 4, 1, "", "reconstruct_list"], [32, 4, 1, "", "replace_value_in_dict"], [32, 4, 1, "", "result_to_dataframe"], [32, 4, 1, "", "save_parquet_safe"], [32, 4, 1, "", "select_top_k"], [32, 4, 1, "", "sort_by_scores"], [32, 4, 1, "", "split_dataframe"], [32, 4, 1, "", "to_list"]], "autorag.validator": [[0, 1, 1, "", "Validator"]], "autorag.validator.Validator": [[0, 3, 1, "", "validate"]], "autorag.web": [[0, 4, 1, "", "chat_box"], [0, 4, 1, "", "get_runner"], [0, 4, 1, "", "set_initial_state"], [0, 4, 1, "", "set_page_config"], [0, 4, 1, "", "set_page_header"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:property"}, "terms": {"": [0, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 40, 53, 55, 56, 58, 60, 61, 62, 68, 70, 72, 74, 75, 76, 89, 90, 91, 92, 93, 94, 95, 96, 101, 105, 106, 107, 110], "0": [0, 11, 20, 26, 27, 30, 34, 39, 40, 44, 51, 52, 53, 58, 60, 61, 62, 63, 71, 72, 74, 75, 76, 77, 78, 85, 97, 99, 101, 104, 105, 106, 109, 110], "002": 58, "01": 73, "0125": 20, "04": 62, "06": [14, 15, 16, 49], "07": [14, 15, 49], "08": [14, 15, 16, 49], "09": 62, "1": [0, 11, 20, 27, 30, 32, 37, 38, 40, 60, 61, 63, 66, 71, 96, 99, 101, 104, 105], "10": [0, 58, 60, 68, 84, 92, 97, 100, 101, 103, 106, 107], "100": [27, 109], "1000": 92, "100k": 83, "101": 99, "1024": [34, 36, 50], "10k": [26, 83], "10x": 63, "11": 109, "1106": [60, 61, 92, 95, 96, 105, 109], "125m": 63, "128": [20, 30, 32, 40, 48, 50], "13a": 20, "13b": 83, "16": [22, 61, 63, 69, 70, 81, 85], "16k": [60, 61, 62, 68, 69, 70, 85, 92, 95, 96, 105, 109], "17": 57, "18": [14, 15, 49], "1d": 38, "2": [11, 20, 24, 26, 29, 37, 38, 40, 58, 59, 63, 67, 86, 96, 97, 98, 99, 106], "2015": 73, "2022": 49, "2024": [14, 15, 16, 49, 62], "2048": 0, "24": [34, 36, 50], "25": 39, "2d": [30, 38], "3": [11, 20, 28, 30, 37, 39, 40, 43, 58, 60, 61, 68, 69, 70, 85, 92, 95, 96, 99, 103, 105, 107], "300": [24, 67], "32": [11, 13, 40, 79, 80, 86], "3b": [26, 83], "4": [11, 20, 37, 39, 55, 60, 62, 85, 96, 99, 100, 101], "4000": 60, "42": [0, 11, 13], "4o": [14, 15, 16, 49], "5": [0, 11, 20, 26, 28, 39, 40, 50, 55, 58, 60, 61, 62, 65, 68, 69, 70, 84, 85, 92, 95, 96, 99, 103, 105, 106], "50": [29, 39, 40], "51": 101, "512": [34, 36, 40, 50, 62, 63, 86], "514": 53, "6": [40, 55, 60, 72, 74, 96, 99], "60": [30, 100], "64": [32, 40, 60, 74, 75, 77, 78, 79, 80, 82, 83, 86, 87, 94, 97, 102], "666": 55, "7": 99, "7039180890341347": 54, "72": 52, "7680": [0, 52], "777": 55, "797979": 55, "7b": [24, 58, 63, 67, 98], "8": [7, 12, 20, 55, 81, 85, 99], "80": [100, 101], "8000": [0, 51, 110], "8191": 30, "822": 55, "85": [71, 75, 76], "9": [20, 40], "A": [0, 7, 12, 14, 15, 16, 20, 26, 27, 30, 32, 34, 38, 40, 44, 49, 53, 60, 88, 91, 97, 105, 107, 108], "And": [0, 22, 30, 32, 37, 40, 48, 51, 56, 57, 62, 63, 92, 98, 103, 105, 107, 110], "As": [11, 28, 38, 51, 52, 54, 58, 65, 102, 103], "At": [37, 47, 48, 58, 77, 81, 103, 105, 107], "But": [38, 40, 47, 48, 56, 103, 105, 107], "By": [53, 61, 68, 69, 70, 97, 99, 108], "For": [30, 34, 35, 38, 40, 44, 49, 50, 54, 57, 58, 59, 62, 63, 105, 106, 107, 109, 110], "If": [0, 10, 11, 13, 20, 28, 29, 30, 32, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 47, 49, 50, 52, 54, 56, 57, 63, 72, 73, 75, 76, 77, 78, 79, 80, 81, 86, 98, 99, 102, 103, 104, 105, 107, 108, 109, 110], "In": [24, 25, 26, 29, 34, 37, 38, 44, 48, 49, 54, 56, 62, 71, 103, 104, 105, 107, 109], "It": [0, 11, 13, 14, 15, 20, 22, 24, 25, 26, 28, 30, 31, 32, 34, 37, 38, 40, 41, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 58, 60, 61, 62, 66, 70, 71, 73, 77, 81, 84, 87, 88, 89, 91, 92, 94, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110], "Its": [30, 32, 38, 63, 65, 68, 71, 84, 97], "No": 105, "Not": [13, 23, 88, 97], "Of": 56, "On": [38, 71], "Or": [38, 57, 77, 81, 110], "That": [56, 107], "The": [0, 7, 11, 12, 13, 14, 15, 16, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110], "Then": [38, 49, 50, 51, 57, 58, 105], "There": [30, 38, 40, 56, 59, 62, 71, 88, 97, 99, 104, 107, 110], "These": [60, 61, 68, 69, 70, 84, 94, 95, 96, 101, 108, 110], "To": [30, 37, 38, 40, 45, 48, 57, 58, 62, 105, 106, 107, 110], "Will": 30, "With": [28, 50, 62, 107, 110], "__fields__": [0, 14, 15, 16, 26], "_metadata": 7, "abil": 87, "abl": 97, "about": [0, 14, 15, 16, 26, 34, 35, 36, 38, 39, 42, 43, 44, 49, 50, 61, 63, 69, 70, 74, 75, 90, 91, 92, 93, 98, 102, 103, 104, 105, 108, 110], "abov": [54, 58, 103, 104, 107, 110], "absolut": [11, 54], "abstract": 31, "abstracteventloop": 32, "accept": [51, 54], "access": [0, 39, 52, 84], "accomplish": 45, "accord": [34, 44], "accumul": 68, "accur": [37, 40, 104], "accuraci": [20, 89, 97, 101], "achiev": [48, 53, 105, 108], "across": [69, 92, 97, 101, 106, 108], "act": 108, "action": [103, 107], "actual": [32, 38, 54, 100], "ad": [15, 27, 40, 108, 109], "ada": 58, "add": [7, 11, 20, 40, 45, 60, 65, 66, 74, 75, 102, 105, 107, 110], "add_essential_metadata": [1, 18], "add_essential_metadata_llama_text_nod": [1, 18], "add_file_nam": [1, 7, 34, 35, 36, 50], "add_gen_gt": [13, 15], "addit": [11, 12, 20, 24, 57, 58, 61, 65, 66, 67, 69, 70, 92, 94, 95, 96, 109, 110], "addition": 91, "additional_special_token": 27, "address": [68, 108], "adjust": [40, 109], "advanc": [39, 107], "advanced rag": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 107], "advantag": 62, "advent": [40, 50], "aespa": [38, 49], "aespa1": 38, "aespa2": 38, "aespa3": 38, "affect": [23, 38, 105, 108], "afraid": 40, "after": [10, 32, 34, 37, 40, 47, 48, 49, 50, 52, 56, 57, 66, 84, 103, 105, 107, 110], "afterward": 27, "ag": 96, "again": [50, 107, 110], "ai": [12, 81], "aim": [40, 99, 101, 108], "album": 49, "algorithm": [98, 99, 100], "all": [0, 11, 20, 27, 29, 32, 34, 38, 40, 44, 45, 50, 53, 54, 55, 56, 58, 60, 62, 63, 64, 71, 73, 75, 76, 92, 96, 97, 101, 103, 104, 106, 107, 108, 109, 110], "alloc": 96, "allow": [60, 61, 65, 66, 69, 70, 83, 94, 95, 96, 99, 108], "alon": [92, 97, 107], "along": 53, "alpha": [20, 105], "alreadi": [0, 11, 27, 30, 50, 105], "already_has_special_token": 27, "also": [31, 34, 38, 39, 40, 53, 54, 56, 62, 63, 77, 99, 107], "altern": 57, "although": 27, "alwai": [35, 36, 40, 42, 52, 105], "among": [0, 22, 24, 25, 26, 28, 29, 30, 100, 105], "amount": 68, "an": [0, 11, 20, 30, 34, 37, 38, 40, 42, 44, 52, 53, 54, 56, 57, 58, 68, 84, 93, 94, 95, 102, 103, 104, 105, 107, 109], "analysi": 68, "ani": [0, 7, 11, 13, 19, 27, 31, 32, 38, 54, 56, 57, 63, 65, 67, 68, 71, 84, 92, 97, 101, 107, 108, 109], "annot": [0, 14, 15, 16, 26], "anoth": [49, 85, 108, 110], "answer": [0, 11, 13, 14, 15, 16, 29, 37, 38, 40, 49, 51, 53, 54, 55, 62, 67, 71, 87, 90, 91, 92, 93, 107], "answer_creation_func": [11, 40], "answer_gt": 55, "anywher": 52, "ap": [20, 54], "api": [0, 12, 30, 62, 77, 81, 102, 103], "api_bas": [58, 109], "api_kei": [26, 58, 62, 77, 81, 103, 109], "app": 0, "appear": 109, "appli": [32, 60, 84, 92, 97, 101, 108], "applic": [51, 68, 88, 97], "approach": [68, 99], "appropri": 27, "apt": 109, "ar": [29, 30, 32, 34, 37, 38, 40, 44, 45, 47, 48, 49, 50, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 68, 69, 70, 71, 72, 73, 74, 75, 76, 88, 92, 94, 95, 96, 97, 101, 103, 104, 105, 106, 107, 108, 109, 110], "arbitrari": [60, 65, 68, 71, 84, 92, 97], "arbitrary_types_allow": [0, 26], "arg": [0, 11, 12, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "argument": [0, 11, 12, 20, 24, 32, 61, 69, 70, 94, 95, 96], "aris": 91, "arrai": 26, "arrang": 108, "articl": 32, "asap": 107, "ask": [38, 49, 53, 56, 107], "aspect": 108, "assess": [53, 84], "assign": 20, "associ": [32, 68], "ast": 103, "async": [0, 7, 11, 12, 14, 15, 16, 20, 22, 26, 30, 32], "async_g_ev": [19, 20], "async_postprocess_nod": [21, 26], "async_qa_gen_llama_index": [9, 11], "async_run_llm": [21, 26], "asynccli": 26, "asynchron": [11, 32], "asyncio": 32, "asyncopenai": [14, 15, 16, 46, 47, 49, 92], "asyncrankgptrerank": [21, 26], "atom": 96, "attempt": 104, "attention_mask": 27, "augment": [23, 108], "augmented_cont": 23, "augmented_id": 23, "augmented_scor": 23, "auto": [11, 57, 99], "auto rag": 56, "autom": 95, "automat": [31, 32, 40, 56, 60, 65, 68, 71, 84, 92, 97, 102, 105, 110], "automl": 56, "autorag": [34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 50, 51, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109], "autorag config": 103, "autorag doc": 56, "autorag fold": 104, "autorag instal": 57, "autorag multi gpu": 63, "autorag system": 108, "autorag tutori": 110, "autorag yaml": 103, "autorag_metr": [19, 20], "autorag_metric_loop": [19, 20], "autotoken": 92, "avail": [40, 93, 109], "averag": [0, 20, 55, 60, 92, 97, 101], "avoid": 0, "avoid_empty_result": [0, 33], "awai": 110, "await": 13, "b": [20, 27, 105], "baai": [26, 58, 79, 80], "back": 20, "backbon": 53, "backward": 66, "bad": [47, 48, 107], "badminton": 96, "band": 49, "base": [0, 1, 2, 9, 13, 14, 16, 20, 21, 27, 33, 34, 40, 53, 58, 61, 67, 69, 70, 76, 79, 81, 82, 83, 84, 85, 87, 89, 90, 93, 99, 100, 101, 106, 107, 108], "basechatmodel": 11, "baseembed": [20, 30], "basegener": [21, 22], "basellm": [14, 15, 16], "basemodel": [0, 14, 15, 16], "basemodul": [0, 22, 23, 24, 25, 26, 28, 29, 30, 31], "basepassageaugment": [21, 23], "basepassagecompressor": [21, 24], "basepassagefilt": [21, 25], "basepassagererank": [21, 26, 27], "basepromptmak": [21, 28], "baseprompttempl": 26, "basequeryexpans": [21, 29], "baseretriev": [21, 30], "basi": [44, 55, 108], "basic": [11, 15, 48], "batch": [0, 7, 11, 12, 20, 22, 24, 26, 32, 40, 60, 61, 62, 69, 70, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 102, 109], "batch_appli": [1, 13, 46, 48, 49, 50], "batch_filt": [1, 13, 14, 47], "batch_siz": [13, 20, 26, 27, 30, 32], "becaus": [28, 30, 34, 37, 38, 44, 45, 47, 48, 49, 63, 65, 68, 71, 84, 89, 97, 102, 107, 109, 110], "becom": [40, 50, 103], "been": [106, 110], "befor": [30, 34, 49, 50, 58, 66, 68, 103, 107, 109, 110], "behavior": [38, 61, 69, 70, 89, 94, 95, 96, 108], "being": [61, 69, 70], "belong": 104, "below": [0, 13, 34, 46, 47, 48, 50, 52, 54, 57, 60, 72, 73, 74, 75, 76, 107, 109, 110], "benz": 96, "bert_scor": [19, 20, 60], "best": [0, 22, 24, 25, 26, 28, 29, 30, 32, 50, 56, 91, 99, 104, 106, 107, 110], "best_": 104, "best_0": 104, "best_column_nam": 32, "beta": [20, 37, 59], "better": [48, 65, 68, 71, 72, 76, 84, 97, 105, 110], "between": [20, 45, 53, 54, 60, 65, 98, 99, 106], "bfloat16": 89, "bge": [26, 58, 79, 80], "bigram": 20, "bilingu": 53, "bird": 96, "bleu": [19, 20, 60, 92, 103, 106, 107, 109], "blob": 20, "blue": 107, "bm": 58, "bm25": [0, 21, 29, 97, 101, 103, 104, 107], "bm25_api": 30, "bm25_corpu": 30, "bm25_ingest": [21, 30], "bm25_path": 30, "bm25_pure": [21, 30], "bm25_token": [30, 98], "bm25okapi": [30, 98], "bodi": [0, 51], "bool": [0, 10, 11, 13, 14, 20, 23, 26, 27, 31, 32], "boolean": [11, 89], "boost": 62, "bos_token": 27, "both": [54, 66, 109], "bottom": 70, "bowl": 49, "branch": 107, "break": [45, 55], "brew": 109, "brief": 49, "broader": 108, "browser": 0, "bshtml": 42, "bug": 37, "bui": 55, "build": [27, 38, 50, 104, 105, 107], "build_inputs_with_special_token": [26, 27], "bulb": 49, "c": 109, "cach": 11, "cache_batch": [11, 40], "calcul": [20, 54, 65, 68, 74, 75, 89, 99, 100, 106], "calculate_cosine_similar": [19, 20], "call": [0, 27, 58, 61, 62, 69, 70, 89, 98, 99], "callabl": [0, 1, 7, 11, 12, 13, 18, 30, 31, 32, 34], "callback_manag": [0, 26], "callbackmanag": [0, 26], "can": [0, 10, 11, 12, 13, 14, 24, 25, 26, 28, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 79, 80, 81, 82, 84, 85, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110], "cannot": [92, 97], "capit": 49, "care": 27, "case": [29, 38, 40, 50, 54, 56, 105, 107, 109], "cast": [22, 23, 24, 25, 26, 28, 29, 30, 31], "cast_corpus_dataset": [0, 32], "cast_embedding_model": [0, 19], "cast_metr": [0, 19], "cast_qa_dataset": [0, 32], "cast_queri": [21, 30], "cast_to_run": [0, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31], "castorini": [26, 83], "caus": [77, 81, 105, 109, 110], "cc": [30, 101], "cd": 57, "certain": 32, "cg": 54, "chain": [53, 105], "chang": [32, 40, 48, 58, 77, 81, 98, 107, 108, 109], "channel": [56, 109, 110], "charact": 44, "chat": [11, 62, 109], "chat_box": [0, 33], "chat_prompt": 24, "chatinterfac": 0, "chatmessag": [16, 26], "chatmodel": 39, "chatopenai": 39, "chatrespons": 26, "check": [0, 20, 31, 37, 38, 48, 50, 56, 57, 58, 60, 63, 64, 79, 80, 98, 103, 104, 107, 109, 110], "check_expanded_queri": [21, 29], "child": 96, "choic": [98, 105], "choos": [20, 29, 38, 85, 98, 102, 105, 106], "chroma": [30, 104], "chromadb": [11, 30, 40, 102], "chunk": [0, 1, 10, 13, 30, 37, 38, 40, 48, 69, 93, 107], "chunk_config": 34, "chunk_method": [34, 36, 48, 50], "chunk_modul": [35, 36], "chunk_overlap": [34, 36, 40, 48, 50], "chunk_project_dir": 50, "chunk_siz": [32, 34, 36, 40, 48, 50], "chunk_text": 7, "chunked_cont": [7, 34], "chunked_str": 34, "chunker": [7, 33, 44, 50], "chunker_nod": [1, 7], "circl": 107, "ciudad": 49, "cl": 32, "clarifi": 40, "class": [0, 13, 14, 15, 16, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 38, 39, 58, 85, 87, 102], "classif": [27, 48], "classifi": [47, 54], "classmethod": [0, 30, 31], "classvar": [0, 14, 15, 16, 26], "clear": 46, "cli": 33, "client": [14, 15, 16, 30, 40, 46, 47, 49], "clone": 57, "close": 89, "cloud": 12, "clova": [0, 1, 44, 45], "co": 58, "code": [11, 13, 15, 20, 34, 35, 36, 41, 42, 50, 57, 58, 103, 110], "coher": [0, 20, 21, 60, 77, 81], "cohere_api_kei": 77, "cohere_cli": 26, "cohere_rerank": 84, "cohere_rerank_pur": [21, 26], "coherererank": [21, 26], "cointegr": 58, "colber": 78, "colbert": [0, 21, 81, 84], "colbert_rerank": 78, "colbertrerank": [21, 26], "colbertv2": [26, 78], "collect": [11, 30, 32, 38, 40, 103, 107, 108], "collection_nam": [30, 104], "column": [0, 11, 13, 22, 23, 24, 25, 26, 28, 29, 30, 32, 37, 38, 40, 49, 51, 110], "column_nam": 32, "com": [11, 20, 56, 57, 107], "combin": [29, 30, 31, 32, 45, 92, 99, 100, 103, 105, 108], "come": [49, 54, 56, 94, 95, 96, 105, 107], "comedi": 96, "command": [52, 109], "commit": 109, "common": [20, 30, 57, 96, 106, 108, 109, 110], "compar": [55, 60, 106], "comparison": 55, "compat": [13, 63], "compatibilti": 63, "complet": [34, 44, 62], "complex": [41, 107], "compon": 108, "compress": [24, 55, 67, 68, 71, 107], "compressor": [24, 55, 67, 68, 69, 70], "comput": [0, 14, 15, 16, 20, 21, 26, 27, 68], "computedfieldinfo": [0, 14, 15, 16, 26], "concaten": 27, "concept": 53, "concept_completion_query_gen": [13, 16, 49], "concis": [15, 48], "conclud": 89, "conclus": 91, "condit": [38, 39], "config": [0, 14, 15, 16, 26, 27, 58, 106, 107, 109], "config_dict": 0, "config_path": [51, 110], "configdict": [0, 14, 15, 16, 26], "configur": [0, 14, 15, 16, 26, 56, 60, 61, 68, 69, 70, 84, 89, 92, 97, 101, 105, 108, 110], "conflict": 53, "conform": [0, 14, 15, 16, 26], "confus": 71, "connect": [53, 102], "consid": [11, 54, 63, 97], "consist": [20, 60], "constraint": 46, "consum": 56, "contain": [7, 11, 12, 13, 20, 22, 24, 25, 26, 28, 30, 31, 32, 38, 40, 44, 45, 54, 90, 91, 93, 96, 104, 105, 108, 109, 110], "content": [33, 34, 40, 42, 51, 68, 72, 73, 74, 75, 76, 84, 92, 101, 102], "content_embed": 26, "content_s": [11, 40], "contents_list": [27, 32], "context": [46, 53, 54, 67, 89, 92, 108], "contextu": 53, "contradict": 53, "contributor": 57, "control": [20, 63], "conveni": [40, 52], "convert": [0, 31, 32, 40, 41, 43, 103], "convert_datetime_str": [0, 32], "convert_env_in_dict": [0, 32], "convert_inputs_to_list": [0, 32], "convert_string_to_tuple_in_dict": [0, 32], "convex": [30, 99], "cool": 107, "core": [36, 40, 53, 58], "coroutin": 32, "corpu": [1, 9, 11, 13, 30, 37, 47, 48, 49, 53, 59, 65, 73, 88, 93, 101, 104, 110], "corpus_data": [11, 30, 32], "corpus_data_path": [0, 110], "corpus_data_row": 11, "corpus_df": [11, 13, 18, 23, 32, 39, 40], "corpus_df_to_langchain_docu": [1, 18], "corpus_path": 30, "corpus_save_path": 13, "corpus_test": 110, "correct": 54, "correl": 53, "correspond": [0, 14, 15, 16, 26, 31], "cosin": [20, 53, 65], "cost": [45, 68, 110], "cot": 53, "could": [22, 24, 25, 26, 28, 30], "couldn": 52, "count": [20, 67, 98], "cours": 56, "cover": [34, 37, 40, 44, 48, 49, 50], "cpu": 20, "creat": [0, 10, 11, 12, 13, 16, 27, 31, 32, 34, 37, 38, 41, 44, 48, 50, 52, 56, 90, 93, 99, 104, 107], "create_token_type_ids_from_sequ": [26, 27], "creation": [11, 13, 49, 56, 110], "criterion": 108, "critic": 11, "critic_llm": [11, 39], "cross": [26, 86], "crucial": [34, 37, 38, 44, 48, 68, 84, 91, 108], "csv": [34, 44, 105, 110], "cucumb": 96, "cuda": [78, 79, 80, 86], "cue": 89, "cumul": 63, "curl": 51, "current": [0, 32, 34, 44, 55, 108, 110], "custom": [37, 52, 61, 69, 70, 74, 75, 85, 89, 94, 95, 96, 102, 106, 108, 109], "cutoff": 71, "cycl": 107, "czech": 34, "d": [11, 29, 32, 38, 51], "dag": 107, "dai": 107, "danish": 34, "dashboard": 33, "data": [0, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 46, 47, 49, 51, 53, 56, 60, 68, 84, 91, 97, 102, 108, 110], "data_path": 12, "data_path_glob": [0, 12], "data_path_list": 12, "databas": 102, "dataformat": 34, "datafram": [0, 7, 10, 11, 13, 15, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "dataset": [11, 13, 14, 32, 34, 37, 40, 47, 49, 54, 56, 99, 104, 109], "date": [49, 73], "datetim": [38, 44, 73, 88], "db": [11, 107], "db_path": 30, "dbsf": [30, 99, 101], "dcg": 54, "dd": 73, "de": 49, "deal": 68, "decid": [63, 107, 108], "decis": 108, "decompos": [29, 97], "decomposit": 96, "decor": [0, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32], "decreas": [62, 78, 79, 80, 86], "def": 34, "default": [0, 7, 10, 11, 12, 15, 20, 24, 26, 27, 28, 29, 30, 32, 34, 38, 40, 51, 58, 61, 62, 66, 67, 69, 70, 72, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 92, 94, 95, 98, 99, 100, 103, 106, 108], "default_config": 110, "default_factori": [0, 26], "defaulttoken": 20, "defin": [0, 14, 15, 16, 26, 27, 65, 83, 84, 101, 102, 106], "delet": [32, 71], "deliv": 107, "dens": [30, 94, 98, 102], "deparallel": [26, 27], "depend": [34, 57, 98, 104, 110], "deploi": [33, 51, 52, 56], "deploy": [56, 99], "deportiva": 49, "deprec": [30, 37], "descript": [0, 26, 48, 60, 65, 84, 101], "design": [11, 40, 53, 60, 87, 91, 99, 100], "detail": [41, 49, 50, 53, 60, 63, 82, 85, 92, 93, 97, 108, 110], "detect": 99, "determin": [60, 104, 106], "develop": [37, 63, 105, 108], "devic": [26, 27], "device_map": 27, "df": [32, 47, 48, 50, 109], "diagram": [105, 107], "dict": [0, 7, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 45], "dict_": 32, "dict_column": 32, "dict_to_markdown": [0, 32], "dict_to_markdown_t": [0, 32], "dictionari": [0, 11, 14, 15, 16, 19, 26, 30, 32, 34, 38, 39, 40, 60, 83], "did": 0, "didn": 39, "differ": [11, 32, 34, 38, 40, 48, 50, 53, 58, 60, 83, 95, 97, 98, 100, 104, 108], "difficulti": 109, "dimens": [29, 32], "direct": [88, 97], "directli": [13, 39, 49, 53, 54, 68, 77, 81, 103, 105, 109], "directori": [0, 10, 11, 22, 24, 25, 26, 28, 29, 30, 34, 42, 44, 50, 52, 110], "directoryload": 40, "discord": [56, 107, 109, 110], "distinct": 68, "distinguish": [45, 99], "distribut": [11, 39, 40], "distribute_list_by_ratio": [9, 11], "divid": [41, 54, 98], "dl": 83, "do": [10, 11, 13, 29, 38, 45, 54, 55, 56, 57, 103, 104, 107, 110], "doc": [11, 38, 54, 57, 58, 63, 106], "doc_id": [7, 30, 32, 34], "document": [7, 10, 11, 12, 13, 18, 26, 30, 34, 37, 38, 41, 42, 43, 44, 45, 49, 57, 60, 68, 84, 92, 93, 97, 98, 101, 103, 105, 106, 107, 108, 110], "document_load": [12, 40, 42], "doe": [0, 27, 30, 46, 53, 60, 61, 62, 63, 68, 71, 84, 92, 103, 105], "doesn": [11, 37, 54, 96, 107, 109], "domain": 98, "don": [14, 28, 32, 38, 40, 44, 48, 54, 56, 92, 99, 107, 109, 110], "done": 110, "dontknow": [1, 2, 13, 47, 48, 50], "dontknow_filter_llama_index": [13, 14, 47], "dontknow_filter_openai": [13, 14, 47], "dontknow_filter_rule_bas": [13, 14, 47, 48, 50], "dotenv": [57, 109], "doubl": 38, "down": 54, "download": [38, 110], "drive": 96, "drop": [14, 47, 48, 50, 91, 109], "dropout": 27, "duplic": [31, 38, 103], "dure": [97, 109], "dutch": 34, "dynam": 108, "dynamically_find_funct": [0, 33], "e": [57, 61, 69, 70], "each": [0, 11, 13, 29, 30, 31, 32, 38, 39, 40, 53, 74, 75, 96, 99, 100, 103, 104, 105, 106, 107, 108], "earli": 38, "easier": 103, "easili": [34, 44, 49, 102, 107, 110], "echo": 109, "edit": 57, "edit_summary_df_param": [21, 30], "editor": 103, "effect": [16, 45, 60, 84, 100, 101, 108, 110], "effici": 68, "effort": 108, "either": 54, "elem": 32, "element": [30, 31, 32], "emb": [30, 102, 107], "embed": [0, 11, 20, 27, 30, 40, 53, 56, 57, 60, 65, 74, 75, 84, 98, 102, 104, 110], "embed_batch_s": 0, "embed_dim": [0, 33], "embedding model": 58, "embedding_batch": [30, 102], "embedding_model": [11, 20, 23, 29, 30, 32, 39, 40, 58, 60, 65, 74, 75, 97, 101, 102, 103], "embedding_query_cont": [0, 32], "emploi": 96, "empti": [0, 30, 38, 103], "en": [14, 15, 16, 20, 26, 34, 43, 47, 48, 49, 50, 58, 60, 81, 83], "encod": [22, 26, 86], "encount": 109, "enct5forsequenceclassif": [26, 27], "enct5token": [26, 27], "end": [32, 89], "end_idx": 7, "endpoint": 110, "engin": 109, "enginearg": 63, "english": [7, 34, 36, 50, 77, 98], "enhanc": [84, 89, 106, 108], "enough": [38, 71], "ensur": [60, 68, 84, 92, 97, 101], "entri": 68, "env": [57, 62], "environ": [12, 32, 42, 52, 57, 63, 77, 81, 109, 110], "eos_token": 27, "equal": [11, 54], "error": [15, 62, 77, 81, 85, 96, 102], "essenc": 49, "essenti": [72, 73, 74, 75, 76, 92, 99, 100, 105, 108, 109], "estonian": 34, "etc": [38, 40, 103], "eval": 20, "evalu": [22, 24, 25, 26, 28, 29, 30, 32, 33, 34, 37, 38, 44, 53, 56, 60, 68, 84, 92, 97, 99, 101, 103, 104, 106, 108], "evaluate_gener": [0, 19], "evaluate_generator_nod": [21, 22], "evaluate_generator_result": [21, 28], "evaluate_one_prompt_maker_nod": [21, 28], "evaluate_one_query_expansion_nod": [21, 29], "evaluate_passage_compressor_nod": [21, 24], "evaluate_retriev": [0, 19], "evaluate_retrieval_cont": [0, 19], "evaluate_retrieval_nod": [21, 30], "even": [0, 91, 99], "evenly_distribute_passag": [21, 30], "event": [32, 49], "ever": 107, "everi": [22, 27, 62, 108], "evolut": [11, 39], "evolv": 49, "exact": 53, "exactli": 54, "exampl": [11, 38, 40, 44, 48, 50, 53, 58, 59, 103, 105, 107, 109, 110], "example_node_line_1": 106, "example_node_line_2": 106, "exc_traceback": 0, "exc_typ": 0, "exc_valu": 0, "exce": [60, 62, 68, 84, 92, 96], "exceed": [92, 97, 101], "except": 55, "exclud": [0, 26], "exclus": 102, "execut": [0, 30, 32, 50, 58, 97, 110], "exist": [10, 11, 30, 31, 37, 38, 104], "exist_gen_gt": [11, 40], "existing_qa": 40, "existing_qa_df": 40, "existing_query_df": 11, "exp": 20, "exp_norm": [21, 26], "expand": [97, 105], "expanded_queri": 29, "expanded_query_list": 29, "expans": [28, 29, 30, 38, 68, 94, 96, 107], "expect": [38, 89], "expens": [45, 47], "experi": [56, 104, 107, 109, 110], "experiment": 60, "expir": 52, "explain": [104, 106, 107], "explan": 49, "explicit": 53, "explod": [0, 32], "explode_valu": 32, "explor": [99, 100], "export": [57, 77, 81, 109], "extens": [10, 11, 44, 103], "extent": 53, "extra": [12, 32, 98], "extra_id": 27, "extract": [0, 31, 42, 51, 73, 88, 98, 99], "extract_best_config": [0, 33, 110], "extract_evid": [0, 1], "extract_node_line_nam": [0, 33], "extract_node_strategi": [0, 33], "extract_valu": [0, 31], "extract_values_from_nod": [0, 31], "extract_values_from_nodes_strategi": [0, 31], "f": 92, "f1": [20, 68], "face": 56, "facebook": 63, "facilit": 60, "fact": 107, "factoid": 48, "factoid_query_gen": [13, 16, 48, 49, 50, 59], "factori": 0, "factual": 49, "fall": 20, "fallback": 20, "fals": [0, 10, 11, 14, 20, 26, 27, 32, 72, 76, 79, 80, 85, 89], "familiar": 107, "fashion": 70, "fast": [47, 63, 77, 81], "faster": [63, 68], "fate": 107, "favorit": 103, "featur": [7, 37, 38, 41, 53, 60, 107, 110], "fee": 102, "feedback": [105, 107], "feel": [56, 107, 110], "fetch": [65, 66, 101], "fetch_cont": [0, 32], "fetch_one_cont": [0, 32], "few": [96, 107, 110], "field": [0, 14, 15, 16, 20, 26, 54, 73, 88], "fieldinfo": [0, 14, 15, 16, 26], "fields_to_check": [20, 31], "file": [0, 10, 11, 12, 13, 18, 20, 32, 38, 40, 50, 51, 52, 53, 56, 57, 58, 63, 77, 81, 85, 99, 104, 105, 106, 107, 108, 109], "file_dir": [10, 11], "file_nam": [7, 34], "file_name_languag": 7, "file_path": 18, "filenam": [10, 11, 30], "filepath": [10, 11, 32, 50], "filesystem": 18, "fill": [32, 53], "filter": [0, 1, 2, 13, 25, 50, 62, 65, 72, 74, 75, 76], "filter_by_threshold": [0, 33], "filter_dict_kei": [0, 32], "filtered_qa": 47, "final": [0, 34, 44, 45, 67, 100, 105, 107], "find": [32, 35, 36, 40, 41, 42, 43, 49, 50, 53, 54, 56, 58, 67, 87, 92, 99, 100, 101, 104, 105, 108], "find_key_valu": [0, 32], "find_node_dir": [0, 33], "find_node_summary_fil": [0, 32], "find_trial_dir": [0, 32], "find_unique_elem": [21, 30], "fine": 93, "finnish": 34, "first": [0, 13, 20, 30, 32, 34, 40, 44, 48, 49, 50, 54, 55, 56, 57, 63, 77, 81, 84, 102, 103, 104, 105, 107], "fit": [53, 108], "five": 38, "fix": [53, 109], "fixed_min_valu": 30, "flag": 84, "flag_embed": [0, 21], "flag_embedding_llm": [0, 21], "flag_embedding_llm_rerank": 79, "flag_embedding_rerank": 80, "flag_embedding_run_model": [21, 26], "flagembed": [79, 80], "flagembeddingllm": 80, "flagembeddingllmrerank": [21, 26], "flagembeddingrerank": [21, 26], "flask": [0, 51, 56], "flat_list": 32, "flatmap": [1, 13], "flatten": 32, "flatten_appli": [0, 32], "flexibl": [83, 99, 108], "float": [20, 26, 30, 31, 63], "floor": 20, "flow": 53, "fluenci": [20, 60], "fn": 13, "focu": [68, 110], "focus": 108, "folder": [0, 51, 57, 107], "follow": [11, 27, 30, 34, 35, 36, 37, 38, 39, 40, 42, 44, 45, 50, 51, 52, 54, 58, 73, 89, 99, 104, 107, 109], "forget": 110, "form": [7, 11, 34, 37, 40, 41, 50, 53], "format": [27, 32, 34, 40, 41, 44, 54, 73, 89, 104], "former": 27, "forward": [26, 27, 66], "found": [40, 49, 53, 61, 69, 70, 74, 75, 82, 85, 102, 110], "four": 55, "fp16": [79, 80], "fragment": 20, "framework": [39, 53, 107], "franc": 49, "free": [56, 107, 110], "french": 34, "frequent": 58, "friendli": 52, "from": [0, 7, 11, 12, 13, 14, 15, 16, 18, 20, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 42, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 61, 62, 63, 65, 68, 73, 77, 81, 84, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110], "from_datafram": [0, 31], "from_dict": [0, 31], "from_parquet": [0, 33, 34, 50], "from_trial_fold": [0, 33, 51, 52], "from_yaml": [0, 33, 51, 52, 110], "fstring": [0, 21, 90, 92, 93, 107], "full": [38, 63, 104, 108], "func": [0, 7, 11, 12, 22, 25, 32], "function": [0, 10, 11, 13, 14, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 40, 41, 44, 48, 49, 87, 108, 110], "fundament": 101, "further": [30, 54, 61, 69, 70, 94, 95, 96], "fuse": [30, 99], "fuse_per_queri": [21, 30], "fusion": [30, 100], "futur": [38, 62, 105, 107, 108], "g": [20, 61, 69, 70], "g_eval": [19, 20, 53, 60], "gamma": 20, "gcc": 109, "gemma": [26, 79], "gener": [0, 11, 13, 15, 21, 28, 32, 33, 37, 38, 40, 47, 58, 61, 62, 63, 68, 89, 92, 94, 95, 96, 97, 105, 107, 108, 109], "generate_answ": [9, 11, 40], "generate_basic_answ": [9, 11], "generate_qa_llama_index": [9, 11, 40, 59], "generate_qa_llama_index_by_ratio": [9, 11, 40], "generate_qa_raga": [9, 11, 39], "generate_qa_row": [9, 11], "generate_row_funct": 11, "generate_simple_qa_dataset": [9, 11], "generate_with_langchain_doc": 11, "generated_log_prob": [0, 31], "generated_text": [0, 20, 31], "generation_gt": [0, 1, 2, 11, 13, 14, 20, 31, 46, 47, 48, 50], "generator_class": 28, "generator_dict": 21, "generator_llm": [11, 39], "generator_model": 58, "generator_modul": [28, 92], "generator_module_typ": [94, 95, 96], "generator_nod": [21, 22], "generator_param": 28, "german": 34, "get": [0, 12, 18, 23, 32, 39, 40, 49, 50, 51, 53, 57, 61, 62, 71, 77, 81, 102, 103, 105, 107, 109, 110], "get_best_row": [0, 32], "get_bm25_pkl_nam": [21, 30], "get_bm25_scor": [21, 30], "get_colbert_embedding_batch": [21, 26], "get_colbert_scor": [21, 26], "get_default_llm": 26, "get_encod": [26, 27], "get_event_loop": [0, 32], "get_file_metadata": [1, 18], "get_hybrid_execution_tim": [21, 30], "get_id_scor": [21, 30], "get_ids_and_scor": [21, 30], "get_input_embed": [26, 27], "get_metric_valu": [0, 33], "get_multi_query_expans": [21, 29], "get_nodes_from_docu": 40, "get_or_create_collect": 40, "get_param_combin": [0, 1, 18, 31], "get_query_decompos": [21, 29], "get_result": [21, 22], "get_result_o1": [21, 22], "get_runn": [0, 33], "get_scores_by_id": [21, 30], "get_special_tokens_mask": [26, 27], "get_start_end_idx": [1, 18], "get_support_modul": [0, 33], "get_support_nod": [0, 33], "gg": [56, 107], "girl": [38, 96], "gist": 53, "git": 57, "github": [20, 38, 56, 57, 107, 109, 110], "give": [0, 54], "given": [0, 10, 11, 20, 30, 32, 40, 46, 47, 67, 83, 85, 87, 94, 95, 105], "glob": [40, 44], "glossari": 27, "go": [38, 54, 56, 98, 106, 110], "goal": [97, 105], "goe": [59, 107], "gone": 62, "good": [14, 38, 40, 47, 48, 50, 53, 107, 110], "got": 62, "gpt": [14, 15, 16, 20, 28, 39, 40, 49, 53, 60, 61, 62, 68, 69, 70, 85, 92, 95, 96, 105, 109], "gpt-3.5": 62, "gpt-4": 62, "gpt2": [60, 62, 92, 98], "gpu": 110, "gr": 0, "grain": 93, "gram": [20, 53], "great": [37, 40, 47, 56, 98, 105], "greek": 34, "ground": [11, 20, 38, 46, 53, 54, 60, 105], "ground_truth": 20, "group": [38, 49], "gt": [0, 20, 38, 46, 53, 54, 55, 105], "guarante": [71, 105], "guid": [37, 40, 50, 56, 60, 68, 84, 92, 97, 98, 101, 107, 108, 110], "guidanc": 11, "h": 51, "ha": [11, 13, 15, 16, 27, 38, 40, 47, 49, 50, 53, 55, 68, 106, 107, 110], "had": 110, "halftim": 49, "hallucin": [7, 34, 107], "hamlet": 96, "hand": [38, 71], "handi": 18, "handle_except": [0, 33], "happen": 107, "hard": [40, 56, 105, 107], "harmon": [53, 54, 55], "have": [0, 11, 13, 14, 30, 32, 34, 37, 38, 41, 43, 46, 48, 49, 50, 57, 58, 72, 73, 74, 75, 76, 78, 79, 80, 81, 86, 88, 96, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110], "head": 32, "head_mask": 27, "header": 51, "help": [68, 93, 99], "here": [11, 34, 35, 36, 37, 38, 39, 42, 43, 44, 50, 53, 56, 57, 58, 62, 63, 64, 67, 74, 75, 79, 80, 82, 98, 102, 103, 104, 105, 107, 109, 110], "hf": [24, 67], "hh": 73, "hidden": 27, "high": [20, 84], "higher": [53, 54, 63, 68, 81, 108], "highli": [50, 53, 98, 110], "hit": 54, "home": 49, "hood": 105, "hook": 27, "hop": [11, 13, 16, 40, 48, 96], "hope": 104, "hopefulli": 54, "host": [0, 51, 110], "hour": 52, "how": [11, 34, 37, 40, 44, 46, 48, 49, 50, 54, 61, 69, 70, 74, 75, 89, 96, 98, 102, 103, 104, 106, 107, 110], "howev": [40, 50, 54, 99, 105, 107], "html": [11, 36], "htmlnodepars": 36, "http": [0, 11, 12, 20, 51, 56, 57, 58, 107], "huggingfac": [20, 29, 38, 58, 63, 92, 110], "huggingface_all_mpnet_base_v2": 58, "huggingface_baai_bge_smal": 58, "huggingface_bge_m3": 58, "huggingface_cointegrated_rubert_tiny2": 58, "huggingface_evalu": [19, 20], "huggingfaceembed": 58, "huggingfacellm": [58, 61, 69, 70], "human": 53, "hybrid": [30, 44, 101, 103], "hybrid cc": 99, "hybrid rrf": 100, "hybrid_cc": [0, 21, 97, 99, 101], "hybrid_module_func": 30, "hybrid_module_param": 30, "hybrid_rrf": [0, 21, 97, 100, 101, 103], "hybridcc": [21, 30], "hybridretriev": [21, 30], "hybridrrf": [21, 30], "hyde": [0, 21, 58, 97], "hydrogen": 96, "hyperparamet": [30, 103], "hypothet": 94, "i": [0, 7, 10, 11, 12, 13, 14, 15, 16, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 37, 38, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 104, 108, 110], "id": [23, 26, 27, 30, 32, 34, 38, 48, 76, 101], "id_": 32, "id_column_nam": 32, "idcg": 54, "ideal": 54, "ident": 49, "identifi": [38, 84, 101], "idf": [53, 98], "idx_rang": 13, "ignor": [27, 30], "imag": [38, 104, 110], "imagin": 38, "imdb": 96, "immedi": 97, "impact": [54, 68, 92, 97, 102], "implement": [37, 107], "import": [34, 35, 36, 38, 39, 40, 42, 44, 46, 47, 48, 49, 50, 51, 52, 57, 58, 59, 71, 96, 98, 100, 107, 110], "importerror": 109, "imposs": 107, "improv": [20, 68, 84, 89, 97], "inc": [56, 57, 107], "includ": [11, 16, 22, 38, 53, 54, 58, 61, 69, 70, 92, 97, 99, 106, 108], "incorrect": [54, 73], "increas": [54, 81, 97, 108, 109], "increment": 16, "index": [0, 7, 10, 11, 14, 30, 32, 34, 37, 47, 61, 62, 93, 109], "index_valu": 32, "indic": [20, 32, 54], "indici": 38, "individu": 108, "influenc": 54, "info": 57, "inform": [30, 34, 35, 36, 38, 42, 43, 44, 49, 53, 54, 58, 61, 69, 70, 73, 74, 75, 84, 88, 98, 99, 100, 101, 102, 104, 106, 107, 108, 110], "ingest": [11, 30, 102], "ini": 57, "initi": [0, 29, 48, 50, 58, 63, 84, 89, 109], "initial_corpu": [48, 50], "initial_corpus_df": 50, "initial_qa": [48, 50], "initial_qa_df": 50, "initial_raw": [48, 50], "initial_raw_df": 50, "input": [0, 11, 15, 16, 23, 27, 29, 30, 32, 38, 39, 40, 52, 61, 62, 68, 86, 90, 91, 93, 95, 99, 100, 105, 107], "input_id": 27, "input_list": 11, "input_metr": 30, "input_str": 26, "input_tensor": 26, "input_text": [26, 27], "inputs_emb": 27, "inquir": 49, "insid": [0, 109, 110], "inspir": [66, 72, 73, 74, 75, 76, 94], "instal": [56, 58, 98, 110], "instanc": [7, 12, 13, 14, 20, 24, 27, 30, 31, 32, 38, 49, 50, 58, 61], "instead": [27, 49, 59, 110], "instruct": [24, 38, 57, 58, 63, 67, 87, 89, 98], "int": [0, 7, 11, 12, 13, 18, 20, 22, 23, 24, 26, 27, 30, 32], "integ": 27, "integr": [58, 83, 108], "intend": 108, "interact": [0, 52], "interchang": 108, "interest": 107, "interfac": [0, 58], "intermedi": 26, "internet": 102, "interv": 0, "introduc": [53, 59, 106], "invent": 49, "involv": [84, 101], "ir": [26, 78], "irrelev": 71, "is_async": 11, "is_best": 32, "is_dont_know": [13, 14], "is_fields_notnon": [0, 31], "issu": [56, 60, 107, 109, 110], "italian": 34, "item": [20, 32, 54, 75, 76], "iter": [0, 13], "its": [0, 11, 15, 24, 28, 30, 31, 32, 38, 40, 52, 87, 92, 97, 102, 105, 106, 107], "itself": [58, 99, 105], "java_hom": 57, "jdk": 57, "jean": [38, 49], "jina": [0, 21, 81], "jina_rerank": 84, "jina_reranker_pur": [21, 26], "jinaai": 81, "jinaai_api_kei": 81, "jinarerank": [21, 26], "job": 105, "jq_schema": 42, "json": [0, 41, 43, 51, 110], "json_to_html_t": 41, "judgment": 53, "just": [0, 13, 15, 30, 38, 40, 46, 47, 62, 98, 107, 110], "k": [20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 38, 58, 65, 84, 101], "keep": [0, 32, 50, 62, 73, 75, 76, 103, 110], "kei": [0, 12, 19, 20, 31, 32, 34, 35, 36, 38, 40, 42, 58, 62, 77, 81, 102, 103, 109, 110], "key_column_nam": 32, "keyword": [11, 12, 24, 53, 58, 61, 69, 70, 94, 95, 96], "kf1_polici": 107, "kind": [38, 107, 109], "kiwi": [34, 50, 98], "kiwi_result": 34, "kiwipiepi": 34, "kkma": 98, "know": [14, 38, 48, 56, 92, 103, 104, 105, 108, 110], "knowledg": 38, "known": [40, 54], "ko": [14, 34, 47, 49, 57, 84], "ko-rerank": 82, "konlpi": [35, 57, 98], "korea": [56, 57, 107], "korean": [7, 34, 35, 58, 82], "korerank": [0, 21, 82], "koreranker_run_model": [21, 26], "kosimcs": 58, "kwarg": [0, 11, 12, 13, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 61, 69, 70, 94, 95, 96], "l": [26, 86], "label": [27, 54, 94], "lama_index": 40, "lambda": [0, 34, 47, 48, 50], "lang": [14, 15, 16, 20, 47, 48, 49, 50, 60], "langchain": [1, 7, 9, 11, 12, 34, 39, 40, 44, 95, 107], "langchain_chunk": [0, 1, 35], "langchain_chunk_pur": [1, 7], "langchain_commun": [40, 42], "langchain_docu": 10, "langchain_document_to_parquet": 40, "langchain_documents_to_parquet": [9, 10, 40, 59], "langchain_openai": 39, "langchain_pars": [0, 1, 42, 44, 45, 50], "langchain_parse_pur": [1, 12], "langchain_text_splitt": 40, "languag": [7, 11, 14, 15, 20, 34, 47, 49, 53, 57, 60, 61, 68, 69, 70, 77, 89, 98, 108], "laredo": 49, "larg": [26, 53, 58, 60, 61, 68, 69, 70, 77, 80, 81, 83, 93, 108], "last": [44, 51], "last_modified_datetim": [34, 38, 44, 73, 88], "lastli": [102, 103], "later": [54, 73, 110], "latest": [63, 73, 88], "latter": 27, "launch": [0, 52, 110], "lazyinit": [0, 33, 34, 58], "le": 0, "lead": 68, "learn": [39, 56, 74, 75, 102, 103, 105, 107, 110], "least": [11, 54, 75, 76, 105, 109], "legaci": [0, 1, 37, 39, 40, 59], "legal": 96, "length": [0, 24, 30, 32, 54, 55, 60, 62, 72, 74, 86, 92], "lengthen": 91, "less": [40, 54, 65, 68], "let": [54, 55, 105, 107, 110], "level": [32, 53, 65, 68, 84, 101, 108], "lexcial": 99, "lexic": [30, 99], "lexical_id": 30, "lexical_scor": 30, "lexical_summari": 30, "lexical_summary_df": 30, "lexical_theoretical_min_valu": [30, 99], "li": 87, "librari": [59, 63, 110], "licens": 96, "life": 38, "light": 49, "like": [0, 11, 29, 30, 32, 34, 38, 44, 46, 48, 50, 51, 54, 57, 61, 62, 68, 69, 70, 89, 92, 98, 99, 100, 103, 105, 107, 109, 110], "likelihood": 89, "limit": [62, 78, 79, 80, 81, 85, 86, 107, 108, 109], "line": [0, 22, 24, 25, 26, 28, 29, 30, 60, 65, 68, 71, 84, 92, 97], "linear": 107, "lingua": 68, "link": [0, 13, 52, 53], "linked_corpu": [1, 13], "linked_raw": [1, 13], "linux": 109, "list": [0, 1, 7, 10, 11, 12, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 54, 61, 69, 70, 79, 80, 87, 96, 99, 103], "list1": 30, "list2": 30, "liter": 54, "literal_ev": 103, "littl": [29, 40, 50, 107], "ll": [52, 54, 97, 109], "llama": [7, 10, 11, 14, 24, 34, 40, 44, 47, 61, 62, 67], "llama3": [47, 109], "llama_cloud_api_kei": 12, "llama_docu": 10, "llama_document_to_parquet": 40, "llama_documents_to_parquet": [9, 10], "llama_gen_queri": [1, 2, 13, 48, 49, 50, 59], "llama_index": [1, 9, 36, 40, 46, 47, 48, 49, 50, 58, 60, 69, 70, 93, 109], "llama_index_chunk": [0, 1, 34, 36, 48, 50], "llama_index_chunk_pur": [1, 7], "llama_index_gen_gt": [1, 2, 13, 46, 48, 50], "llama_index_generate_bas": [13, 16], "llama_index_llm": [0, 21, 28, 58, 60, 61, 62, 63, 85, 92, 94, 95, 96, 105, 107, 109], "llama_pars": [1, 12, 43, 44, 45], "llama_parse_pur": [1, 12], "llama_text_node_to_parquet": [9, 10, 40], "llamaindex": [12, 40, 49, 58, 61, 63, 66, 73, 74, 75, 85, 107], "llamaindexcompressor": [21, 24], "llamaindexllm": [21, 22], "llamapars": [0, 1], "llm": [11, 14, 15, 16, 20, 21, 22, 24, 26, 37, 38, 40, 41, 46, 48, 49, 50, 53, 56, 57, 60, 63, 68, 69, 70, 71, 84, 85, 90, 91, 92, 93, 94, 95, 96, 97, 105, 107, 110], "llm evalu": 60, "llm infer": 63, "llm metric": [53, 106, 109], "llm_lingua": [24, 67], "llm_name": 24, "llmlingua": 67, "llmlingua_pur": [21, 24], "load": [0, 10, 32, 38, 40, 57], "load_bm25_corpu": [21, 30], "load_chroma_collect": [21, 30], "load_data": 40, "load_dotenv": 57, "load_summary_fil": [0, 32], "load_yaml": [1, 18], "loader": [40, 42, 44], "local": [40, 56, 58, 85, 102, 110], "local model": 58, "local_model": 11, "locat": 107, "log": 61, "log2": 54, "log_cli": 57, "log_cli_level": 57, "logarithm": 54, "logarithmic": 54, "logic": 53, "logprob": 62, "long": [68, 92, 104, 107], "long context reord": 91, "long_context_reord": [0, 21, 91], "longcontextreord": [21, 28], "longer": [11, 59], "longest": 20, "longllmlingua": [0, 21, 67], "look": [29, 30, 34, 38, 44, 48, 50, 51, 54, 55, 98, 99, 100, 103, 107], "loop": [32, 108], "lost in the middl": 91, "lot": [38, 47, 105, 110], "low": 14, "lower": [32, 47, 54, 68, 72, 76, 102, 109], "lowercas": [35, 36, 42], "m": [26, 57, 86], "m3": 58, "mac": [57, 109], "made": [47, 55, 107, 110], "magic": 107, "mai": [54, 108, 109], "main": [37, 107], "major": 58, "make": [0, 11, 13, 27, 30, 32, 37, 38, 39, 49, 50, 56, 57, 61, 63, 68, 69, 70, 90, 91, 92, 93, 105, 107, 110], "make_basic_gen_gt": [13, 15, 46, 48, 50], "make_batch": [0, 32], "make_combin": [0, 32], "make_concise_gen_gt": [13, 15, 46, 48, 50], "make_gen_gt_llama_index": [13, 15], "make_gen_gt_openai": [13, 15], "make_generator_callable_param": [0, 21, 28], "make_llm": [21, 24], "make_metadata_list": [1, 7], "make_node_lin": [0, 33], "make_qa_with_existing_qa": [9, 11, 40], "make_retrieval_callable_param": [21, 29], "make_retrieval_gt_cont": [1, 13, 48, 50], "make_single_content_qa": [9, 11, 40, 59], "make_trial_summary_md": [0, 33], "maker": [22, 28, 90, 93, 105, 107], "malayalam": 34, "malfunct": 110, "manag": 103, "mani": [54, 61, 63, 69, 70, 96, 105], "manual": 110, "map": [0, 1, 13, 14, 15, 16, 20, 26, 27, 34, 37, 47, 48], "marco": [26, 86], "margin": 53, "markdown": [32, 43, 45], "marker": [56, 57, 107], "markov": 105, "mask": 27, "master": 20, "match": [20, 38, 53], "matter": 107, "max": [14, 30, 62, 99], "max_length": 86, "max_ngram_ord": 20, "max_retri": 11, "max_token": [58, 61, 62, 63, 69, 70, 94, 95, 96, 97], "max_token_s": 22, "maximum": [11, 20, 63, 86], "md": 40, "me": [90, 91, 92, 93, 105, 107], "mean": [0, 11, 14, 20, 24, 25, 26, 30, 32, 38, 40, 46, 53, 55, 63, 71, 98, 99, 104, 105, 108, 109], "measur": [0, 53, 55, 92, 97, 101], "measure_spe": [0, 33], "mechan": 108, "med": 83, "meet": 53, "meger": 107, "member": [38, 49], "memori": [78, 79, 80, 86, 109], "mention": [51, 52], "merced": 96, "merg": [45, 70, 107, 108], "messag": [16, 26, 42], "metad": 18, "metadata": [0, 7, 14, 15, 16, 18, 26, 34, 73, 88], "metadata_list": 7, "meteor": [19, 20, 60, 92, 103, 106, 107, 109], "method": [0, 7, 10, 11, 12, 20, 27, 30, 31, 34, 39, 44, 45, 46, 47, 48, 49, 50, 53, 60, 92, 93, 97, 98, 99, 101, 103, 105, 106, 109], "metric": [0, 19, 22, 24, 28, 29, 30, 31, 38, 60, 65, 68, 71, 84, 92, 97, 101, 103, 104, 106, 107, 108, 109], "metric_input": [19, 20, 22, 24, 28, 29, 30], "metric_nam": [53, 60], "metricinput": [0, 19, 20, 22, 24, 28, 29, 30, 33], "mexican": 49, "might": [20, 39, 62, 105, 110], "min": [30, 99], "mind": [103, 110], "mini": [14, 15, 49], "minilm": [26, 86], "minimum": [30, 96, 99, 110], "mip": 102, "miss": 109, "mistak": [47, 109, 110], "mistral": [58, 63, 98], "mistralai": [58, 63, 98], "mix": 108, "mjpost": 20, "mm": [30, 73, 99, 101], "mmarco": 83, "mock": [0, 58], "mockembed": 0, "mockembeddingrandom": [0, 33], "mockllm": 58, "modal": 38, "mode": [23, 65, 66], "model": [0, 11, 14, 15, 16, 20, 26, 27, 28, 30, 37, 38, 40, 45, 47, 48, 49, 52, 53, 54, 56, 57, 60, 61, 62, 63, 65, 68, 69, 70, 74, 75, 77, 78, 79, 80, 81, 82, 85, 86, 87, 89, 91, 92, 94, 95, 96, 98, 102, 104, 105, 107, 108, 109, 110], "model_computed_field": [0, 13, 14, 15, 16, 21, 26, 33], "model_config": [0, 13, 14, 15, 16, 21, 26, 33], "model_field": [0, 13, 14, 15, 16, 21, 26, 33], "model_nam": [0, 14, 15, 16, 24, 26, 32, 58, 67, 78, 79, 80, 83, 86], "modeling_enc_t5": [21, 26], "modest": 54, "modifi": [38, 44, 110], "modul": [33, 35, 36, 41, 42, 43, 50, 56, 64, 65, 71, 104, 106, 107, 109, 110], "modular": [104, 108], "modular rag": 107, "module_dict": 31, "module_nam": [0, 13], "module_param": [0, 7, 12, 13, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32], "module_summary_df": 30, "module_typ": [0, 29, 31, 34, 35, 36, 41, 42, 43, 44, 45, 50, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 109], "module_type_exist": [0, 31], "monot5": [0, 21, 84], "monot5_run_model": [21, 26], "more": [11, 16, 30, 35, 36, 38, 39, 42, 43, 48, 49, 50, 53, 54, 60, 63, 68, 82, 84, 85, 92, 93, 96, 97, 98, 104, 106, 108, 110], "most": [11, 40, 50, 54, 58, 60, 84, 93, 98, 101, 102, 103, 105, 110], "mpnet": [20, 58], "mrr": 20, "msmarco": [26, 83], "mt5": 83, "much": [47, 107, 109], "multi": [13, 16, 38, 49, 96, 97], "multi query expans": 95, "multi_context": [11, 39], "multi_query_expans": [0, 21, 58, 95], "multilingu": [77, 98], "multipl": [13, 28, 29, 30, 37, 44, 95, 96, 99, 100, 103, 104, 105, 107, 108], "multiqueryexpans": [21, 29], "multiqueryretriev": 95, "multitask": 58, "must": [0, 10, 11, 13, 23, 24, 25, 26, 28, 30, 32, 35, 36, 38, 40, 49, 50, 51, 54, 58, 63, 65, 73, 83, 88, 90, 91, 93, 96, 99, 103, 107, 108, 109, 110], "n": [13, 20, 26, 34, 41, 48, 50, 53, 57, 62, 88, 90, 91, 92, 93, 97, 107], "n_thread": 20, "naiv": 107, "name": [0, 13, 14, 15, 16, 19, 20, 26, 29, 30, 32, 49, 60, 62, 63, 65, 67, 68, 71, 74, 75, 84, 85, 92, 97, 98, 99, 100, 104, 110], "natur": [48, 53], "naver": 41, "necessari": [40, 97], "need": [7, 11, 27, 34, 37, 38, 39, 40, 45, 50, 52, 54, 57, 68, 77, 81, 92, 96, 98, 102, 103, 104, 107, 109, 110], "nest": 32, "nested_list": 32, "never": 56, "new": [13, 37, 38, 49, 50, 52, 57, 58, 63, 103, 106, 107, 110], "new_corpu": 13, "new_corpus_df": 50, "new_embed": 27, "new_gen_gt": 15, "new_qa": 50, "newjeans1": 38, "newjeans2": 38, "newlin": 20, "next": [55, 65, 77, 81, 92, 107], "nlg": 53, "nn": 27, "node": [0, 10, 33, 38, 40, 55, 58, 61, 64, 94, 95, 96, 99, 106], "node_dict": 31, "node_dir": [0, 30], "node_lin": [33, 65, 68, 71, 84, 92, 97, 103, 104, 106, 107], "node_line_1": [58, 103, 107], "node_line_2": [103, 107], "node_line_3": 103, "node_line_dict": 0, "node_line_dir": [0, 22, 23, 24, 25, 26, 28, 29, 30, 31], "node_line_nam": [58, 60, 65, 68, 71, 84, 92, 97, 101, 103, 104, 106, 107], "node_nam": 0, "node_param": [0, 31], "node_pars": [36, 40], "node_summary_df": 0, "node_typ": [0, 31, 58, 60, 65, 68, 71, 84, 92, 97, 101, 103, 106, 107, 109], "node_view": [0, 33], "nodepars": 7, "nodewithscor": 26, "non": 45, "none": [0, 7, 10, 11, 13, 20, 21, 26, 27, 31, 32, 60, 68, 92], "nonetyp": 0, "normal": [30, 80, 99], "normalize_dbsf": [21, 30], "normalize_mean": 106, "normalize_method": [30, 99, 101], "normalize_mm": [21, 30], "normalize_str": [0, 32], "normalize_tmm": [21, 30], "normalize_unicod": [0, 32], "normalize_z": [21, 30], "norwegian": 34, "notabl": 91, "note": 65, "nousresearch": [24, 67], "now": [38, 39, 40, 48, 50, 63, 102, 103, 105, 106, 107, 109, 110], "ntabl": 41, "nuevo": 49, "num_passag": [23, 66], "num_quest": [11, 40], "num_work": 0, "number": [0, 11, 26, 30, 32, 40, 44, 54, 55, 63, 65, 66, 68, 71, 96, 97, 104, 108, 110], "numer": 56, "object": [0, 13, 14, 15, 16, 26, 31, 40, 61, 69, 70, 73, 88, 94, 95, 96], "observ": [52, 91], "obtain": 84, "occur": [38, 62, 103, 107, 109], "ocr": [41, 45], "offer": 99, "offici": 32, "often": [40, 49, 98, 109], "okai": 38, "okt": 98, "ollama": [47, 58], "onc": [38, 61, 63, 69, 70, 77, 81, 99, 104, 107, 110], "one": [0, 7, 11, 13, 16, 24, 25, 26, 27, 28, 32, 34, 38, 40, 48, 49, 50, 51, 54, 73, 75, 76, 92, 103, 104, 105, 108, 109], "one_hop_quest": [13, 16], "onli": [11, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 38, 44, 48, 49, 55, 61, 69, 70, 73, 92, 93, 104, 105, 107, 110], "oom": [85, 109], "open": [102, 105, 109], "openai": [11, 14, 15, 16, 20, 23, 28, 29, 40, 47, 48, 49, 50, 58, 60, 61, 65, 68, 69, 70, 74, 75, 85, 92, 94, 95, 96, 97, 101, 102, 103, 105, 107], "openai_api_kei": [57, 62, 103, 109], "openai_cli": [47, 49], "openai_embed_3_larg": [11, 40, 58], "openai_embed_3_smal": 58, "openai_gen_gt": [1, 2, 13, 46], "openai_gen_queri": [1, 2, 13, 49], "openai_llm": [0, 21, 92], "openai_truncate_by_token": [0, 32], "openaiembed": [30, 39], "openailik": [58, 109], "openaillm": [21, 22], "oper": [38, 51, 68, 101, 108], "oppos": 65, "opt": 63, "optim": [0, 34, 37, 38, 39, 44, 47, 48, 56, 62, 63, 68, 74, 75, 98, 99, 100, 103, 104, 106, 107, 108], "optimize_hybrid": [21, 30], "option": [10, 11, 20, 27, 34, 44, 52, 57, 60, 65, 67, 68, 71, 82, 83, 84, 87, 89, 92, 97, 99, 100, 103, 105, 106, 108, 110], "order": [0, 20, 53, 54], "org": 56, "organ": 104, "orient": 53, "origin": [0, 30, 32, 73, 89], "original_str": 34, "original_text": 18, "other": [0, 20, 30, 32, 38, 53, 54, 57, 61, 68, 69, 70, 71, 85, 94, 95, 96, 99, 103, 104, 105, 107, 110], "otherwis": 44, "our": [30, 34, 38, 40, 41, 44, 56, 57, 64, 72, 76, 94, 95, 96, 105, 107, 109, 110], "out": [38, 50, 54, 56, 57, 58, 60, 63, 71, 72, 73, 74, 75, 76, 103, 104, 107, 109, 110], "outcom": [92, 97], "outperform": 53, "output": [0, 11, 15, 37, 39, 49, 51, 53, 60, 67, 89, 92, 97, 109], "output_attent": 27, "output_filepath": [10, 11, 40], "output_hidden_st": 27, "output_path": [0, 110], "over": [63, 108], "overal": [53, 84, 105], "overfit": 110, "overlap": 55, "overrid": 20, "overridden": 27, "overview": 37, "overwrit": [10, 11], "own": [11, 37, 38, 41, 56, 71, 94, 95, 96, 105, 108, 110], "p4dyxfmsa": [56, 107], "packag": [33, 57, 58, 59, 109], "pad": 27, "pad_token": 27, "page": [12, 34, 41, 44, 45, 48, 57, 85], "paid": 45, "pair": [11, 27, 32, 37, 40, 53], "panda": [31, 32, 39, 40], "paper": [20, 49, 53, 89, 94, 96, 107], "paradigm": [53, 107], "parallel": [26, 27, 30, 63], "param": [0, 7, 20, 28, 29, 63, 104], "param_list": [21, 24], "paramet": [0, 10, 11, 12, 13, 14, 15, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 40, 43, 52, 53, 58, 103, 104, 105, 108, 109, 110], "parent": 0, "parquet": [0, 10, 11, 13, 34, 38, 39, 40, 44, 48, 50, 104, 109, 110], "pars": [0, 1, 7, 13, 34, 35, 36, 37, 41, 103], "parse_all_fil": [1, 12], "parse_config": [34, 44], "parse_inst": 12, "parse_method": [12, 35, 42, 44, 45, 50], "parse_modul": 42, "parse_output": [9, 11], "parse_project_dir": 50, "parsed_data_path": [0, 34], "parsed_result": 7, "parser": [33, 34, 50], "parser_nod": [1, 12], "part": [37, 54, 108], "pass": [11, 27, 28, 39, 61, 69, 70, 94, 95, 96, 107], "pass_compressor": [0, 21], "pass_passage_augment": [0, 21], "pass_passage_filt": [0, 21], "pass_query_expans": [0, 21], "pass_rerank": [0, 21], "pass_valu": 107, "passag": [13, 16, 23, 24, 25, 26, 30, 34, 38, 47, 54, 55, 66, 68, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 94, 98, 99, 100, 102, 107], "passage augment": [65, 66], "passage compressor": [68, 69, 70], "passage compressor metr": 55, "passage filt": [71, 72, 73, 74, 75, 76], "passage_augment": 65, "passage_filt": 71, "passage_filter_nod": [21, 25], "passage_id": 30, "passage_rerank": 107, "passage_str": 11, "passageaugment": [0, 21], "passagecompressor": [0, 21], "passagefilt": [0, 21], "passagererank": [0, 21], "passcompressor": [21, 24], "passpassageaugment": [21, 23], "passpassagefilt": [21, 25], "passqueryexpans": [21, 29], "passrerank": [21, 26], "path": [0, 7, 11, 12, 13, 18, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 44, 51, 57, 98, 110], "pattern": 44, "payload": 51, "pd": [0, 10, 11, 26, 31, 32, 39, 40], "pdf": [44, 50], "pdfminer": [42, 44, 50], "pdfplumber": [42, 44, 45, 50], "penalti": 20, "per": [40, 44, 55, 75, 76, 106], "percentag": 54, "percentil": 71, "percentile cutoff": 72, "percentile_cutoff": [0, 21, 72], "percentilecutoff": [21, 25], "perfect": [47, 107], "perform": [13, 20, 27, 29, 34, 38, 44, 45, 47, 49, 50, 52, 54, 55, 56, 60, 62, 65, 68, 71, 84, 91, 92, 97, 105, 107], "persistentcli": 40, "perspect": 95, "pertin": 84, "phase": [84, 97], "phrase": 15, "piec": 29, "pip": [56, 57, 109], "pipelin": [0, 37, 48, 50, 51, 52, 56, 99, 104, 105, 107], "pipeline_dict": 110, "pkl": 104, "place": 49, "placehold": [11, 40], "plan": [38, 60, 107], "pleas": [11, 26, 30, 38, 50, 54, 57, 58, 60, 63, 67, 89, 92, 97, 98, 103, 107, 108, 109, 110], "plu": [11, 30, 37, 38, 39, 57, 58, 63, 73, 74, 75, 88, 92, 96, 98, 102, 103], "polish": 34, "pop": [32, 38], "pop_param": [0, 32], "popular": [53, 98], "port": [0, 51, 110], "porter": 20, "porter_stemm": 30, "portugues": 34, "posit": [54, 91], "possibl": [105, 107, 109], "post": [0, 51, 107], "post_retrieve_node_lin": [60, 92], "potenti": [20, 37, 68], "power": [77, 81, 107], "ppv": 54, "pre": [47, 107, 110], "pre_retrieve_node_lin": 97, "precis": [20, 53, 68, 94, 101], "pred": [20, 54], "predefin": [60, 68, 84], "predict": [20, 54], "prefix": 89, "prefix_prompt": [26, 89], "prepare_for_model": 27, "preprocess": [0, 33], "present": 53, "pretti": 107, "prev": 65, "prev next augment": 66, "prev_next_augment": [0, 21, 65, 66], "prev_next_augmenter_pur": [21, 23], "prevent": [7, 15, 34, 62, 85, 107], "preview": 20, "previou": [0, 22, 23, 24, 25, 26, 28, 29, 30, 53, 59, 76, 105, 107], "previous_result": [0, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "prevnextpassageaugment": [21, 23], "primari": [65, 71, 84, 87], "primarili": 45, "primit": 40, "print": [26, 51], "prior": [40, 68], "priorit": 84, "prob": 61, "probabl": [62, 63, 105], "problem": [40, 50, 53, 107, 109], "process": [11, 20, 26, 30, 32, 37, 40, 52, 56, 60, 63, 68, 84, 87, 92, 95, 97, 101, 102, 104, 105, 108, 110], "process_batch": [0, 32], "processed_data": [10, 11], "produc": 53, "product": 110, "project": [0, 56, 57], "project_dir": [0, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 44, 52, 110], "project_directori": 110, "prompt": [0, 1, 2, 11, 13, 22, 24, 26, 28, 31, 37, 61, 63, 85, 89, 90, 91, 93, 94, 95, 105, 107], "prompt1": [11, 40], "prompt2": [11, 40], "prompt3": 40, "prompt_mak": [92, 105, 107], "promptcompressor": 24, "promptmak": [0, 21], "prompts_ratio": [11, 40], "proper": [11, 62], "properli": [32, 98], "properti": 13, "propos": 107, "protected_namespac": 0, "provid": [40, 41, 52, 53, 61, 69, 70, 83, 89, 110], "pseudo": 62, "pt": 83, "ptt5": 83, "publicli": 0, "punctuat": 32, "punktsentencetoken": 34, "pure": [0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "purpos": [65, 71, 84, 97, 108], "push": 109, "put": [38, 40, 67, 109], "py": 20, "pyarrow": 109, "pydant": [0, 14, 15, 16, 26], "pydantic_model_": 0, "pymupdf": 42, "pypdf": 42, "pypdfdirectori": 42, "pypdfdirectoryload": 42, "pypdfium2": 42, "pypi": 56, "pytest": 57, "python": [32, 35, 38, 40, 57, 90, 103, 109], "pythoncodetextsplitt": 35, "q": 40, "qa": [0, 1, 11, 28, 29, 30, 34, 37, 46, 47, 49, 59, 104, 110], "qa_cnt": 0, "qa_creation_func": [11, 40], "qa_data": 31, "qa_data_path": [0, 110], "qa_dataset": 11, "qa_df": [13, 32, 39, 40, 46, 47, 49], "qa_save_path": 13, "qa_test": 110, "qacreat": [1, 9, 39, 40, 59], "qid": [13, 49], "qualiti": [53, 84, 110], "quantit": 108, "quantiz": 109, "queri": [0, 1, 2, 11, 13, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 42, 50, 51, 52, 59, 65, 68, 69, 71, 74, 75, 76, 82, 83, 84, 85, 87, 90, 91, 92, 93, 94, 101, 102, 105, 107], "query decompos": 96, "query expans": [94, 95, 96, 97], "query_bundl": 26, "query_decompos": [0, 21, 58, 96, 97], "query_embed": [26, 30], "query_expans": [0, 29, 92, 97, 105], "query_gen_openai_bas": [13, 16], "querybundl": 26, "querydecompos": [21, 29], "queryexpans": [0, 21], "question": [11, 13, 14, 16, 26, 29, 37, 38, 40, 46, 51, 53, 56, 67, 87, 89, 90, 91, 92, 93, 96, 107, 110], "question_num": 11, "question_num_per_cont": [11, 40], "quickli": 68, "quit": [53, 60], "r": 57, "rag": [11, 34, 37, 38, 39, 40, 44, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109], "rag api": 51, "rag dataset": [38, 39, 40], "rag deploi": [51, 52], "rag evalu": [38, 39, 40, 53, 54, 55, 60, 106, 109], "rag llm": 58, "rag metr": [53, 54, 55, 106, 109], "rag model": 58, "rag optim": [56, 103, 105, 108], "rag perform": 105, "rag structur": 108, "rag tutori": 110, "rag web": 52, "raga": [1, 9, 37, 54], "rais": 20, "raise_except": 11, "ran": 104, "random": [0, 11, 33, 63], "random_single_hop": [1, 13, 48, 50, 59], "random_st": [0, 11, 13], "randomli": [11, 40, 48], "rang": [27, 48, 99, 100], "range_single_hop": [1, 13, 48], "rank": [20, 30, 98, 100], "rankgpt": [0, 21, 84], "rankgpt_rerank_prompt": [21, 26, 85], "rankgptrerank": 26, "rate": [54, 109], "ratio": [11, 40], "ratio_dict": 40, "raw": [1, 13, 37, 41, 42, 43, 44, 45, 48, 50, 56, 59], "raw_df": [0, 13], "raw_end_idx": 13, "raw_id": 13, "raw_start_idx": 13, "re": [74, 75, 107], "read": [56, 90, 91, 92, 93, 103, 107, 109], "read_parquet": [39, 40], "readi": [40, 57, 105, 110], "real": [38, 40, 52, 62, 107], "realli": [30, 38, 63, 105, 107], "reason": [11, 39], "reassess": 84, "recal": [20, 53, 68, 101], "receiv": 52, "recenc": [0, 21, 71], "recency_filt": 73, "recencyfilt": [21, 25], "recip": 27, "reciproc": [20, 30, 100, 106], "recogn": 109, "recommend": [20, 28, 38, 49, 50, 62, 92, 98, 104, 107, 109, 110], "reconstruct": 32, "reconstruct_list": [0, 32], "record": 104, "recurs": [32, 70], "recursivecharact": 35, "recursivecharactertextsplitt": 40, "reduc": [54, 68], "reduct": 68, "refer": [11, 50, 53, 54, 60, 92, 97, 108, 110], "refin": [0, 21, 68, 84], "reflect": 98, "regist": 27, "rel": 20, "relat": [38, 53, 54, 61, 69, 70, 71, 89, 94, 95, 96], "relationship": 18, "releas": [37, 49], "relev": [20, 26, 38, 40, 54, 60, 68, 83, 84, 85, 94, 97, 101], "remain": 108, "remeb": 40, "rememb": [54, 57, 105], "remind": 110, "remov": [30, 31, 32, 40, 47], "reorder": [84, 92], "repeat": 11, "replac": [0, 13, 14, 15, 16, 24, 26, 32, 52, 92], "replace_valu": 32, "replace_value_in_dict": [0, 32], "repo": [38, 56, 98, 110], "repositori": 57, "repres": [102, 105], "request": [0, 51, 107], "request_timeout": 109, "requir": [0, 11, 14, 15, 16, 20, 26, 44, 49, 53, 57, 61, 68, 69, 70, 83, 94, 95, 96, 99, 100, 108], "rerank": [24, 25, 26, 38, 68, 73, 77, 81, 83, 84, 85, 87, 89, 107], "reranker_recal": 107, "reset": [38, 47, 109], "reset_index": [47, 48, 50, 109], "resid": 108, "resolv": 109, "resourc": 105, "respect": 55, "respond": 97, "respons": [0, 13, 14, 15, 16, 51, 52, 68, 69, 97], "rest": 85, "restart_evalu": 110, "restart_tri": [0, 33, 110], "result": [0, 7, 11, 13, 20, 22, 23, 24, 25, 26, 28, 29, 30, 32, 35, 36, 40, 43, 45, 47, 49, 50, 51, 53, 54, 55, 56, 62, 65, 76, 84, 92, 97, 99, 101, 104, 106, 107, 109], "result_column": [0, 33, 51], "result_df": [22, 24, 28, 30], "result_qa": [46, 49], "result_to_datafram": [0, 32], "result_typ": [43, 45], "retreived_cont": [90, 91, 93], "retri": [11, 105], "retriev": [0, 7, 11, 21, 24, 25, 26, 27, 29, 33, 34, 38, 46, 47, 58, 65, 66, 67, 68, 70, 77, 81, 84, 89, 92, 93, 94, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108], "retrieval metr": 54, "retrieval_cont": [0, 33], "retrieval_f1": [19, 20, 25, 26, 29, 65, 71, 84, 97, 101], "retrieval_func": 29, "retrieval_gt": [0, 13, 16, 31, 34, 40, 49, 50], "retrieval_gt_cont": [0, 13, 31], "retrieval_map": [19, 20], "retrieval_modul": [29, 97], "retrieval_mrr": [19, 20], "retrieval_ndcg": [19, 20], "retrieval_param": 29, "retrieval_precis": [19, 20, 25, 26, 65, 71, 84, 97, 101, 106], "retrieval_recal": [19, 20, 25, 26, 29, 65, 71, 84, 97, 101, 106, 107], "retrieval_result": 54, "retrieval_token_f1": [19, 20, 68], "retrieval_token_precis": [19, 20, 68], "retrieval_token_recal": [19, 20, 68], "retrieve metr": 54, "retrieve_node_lin": [65, 68, 71, 84, 101], "retrieve_scor": [23, 24, 25, 26, 30], "retrieved_cont": [0, 23, 24, 25, 26, 30, 31, 90, 91, 92, 93, 107], "retrieved_id": [0, 23, 24, 25, 26, 30, 31], "return": [0, 7, 10, 11, 12, 13, 14, 15, 16, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 45, 61, 62, 71, 73, 96, 102, 103], "return_dict": 27, "return_index": 0, "revers": [23, 32, 72, 76], "right": [40, 58, 107, 110], "rl_polici": 107, "roadmap": 104, "roberta": 58, "robust": 49, "root": 57, "roug": [19, 20, 60, 92, 103, 106, 107, 109], "rouge1": 20, "rouge2": 20, "rouge_typ": 20, "rougel": 20, "rougelsum": 20, "row": [14, 15, 16, 30, 31, 32, 38, 104], "rpm": 81, "rr": [20, 54], "rrf": [30, 99, 101], "rrf_calcul": [21, 30], "rrf_k": [30, 97, 100, 103], "rrf_pure": [21, 30], "rubert": 58, "run": [0, 1, 13, 21, 27, 31, 33, 37, 48, 56, 57, 68, 72, 73, 74, 75, 76, 103, 104, 105], "run_api": [51, 110], "run_api_serv": [0, 33, 51, 110], "run_chunk": [1, 7], "run_config": 11, "run_evalu": [0, 21, 30, 31], "run_generator_nod": [21, 22], "run_nod": [0, 31], "run_node_lin": [0, 33], "run_pars": [1, 12], "run_passage_augmenter_nod": [21, 23], "run_passage_compressor_nod": [21, 24], "run_passage_filter_nod": [21, 25], "run_passage_reranker_nod": [21, 26], "run_prompt_maker_nod": [21, 28], "run_query_embedding_batch": [21, 30], "run_query_expansion_nod": [21, 29], "run_retrieval_nod": [21, 30], "run_web": [0, 33, 52, 110], "runner": [0, 33, 51, 110], "runnerinput": [0, 33], "russian": 34, "sacrebleu": 20, "safe": 32, "said": 53, "same": [0, 29, 30, 32, 34, 44, 51, 52, 54, 65, 85, 96, 104, 105, 108, 110], "sampl": [0, 1, 11, 34, 40, 44, 49, 50, 54, 59, 63, 109, 110], "sample_config": 110, "samplingparam": 63, "satisfactori": [40, 50], "save": [0, 10, 11, 13, 14, 22, 34, 38, 41, 43, 44, 103, 110], "save_parquet_saf": [0, 32], "save_path": 13, "scalabl": 40, "scale": [30, 68, 99, 106], "schema": [0, 1, 20, 30, 33, 37, 42, 46, 47, 49, 50, 59], "score": [20, 26, 30, 32, 55, 68, 72, 75, 76, 98, 99, 100, 101], "script": [32, 38], "search": [32, 97, 98, 102], "search_str": 18, "second": [27, 49, 55, 104, 107], "secret": 103, "section": [34, 44, 48, 103, 106, 108, 110], "secur": 109, "see": [34, 37, 44, 50, 54, 55, 58, 103, 104, 105, 107, 109], "seed": 11, "seek": [49, 53], "segment": 53, "select": [0, 11, 13, 22, 24, 25, 26, 28, 29, 30, 40, 49, 50, 98, 104, 105, 106, 107, 108], "select_best": [0, 33], "select_best_averag": [0, 33], "select_best_rr": [0, 33], "select_bm25_token": [21, 30], "select_normalize_mean": [0, 33], "select_top_k": [0, 32], "self": [32, 96], "sem": 20, "sem_scor": [19, 20, 92, 103], "semant": [30, 53, 60, 98, 99], "semantic_id": 30, "semantic_llama_index": [34, 36], "semantic_scor": 30, "semantic_summari": 30, "semantic_summary_df": 30, "semantic_theoretical_min_valu": [30, 99], "semanticdoubl": 34, "semanticdoublemerg": 36, "semscor": 53, "send": [0, 77, 81], "sensit": 54, "sentenc": [20, 26, 47, 50, 53, 58, 74, 75, 84, 93, 98], "sentence transform": 86, "sentence_splitt": [34, 50], "sentence_splitter_modul": 34, "sentence_transform": [0, 21], "sentence_transformer_rerank": 86, "sentence_transformer_run_model": [21, 26], "sentencetransformerrerank": [21, 26], "sentencetransformerstoken": 35, "sentencewindow": [34, 36, 50], "sequenc": [26, 27, 108], "seri": 32, "serializeasani": 26, "seriou": [109, 110], "serv": [60, 68, 84, 89, 92, 97, 101, 108], "server": [0, 56, 62, 102, 109], "server_nam": [0, 52], "server_port": [0, 52], "session": 26, "set": [0, 7, 11, 12, 13, 14, 27, 28, 30, 37, 40, 41, 42, 43, 56, 57, 58, 60, 61, 62, 63, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 84, 85, 89, 92, 94, 95, 96, 97, 99, 102, 103, 104, 105, 107, 108, 109], "set_initial_st": [0, 33], "set_input_embed": [26, 27], "set_page_config": [0, 33], "set_page_head": [0, 33], "setup": 105, "sever": [53, 62, 110], "shape": [20, 32], "share": [0, 52, 110], "shareabl": 0, "short": [46, 107], "shot": [89, 94, 96], "should": [0, 11, 12, 14, 15, 16, 20, 26, 27, 34, 42, 53, 58, 62, 73, 109], "show": [49, 104, 105, 107], "shown": 50, "side": 62, "sigma": [30, 99], "signal": 89, "significantli": [68, 97, 108], "silent": 27, "similar": [20, 53, 60, 65, 71, 72, 76, 98, 99, 100, 102, 105], "similarity percentile cutoff": 74, "similarity_percentile_cutoff": [0, 21, 74], "similarity_threshold_cutoff": [0, 21, 71, 75], "similaritypercentilecutoff": [21, 25], "similaritythresholdcutoff": [21, 25], "simpl": [1, 9, 15, 39, 47, 53, 60, 98, 107], "simpledirectoryread": 40, "simpli": [58, 88, 110], "simul": 108, "sinc": [27, 40, 47, 50, 52, 54, 60, 62, 85, 90, 92, 93], "singl": [0, 11, 12, 13, 27, 32, 38, 40, 48, 56, 96, 103, 104, 107, 108], "single_token_f1": [19, 20], "situat": 99, "six": 55, "size": [0, 7, 11, 12, 20, 50, 62, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 99, 102, 109], "sk": 57, "skip": [24, 25, 26, 28, 92], "slice_tensor": [21, 26], "slice_tokenizer_result": [21, 26], "slovenian": 34, "slow": 63, "slower": [47, 68], "small": [11, 58], "smaller": 54, "smooth": 20, "smooth_method": 20, "smooth_valu": 20, "so": [0, 15, 24, 30, 34, 37, 38, 40, 41, 47, 48, 50, 52, 53, 54, 55, 57, 58, 63, 65, 68, 71, 72, 73, 74, 75, 76, 84, 92, 96, 97, 100, 103, 104, 105, 107, 110], "softwar": 102, "solut": [40, 50, 107], "some": [18, 30, 37, 38, 47, 48, 53, 55, 57, 58, 62, 77, 81, 99, 105, 109], "someon": 96, "someth": [40, 90, 91, 92, 93, 109], "sometim": [47, 62, 109], "soon": 107, "sort": [32, 88], "sort_by_scor": [0, 21, 23, 32], "sound": 54, "sourc": [0, 1, 7, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 38, 99, 100, 102], "sp_model_kwarg": 27, "spanish": 34, "spars": [30, 98], "spearman": 53, "special": [27, 32, 68], "specif": [20, 32, 44, 46, 49, 60, 68, 83, 87, 98, 108, 110], "specifi": [12, 38, 51, 58, 60, 61, 69, 70, 82, 83, 87, 88, 92, 97, 99, 100, 105, 106, 108], "speed": [0, 60, 63, 68, 84, 92, 97, 101, 103, 108], "speed_threshold": [60, 65, 68, 71, 84, 92, 97, 101, 103, 106, 108], "spice": 96, "split": [20, 34, 45, 104, 108, 110], "split_by_sentence_kiwi": [0, 1, 34], "split_datafram": [0, 32], "split_docu": 40, "split_into_s": 34, "split_summari": 20, "splitter": [35, 36], "squad": 32, "squar": 96, "ss": 73, "stabl": 49, "stage": 89, "standalon": 63, "standard": [0, 53], "start": [0, 32, 37, 38, 91, 110], "start_chunk": [0, 33, 34, 50], "start_end_idx": 34, "start_idx": 7, "start_pars": [0, 33, 44, 50], "start_trial": [0, 33, 110], "starter": [56, 110], "state": [11, 27, 49, 105], "static": 23, "statist": 54, "stem": [53, 98], "stemmer": [20, 98], "step": [13, 26, 34, 44, 45, 48, 57, 84, 107], "still": [105, 107, 109], "storag": 41, "store": [13, 34, 102], "str": [0, 1, 7, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 40, 45], "straight": 107, "strateg": 108, "strategi": [22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 38, 65, 71, 103, 107, 109], "strategy_dict": [28, 29], "strategy_nam": [0, 28, 29], "strategyqa": 96, "stream": 62, "string": [11, 19, 30, 31, 32, 34, 38, 40, 89, 92, 103], "strip": 20, "structur": [11, 15, 30, 49, 103, 107, 110], "studi": [91, 98], "sub": 96, "subclass": 27, "submodul": [1, 9, 33], "subpackag": 33, "subsequ": 20, "subset": 13, "successfulli": [34, 44, 110], "sudo": 109, "suffix": [20, 89], "suffix_prompt": [26, 89], "suggest": [38, 105, 107, 109], "sum": [11, 54], "summar": [53, 68], "summari": [0, 22, 32, 34, 44, 46, 54, 105, 110], "summary_df": [0, 30, 32], "summary_df_to_yaml": [0, 33], "summary_path": 32, "super": 49, "support": [14, 15, 30, 33, 38, 39, 40, 47, 48, 49, 54, 56, 61, 62, 64, 69, 70, 74, 75, 77, 81, 99, 103, 107, 108], "sure": 110, "survei": 107, "swap": 108, "swedish": 34, "synonym": 53, "synthet": [40, 50], "system": [38, 60, 61, 68, 69, 70, 84, 92, 101, 108], "system_prompt": 15, "t": [11, 14, 28, 32, 37, 38, 39, 40, 44, 48, 52, 54, 56, 92, 96, 99, 107, 109], "t5": 27, "t5config": 27, "t5pretrainedmodel": 27, "t5token": 27, "tabl": 44, "table_detect": [41, 45], "table_hybrid_pars": [0, 1, 44, 45], "table_param": 45, "table_parse_modul": 45, "tailor": [68, 100, 108], "take": [27, 58, 107], "taken": 32, "target": [11, 24, 32, 67, 107], "target_dict": [0, 32], "target_kei": 32, "target_modul": [30, 97, 99, 103], "target_module_param": [30, 99], "target_node_lin": 107, "target_token": [24, 67], "tart": [21, 26, 83, 84], "tart_run_model": [26, 27], "task": [27, 32, 53, 60], "team": 41, "techniqu": 108, "tecolot": 49, "tell": [90, 91, 92, 93], "temp_client": 30, "temperatur": [39, 40, 58, 60, 61, 62, 63, 69, 70, 85, 94, 95, 96, 97, 105, 109], "temporari": [11, 108], "temporarili": 108, "tensor_parallel_s": 63, "term": [54, 97], "test": [52, 54, 57, 58, 60, 65, 68, 71, 84, 97, 99, 103, 104, 105], "test_siz": [11, 39], "test_weight_s": [99, 101], "testset": 39, "text": [7, 10, 11, 12, 20, 24, 30, 32, 34, 35, 36, 37, 38, 40, 43, 44, 45, 51, 58, 60, 61, 63, 67, 69, 70, 86, 89], "text_nod": 10, "text_param": 45, "text_parse_modul": 45, "text_splitt": 35, "textnod": [10, 40], "textsplitt": 7, "textur": 96, "tf": 98, "than": [11, 16, 30, 38, 47, 53, 63, 65, 73, 96, 98, 104, 105, 107, 109], "thei": [40, 49, 53, 68, 103, 107, 108], "them": [27, 28, 29, 30, 32, 38, 43, 54, 70, 105], "theoret": [30, 99], "therefor": [27, 40, 45, 54, 55, 92, 97], "thi": [0, 7, 10, 11, 14, 15, 16, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 53, 54, 57, 58, 60, 61, 62, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110], "thing": [103, 110], "think": [38, 103, 105, 107], "third": [30, 54, 55], "those": [49, 99], "thought": 53, "three": [34, 37, 44, 55, 73, 104, 107], "threshold": [0, 60, 68, 71, 73, 84, 92, 97, 101, 103, 108], "threshold cutoff": 76, "threshold_cutoff": [0, 21, 76], "thresholdcutoff": [21, 25], "through": [56, 92, 97], "thu": 54, "tier": 109, "time": [11, 37, 38, 50, 52, 56, 60, 68, 71, 72, 73, 74, 84, 92, 97, 101, 104, 105, 108, 110], "time_rerank": [0, 21, 88], "timeout": 109, "timererank": [21, 26, 88], "tiny2": 58, "tmm": [30, 99, 101], "to_list": [0, 32], "to_parquet": [1, 13, 48, 50], "token": [14, 20, 21, 22, 24, 26, 27, 30, 34, 48, 50, 53, 60, 63, 67, 68, 85, 92], "token_false_id": 26, "token_ids_0": 27, "token_ids_1": 27, "token_limit": 32, "token_threshold": [60, 92], "token_true_id": 26, "tokenization_enc_t5": [21, 26], "tokenize_ko_kiwi": [21, 30], "tokenize_ko_kkma": [21, 30], "tokenize_ko_okt": [21, 30], "tokenize_porter_stemm": [21, 30], "tokenize_spac": [21, 30], "tokenizer_output": 26, "tokentextsplitt": 40, "too": [11, 77, 81, 104, 105], "took": 104, "tool": 56, "top": [23, 26, 63, 65, 84, 97, 101, 104], "top_k": [11, 23, 26, 29, 30, 32, 40, 65, 71, 84, 97, 99, 100, 101, 103, 106, 107], "top_logprob": 62, "top_n": [21, 26], "top_p": 63, "topic": 53, "topn": 54, "torch": 27, "total": 55, "tpm": 81, "trail": [104, 110], "trail_fold": 0, "train": [104, 110], "transform": [26, 58, 63, 84], "translat": 53, "treat": [38, 103], "tree": 68, "tree summar": 70, "tree_summar": [0, 21, 58, 68, 70], "treesummar": [21, 24], "trg_lang": 20, "trial": [0, 51], "trial_dir": [0, 32, 110], "trial_fold": [34, 44, 51, 52, 110], "trial_path": [0, 7, 12, 52], "troubl": [56, 109], "troubleshoot": [56, 57], "true": [0, 10, 11, 14, 15, 16, 23, 26, 31, 32, 40, 41, 45, 47, 48, 50, 52, 54, 57, 62, 72, 76, 109], "truncat": 30, "truncate_by_token": [21, 22], "truth": [11, 20, 38, 46, 53, 54, 60, 105], "try": [57, 102, 107, 109], "tune": 95, "tupl": [0, 7, 12, 18, 19, 26, 30, 31, 32, 99, 100], "turbo": [28, 39, 40, 60, 61, 62, 68, 69, 70, 85, 92, 95, 96, 105, 109], "turkish": 34, "turn": 19, "tutori": [37, 39, 51, 52, 56, 107], "two": [13, 16, 27, 30, 38, 40, 53, 54, 63, 81, 106, 107, 110], "two_hop_increment": [13, 16, 49], "two_hop_quest": [13, 16], "twohopincrementalrespons": [13, 16], "txt": [11, 40, 57], "type": [0, 11, 20, 27, 30, 31, 32, 34, 37, 38, 40, 43, 44, 48, 51, 54, 58, 60, 62, 63, 77, 78, 79, 80, 81, 86, 94, 95, 96, 97, 98, 101, 107, 110], "typic": [49, 91], "tyre": 107, "u": 96, "ultim": 56, "unanswer": [14, 48], "under": [105, 109], "underscor": 68, "understand": [104, 105], "understudi": 53, "unexpect": [38, 110], "unicamp": 83, "uniform": 39, "unigram": [20, 53], "unintend": [47, 103], "union": 0, "uniqu": [30, 38, 68, 108], "unit": 40, "unk": 27, "unk_token": 27, "unknown": 0, "unless": 32, "unstructur": 42, "unstructured_api_kei": 42, "unstructuredmarkdown": 42, "unstructuredpdf": 42, "unstructuredxml": 42, "until": 108, "up": [38, 55, 68, 70, 108, 110], "updat": [13, 50, 58], "update_corpu": [1, 13, 50], "upgrad": [63, 109], "upr": [0, 21, 84, 107], "uprscor": [21, 26], "upsert": [10, 11, 32], "upstage_api_kei": 42, "upstagelayoutanalysi": [42, 45], "url": 51, "us": [0, 7, 10, 11, 12, 13, 14, 15, 16, 20, 22, 24, 25, 26, 27, 28, 29, 30, 32, 37, 38, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 59, 60, 61, 65, 67, 68, 69, 70, 71, 73, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 107, 109], "usag": [30, 68, 85, 102], "use_bf16": [26, 89], "use_fp16": [79, 80], "use_stemm": 20, "user": [0, 38, 40, 51, 52, 57, 65, 66, 89, 92, 95, 101, 104, 106, 107, 110], "usual": 46, "util": [0, 1, 33, 84], "v0": [37, 40, 58, 60, 63, 98], "v1": [0, 14, 15, 16, 26, 32, 58, 77, 81, 83], "v2": [20, 26, 58, 77, 79, 83, 86], "vagu": 47, "valid": [11, 13, 33, 105], "validate_corpus_dataset": [0, 32], "validate_llama_index_prompt": [9, 11], "validate_qa_dataset": [0, 32], "validate_qa_from_corpus_dataset": [0, 32], "validate_strategy_input": [0, 33], "valu": [0, 11, 19, 20, 23, 27, 30, 31, 32, 35, 36, 38, 40, 42, 53, 54, 58, 72, 73, 74, 75, 76, 88, 99, 100, 103, 105, 106, 109], "valuabl": 40, "value_column_nam": 32, "vari": [97, 99, 108], "variabl": [12, 32, 42, 57, 62, 77, 81, 109], "variant": 83, "variat": [38, 97], "variou": [34, 44, 50, 56, 60, 68, 84, 92, 101], "vector": [0, 11, 102, 107], "vector db": 102, "vector_db": 30, "vectordb": [0, 21, 29, 40, 58, 97, 98, 101, 103, 104], "vectordb_ingest": [21, 30], "vectordb_pur": [21, 30], "verbos": [21, 26, 85], "veri": 56, "verifi": 49, "version": [30, 37, 38, 49, 59, 63, 105, 106, 109, 110], "video": 38, "viscond": 96, "visit": 30, "vllm": [0, 21, 60, 92, 109], "vocab_fil": 27, "vocabulari": 27, "voil\u00e0": 107, "vram": 109, "wa": [30, 34, 41, 44, 49, 53, 54, 58, 105, 109], "wai": [29, 34, 44, 47, 52, 103, 105, 107, 109], "wait": [57, 63], "want": [0, 11, 13, 28, 30, 31, 32, 35, 36, 38, 40, 42, 45, 47, 49, 55, 56, 57, 58, 73, 77, 78, 79, 80, 81, 86, 88, 99, 100, 103, 105, 108], "warn": 20, "water": 55, "we": [20, 24, 25, 26, 34, 37, 38, 40, 44, 47, 48, 49, 50, 52, 53, 54, 56, 57, 58, 60, 63, 92, 97, 98, 102, 103, 104, 105, 107, 109, 110], "web": 33, "weight": [20, 30, 53, 97, 99, 100], "weight_rang": [99, 100, 101], "welcom": 107, "well": [34, 40, 44, 48, 53, 54, 56], "were": 52, "what": [34, 38, 44, 49, 54, 56, 58, 89, 90, 91, 92, 93, 96, 104, 108], "when": [0, 11, 20, 24, 25, 26, 27, 28, 30, 37, 38, 41, 49, 55, 57, 58, 60, 62, 63, 71, 73, 81, 88, 91, 92, 96, 102, 103, 104, 108, 109, 110], "where": [56, 68, 101, 104], "whether": [0, 10, 20, 26, 27, 53, 62, 79, 80, 89], "which": [0, 11, 20, 22, 27, 28, 30, 32, 38, 40, 49, 52, 53, 54, 55, 56, 58, 61, 68, 69, 70, 71, 81, 92, 98, 99, 100, 103, 105, 107, 109, 110], "whichev": 54, "while": [27, 40, 47, 57, 108], "whitespac": [30, 32], "who": [49, 110], "whole": [0, 13, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 105, 110], "why": [38, 105, 107], "wikipedia": 49, "wildcard": 44, "window": [92, 109], "window_replac": [0, 21, 93], "window_s": [34, 50], "windowreplac": [21, 28], "wise": 85, "with_debugging_log": 11, "within": [27, 60, 68, 84, 92, 101, 108], "without": [45, 56, 59, 61, 62, 65, 68, 69, 70, 71, 84, 94, 97, 99, 107], "wonder": 105, "word": [15, 20, 46, 53, 98], "work": [40, 99, 103, 109, 110], "workaround": 109, "worker": 0, "would": [29, 54, 104], "write": [26, 37, 57, 85, 89, 96, 99, 103, 105, 107], "written": [35, 36, 42], "wrong": [7, 34, 40, 107], "wsl": 109, "x": [0, 26, 27, 34, 51], "yaml": [0, 50, 51, 53, 56, 58, 105, 106, 107, 108, 109], "yaml_filepath": 0, "yaml_path": [0, 18, 52, 110], "yaml_to_markdown": [0, 33], "ye": 49, "yet": [37, 39, 107], "yml": [0, 103], "you": [0, 7, 10, 11, 12, 13, 14, 23, 24, 25, 26, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 88, 92, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110], "your": [0, 11, 20, 34, 37, 38, 41, 43, 44, 51, 52, 56, 57, 62, 63, 71, 77, 81, 90, 91, 92, 93, 94, 95, 96, 100, 103, 105, 106, 107, 109], "your_api_bas": 58, "your_api_kei": [58, 109], "your_cohere_api_kei": 77, "your_dir_path": 40, "your_jina_api_kei": 81, "your_result_column": 51, "yourself": [30, 99], "yyyi": 73, "z": [30, 99, 101], "zero": [27, 89, 94]}, "titles": ["autorag package", "autorag.data package", "autorag.data.beta package", "autorag.data.beta.filter package", "autorag.data.beta.generation_gt package", "autorag.data.beta.query package", "autorag.data.beta.schema package", "autorag.data.chunk package", "autorag.data.corpus package", "autorag.data.legacy package", "autorag.data.legacy.corpus package", "autorag.data.legacy.qacreation package", "autorag.data.parse package", "autorag.data.qa package", "autorag.data.qa.filter package", "autorag.data.qa.generation_gt package", "autorag.data.qa.query package", "autorag.data.qacreation package", "autorag.data.utils package", "autorag.evaluation package", "autorag.evaluation.metric package", "autorag.nodes package", "autorag.nodes.generator package", "autorag.nodes.passageaugmenter package", "autorag.nodes.passagecompressor package", "autorag.nodes.passagefilter package", "autorag.nodes.passagereranker package", "autorag.nodes.passagereranker.tart package", "autorag.nodes.promptmaker package", "autorag.nodes.queryexpansion package", "autorag.nodes.retrieval package", "autorag.schema package", "autorag.utils package", "autorag", "Chunk", "Langchain Chunk", "Llama Index Chunk", "Data Creation", "Dataset Format", "RAGAS evaluation data generation", "Start creating your own evaluation data", "Clova", "Langchain Parse", "Llama Parse", "Parse", "Table Hybrid Parse", "Answer Generation", "Filtering", "QA creation", "Query Generation", "Evaluation data creation tutorial", "API endpoint", "Web Interface", "Generation Metrics", "Retrieval Metrics", "Retrieval Token Metrics", "AutoRAG documentation", "Installation and Setup", "Configure LLM &amp; Embedding models", "Migration Guide", "8. Generator", "llama_index LLM", "OpenAI LLM", "vllm", "Available List", "3. Passage Augmenter", "Prev Next Augmenter", "Long LLM Lingua", "6. Passage_Compressor", "Refine", "Tree Summarize", "5. Passage Filter", "Percentile Cutoff", "Recency Filter", "Similarity Percentile Cutoff", "Similarity Threshold Cutoff", "Threshold Cutoff", "cohere_reranker", "Colbert Reranker", "Flag Embedding LLM Reranker", "Flag Embedding Reranker", "jina_reranker", "Ko-reranker", "MonoT5", "4. Passage_Reranker", "RankGPT", "Sentence Transformer Reranker", "TART", "Time Reranker", "UPR", "F-String", "Long Context Reorder", "7. Prompt Maker", "Window Replacement", "HyDE", "Multi Query Expansion", "Query Decompose", "<strong>1. Query Expansion</strong>", "BM25", "Hybrid - cc", "Hybrid - rrf", "2. Retrieval", "Vectordb", "Make a custom config YAML file", "Folder Structure", "How optimization works", "Strategy", "Road to Modular RAG", "Structure", "TroubleShooting", "Tutorial"], "titleterms": {"": 54, "0": [54, 55], "1": [34, 35, 36, 41, 42, 44, 47, 48, 49, 50, 52, 53, 54, 55, 62, 97, 109, 110], "2": [34, 35, 36, 41, 42, 44, 48, 49, 50, 52, 53, 54, 55, 62, 101, 109, 110], "3": [34, 35, 36, 42, 44, 48, 49, 50, 52, 53, 54, 55, 59, 62, 65, 109, 110], "4": [34, 36, 42, 44, 48, 50, 53, 54, 84, 109], "5": [36, 42, 48, 53, 54, 71, 109], "6": [42, 48, 53, 54, 68, 109], "7": [42, 92], "8": 60, "For": 98, "If": 40, "The": [41, 109], "about": 107, "accur": 62, "add": [34, 58], "addit": [99, 100], "all": [42, 105], "also": 110, "an": 110, "ani": 98, "answer": [46, 48], "api": [42, 51, 57, 109, 110], "appli": [54, 55], "augment": [65, 66], "auto": [40, 62], "autorag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 52, 54, 55, 56, 107, 110], "autotoken": 98, "avail": [34, 35, 36, 42, 45, 64], "averag": 54, "backend": 102, "base": [4, 7, 11, 12, 15, 17, 22, 23, 24, 25, 26, 28, 29, 30, 31, 47], "basic": [37, 46, 54, 55], "befor": [77, 81], "benefit": [65, 68, 71, 84, 97], "bert": 53, "best": 105, "beta": [2, 3, 4, 5, 6], "between": 71, "bleu": 53, "bm25": [30, 98], "both": 40, "build": [57, 109], "can": [56, 105], "cc": 99, "charact": 35, "check": [34, 44], "chunk": [7, 34, 35, 36, 50], "chunker": [0, 34], "cli": [0, 52, 110], "clova": [12, 41], "coher": [26, 53], "cohere_rerank": 77, "colab": 110, "colbert": [26, 78], "column": [34, 44], "come": 41, "command": 110, "complet": 49, "concept": [37, 49, 108], "concis": 46, "config": [60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 110], "configur": [58, 106], "consist": 53, "contact": 107, "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 38, 48], "context": 91, "corpu": [8, 10, 38, 39, 40, 50], "could": 109, "creat": [40, 110], "creation": [37, 48, 50, 59], "csv": [42, 104], "cumul": 54, "custom": [39, 40, 103, 110], "cutoff": [72, 74, 75, 76], "dashboard": [0, 110], "data": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 37, 39, 40, 48, 50, 59, 104, 109], "data_path_glob": 44, "dataset": [38, 110], "decompos": 96, "default": 96, "definit": [53, 54, 55, 60, 65, 68, 71, 84, 92, 97, 101], "deploi": [0, 110], "detect": [41, 45], "didn": 110, "differ": [71, 109], "discount": 54, "do": 105, "doc_id": 38, "document": [40, 56], "don": 47, "dontknow": [3, 14], "dure": 110, "earli": 107, "ecosystem": 56, "embed": [58, 79, 80], "endpoint": 51, "environ": 103, "error": [109, 110], "eval": 53, "evalu": [0, 19, 20, 39, 40, 50, 105, 110], "exampl": [34, 35, 36, 41, 42, 43, 45, 49, 52, 54, 55, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 106, 108], "exist": 40, "expans": [95, 97], "explan": [99, 100, 108], "extract": [43, 110], "extract_evid": [2, 13], "f": 90, "f1": [54, 55], "face": 109, "factoid": 49, "featur": [34, 40], "file": [34, 42, 44, 60, 65, 68, 71, 84, 92, 97, 101, 103, 110], "filter": [3, 14, 47, 48, 71, 73], "find": 110, "first": 110, "flag": [79, 80], "flag_embed": 26, "flag_embedding_llm": 26, "fluenci": 53, "folder": [34, 44, 52, 104, 110], "format": [38, 110], "from": [39, 40, 41, 57, 109], "fstring": 28, "g": 53, "gain": 54, "gener": [19, 20, 22, 39, 46, 48, 49, 53, 60], "generation_gt": [4, 15, 38, 40], "get": [48, 56], "gpu": [63, 109], "gradio": 52, "gt": 48, "guid": 59, "have": [40, 42], "help": 56, "hop": 49, "how": [35, 36, 42, 53, 56, 105], "html": [41, 42], "huggingfac": 98, "hybrid": [45, 99, 100], "hybrid_cc": 30, "hybrid_rrf": 30, "hyde": [29, 94], "i": [34, 35, 36, 40, 42, 65, 68, 71, 84, 97, 103, 105, 107, 109], "import": 109, "increment": 49, "index": [36, 40, 58, 104], "inform": 41, "instal": [57, 109], "instanc": [34, 44], "instead": 52, "interfac": [52, 110], "jina": 26, "jina_rerank": 81, "json": [42, 104], "kei": 57, "know": [47, 107], "ko": 82, "ko_kiwi": 98, "ko_kkma": 98, "ko_okt": 98, "korean": [57, 98], "korerank": 26, "langchain": [8, 10, 35, 42], "langchain_chunk": 7, "langchain_pars": 12, "languag": 43, "legaci": [9, 10, 11], "length": 109, "line": [103, 104, 107, 108, 110], "lingua": 67, "list": 64, "llama": [36, 43], "llama_gen_queri": [5, 16], "llama_index": [8, 10, 11, 17, 61], "llama_index_chunk": 7, "llama_index_gen_gt": [4, 15], "llama_index_llm": 22, "llamaindex": [46, 109], "llamapars": 12, "llm": [47, 58, 61, 62, 67, 79, 109], "log": 62, "long": [38, 67, 91], "long_context_reord": 28, "longllmlingua": 24, "make": [40, 103], "maker": 92, "map": [50, 54], "markdown": 42, "mean": [54, 106], "merger": 107, "metadata": 38, "meteor": 53, "method": [35, 36, 42], "metric": [20, 53, 54, 55], "metricinput": 31, "migrat": 59, "model": [39, 58, 83], "modeling_enc_t5": 27, "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 44, 45, 58, 60, 61, 62, 63, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 108], "modular": 107, "monot5": [26, 83], "more": [58, 105, 107], "mrr": 54, "multi": [63, 95], "multi_query_expans": 29, "multipl": 40, "must": 42, "name": [34, 83], "ndcg": 54, "need": [42, 105], "next": [66, 105, 110], "node": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 60, 65, 68, 71, 84, 92, 97, 100, 101, 103, 104, 105, 107, 108, 110], "node_lin": 0, "normal": [54, 106], "note": 110, "occur": 110, "ollama": 109, "onli": 40, "openai": [46, 57, 62, 109], "openai_gen_gt": [4, 15], "openai_gen_queri": [5, 16], "openai_llm": [22, 62], "optim": [50, 105, 109, 110], "origin": 109, "output": [34, 44, 62], "overview": [34, 40, 44, 48, 49, 50, 60, 68, 84, 92, 97, 101, 106], "own": 40, "packag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "paramet": [42, 44, 45, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 106], "pars": [12, 42, 43, 44, 45, 50], "parser": [0, 41, 44], "pass": 105, "pass_compressor": [24, 68], "pass_passage_augment": [23, 65], "pass_passage_filt": [25, 71], "pass_query_expans": [29, 97], "pass_rerank": [26, 84], "passag": [40, 65, 71], "passage_compressor": 68, "passage_rerank": 84, "passageaugment": 23, "passagecompressor": 24, "passagefilt": 25, "passagererank": [26, 27], "path": 52, "pdf": 42, "percentil": [72, 74], "percentile_cutoff": 25, "pipelin": [34, 44, 110], "point": 41, "polici": 107, "porter_stemm": 98, "pre_retrieve_node_lin": 104, "precis": [54, 55], "prepar": 110, "preprocess": 32, "prev": 66, "prev_next_augment": 23, "prob": 62, "project": [34, 44, 52, 104, 110], "prompt": [3, 4, 5, 14, 15, 16, 40, 62, 92, 96], "promptmak": 28, "purpos": [60, 68, 101], "python": 110, "qa": [13, 14, 15, 16, 38, 39, 40, 48, 50], "qacreat": [11, 17], "qid": 38, "queri": [5, 16, 38, 40, 48, 49, 95, 96, 97], "query_decompos": 29, "query_expans": 104, "queryexpans": 29, "question": [39, 47, 48, 49], "rag": [107, 110], "raga": [11, 17, 39], "rank": [54, 106], "rankgpt": [26, 85], "raw": 40, "recal": [54, 55], "recenc": [25, 73], "reciproc": 54, "refin": [24, 69], "relat": 109, "relev": 53, "reorder": 91, "replac": 93, "requesttimeout": 109, "rerank": [71, 78, 79, 80, 82, 86, 88], "resourc": 104, "restart": 110, "result": [34, 44, 105, 110], "retriev": [19, 20, 30, 48, 54, 55, 101], "retrieval_cont": [19, 20], "retrieval_gt": [38, 54], "retrieve_node_lin": 104, "road": 107, "roug": 53, "row": 109, "rrf": 100, "rule": 47, "run": [7, 12, 22, 23, 24, 25, 26, 28, 29, 30, 34, 44, 51, 52, 109, 110], "runner": 52, "sampl": [2, 13, 38, 48, 104], "save": [40, 48], "schema": [2, 6, 13, 31], "score": [53, 54], "see": 110, "sem": 53, "sem_scor": 60, "semant": 36, "sentenc": [34, 35, 36, 86], "sentence_transform": 26, "separ": 41, "server": [51, 110], "set": [34, 39, 44], "setup": 57, "short": 38, "similar": [74, 75], "similarity_percentile_cutoff": 25, "similarity_threshold_cutoff": 25, "simpl": [11, 17, 36], "sourc": 57, "space": 98, "specif": 53, "specifi": [34, 44, 52, 103, 110], "splitter": 34, "start": [34, 40, 44, 56], "step": 110, "stori": 38, "strategi": [0, 60, 68, 84, 92, 97, 101, 105, 106, 108], "streamlit": 52, "string": 90, "structur": [104, 108], "submodul": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "subpackag": [0, 1, 2, 9, 13, 19, 21, 26], "summar": [70, 108], "summari": 104, "support": [0, 34, 43, 44, 58, 60, 68, 83, 84, 92, 97, 101, 102], "swap": 105, "system": 110, "t": [47, 105, 110], "tabl": [41, 43, 45], "table_hybrid_pars": 12, "tart": [27, 87], "test": 110, "text": 41, "threshold": [75, 76], "threshold_cutoff": 25, "time": 88, "time_rerank": 26, "token": [35, 36, 55, 62, 98], "tokenization_enc_t5": 27, "transform": 86, "tree": 70, "tree_summar": 24, "trial": [52, 104, 110], "trial_path": 110, "troubl": [57, 98], "troubleshoot": 109, "truncat": 62, "tupl": 103, "tutori": [50, 110], "two": 49, "type": [39, 42, 49], "u": 107, "unanswer": 47, "understand": 54, "unicodedecodeerror": 109, "upr": [26, 89], "us": [34, 35, 36, 39, 40, 42, 52, 53, 58, 62, 63, 98, 103, 105, 106, 110], "usag": [49, 77, 81], "util": [18, 19, 20, 21, 32], "v0": 59, "valid": [0, 110], "variabl": 103, "vectordb": [30, 102], "version": 107, "vllm": [22, 58, 63], "want": [34, 44, 52, 107, 110], "web": [0, 52, 110], "what": [40, 65, 68, 71, 84, 97, 103, 107, 110], "wheel": 109, "when": 40, "while": 109, "why": [52, 56, 62, 63, 110], "window": [36, 93], "window_replac": 28, "work": 105, "write": 110, "xml": 42, "yaml": [34, 35, 36, 41, 42, 43, 44, 45, 52, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 110], "you": 40, "your": [40, 58, 110]}})
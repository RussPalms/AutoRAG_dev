Search.setIndex({"alltitles": {"0. Retrieval token metric in AutoRAG": [[48, "retrieval-token-metric-in-autorag"]], "0. Understanding AutoRAG\u2019s retrieval_gt": [[47, "understanding-autorag-s-retrieval-gt"]], "1. Add File Name": [[27, "add-file-name"]], "1. Auto-truncate prompt": [[55, "auto-truncate-prompt"]], "1. Bleu": [[46, "bleu"]], "1. Factoid": [[39, "factoid"]], "1. HTML Parser": [[31, "html-parser"]], "1. Installation": [[102, "installation"]], "1. PDF": [[32, "pdf"]], "1. Parse": [[40, "parse"]], "1. Precision": [[47, "precision"]], "1. Query Expansion": [[90, null]], "1. Run as a CLI": [[103, "run-as-a-cli"]], "1. Sample retrieval gt": [[38, "sample-retrieval-gt"]], "1. Set chunker instance": [[27, "set-chunker-instance"]], "1. Set parser instance": [[34, "set-parser-instance"]], "1. Token": [[28, "token"], [29, "token"]], "1. Token Precision": [[48, "token-precision"]], "1. Unanswerable question filtering": [[37, "unanswerable-question-filtering"]], "1. Use YAML path": [[45, "use-yaml-path"]], "2. Accurate token output": [[55, "accurate-token-output"]], "2. CSV": [[32, "csv"]], "2. Character": [[28, "character"]], "2. Concept Completion": [[39, "concept-completion"]], "2. Get retrieval gt contents to generate questions": [[38, "get-retrieval-gt-contents-to-generate-questions"]], "2. Optimization": [[102, "optimization"]], "2. QA Creation": [[40, "qa-creation"]], "2. Recall": [[47, "recall"]], "2. Retrieval": [[94, null]], "2. Rouge": [[46, "rouge"]], "2. Run as an API server": [[103, "run-as-an-api-server"]], "2. Sentence": [[29, "sentence"]], "2. Sentence Splitter": [[27, "sentence-splitter"]], "2. Set YAML file": [[27, "set-yaml-file"], [34, "set-yaml-file"]], "2. The text information comes separately from the table information.": [[31, "the-text-information-comes-separately-from-the-table-information"]], "2. Token Recall": [[48, "token-recall"]], "2. Use a trial path": [[45, "use-a-trial-path"]], "3. Accurate log prob output": [[55, "accurate-log-prob-output"]], "3. Chunking Optimization": [[40, "chunking-optimization"]], "3. F1 Score": [[47, "f1-score"]], "3. Generate queries": [[38, "generate-queries"]], "3. JSON": [[32, "json"]], "3. LlamaIndex": [[102, "llamaindex"]], "3. METEOR": [[46, "meteor"]], "3. Passage Augmenter": [[58, null]], "3. Run as a Web Interface": [[103, "run-as-a-web-interface"]], "3. Sentence": [[28, "sentence"]], "3. Start chunking": [[27, "start-chunking"]], "3. Start parsing": [[34, "start-parsing"]], "3. Token F1": [[48, "token-f1"]], "3. Two-hop Incremental": [[39, "two-hop-incremental"]], "3. Use Runner": [[45, "use-runner"]], "3. Window": [[29, "window"]], "4. Check the result": [[27, "check-the-result"], [34, "check-the-result"]], "4. GPU-related Error": [[102, "gpu-related-error"]], "4. Generate answers": [[38, "generate-answers"]], "4. MRR (Mean Reciprocal Rank)": [[47, "mrr-mean-reciprocal-rank"]], "4. Markdown": [[32, "markdown"]], "4. Passage_Reranker": [[77, null]], "4. QA - Corpus mapping": [[40, "qa-corpus-mapping"]], "4. Sem Score": [[46, "sem-score"]], "4. Semantic": [[29, "semantic"]], "5-1. Coherence": [[46, "coherence"]], "5-2. Consistency": [[46, "consistency"]], "5-3. Fluency": [[46, "fluency"]], "5-4. Relevance": [[46, "relevance"]], "5. Filtering questions": [[38, "filtering-questions"]], "5. G-Eval": [[46, "g-eval"]], "5. HTML": [[32, "html"]], "5. MAP (Mean Average Precision)": [[47, "map-mean-average-precision"]], "5. Passage Filter": [[64, null]], "5. Simple": [[29, "simple"]], "5. UnicodeDecodeError": [[102, "unicodedecodeerror"]], "6. Bert Score": [[46, "bert-score"]], "6. NDCG (Normalized Discounted Cumulative Gain)": [[47, "ndcg-normalized-discounted-cumulative-gain"]], "6. Ollama RequestTimeOut Error": [[102, "ollama-requesttimeout-error"]], "6. Passage_Compressor": [[61, null]], "6. Save the QA data": [[38, "save-the-qa-data"]], "6. XML": [[32, "xml"]], "7. All files": [[32, "all-files"]], "7. Prompt Maker": [[85, null]], "8. Generator": [[53, null]], "API Endpoint": [[44, "id1"]], "API endpoint": [[44, null]], "Add more LLM models": [[51, "add-more-llm-models"]], "Add your embedding models": [[51, "add-your-embedding-models"]], "Answer Generation": [[36, null]], "Any trouble to use Korean tokenizer?": [[91, null]], "Auto-save feature": [[43, null]], "AutoRAG documentation": [[49, null]], "Available Chunk Method": [[28, "available-chunk-method"], [29, "available-chunk-method"]], "Available List": [[57, null]], "Available Parse Method by File Type": [[32, "available-parse-method-by-file-type"]], "Available Sentence Splitter": [[27, "available-sentence-splitter"]], "BM25": [[91, null]], "Backend Support": [[95, "backend-support"]], "Basic Concepts": [[30, "basic-concepts"]], "Basic Generation": [[36, "basic-generation"]], "Before Usage": [[70, "before-usage"], [74, "before-usage"]], "Build from source": [[50, "build-from-source"]], "Chunk": [[27, null]], "Clova": [[31, null]], "Colab Tutorial": [[103, null]], "Colbert Reranker": [[71, null]], "Concise Generation": [[36, "concise-generation"]], "Configuration": [[99, "configuration"]], "Configure LLM & Embedding models": [[51, null]], "Configure the Embedding model": [[51, "configure-the-embedding-model"]], "Configure the LLM model": [[51, "configure-the-llm-model"]], "Contact": [[100, null]], "Contact us": [[100, "contact-us"]], "Corpus Dataset": [[41, "corpus-dataset"]], "Could not build wheels": [[102, "could-not-build-wheels"]], "Data Creation": [[30, null], [52, "data-creation"]], "Dataset Format": [[41, null]], "Default Prompt": [[89, "default-prompt"]], "Deploy your optimal RAG pipeline": [[103, "deploy-your-optimal-rag-pipeline"]], "Do I need to use all nodes?": [[98, null]], "Don\u2019t know Filter": [[37, "don-t-know-filter"]], "Early version of AutoRAG": [[100, "early-version-of-autorag"]], "Error while running LLM": [[102, "error-while-running-llm"]], "Evaluate Nodes that can\u2019t evaluate": [[98, "evaluate-nodes-that-can-t-evaluate"]], "Evaluation data creation tutorial": [[40, null]], "Example": [[39, "example"]], "Example Configuration Using Normalize Mean Strategy": [[99, "example-configuration-using-normalize-mean-strategy"]], "Example Configuration Using mean Strategy": [[99, "example-configuration-using-mean-strategy"]], "Example Configuration Using rank Strategy": [[99, "example-configuration-using-rank-strategy"]], "Example Node Lines": [[101, "example-node-lines"]], "Example YAML": [[27, "example-yaml"], [27, "id1"], [28, "example-yaml"], [29, "example-yaml"], [31, "example-yaml"], [32, "example-yaml"], [32, "id1"], [32, "id2"], [32, "id3"], [32, "id4"], [32, "id5"], [32, "id6"], [33, "example-yaml"], [35, "example-yaml"]], "Example config.yaml": [[54, "example-config-yaml"], [55, "example-config-yaml"], [56, "example-config-yaml"], [59, "example-config-yaml"], [60, "example-config-yaml"], [62, "example-config-yaml"], [63, "example-config-yaml"], [65, "example-config-yaml"], [66, "example-config-yaml"], [67, "example-config-yaml"], [68, "example-config-yaml"], [69, "example-config-yaml"], [70, "example-config-yaml"], [71, "example-config-yaml"], [72, "example-config-yaml"], [73, "example-config-yaml"], [74, "example-config-yaml"], [75, "example-config-yaml"], [76, "example-config-yaml"], [78, "example-config-yaml"], [79, "example-config-yaml"], [80, "example-config-yaml"], [81, "example-config-yaml"], [82, "example-config-yaml"], [83, "example-config-yaml"], [84, "example-config-yaml"], [86, "example-config-yaml"], [87, "example-config-yaml"], [88, "example-config-yaml"], [89, "example-config-yaml"], [91, "example-config-yaml"], [92, "example-config-yaml"], [93, "example-config-yaml"], [95, "example-config-yaml"]], "Example config.yaml file": [[53, "example-config-yaml-file"], [58, "example-config-yaml-file"], [61, "example-config-yaml-file"], [64, "example-config-yaml-file"], [77, "example-config-yaml-file"], [85, "example-config-yaml-file"], [90, "example-config-yaml-file"], [94, "example-config-yaml-file"]], "Explanation of concepts": [[101, "explanation-of-concepts"]], "Extract pipeline and evaluate test dataset": [[103, "extract-pipeline-and-evaluate-test-dataset"]], "F-String": [[83, null]], "Facing Import Error": [[102, "facing-import-error"]], "Facing OPENAI API error": [[102, "facing-openai-api-error"]], "Factoid Example": [[39, "factoid-example"]], "Features": [[27, "features"]], "Filtering": [[37, null]], "Find Optimal RAG Pipeline": [[103, "find-optimal-rag-pipeline"]], "Flag Embedding LLM Reranker": [[72, null]], "Flag Embedding Reranker": [[73, null]], "Folder Structure": [[97, null]], "Generate QA set from Corpus data using RAGAS": [[42, "generate-qa-set-from-corpus-data-using-ragas"]], "Generation Metrics": [[46, null]], "How optimization works": [[98, null]], "How to Use": [[28, "how-to-use"], [29, "how-to-use"], [32, "how-to-use"]], "Huggingface AutoTokenizer": [[91, "huggingface-autotokenizer"]], "HyDE": [[87, null]], "Hybrid - cc": [[92, null]], "Hybrid - rrf": [[93, null]], "If you have both query and generation_gt:": [[43, "if-you-have-both-query-and-generation-gt"]], "If you only have query data:": [[43, "if-you-only-have-query-data"]], "Index": [[43, "index"], [51, "index"]], "Installation and Setup": [[50, null]], "Installation for Korean \ud83c\uddf0\ud83c\uddf7": [[50, "installation-for-korean"]], "Ko-reranker": [[75, null]], "LLM-based Don\u2019t know Filter": [[37, "llm-based-don-t-know-filter"]], "Langchain Chunk": [[28, null]], "Langchain Parse": [[32, null]], "Language Support": [[33, "language-support"]], "Llama Index Chunk": [[29, null]], "Llama Parse": [[33, null]], "LlamaIndex": [[36, "llamaindex"], [36, "id2"]], "Long Context Reorder": [[84, null]], "Long LLM Lingua": [[60, null]], "Long story short": [[41, null], [41, null], [41, null], [41, null]], "Make Node Line": [[96, "make-node-line"]], "Make YAML file": [[96, "make-yaml-file"]], "Make a custom config YAML file": [[96, null]], "Make corpus data from raw documents": [[43, "make-corpus-data-from-raw-documents"]], "Make qa data from corpus data": [[43, "make-qa-data-from-corpus-data"]], "Merger Node": [[100, "merger-node"]], "Migration Guide": [[52, null]], "Module Parameters": [[54, "module-parameters"], [55, "module-parameters"], [56, "module-parameters"], [59, "module-parameters"], [60, "module-parameters"], [62, "module-parameters"], [63, "module-parameters"], [65, "module-parameters"], [66, "module-parameters"], [67, "module-parameters"], [68, "module-parameters"], [69, "module-parameters"], [70, "module-parameters"], [71, "module-parameters"], [72, "module-parameters"], [73, "module-parameters"], [74, "module-parameters"], [75, "module-parameters"], [76, "module-parameters"], [78, "module-parameters"], [79, "module-parameters"], [80, "module-parameters"], [81, "module-parameters"], [82, "module-parameters"], [83, "module-parameters"], [84, "module-parameters"], [86, "module-parameters"], [87, "module-parameters"], [88, "module-parameters"], [89, "module-parameters"], [91, "module-parameters"], [92, "module-parameters"], [93, "module-parameters"], [95, "module-parameters"]], "Module contents": [[0, "module-autorag"], [1, "module-autorag.data"], [2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-autorag.data.chunk"], [8, "module-contents"], [9, "module-contents"], [10, "module-contents"], [11, "module-autorag.data.utils"], [12, "module-autorag.evaluation"], [13, "module-autorag.evaluation.metric"], [14, "module-autorag.nodes"], [15, "module-autorag.nodes.generator"], [16, "module-autorag.nodes.passageaugmenter"], [17, "module-autorag.nodes.passagecompressor"], [18, "module-autorag.nodes.passagefilter"], [19, "module-autorag.nodes.passagereranker"], [20, "module-autorag.nodes.passagereranker.tart"], [21, "module-autorag.nodes.promptmaker"], [22, "module-autorag.nodes.queryexpansion"], [23, "module-autorag.nodes.retrieval"], [24, "module-autorag.schema"], [25, "module-autorag.utils"]], "Modules that use Embedding model": [[51, "modules-that-use-embedding-model"]], "Modules that use LLM model": [[51, "modules-that-use-llm-model"]], "MonoT5": [[76, null]], "More optimization strategies": [[98, "more-optimization-strategies"]], "Multi Query Expansion": [[88, null]], "Next Step": [[103, null]], "Node & Module": [[101, "node-module"]], "Node Line": [[101, "node-line"]], "Node Parameters": [[53, "node-parameters"], [58, "node-parameters"], [61, "node-parameters"], [64, "node-parameters"], [77, "node-parameters"], [85, "node-parameters"], [90, "node-parameters"], [93, "node-parameters"], [94, "node-parameters"]], "Node line for Modular RAG": [[100, "node-line-for-modular-rag"]], "Note: Dataset Format": [[103, null]], "OpenAI": [[36, "openai"], [36, "id1"]], "OpenAI LLM": [[55, null]], "Output Columns": [[27, "output-columns"], [34, "output-columns"]], "Overview": [[27, "overview"], [34, "overview"], [38, "overview"], [39, "overview"], [40, "overview"], [43, "overview"], [53, "overview"], [94, "overview"], [99, "overview"]], "Overview:": [[61, "overview"], [77, "overview"], [85, "overview"], [90, "overview"]], "Parameters": [[35, "parameters"]], "Parse": [[34, null]], "Pass the best result to the next node": [[98, "pass-the-best-result-to-the-next-node"]], "Percentile Cutoff": [[65, null]], "Point": [[31, "point"]], "Policy Node": [[100, "policy-node"]], "Prepare Evaluation Dataset": [[103, "prepare-evaluation-dataset"]], "Prev Next Augmenter": [[59, null]], "Project": [[97, "project"]], "Purpose": [[53, null], [61, null], [94, null]], "QA Dataset": [[41, "qa-dataset"]], "QA creation": [[38, null]], "Query Decompose": [[89, null]], "Query Generation": [[39, null]], "Question types": [[39, "question-types"]], "RAGAS evaluation data generation": [[42, null]], "RAGAS question types": [[42, "ragas-question-types"]], "RankGPT": [[78, null]], "Recency Filter": [[66, null]], "Refine": [[62, null]], "Retrieval Metrics": [[47, null]], "Retrieval Token Metrics": [[48, null]], "Road to Modular RAG": [[100, null]], "Rule-based Don\u2019t know Filter": [[37, "rule-based-don-t-know-filter"]], "Run AutoRAG optimization": [[103, "run-autorag-optimization"]], "Run Chunk Pipeline": [[27, "run-chunk-pipeline"]], "Run Dashboard to see your trial result!": [[103, "run-dashboard-to-see-your-trial-result"]], "Run Parse Pipeline": [[34, "run-parse-pipeline"]], "Run with AutoRAG Runner": [[45, "run-with-autorag-runner"]], "Run with CLI": [[45, "run-with-cli"]], "Running API server": [[44, "running-api-server"]], "Running the Web Interface": [[45, "running-the-web-interface"]], "Sample Structure Index": [[97, "sample-structure-index"]], "Samples": [[41, "samples"]], "Sentence Transformer Reranker": [[79, null]], "Setup OPENAI API KEY": [[50, "setup-openai-api-key"]], "Similarity Percentile Cutoff": [[67, null]], "Similarity Threshold Cutoff": [[68, null]], "Specify modules": [[96, "specify-modules"]], "Specify nodes": [[96, "specify-nodes"]], "Start creating your own evaluation data": [[43, null]], "Strategy": [[85, "strategy"], [90, "strategy"], [99, null], [101, "strategy"]], "Strategy Parameter": [[99, "strategy-parameter"]], "Strategy Parameters": [[53, "strategy-parameters"], [61, "strategy-parameters"], [77, "strategy-parameters"], [94, "strategy-parameters"]], "Strategy Parameters:": [[85, "strategy-parameters"], [90, "strategy-parameters"]], "Structure": [[101, null]], "Submodules": [[0, "submodules"], [2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"], [12, "submodules"], [13, "submodules"], [15, "submodules"], [16, "submodules"], [17, "submodules"], [18, "submodules"], [19, "submodules"], [20, "submodules"], [21, "submodules"], [22, "submodules"], [23, "submodules"], [24, "submodules"], [25, "submodules"]], "Subpackages": [[0, "subpackages"], [1, "subpackages"], [2, "subpackages"], [12, "subpackages"], [14, "subpackages"], [19, "subpackages"]], "Summarize": [[101, null], [101, null], [101, null]], "Supported Chunk Modules": [[27, "supported-chunk-modules"]], "Supported Model Names": [[76, "supported-model-names"]], "Supported Modules": [[53, "supported-modules"], [61, "supported-modules"], [77, "supported-modules"], [85, "supported-modules"], [90, "supported-modules"], [94, "supported-modules"]], "Supported Parse Modules": [[34, "supported-parse-modules"]], "Supporting Embedding models": [[51, "supporting-embedding-models"]], "Supporting LLM models": [[51, "supporting-llm-models"]], "Swapping modules in Node": [[98, "swapping-modules-in-node"]], "TART": [[80, null]], "Table Detection": [[31, "table-detection"], [35, "table-detection"]], "Table Extraction": [[33, "table-extraction"]], "Table Hybrid Parse": [[35, null]], "Table Parse Available Modules": [[35, "table-parse-available-modules"]], "The length or row is different from the original data": [[102, "the-length-or-row-is-different-from-the-original-data"]], "Threshold Cutoff": [[69, null]], "Time Reranker": [[81, null]], "Tree Summarize": [[63, null]], "Trouble with installation?": [[50, null]], "TroubleShooting": [[102, null]], "Tutorial": [[103, null]], "UPR": [[82, null]], "Usage": [[39, "usage"], [39, "id1"], [39, "id2"]], "Use custom models": [[42, "use-custom-models"]], "Use custom prompt": [[43, "use-custom-prompt"]], "Use environment variable in the YAML file": [[96, "use-environment-variable-in-the-yaml-file"]], "Use in Multi-GPU": [[56, "use-in-multi-gpu"]], "Use multiple prompts": [[43, "use-multiple-prompts"]], "Use vllm": [[51, "use-vllm"]], "Using Langchain Chunk Method that is not in the Available Chunk Method": [[28, "using-langchain-chunk-method-that-is-not-in-the-available-chunk-method"]], "Using Llama Index Chunk Method that is not in the Available Chunk Method": [[29, "using-llama-index-chunk-method-that-is-not-in-the-available-chunk-method"]], "Using Parse Method that is not in the Available Parse Method": [[32, "using-parse-method-that-is-not-in-the-available-parse-method"]], "Using sentence splitter that is not in the Available Sentence Splitter": [[27, "using-sentence-splitter-that-is-not-in-the-available-sentence-splitter"]], "Validate your system": [[103, "validate-your-system"]], "Vectordb": [[95, null]], "Want to know more about Modular RAG?": [[100, null]], "Want to specify project folder?": [[27, null], [34, null], [45, null], [103, null], [103, null], [103, null]], "Web Interface": [[45, null]], "Web Interface example": [[45, "web-interface-example"]], "What if Trial_Path didn\u2019t also create a First Node Line?": [[103, null]], "What is Node Line?": [[100, null]], "What is difference between Passage Filter and Passage Reranker?": [[64, null]], "What is pass_compressor?": [[61, null]], "What is pass_passage_augmenter?": [[58, null]], "What is pass_passage_filter?": [[64, null]], "What is pass_query_expansion?": [[90, null]], "What is pass_reranker?": [[77, null]], "What is passage?": [[43, null]], "What is tuple in the yaml file?": [[96, null]], "When you have existing qa data": [[43, "when-you-have-existing-qa-data"]], "Why use Gradio instead of Streamlit?": [[45, null]], "Why use openai_llm module?": [[55, "why-use-openai-llm-module"]], "Why use python command?": [[103, null]], "Why use vllm module?": [[56, "why-use-vllm-module"]], "Window Replacement": [[86, null]], "Write custom config yaml file": [[103, null]], "[Node Line] summary.csv": [[97, "node-line-summary-csv"]], "[Node] summary.csv": [[97, "node-summary-csv"]], "[trial] summary.csv": [[97, "trial-summary-csv"]], "autorag": [[26, null]], "autorag package": [[0, null]], "autorag.chunker module": [[0, "module-autorag.chunker"]], "autorag.cli module": [[0, "module-autorag.cli"]], "autorag.dashboard module": [[0, "module-autorag.dashboard"]], "autorag.data package": [[1, null]], "autorag.data.beta package": [[2, null]], "autorag.data.beta.extract_evidence module": [[2, "autorag-data-beta-extract-evidence-module"]], "autorag.data.beta.filter package": [[3, null]], "autorag.data.beta.filter.dontknow module": [[3, "autorag-data-beta-filter-dontknow-module"]], "autorag.data.beta.filter.prompt module": [[3, "autorag-data-beta-filter-prompt-module"]], "autorag.data.beta.generation_gt package": [[4, null]], "autorag.data.beta.generation_gt.base module": [[4, "autorag-data-beta-generation-gt-base-module"]], "autorag.data.beta.generation_gt.llama_index_gen_gt module": [[4, "autorag-data-beta-generation-gt-llama-index-gen-gt-module"]], "autorag.data.beta.generation_gt.openai_gen_gt module": [[4, "autorag-data-beta-generation-gt-openai-gen-gt-module"]], "autorag.data.beta.generation_gt.prompt module": [[4, "autorag-data-beta-generation-gt-prompt-module"]], "autorag.data.beta.query package": [[5, null]], "autorag.data.beta.query.llama_gen_query module": [[5, "autorag-data-beta-query-llama-gen-query-module"]], "autorag.data.beta.query.openai_gen_query module": [[5, "autorag-data-beta-query-openai-gen-query-module"]], "autorag.data.beta.query.prompt module": [[5, "autorag-data-beta-query-prompt-module"]], "autorag.data.beta.sample module": [[2, "autorag-data-beta-sample-module"]], "autorag.data.beta.schema module": [[2, "autorag-data-beta-schema-module"]], "autorag.data.beta.schema package": [[6, null]], "autorag.data.beta.schema.data module": [[6, "autorag-data-beta-schema-data-module"]], "autorag.data.chunk package": [[7, null]], "autorag.data.chunk.base module": [[7, "module-autorag.data.chunk.base"]], "autorag.data.chunk.langchain_chunk module": [[7, "module-autorag.data.chunk.langchain_chunk"]], "autorag.data.chunk.llama_index_chunk module": [[7, "module-autorag.data.chunk.llama_index_chunk"]], "autorag.data.chunk.run module": [[7, "module-autorag.data.chunk.run"]], "autorag.data.corpus package": [[8, null]], "autorag.data.corpus.langchain module": [[8, "autorag-data-corpus-langchain-module"]], "autorag.data.corpus.llama_index module": [[8, "autorag-data-corpus-llama-index-module"]], "autorag.data.parse package": [[9, null]], "autorag.data.parse.base module": [[9, "autorag-data-parse-base-module"]], "autorag.data.parse.clova module": [[9, "autorag-data-parse-clova-module"]], "autorag.data.parse.langchain_parse module": [[9, "autorag-data-parse-langchain-parse-module"]], "autorag.data.parse.llamaparse module": [[9, "autorag-data-parse-llamaparse-module"]], "autorag.data.parse.run module": [[9, "autorag-data-parse-run-module"]], "autorag.data.parse.table_hybrid_parse module": [[9, "autorag-data-parse-table-hybrid-parse-module"]], "autorag.data.qacreation package": [[10, null]], "autorag.data.qacreation.base module": [[10, "autorag-data-qacreation-base-module"]], "autorag.data.qacreation.llama_index module": [[10, "autorag-data-qacreation-llama-index-module"]], "autorag.data.qacreation.ragas module": [[10, "autorag-data-qacreation-ragas-module"]], "autorag.data.qacreation.simple module": [[10, "autorag-data-qacreation-simple-module"]], "autorag.data.utils package": [[11, null]], "autorag.data.utils.util module": [[11, "module-autorag.data.utils.util"]], "autorag.deploy module": [[0, "module-autorag.deploy"]], "autorag.evaluation package": [[12, null]], "autorag.evaluation.generation module": [[12, "module-autorag.evaluation.generation"]], "autorag.evaluation.metric package": [[13, null]], "autorag.evaluation.metric.generation module": [[13, "module-autorag.evaluation.metric.generation"]], "autorag.evaluation.metric.retrieval module": [[13, "module-autorag.evaluation.metric.retrieval"]], "autorag.evaluation.metric.retrieval_contents module": [[13, "module-autorag.evaluation.metric.retrieval_contents"]], "autorag.evaluation.metric.util module": [[13, "module-autorag.evaluation.metric.util"]], "autorag.evaluation.retrieval module": [[12, "module-autorag.evaluation.retrieval"]], "autorag.evaluation.retrieval_contents module": [[12, "module-autorag.evaluation.retrieval_contents"]], "autorag.evaluation.util module": [[12, "module-autorag.evaluation.util"]], "autorag.evaluator module": [[0, "module-autorag.evaluator"]], "autorag.node_line module": [[0, "module-autorag.node_line"]], "autorag.nodes package": [[14, null]], "autorag.nodes.generator package": [[15, null]], "autorag.nodes.generator.base module": [[15, "module-autorag.nodes.generator.base"]], "autorag.nodes.generator.llama_index_llm module": [[15, "module-autorag.nodes.generator.llama_index_llm"]], "autorag.nodes.generator.openai_llm module": [[15, "module-autorag.nodes.generator.openai_llm"]], "autorag.nodes.generator.run module": [[15, "module-autorag.nodes.generator.run"]], "autorag.nodes.generator.vllm module": [[15, "module-autorag.nodes.generator.vllm"]], "autorag.nodes.passageaugmenter package": [[16, null]], "autorag.nodes.passageaugmenter.base module": [[16, "module-autorag.nodes.passageaugmenter.base"]], "autorag.nodes.passageaugmenter.pass_passage_augmenter module": [[16, "module-autorag.nodes.passageaugmenter.pass_passage_augmenter"]], "autorag.nodes.passageaugmenter.prev_next_augmenter module": [[16, "module-autorag.nodes.passageaugmenter.prev_next_augmenter"]], "autorag.nodes.passageaugmenter.run module": [[16, "module-autorag.nodes.passageaugmenter.run"]], "autorag.nodes.passagecompressor package": [[17, null]], "autorag.nodes.passagecompressor.base module": [[17, "module-autorag.nodes.passagecompressor.base"]], "autorag.nodes.passagecompressor.longllmlingua module": [[17, "module-autorag.nodes.passagecompressor.longllmlingua"]], "autorag.nodes.passagecompressor.pass_compressor module": [[17, "module-autorag.nodes.passagecompressor.pass_compressor"]], "autorag.nodes.passagecompressor.refine module": [[17, "module-autorag.nodes.passagecompressor.refine"]], "autorag.nodes.passagecompressor.run module": [[17, "module-autorag.nodes.passagecompressor.run"]], "autorag.nodes.passagecompressor.tree_summarize module": [[17, "module-autorag.nodes.passagecompressor.tree_summarize"]], "autorag.nodes.passagefilter package": [[18, null]], "autorag.nodes.passagefilter.base module": [[18, "module-autorag.nodes.passagefilter.base"]], "autorag.nodes.passagefilter.pass_passage_filter module": [[18, "module-autorag.nodes.passagefilter.pass_passage_filter"]], "autorag.nodes.passagefilter.percentile_cutoff module": [[18, "module-autorag.nodes.passagefilter.percentile_cutoff"]], "autorag.nodes.passagefilter.recency module": [[18, "module-autorag.nodes.passagefilter.recency"]], "autorag.nodes.passagefilter.run module": [[18, "module-autorag.nodes.passagefilter.run"]], "autorag.nodes.passagefilter.similarity_percentile_cutoff module": [[18, "module-autorag.nodes.passagefilter.similarity_percentile_cutoff"]], "autorag.nodes.passagefilter.similarity_threshold_cutoff module": [[18, "module-autorag.nodes.passagefilter.similarity_threshold_cutoff"]], "autorag.nodes.passagefilter.threshold_cutoff module": [[18, "module-autorag.nodes.passagefilter.threshold_cutoff"]], "autorag.nodes.passagereranker package": [[19, null]], "autorag.nodes.passagereranker.base module": [[19, "module-autorag.nodes.passagereranker.base"]], "autorag.nodes.passagereranker.cohere module": [[19, "module-autorag.nodes.passagereranker.cohere"]], "autorag.nodes.passagereranker.colbert module": [[19, "module-autorag.nodes.passagereranker.colbert"]], "autorag.nodes.passagereranker.flag_embedding module": [[19, "module-autorag.nodes.passagereranker.flag_embedding"]], "autorag.nodes.passagereranker.flag_embedding_llm module": [[19, "module-autorag.nodes.passagereranker.flag_embedding_llm"]], "autorag.nodes.passagereranker.jina module": [[19, "module-autorag.nodes.passagereranker.jina"]], "autorag.nodes.passagereranker.koreranker module": [[19, "module-autorag.nodes.passagereranker.koreranker"]], "autorag.nodes.passagereranker.monot5 module": [[19, "module-autorag.nodes.passagereranker.monot5"]], "autorag.nodes.passagereranker.pass_reranker module": [[19, "module-autorag.nodes.passagereranker.pass_reranker"]], "autorag.nodes.passagereranker.rankgpt module": [[19, "module-autorag.nodes.passagereranker.rankgpt"]], "autorag.nodes.passagereranker.run module": [[19, "module-autorag.nodes.passagereranker.run"]], "autorag.nodes.passagereranker.sentence_transformer module": [[19, "module-autorag.nodes.passagereranker.sentence_transformer"]], "autorag.nodes.passagereranker.tart package": [[20, null]], "autorag.nodes.passagereranker.tart.modeling_enc_t5 module": [[20, "module-autorag.nodes.passagereranker.tart.modeling_enc_t5"]], "autorag.nodes.passagereranker.tart.tart module": [[20, "module-autorag.nodes.passagereranker.tart.tart"]], "autorag.nodes.passagereranker.tart.tokenization_enc_t5 module": [[20, "module-autorag.nodes.passagereranker.tart.tokenization_enc_t5"]], "autorag.nodes.passagereranker.time_reranker module": [[19, "module-autorag.nodes.passagereranker.time_reranker"]], "autorag.nodes.passagereranker.upr module": [[19, "module-autorag.nodes.passagereranker.upr"]], "autorag.nodes.promptmaker package": [[21, null]], "autorag.nodes.promptmaker.base module": [[21, "module-autorag.nodes.promptmaker.base"]], "autorag.nodes.promptmaker.fstring module": [[21, "module-autorag.nodes.promptmaker.fstring"]], "autorag.nodes.promptmaker.long_context_reorder module": [[21, "module-autorag.nodes.promptmaker.long_context_reorder"]], "autorag.nodes.promptmaker.run module": [[21, "module-autorag.nodes.promptmaker.run"]], "autorag.nodes.promptmaker.window_replacement module": [[21, "module-autorag.nodes.promptmaker.window_replacement"]], "autorag.nodes.queryexpansion package": [[22, null]], "autorag.nodes.queryexpansion.base module": [[22, "module-autorag.nodes.queryexpansion.base"]], "autorag.nodes.queryexpansion.hyde module": [[22, "module-autorag.nodes.queryexpansion.hyde"]], "autorag.nodes.queryexpansion.multi_query_expansion module": [[22, "module-autorag.nodes.queryexpansion.multi_query_expansion"]], "autorag.nodes.queryexpansion.pass_query_expansion module": [[22, "module-autorag.nodes.queryexpansion.pass_query_expansion"]], "autorag.nodes.queryexpansion.query_decompose module": [[22, "module-autorag.nodes.queryexpansion.query_decompose"]], "autorag.nodes.queryexpansion.run module": [[22, "module-autorag.nodes.queryexpansion.run"]], "autorag.nodes.retrieval package": [[23, null]], "autorag.nodes.retrieval.base module": [[23, "module-autorag.nodes.retrieval.base"]], "autorag.nodes.retrieval.bm25 module": [[23, "module-autorag.nodes.retrieval.bm25"]], "autorag.nodes.retrieval.hybrid_cc module": [[23, "module-autorag.nodes.retrieval.hybrid_cc"]], "autorag.nodes.retrieval.hybrid_rrf module": [[23, "module-autorag.nodes.retrieval.hybrid_rrf"]], "autorag.nodes.retrieval.run module": [[23, "module-autorag.nodes.retrieval.run"]], "autorag.nodes.retrieval.vectordb module": [[23, "module-autorag.nodes.retrieval.vectordb"]], "autorag.parser module": [[0, "autorag-parser-module"]], "autorag.schema package": [[24, null]], "autorag.schema.metricinput module": [[24, "module-autorag.schema.metricinput"]], "autorag.schema.module module": [[24, "module-autorag.schema.module"]], "autorag.schema.node module": [[24, "module-autorag.schema.node"]], "autorag.strategy module": [[0, "module-autorag.strategy"]], "autorag.support module": [[0, "module-autorag.support"]], "autorag.utils package": [[25, null]], "autorag.utils.preprocess module": [[25, "module-autorag.utils.preprocess"]], "autorag.utils.util module": [[25, "module-autorag.utils.util"]], "autorag.validator module": [[0, "module-autorag.validator"]], "autorag.web module": [[0, "module-autorag.web"]], "cohere_reranker": [[70, null]], "config.yaml": [[97, "config-yaml"]], "contents": [[41, "contents"]], "data": [[97, "data"]], "doc_id": [[41, "doc-id"]], "generation_gt": [[41, "generation-gt"]], "jina_reranker": [[74, null]], "ko_kiwi (For Korean \ud83c\uddf0\ud83c\uddf7)": [[91, "ko-kiwi-for-korean"]], "ko_kkma (For Korean \ud83c\uddf0\ud83c\uddf7)": [[91, "ko-kkma-for-korean"]], "ko_okt (For Korean \ud83c\uddf0\ud83c\uddf7)": [[91, "ko-okt-for-korean"]], "llama_index LLM": [[54, null]], "metadata": [[41, "metadata"]], "porter_stemmer": [[91, "porter-stemmer"]], "pre_retrieve_node_line": [[97, "pre-retrieve-node-line"]], "qid": [[41, "qid"]], "query": [[41, "query"]], "query_expansion": [[97, "query-expansion"]], "resources": [[97, "resources"]], "retrieval_gt": [[41, "retrieval-gt"]], "retrieve_node_line": [[97, "retrieve-node-line"]], "sem_score": [[53, null]], "space": [[91, "space"]], "trial": [[97, "trial"]], "trial.json": [[97, "trial-json"]], "v0.3 migration guide": [[52, "v0-3-migration-guide"]], "vllm": [[56, null]], "\u2705Apply Basic Example": [[47, "apply-basic-example"], [47, "id2"], [47, "id4"], [47, "id6"], [47, "id8"], [47, "id10"], [48, "apply-basic-example"], [48, "id2"], [48, "id4"]], "\u2705Basic Example": [[47, "basic-example"], [48, "basic-example"]], "\u2757How to use specific G-Eval metrics": [[46, "how-to-use-specific-g-eval-metrics"]], "\u2757Must have Parameter": [[32, "must-have-parameter"]], "\u2757Restart a trial if an error occurs during the trial": [[103, "restart-a-trial-if-an-error-occurs-during-the-trial"]], "\u2757\ufe0fHybrid additional explanation": [[92, "hybrid-additional-explanation"], [93, "hybrid-additional-explanation"]], "\ud83c\udfc3\u200d\u2642\ufe0f Getting Started": [[49, "getting-started"]], "\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc66 Ecosystem": [[49, "ecosystem"]], "\ud83d\udccc API Needed": [[32, "api-needed"]], "\ud83d\udccc Definition": [[46, "id4"]], "\ud83d\udccc Parameter: data_path_glob": [[34, "parameter-data-path-glob"]], "\ud83d\udcccDefinition": [[46, "definition"], [46, "id1"], [46, "id2"], [46, "id3"], [46, "id5"], [47, "definition"], [47, "id1"], [47, "id3"], [47, "id5"], [47, "id7"], [47, "id9"], [48, "definition"], [48, "id1"], [48, "id3"]], "\ud83d\udd0e Definition": [[53, "definition"], [58, "definition"], [61, "definition"], [64, "definition"], [77, "definition"], [85, "definition"], [90, "definition"], [94, "definition"]], "\ud83d\udd22 Parameters": [[53, "parameters"], [61, "parameters"], [77, "parameters"], [85, "parameters"], [90, "parameters"], [94, "parameters"]], "\ud83d\ude80 Road to Modular RAG": [[100, "id1"]], "\ud83e\udd37\u200d\u2642\ufe0f What is Modular RAG?": [[100, "what-is-modular-rag"]], "\ud83e\udd37\u200d\u2642\ufe0f Why AutoRAG?": [[49, "why-autorag"]], "\ud83e\udd38 Benefits": [[58, "benefits"], [61, "benefits"], [64, "benefits"], [77, "benefits"], [90, "benefits"]], "\ud83e\udd38\u200d\u2642\ufe0f How can AutoRAG helps?": [[49, "how-can-autorag-helps"]]}, "docnames": ["api_spec/autorag", "api_spec/autorag.data", "api_spec/autorag.data.beta", "api_spec/autorag.data.beta.filter", "api_spec/autorag.data.beta.generation_gt", "api_spec/autorag.data.beta.query", "api_spec/autorag.data.beta.schema", "api_spec/autorag.data.chunk", "api_spec/autorag.data.corpus", "api_spec/autorag.data.parse", "api_spec/autorag.data.qacreation", "api_spec/autorag.data.utils", "api_spec/autorag.evaluation", "api_spec/autorag.evaluation.metric", "api_spec/autorag.nodes", "api_spec/autorag.nodes.generator", "api_spec/autorag.nodes.passageaugmenter", "api_spec/autorag.nodes.passagecompressor", "api_spec/autorag.nodes.passagefilter", "api_spec/autorag.nodes.passagereranker", "api_spec/autorag.nodes.passagereranker.tart", "api_spec/autorag.nodes.promptmaker", "api_spec/autorag.nodes.queryexpansion", "api_spec/autorag.nodes.retrieval", "api_spec/autorag.schema", "api_spec/autorag.utils", "api_spec/modules", "data_creation/beta/chunk/chunk", "data_creation/beta/chunk/langchain_chunk", "data_creation/beta/chunk/llama_index_chunk", "data_creation/beta/data_creation", "data_creation/beta/parse/clova", "data_creation/beta/parse/langchain_parse", "data_creation/beta/parse/llama_parse", "data_creation/beta/parse/parse", "data_creation/beta/parse/table_hybrid_parse", "data_creation/beta/qa_creation/answer_gen", "data_creation/beta/qa_creation/filter", "data_creation/beta/qa_creation/qa_creation", "data_creation/beta/qa_creation/query_gen", "data_creation/beta/tutorial", "data_creation/data_format", "data_creation/ragas", "data_creation/tutorial", "deploy/api_endpoint", "deploy/web", "evaluate_metrics/generation", "evaluate_metrics/retrieval", "evaluate_metrics/retrieval_contents", "index", "install", "local_model", "migration", "nodes/generator/generator", "nodes/generator/llama_index_llm", "nodes/generator/openai_llm", "nodes/generator/vllm", "nodes/index", "nodes/passage_augmenter/passage_augmenter", "nodes/passage_augmenter/prev_next_augmenter", "nodes/passage_compressor/longllmlingua", "nodes/passage_compressor/passage_compressor", "nodes/passage_compressor/refine", "nodes/passage_compressor/tree_summarize", "nodes/passage_filter/passage_filter", "nodes/passage_filter/percentile_cutoff", "nodes/passage_filter/recency_filter", "nodes/passage_filter/similarity_percentile_cutoff", "nodes/passage_filter/similarity_threshold_cutoff", "nodes/passage_filter/threshold_cutoff", "nodes/passage_reranker/cohere", "nodes/passage_reranker/colbert", "nodes/passage_reranker/flag_embedding_llm_reranker", "nodes/passage_reranker/flag_embedding_reranker", "nodes/passage_reranker/jina_reranker", "nodes/passage_reranker/koreranker", "nodes/passage_reranker/monot5", "nodes/passage_reranker/passage_reranker", "nodes/passage_reranker/rankgpt", "nodes/passage_reranker/sentence_transformer_reranker", "nodes/passage_reranker/tart", "nodes/passage_reranker/time_reranker", "nodes/passage_reranker/upr", "nodes/prompt_maker/fstring", "nodes/prompt_maker/long_context_reorder", "nodes/prompt_maker/prompt_maker", "nodes/prompt_maker/window_replacement", "nodes/query_expansion/hyde", "nodes/query_expansion/multi_query_expansion", "nodes/query_expansion/query_decompose", "nodes/query_expansion/query_expansion", "nodes/retrieval/bm25", "nodes/retrieval/hybrid_cc", "nodes/retrieval/hybrid_rrf", "nodes/retrieval/retrieval", "nodes/retrieval/vectordb", "optimization/custom_config", "optimization/folder_structure", "optimization/optimization", "optimization/strategies", "roadmap/modular_rag", "structure", "troubleshooting", "tutorial"], "envversion": {"sphinx": 63, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["api_spec/autorag.rst", "api_spec/autorag.data.rst", "api_spec/autorag.data.beta.rst", "api_spec/autorag.data.beta.filter.rst", "api_spec/autorag.data.beta.generation_gt.rst", "api_spec/autorag.data.beta.query.rst", "api_spec/autorag.data.beta.schema.rst", "api_spec/autorag.data.chunk.rst", "api_spec/autorag.data.corpus.rst", "api_spec/autorag.data.parse.rst", "api_spec/autorag.data.qacreation.rst", "api_spec/autorag.data.utils.rst", "api_spec/autorag.evaluation.rst", "api_spec/autorag.evaluation.metric.rst", "api_spec/autorag.nodes.rst", "api_spec/autorag.nodes.generator.rst", "api_spec/autorag.nodes.passageaugmenter.rst", "api_spec/autorag.nodes.passagecompressor.rst", "api_spec/autorag.nodes.passagefilter.rst", "api_spec/autorag.nodes.passagereranker.rst", "api_spec/autorag.nodes.passagereranker.tart.rst", "api_spec/autorag.nodes.promptmaker.rst", "api_spec/autorag.nodes.queryexpansion.rst", "api_spec/autorag.nodes.retrieval.rst", "api_spec/autorag.schema.rst", "api_spec/autorag.utils.rst", "api_spec/modules.rst", "data_creation/beta/chunk/chunk.md", "data_creation/beta/chunk/langchain_chunk.md", "data_creation/beta/chunk/llama_index_chunk.md", "data_creation/beta/data_creation.md", "data_creation/beta/parse/clova.md", "data_creation/beta/parse/langchain_parse.md", "data_creation/beta/parse/llama_parse.md", "data_creation/beta/parse/parse.md", "data_creation/beta/parse/table_hybrid_parse.md", "data_creation/beta/qa_creation/answer_gen.md", "data_creation/beta/qa_creation/filter.md", "data_creation/beta/qa_creation/qa_creation.md", "data_creation/beta/qa_creation/query_gen.md", "data_creation/beta/tutorial.md", "data_creation/data_format.md", "data_creation/ragas.md", "data_creation/tutorial.md", "deploy/api_endpoint.md", "deploy/web.md", "evaluate_metrics/generation.md", "evaluate_metrics/retrieval.md", "evaluate_metrics/retrieval_contents.md", "index.rst", "install.md", "local_model.md", "migration.md", "nodes/generator/generator.md", "nodes/generator/llama_index_llm.md", "nodes/generator/openai_llm.md", "nodes/generator/vllm.md", "nodes/index.md", "nodes/passage_augmenter/passage_augmenter.md", "nodes/passage_augmenter/prev_next_augmenter.md", "nodes/passage_compressor/longllmlingua.md", "nodes/passage_compressor/passage_compressor.md", "nodes/passage_compressor/refine.md", "nodes/passage_compressor/tree_summarize.md", "nodes/passage_filter/passage_filter.md", "nodes/passage_filter/percentile_cutoff.md", "nodes/passage_filter/recency_filter.md", "nodes/passage_filter/similarity_percentile_cutoff.md", "nodes/passage_filter/similarity_threshold_cutoff.md", "nodes/passage_filter/threshold_cutoff.md", "nodes/passage_reranker/cohere.md", "nodes/passage_reranker/colbert.md", "nodes/passage_reranker/flag_embedding_llm_reranker.md", "nodes/passage_reranker/flag_embedding_reranker.md", "nodes/passage_reranker/jina_reranker.md", "nodes/passage_reranker/koreranker.md", "nodes/passage_reranker/monot5.md", "nodes/passage_reranker/passage_reranker.md", "nodes/passage_reranker/rankgpt.md", "nodes/passage_reranker/sentence_transformer_reranker.md", "nodes/passage_reranker/tart.md", "nodes/passage_reranker/time_reranker.md", "nodes/passage_reranker/upr.md", "nodes/prompt_maker/fstring.md", "nodes/prompt_maker/long_context_reorder.md", "nodes/prompt_maker/prompt_maker.md", "nodes/prompt_maker/window_replacement.md", "nodes/query_expansion/hyde.md", "nodes/query_expansion/multi_query_expansion.md", "nodes/query_expansion/query_decompose.md", "nodes/query_expansion/query_expansion.md", "nodes/retrieval/bm25.md", "nodes/retrieval/hybrid_cc.md", "nodes/retrieval/hybrid_rrf.md", "nodes/retrieval/retrieval.md", "nodes/retrieval/vectordb.md", "optimization/custom_config.md", "optimization/folder_structure.md", "optimization/optimization.md", "optimization/strategies.md", "roadmap/modular_rag.md", "structure.md", "troubleshooting.md", "tutorial.md"], "indexentries": {"add_essential_metadata() (in module autorag.data.utils.util)": [[11, "autorag.data.utils.util.add_essential_metadata", false]], "add_essential_metadata_llama_text_node() (in module autorag.data.utils.util)": [[11, "autorag.data.utils.util.add_essential_metadata_llama_text_node", false]], "add_file_name() (in module autorag.data.chunk.base)": [[7, "autorag.data.chunk.base.add_file_name", false]], "async_g_eval() (in module autorag.evaluation.metric.generation)": [[13, "autorag.evaluation.metric.generation.async_g_eval", false]], "async_postprocess_nodes() (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank method)": [[19, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.async_postprocess_nodes", false]], "async_run_llm() (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank method)": [[19, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.async_run_llm", false]], "asyncrankgptrerank (class in autorag.nodes.passagereranker.rankgpt)": [[19, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank", false]], "autorag": [[0, "module-autorag", false]], "autorag.chunker": [[0, "module-autorag.chunker", false]], "autorag.cli": [[0, "module-autorag.cli", false]], "autorag.dashboard": [[0, "module-autorag.dashboard", false]], "autorag.data": [[1, "module-autorag.data", false]], "autorag.data.chunk": [[7, "module-autorag.data.chunk", false]], "autorag.data.chunk.base": [[7, "module-autorag.data.chunk.base", false]], "autorag.data.chunk.langchain_chunk": [[7, "module-autorag.data.chunk.langchain_chunk", false]], "autorag.data.chunk.llama_index_chunk": [[7, "module-autorag.data.chunk.llama_index_chunk", false]], "autorag.data.chunk.run": [[7, "module-autorag.data.chunk.run", false]], "autorag.data.utils": [[11, "module-autorag.data.utils", false]], "autorag.data.utils.util": [[11, "module-autorag.data.utils.util", false]], "autorag.deploy": [[0, "module-autorag.deploy", false]], "autorag.evaluation": [[12, "module-autorag.evaluation", false]], "autorag.evaluation.generation": [[12, "module-autorag.evaluation.generation", false]], "autorag.evaluation.metric": [[13, "module-autorag.evaluation.metric", false]], "autorag.evaluation.metric.generation": [[13, "module-autorag.evaluation.metric.generation", false]], "autorag.evaluation.metric.retrieval": [[13, "module-autorag.evaluation.metric.retrieval", false]], "autorag.evaluation.metric.retrieval_contents": [[13, "module-autorag.evaluation.metric.retrieval_contents", false]], "autorag.evaluation.metric.util": [[13, "module-autorag.evaluation.metric.util", false]], "autorag.evaluation.retrieval": [[12, "module-autorag.evaluation.retrieval", false]], "autorag.evaluation.retrieval_contents": [[12, "module-autorag.evaluation.retrieval_contents", false]], "autorag.evaluation.util": [[12, "module-autorag.evaluation.util", false]], "autorag.evaluator": [[0, "module-autorag.evaluator", false]], "autorag.node_line": [[0, "module-autorag.node_line", false]], "autorag.nodes": [[14, "module-autorag.nodes", false]], "autorag.nodes.generator": [[15, "module-autorag.nodes.generator", false]], "autorag.nodes.generator.base": [[15, "module-autorag.nodes.generator.base", false]], "autorag.nodes.generator.llama_index_llm": [[15, "module-autorag.nodes.generator.llama_index_llm", false]], "autorag.nodes.generator.openai_llm": [[15, "module-autorag.nodes.generator.openai_llm", false]], "autorag.nodes.generator.run": [[15, "module-autorag.nodes.generator.run", false]], "autorag.nodes.generator.vllm": [[15, "module-autorag.nodes.generator.vllm", false]], "autorag.nodes.passageaugmenter": [[16, "module-autorag.nodes.passageaugmenter", false]], "autorag.nodes.passageaugmenter.base": [[16, "module-autorag.nodes.passageaugmenter.base", false]], "autorag.nodes.passageaugmenter.pass_passage_augmenter": [[16, "module-autorag.nodes.passageaugmenter.pass_passage_augmenter", false]], "autorag.nodes.passageaugmenter.prev_next_augmenter": [[16, "module-autorag.nodes.passageaugmenter.prev_next_augmenter", false]], "autorag.nodes.passageaugmenter.run": [[16, "module-autorag.nodes.passageaugmenter.run", false]], "autorag.nodes.passagecompressor": [[17, "module-autorag.nodes.passagecompressor", false]], "autorag.nodes.passagecompressor.base": [[17, "module-autorag.nodes.passagecompressor.base", false]], "autorag.nodes.passagecompressor.longllmlingua": [[17, "module-autorag.nodes.passagecompressor.longllmlingua", false]], "autorag.nodes.passagecompressor.pass_compressor": [[17, "module-autorag.nodes.passagecompressor.pass_compressor", false]], "autorag.nodes.passagecompressor.refine": [[17, "module-autorag.nodes.passagecompressor.refine", false]], "autorag.nodes.passagecompressor.run": [[17, "module-autorag.nodes.passagecompressor.run", false]], "autorag.nodes.passagecompressor.tree_summarize": [[17, "module-autorag.nodes.passagecompressor.tree_summarize", false]], "autorag.nodes.passagefilter": [[18, "module-autorag.nodes.passagefilter", false]], "autorag.nodes.passagefilter.base": [[18, "module-autorag.nodes.passagefilter.base", false]], "autorag.nodes.passagefilter.pass_passage_filter": [[18, "module-autorag.nodes.passagefilter.pass_passage_filter", false]], "autorag.nodes.passagefilter.percentile_cutoff": [[18, "module-autorag.nodes.passagefilter.percentile_cutoff", false]], "autorag.nodes.passagefilter.recency": [[18, "module-autorag.nodes.passagefilter.recency", false]], "autorag.nodes.passagefilter.run": [[18, "module-autorag.nodes.passagefilter.run", false]], "autorag.nodes.passagefilter.similarity_percentile_cutoff": [[18, "module-autorag.nodes.passagefilter.similarity_percentile_cutoff", false]], "autorag.nodes.passagefilter.similarity_threshold_cutoff": [[18, "module-autorag.nodes.passagefilter.similarity_threshold_cutoff", false]], "autorag.nodes.passagefilter.threshold_cutoff": [[18, "module-autorag.nodes.passagefilter.threshold_cutoff", false]], "autorag.nodes.passagereranker": [[19, "module-autorag.nodes.passagereranker", false]], "autorag.nodes.passagereranker.base": [[19, "module-autorag.nodes.passagereranker.base", false]], "autorag.nodes.passagereranker.cohere": [[19, "module-autorag.nodes.passagereranker.cohere", false]], "autorag.nodes.passagereranker.colbert": [[19, "module-autorag.nodes.passagereranker.colbert", false]], "autorag.nodes.passagereranker.flag_embedding": [[19, "module-autorag.nodes.passagereranker.flag_embedding", false]], "autorag.nodes.passagereranker.flag_embedding_llm": [[19, "module-autorag.nodes.passagereranker.flag_embedding_llm", false]], "autorag.nodes.passagereranker.jina": [[19, "module-autorag.nodes.passagereranker.jina", false]], "autorag.nodes.passagereranker.koreranker": [[19, "module-autorag.nodes.passagereranker.koreranker", false]], "autorag.nodes.passagereranker.monot5": [[19, "module-autorag.nodes.passagereranker.monot5", false]], "autorag.nodes.passagereranker.pass_reranker": [[19, "module-autorag.nodes.passagereranker.pass_reranker", false]], "autorag.nodes.passagereranker.rankgpt": [[19, "module-autorag.nodes.passagereranker.rankgpt", false]], "autorag.nodes.passagereranker.run": [[19, "module-autorag.nodes.passagereranker.run", false]], "autorag.nodes.passagereranker.sentence_transformer": [[19, "module-autorag.nodes.passagereranker.sentence_transformer", false]], "autorag.nodes.passagereranker.tart": [[20, "module-autorag.nodes.passagereranker.tart", false]], "autorag.nodes.passagereranker.tart.modeling_enc_t5": [[20, "module-autorag.nodes.passagereranker.tart.modeling_enc_t5", false]], "autorag.nodes.passagereranker.tart.tart": [[20, "module-autorag.nodes.passagereranker.tart.tart", false]], "autorag.nodes.passagereranker.tart.tokenization_enc_t5": [[20, "module-autorag.nodes.passagereranker.tart.tokenization_enc_t5", false]], "autorag.nodes.passagereranker.time_reranker": [[19, "module-autorag.nodes.passagereranker.time_reranker", false]], "autorag.nodes.passagereranker.upr": [[19, "module-autorag.nodes.passagereranker.upr", false]], "autorag.nodes.promptmaker": [[21, "module-autorag.nodes.promptmaker", false]], "autorag.nodes.promptmaker.base": [[21, "module-autorag.nodes.promptmaker.base", false]], "autorag.nodes.promptmaker.fstring": [[21, "module-autorag.nodes.promptmaker.fstring", false]], "autorag.nodes.promptmaker.long_context_reorder": [[21, "module-autorag.nodes.promptmaker.long_context_reorder", false]], "autorag.nodes.promptmaker.run": [[21, "module-autorag.nodes.promptmaker.run", false]], "autorag.nodes.promptmaker.window_replacement": [[21, "module-autorag.nodes.promptmaker.window_replacement", false]], "autorag.nodes.queryexpansion": [[22, "module-autorag.nodes.queryexpansion", false]], "autorag.nodes.queryexpansion.base": [[22, "module-autorag.nodes.queryexpansion.base", false]], "autorag.nodes.queryexpansion.hyde": [[22, "module-autorag.nodes.queryexpansion.hyde", false]], "autorag.nodes.queryexpansion.multi_query_expansion": [[22, "module-autorag.nodes.queryexpansion.multi_query_expansion", false]], "autorag.nodes.queryexpansion.pass_query_expansion": [[22, "module-autorag.nodes.queryexpansion.pass_query_expansion", false]], "autorag.nodes.queryexpansion.query_decompose": [[22, "module-autorag.nodes.queryexpansion.query_decompose", false]], "autorag.nodes.queryexpansion.run": [[22, "module-autorag.nodes.queryexpansion.run", false]], "autorag.nodes.retrieval": [[23, "module-autorag.nodes.retrieval", false]], "autorag.nodes.retrieval.base": [[23, "module-autorag.nodes.retrieval.base", false]], "autorag.nodes.retrieval.bm25": [[23, "module-autorag.nodes.retrieval.bm25", false]], "autorag.nodes.retrieval.hybrid_cc": [[23, "module-autorag.nodes.retrieval.hybrid_cc", false]], "autorag.nodes.retrieval.hybrid_rrf": [[23, "module-autorag.nodes.retrieval.hybrid_rrf", false]], "autorag.nodes.retrieval.run": [[23, "module-autorag.nodes.retrieval.run", false]], "autorag.nodes.retrieval.vectordb": [[23, "module-autorag.nodes.retrieval.vectordb", false]], "autorag.schema": [[24, "module-autorag.schema", false]], "autorag.schema.metricinput": [[24, "module-autorag.schema.metricinput", false]], "autorag.schema.module": [[24, "module-autorag.schema.module", false]], "autorag.schema.node": [[24, "module-autorag.schema.node", false]], "autorag.strategy": [[0, "module-autorag.strategy", false]], "autorag.support": [[0, "module-autorag.support", false]], "autorag.utils": [[25, "module-autorag.utils", false]], "autorag.utils.preprocess": [[25, "module-autorag.utils.preprocess", false]], "autorag.utils.util": [[25, "module-autorag.utils.util", false]], "autorag.validator": [[0, "module-autorag.validator", false]], "autorag.web": [[0, "module-autorag.web", false]], "autorag_metric() (in module autorag.evaluation.metric.util)": [[13, "autorag.evaluation.metric.util.autorag_metric", false]], "autorag_metric_loop() (in module autorag.evaluation.metric.util)": [[13, "autorag.evaluation.metric.util.autorag_metric_loop", false]], "avoid_empty_result() (in module autorag.strategy)": [[0, "autorag.strategy.avoid_empty_result", false]], "basegenerator (class in autorag.nodes.generator.base)": [[15, "autorag.nodes.generator.base.BaseGenerator", false]], "basepassageaugmenter (class in autorag.nodes.passageaugmenter.base)": [[16, "autorag.nodes.passageaugmenter.base.BasePassageAugmenter", false]], "basepassagecompressor (class in autorag.nodes.passagecompressor.base)": [[17, "autorag.nodes.passagecompressor.base.BasePassageCompressor", false]], "basepassagefilter (class in autorag.nodes.passagefilter.base)": [[18, "autorag.nodes.passagefilter.base.BasePassageFilter", false]], "basepassagereranker (class in autorag.nodes.passagereranker.base)": [[19, "autorag.nodes.passagereranker.base.BasePassageReranker", false]], "basepromptmaker (class in autorag.nodes.promptmaker.base)": [[21, "autorag.nodes.promptmaker.base.BasePromptMaker", false]], "basequeryexpansion (class in autorag.nodes.queryexpansion.base)": [[22, "autorag.nodes.queryexpansion.base.BaseQueryExpansion", false]], "baseretrieval (class in autorag.nodes.retrieval.base)": [[23, "autorag.nodes.retrieval.base.BaseRetrieval", false]], "bert_score() (in module autorag.evaluation.metric.generation)": [[13, "autorag.evaluation.metric.generation.bert_score", false]], "bleu() (in module autorag.evaluation.metric.generation)": [[13, "autorag.evaluation.metric.generation.bleu", false]], "bm25 (class in autorag.nodes.retrieval.bm25)": [[23, "autorag.nodes.retrieval.bm25.BM25", false]], "bm25_ingest() (in module autorag.nodes.retrieval.bm25)": [[23, "autorag.nodes.retrieval.bm25.bm25_ingest", false]], "bm25_pure() (in module autorag.nodes.retrieval.bm25)": [[23, "autorag.nodes.retrieval.bm25.bm25_pure", false]], "build_inputs_with_special_tokens() (autorag.nodes.passagereranker.tart.tokenization_enc_t5.enct5tokenizer method)": [[20, "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer.build_inputs_with_special_tokens", false]], "calculate_cosine_similarity() (in module autorag.evaluation.metric.util)": [[13, "autorag.evaluation.metric.util.calculate_cosine_similarity", false]], "cast_corpus_dataset() (in module autorag.utils.preprocess)": [[25, "autorag.utils.preprocess.cast_corpus_dataset", false]], "cast_embedding_model() (in module autorag.evaluation.util)": [[12, "autorag.evaluation.util.cast_embedding_model", false]], "cast_metrics() (in module autorag.evaluation.util)": [[12, "autorag.evaluation.util.cast_metrics", false]], "cast_qa_dataset() (in module autorag.utils.preprocess)": [[25, "autorag.utils.preprocess.cast_qa_dataset", false]], "cast_queries() (in module autorag.nodes.retrieval.base)": [[23, "autorag.nodes.retrieval.base.cast_queries", false]], "cast_to_run() (autorag.nodes.generator.base.basegenerator method)": [[15, "autorag.nodes.generator.base.BaseGenerator.cast_to_run", false]], "cast_to_run() (autorag.nodes.passageaugmenter.base.basepassageaugmenter method)": [[16, "autorag.nodes.passageaugmenter.base.BasePassageAugmenter.cast_to_run", false]], "cast_to_run() (autorag.nodes.passagecompressor.base.basepassagecompressor method)": [[17, "autorag.nodes.passagecompressor.base.BasePassageCompressor.cast_to_run", false]], "cast_to_run() (autorag.nodes.passagefilter.base.basepassagefilter method)": [[18, "autorag.nodes.passagefilter.base.BasePassageFilter.cast_to_run", false]], "cast_to_run() (autorag.nodes.passagereranker.base.basepassagereranker method)": [[19, "autorag.nodes.passagereranker.base.BasePassageReranker.cast_to_run", false]], "cast_to_run() (autorag.nodes.promptmaker.base.basepromptmaker method)": [[21, "autorag.nodes.promptmaker.base.BasePromptMaker.cast_to_run", false]], "cast_to_run() (autorag.nodes.queryexpansion.base.basequeryexpansion method)": [[22, "autorag.nodes.queryexpansion.base.BaseQueryExpansion.cast_to_run", false]], "cast_to_run() (autorag.nodes.retrieval.base.baseretrieval method)": [[23, "autorag.nodes.retrieval.base.BaseRetrieval.cast_to_run", false]], "chat_box() (in module autorag.web)": [[0, "autorag.web.chat_box", false]], "check_expanded_query() (in module autorag.nodes.queryexpansion.base)": [[22, "autorag.nodes.queryexpansion.base.check_expanded_query", false]], "chunker (class in autorag.chunker)": [[0, "autorag.chunker.Chunker", false]], "chunker_node() (in module autorag.data.chunk.base)": [[7, "autorag.data.chunk.base.chunker_node", false]], "cohere_rerank_pure() (in module autorag.nodes.passagereranker.cohere)": [[19, "autorag.nodes.passagereranker.cohere.cohere_rerank_pure", false]], "coherereranker (class in autorag.nodes.passagereranker.cohere)": [[19, "autorag.nodes.passagereranker.cohere.CohereReranker", false]], "colbertreranker (class in autorag.nodes.passagereranker.colbert)": [[19, "autorag.nodes.passagereranker.colbert.ColbertReranker", false]], "compute() (autorag.nodes.passagereranker.upr.uprscorer method)": [[19, "autorag.nodes.passagereranker.upr.UPRScorer.compute", false]], "convert_datetime_string() (in module autorag.utils.util)": [[25, "autorag.utils.util.convert_datetime_string", false]], "convert_env_in_dict() (in module autorag.utils.util)": [[25, "autorag.utils.util.convert_env_in_dict", false]], "convert_inputs_to_list() (in module autorag.utils.util)": [[25, "autorag.utils.util.convert_inputs_to_list", false]], "convert_string_to_tuple_in_dict() (in module autorag.utils.util)": [[25, "autorag.utils.util.convert_string_to_tuple_in_dict", false]], "corpus_df_to_langchain_documents() (in module autorag.data.utils.util)": [[11, "autorag.data.utils.util.corpus_df_to_langchain_documents", false]], "create_token_type_ids_from_sequences() (autorag.nodes.passagereranker.tart.tokenization_enc_t5.enct5tokenizer method)": [[20, "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer.create_token_type_ids_from_sequences", false]], "deparallelize() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[20, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.deparallelize", false]], "dict_to_markdown() (in module autorag.utils.util)": [[25, "autorag.utils.util.dict_to_markdown", false]], "dict_to_markdown_table() (in module autorag.utils.util)": [[25, "autorag.utils.util.dict_to_markdown_table", false]], "dynamically_find_function() (in module autorag.support)": [[0, "autorag.support.dynamically_find_function", false]], "edit_summary_df_params() (in module autorag.nodes.retrieval.run)": [[23, "autorag.nodes.retrieval.run.edit_summary_df_params", false]], "embed_dim (autorag.mockembeddingrandom attribute)": [[0, "autorag.MockEmbeddingRandom.embed_dim", false]], "embedding_query_content() (in module autorag.utils.util)": [[25, "autorag.utils.util.embedding_query_content", false]], "enct5forsequenceclassification (class in autorag.nodes.passagereranker.tart.modeling_enc_t5)": [[20, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification", false]], "enct5tokenizer (class in autorag.nodes.passagereranker.tart.tokenization_enc_t5)": [[20, "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer", false]], "evaluate_generation() (in module autorag.evaluation.generation)": [[12, "autorag.evaluation.generation.evaluate_generation", false]], "evaluate_generator_node() (in module autorag.nodes.generator.run)": [[15, "autorag.nodes.generator.run.evaluate_generator_node", false]], "evaluate_generator_result() (in module autorag.nodes.promptmaker.run)": [[21, "autorag.nodes.promptmaker.run.evaluate_generator_result", false]], "evaluate_one_prompt_maker_node() (in module autorag.nodes.promptmaker.run)": [[21, "autorag.nodes.promptmaker.run.evaluate_one_prompt_maker_node", false]], "evaluate_one_query_expansion_node() (in module autorag.nodes.queryexpansion.run)": [[22, "autorag.nodes.queryexpansion.run.evaluate_one_query_expansion_node", false]], "evaluate_passage_compressor_node() (in module autorag.nodes.passagecompressor.run)": [[17, "autorag.nodes.passagecompressor.run.evaluate_passage_compressor_node", false]], "evaluate_retrieval() (in module autorag.evaluation.retrieval)": [[12, "autorag.evaluation.retrieval.evaluate_retrieval", false]], "evaluate_retrieval_contents() (in module autorag.evaluation.retrieval_contents)": [[12, "autorag.evaluation.retrieval_contents.evaluate_retrieval_contents", false]], "evaluate_retrieval_node() (in module autorag.nodes.retrieval.run)": [[23, "autorag.nodes.retrieval.run.evaluate_retrieval_node", false]], "evaluator (class in autorag.evaluator)": [[0, "autorag.evaluator.Evaluator", false]], "evenly_distribute_passages() (in module autorag.nodes.retrieval.base)": [[23, "autorag.nodes.retrieval.base.evenly_distribute_passages", false]], "exp_normalize() (in module autorag.nodes.passagereranker.koreranker)": [[19, "autorag.nodes.passagereranker.koreranker.exp_normalize", false]], "explode() (in module autorag.utils.util)": [[25, "autorag.utils.util.explode", false]], "extract_best_config() (in module autorag.deploy)": [[0, "autorag.deploy.extract_best_config", false]], "extract_node_line_names() (in module autorag.deploy)": [[0, "autorag.deploy.extract_node_line_names", false]], "extract_node_strategy() (in module autorag.deploy)": [[0, "autorag.deploy.extract_node_strategy", false]], "extract_values() (in module autorag.schema.node)": [[24, "autorag.schema.node.extract_values", false]], "extract_values_from_nodes() (in module autorag.schema.node)": [[24, "autorag.schema.node.extract_values_from_nodes", false]], "extract_values_from_nodes_strategy() (in module autorag.schema.node)": [[24, "autorag.schema.node.extract_values_from_nodes_strategy", false]], "fetch_contents() (in module autorag.utils.util)": [[25, "autorag.utils.util.fetch_contents", false]], "fetch_one_content() (in module autorag.utils.util)": [[25, "autorag.utils.util.fetch_one_content", false]], "filter_by_threshold() (in module autorag.strategy)": [[0, "autorag.strategy.filter_by_threshold", false]], "filter_dict_keys() (in module autorag.utils.util)": [[25, "autorag.utils.util.filter_dict_keys", false]], "find_key_values() (in module autorag.utils.util)": [[25, "autorag.utils.util.find_key_values", false]], "find_node_dir() (in module autorag.dashboard)": [[0, "autorag.dashboard.find_node_dir", false]], "find_node_summary_files() (in module autorag.utils.util)": [[25, "autorag.utils.util.find_node_summary_files", false]], "find_trial_dir() (in module autorag.utils.util)": [[25, "autorag.utils.util.find_trial_dir", false]], "find_unique_elems() (in module autorag.nodes.retrieval.run)": [[23, "autorag.nodes.retrieval.run.find_unique_elems", false]], "flag_embedding_run_model() (in module autorag.nodes.passagereranker.flag_embedding)": [[19, "autorag.nodes.passagereranker.flag_embedding.flag_embedding_run_model", false]], "flagembeddingllmreranker (class in autorag.nodes.passagereranker.flag_embedding_llm)": [[19, "autorag.nodes.passagereranker.flag_embedding_llm.FlagEmbeddingLLMReranker", false]], "flagembeddingreranker (class in autorag.nodes.passagereranker.flag_embedding)": [[19, "autorag.nodes.passagereranker.flag_embedding.FlagEmbeddingReranker", false]], "flatten_apply() (in module autorag.utils.util)": [[25, "autorag.utils.util.flatten_apply", false]], "forward() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[20, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.forward", false]], "from_dataframe() (autorag.schema.metricinput.metricinput class method)": [[24, "autorag.schema.metricinput.MetricInput.from_dataframe", false]], "from_dict() (autorag.schema.module.module class method)": [[24, "autorag.schema.module.Module.from_dict", false]], "from_dict() (autorag.schema.node.node class method)": [[24, "autorag.schema.node.Node.from_dict", false]], "from_parquet() (autorag.chunker.chunker class method)": [[0, "autorag.chunker.Chunker.from_parquet", false]], "from_trial_folder() (autorag.deploy.runner class method)": [[0, "autorag.deploy.Runner.from_trial_folder", false]], "from_yaml() (autorag.deploy.runner class method)": [[0, "autorag.deploy.Runner.from_yaml", false]], "fstring (class in autorag.nodes.promptmaker.fstring)": [[21, "autorag.nodes.promptmaker.fstring.Fstring", false]], "fuse_per_query() (in module autorag.nodes.retrieval.hybrid_cc)": [[23, "autorag.nodes.retrieval.hybrid_cc.fuse_per_query", false]], "g_eval() (in module autorag.evaluation.metric.generation)": [[13, "autorag.evaluation.metric.generation.g_eval", false]], "generated_log_probs (autorag.schema.metricinput.metricinput attribute)": [[24, "autorag.schema.metricinput.MetricInput.generated_log_probs", false]], "generated_texts (autorag.schema.metricinput.metricinput attribute)": [[24, "autorag.schema.metricinput.MetricInput.generated_texts", false]], "generation_gt (autorag.schema.metricinput.metricinput attribute)": [[24, "autorag.schema.metricinput.MetricInput.generation_gt", false]], "generator_node() (in module autorag.nodes.generator.base)": [[15, "autorag.nodes.generator.base.generator_node", false]], "get_best_row() (in module autorag.utils.util)": [[25, "autorag.utils.util.get_best_row", false]], "get_bm25_pkl_name() (in module autorag.nodes.retrieval.base)": [[23, "autorag.nodes.retrieval.base.get_bm25_pkl_name", false]], "get_bm25_scores() (in module autorag.nodes.retrieval.bm25)": [[23, "autorag.nodes.retrieval.bm25.get_bm25_scores", false]], "get_colbert_embedding_batch() (in module autorag.nodes.passagereranker.colbert)": [[19, "autorag.nodes.passagereranker.colbert.get_colbert_embedding_batch", false]], "get_colbert_score() (in module autorag.nodes.passagereranker.colbert)": [[19, "autorag.nodes.passagereranker.colbert.get_colbert_score", false]], "get_encoder() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[20, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.get_encoder", false]], "get_event_loop() (in module autorag.utils.util)": [[25, "autorag.utils.util.get_event_loop", false]], "get_file_metadata() (in module autorag.data.utils.util)": [[11, "autorag.data.utils.util.get_file_metadata", false]], "get_hybrid_execution_times() (in module autorag.nodes.retrieval.run)": [[23, "autorag.nodes.retrieval.run.get_hybrid_execution_times", false]], "get_id_scores() (in module autorag.nodes.retrieval.vectordb)": [[23, "autorag.nodes.retrieval.vectordb.get_id_scores", false]], "get_ids_and_scores() (in module autorag.nodes.retrieval.run)": [[23, "autorag.nodes.retrieval.run.get_ids_and_scores", false]], "get_input_embeddings() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[20, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.get_input_embeddings", false]], "get_metric_values() (in module autorag.dashboard)": [[0, "autorag.dashboard.get_metric_values", false]], "get_multi_query_expansion() (in module autorag.nodes.queryexpansion.multi_query_expansion)": [[22, "autorag.nodes.queryexpansion.multi_query_expansion.get_multi_query_expansion", false]], "get_param_combinations() (autorag.schema.node.node method)": [[24, "autorag.schema.node.Node.get_param_combinations", false]], "get_param_combinations() (in module autorag.data.utils.util)": [[11, "autorag.data.utils.util.get_param_combinations", false]], "get_query_decompose() (in module autorag.nodes.queryexpansion.query_decompose)": [[22, "autorag.nodes.queryexpansion.query_decompose.get_query_decompose", false]], "get_result() (autorag.nodes.generator.openai_llm.openaillm method)": [[15, "autorag.nodes.generator.openai_llm.OpenAILLM.get_result", false]], "get_result_o1() (autorag.nodes.generator.openai_llm.openaillm method)": [[15, "autorag.nodes.generator.openai_llm.OpenAILLM.get_result_o1", false]], "get_runner() (in module autorag.web)": [[0, "autorag.web.get_runner", false]], "get_scores_by_ids() (in module autorag.nodes.retrieval.run)": [[23, "autorag.nodes.retrieval.run.get_scores_by_ids", false]], "get_special_tokens_mask() (autorag.nodes.passagereranker.tart.tokenization_enc_t5.enct5tokenizer method)": [[20, "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer.get_special_tokens_mask", false]], "get_start_end_idx() (in module autorag.data.utils.util)": [[11, "autorag.data.utils.util.get_start_end_idx", false]], "get_support_modules() (in module autorag.support)": [[0, "autorag.support.get_support_modules", false]], "get_support_nodes() (in module autorag.support)": [[0, "autorag.support.get_support_nodes", false]], "handle_exception() (in module autorag)": [[0, "autorag.handle_exception", false]], "huggingface_evaluate() (in module autorag.evaluation.metric.generation)": [[13, "autorag.evaluation.metric.generation.huggingface_evaluate", false]], "hybrid_cc() (in module autorag.nodes.retrieval.hybrid_cc)": [[23, "autorag.nodes.retrieval.hybrid_cc.hybrid_cc", false]], "hybrid_rrf() (in module autorag.nodes.retrieval.hybrid_rrf)": [[23, "autorag.nodes.retrieval.hybrid_rrf.hybrid_rrf", false]], "hybridcc (class in autorag.nodes.retrieval.hybrid_cc)": [[23, "autorag.nodes.retrieval.hybrid_cc.HybridCC", false]], "hybridretrieval (class in autorag.nodes.retrieval.base)": [[23, "autorag.nodes.retrieval.base.HybridRetrieval", false]], "hybridrrf (class in autorag.nodes.retrieval.hybrid_rrf)": [[23, "autorag.nodes.retrieval.hybrid_rrf.HybridRRF", false]], "hyde (class in autorag.nodes.queryexpansion.hyde)": [[22, "autorag.nodes.queryexpansion.hyde.HyDE", false]], "is_fields_notnone() (autorag.schema.metricinput.metricinput method)": [[24, "autorag.schema.metricinput.MetricInput.is_fields_notnone", false]], "jina_reranker_pure() (in module autorag.nodes.passagereranker.jina)": [[19, "autorag.nodes.passagereranker.jina.jina_reranker_pure", false]], "jinareranker (class in autorag.nodes.passagereranker.jina)": [[19, "autorag.nodes.passagereranker.jina.JinaReranker", false]], "koreranker (class in autorag.nodes.passagereranker.koreranker)": [[19, "autorag.nodes.passagereranker.koreranker.KoReranker", false]], "koreranker_run_model() (in module autorag.nodes.passagereranker.koreranker)": [[19, "autorag.nodes.passagereranker.koreranker.koreranker_run_model", false]], "langchain_chunk() (in module autorag.data.chunk.langchain_chunk)": [[7, "autorag.data.chunk.langchain_chunk.langchain_chunk", false]], "langchain_chunk_pure() (in module autorag.data.chunk.langchain_chunk)": [[7, "autorag.data.chunk.langchain_chunk.langchain_chunk_pure", false]], "lazyinit (class in autorag)": [[0, "autorag.LazyInit", false]], "llama_index_chunk() (in module autorag.data.chunk.llama_index_chunk)": [[7, "autorag.data.chunk.llama_index_chunk.llama_index_chunk", false]], "llama_index_chunk_pure() (in module autorag.data.chunk.llama_index_chunk)": [[7, "autorag.data.chunk.llama_index_chunk.llama_index_chunk_pure", false]], "llamaindexcompressor (class in autorag.nodes.passagecompressor.base)": [[17, "autorag.nodes.passagecompressor.base.LlamaIndexCompressor", false]], "llamaindexllm (class in autorag.nodes.generator.llama_index_llm)": [[15, "autorag.nodes.generator.llama_index_llm.LlamaIndexLLM", false]], "llm (autorag.nodes.passagecompressor.refine.refine attribute)": [[17, "autorag.nodes.passagecompressor.refine.Refine.llm", false]], "llm (autorag.nodes.passagecompressor.tree_summarize.treesummarize attribute)": [[17, "autorag.nodes.passagecompressor.tree_summarize.TreeSummarize.llm", false]], "llm (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[19, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.llm", false]], "llmlingua_pure() (in module autorag.nodes.passagecompressor.longllmlingua)": [[17, "autorag.nodes.passagecompressor.longllmlingua.llmlingua_pure", false]], "load_bm25_corpus() (in module autorag.nodes.retrieval.bm25)": [[23, "autorag.nodes.retrieval.bm25.load_bm25_corpus", false]], "load_chroma_collection() (in module autorag.nodes.retrieval.vectordb)": [[23, "autorag.nodes.retrieval.vectordb.load_chroma_collection", false]], "load_summary_file() (in module autorag.utils.util)": [[25, "autorag.utils.util.load_summary_file", false]], "load_yaml() (in module autorag.data.utils.util)": [[11, "autorag.data.utils.util.load_yaml", false]], "longcontextreorder (class in autorag.nodes.promptmaker.long_context_reorder)": [[21, "autorag.nodes.promptmaker.long_context_reorder.LongContextReorder", false]], "longllmlingua (class in autorag.nodes.passagecompressor.longllmlingua)": [[17, "autorag.nodes.passagecompressor.longllmlingua.LongLLMLingua", false]], "make_batch() (in module autorag.utils.util)": [[25, "autorag.utils.util.make_batch", false]], "make_combinations() (in module autorag.utils.util)": [[25, "autorag.utils.util.make_combinations", false]], "make_generator_callable_params() (in module autorag.nodes.promptmaker.run)": [[21, "autorag.nodes.promptmaker.run.make_generator_callable_params", false]], "make_llm() (in module autorag.nodes.passagecompressor.base)": [[17, "autorag.nodes.passagecompressor.base.make_llm", false]], "make_metadata_list() (in module autorag.data.chunk.base)": [[7, "autorag.data.chunk.base.make_metadata_list", false]], "make_node_lines() (in module autorag.node_line)": [[0, "autorag.node_line.make_node_lines", false]], "make_retrieval_callable_params() (in module autorag.nodes.queryexpansion.run)": [[22, "autorag.nodes.queryexpansion.run.make_retrieval_callable_params", false]], "make_trial_summary_md() (in module autorag.dashboard)": [[0, "autorag.dashboard.make_trial_summary_md", false]], "measure_speed() (in module autorag.strategy)": [[0, "autorag.strategy.measure_speed", false]], "meteor() (in module autorag.evaluation.metric.generation)": [[13, "autorag.evaluation.metric.generation.meteor", false]], "metricinput (class in autorag.schema.metricinput)": [[24, "autorag.schema.metricinput.MetricInput", false]], "mockembeddingrandom (class in autorag)": [[0, "autorag.MockEmbeddingRandom", false]], "model_computed_fields (autorag.deploy.runnerinput attribute)": [[0, "autorag.deploy.RunnerInput.model_computed_fields", false]], "model_computed_fields (autorag.mockembeddingrandom attribute)": [[0, "autorag.MockEmbeddingRandom.model_computed_fields", false]], "model_computed_fields (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[19, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.model_computed_fields", false]], "model_config (autorag.deploy.runnerinput attribute)": [[0, "autorag.deploy.RunnerInput.model_config", false]], "model_config (autorag.mockembeddingrandom attribute)": [[0, "autorag.MockEmbeddingRandom.model_config", false]], "model_config (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[19, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.model_config", false]], "model_fields (autorag.deploy.runnerinput attribute)": [[0, "autorag.deploy.RunnerInput.model_fields", false]], "model_fields (autorag.mockembeddingrandom attribute)": [[0, "autorag.MockEmbeddingRandom.model_fields", false]], "model_fields (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[19, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.model_fields", false]], "module": [[0, "module-autorag", false], [0, "module-autorag.chunker", false], [0, "module-autorag.cli", false], [0, "module-autorag.dashboard", false], [0, "module-autorag.deploy", false], [0, "module-autorag.evaluator", false], [0, "module-autorag.node_line", false], [0, "module-autorag.strategy", false], [0, "module-autorag.support", false], [0, "module-autorag.validator", false], [0, "module-autorag.web", false], [1, "module-autorag.data", false], [7, "module-autorag.data.chunk", false], [7, "module-autorag.data.chunk.base", false], [7, "module-autorag.data.chunk.langchain_chunk", false], [7, "module-autorag.data.chunk.llama_index_chunk", false], [7, "module-autorag.data.chunk.run", false], [11, "module-autorag.data.utils", false], [11, "module-autorag.data.utils.util", false], [12, "module-autorag.evaluation", false], [12, "module-autorag.evaluation.generation", false], [12, "module-autorag.evaluation.retrieval", false], [12, "module-autorag.evaluation.retrieval_contents", false], [12, "module-autorag.evaluation.util", false], [13, "module-autorag.evaluation.metric", false], [13, "module-autorag.evaluation.metric.generation", false], [13, "module-autorag.evaluation.metric.retrieval", false], [13, "module-autorag.evaluation.metric.retrieval_contents", false], [13, "module-autorag.evaluation.metric.util", false], [14, "module-autorag.nodes", false], [15, "module-autorag.nodes.generator", false], [15, "module-autorag.nodes.generator.base", false], [15, "module-autorag.nodes.generator.llama_index_llm", false], [15, "module-autorag.nodes.generator.openai_llm", false], [15, "module-autorag.nodes.generator.run", false], [15, "module-autorag.nodes.generator.vllm", false], [16, "module-autorag.nodes.passageaugmenter", false], [16, "module-autorag.nodes.passageaugmenter.base", false], [16, "module-autorag.nodes.passageaugmenter.pass_passage_augmenter", false], [16, "module-autorag.nodes.passageaugmenter.prev_next_augmenter", false], [16, "module-autorag.nodes.passageaugmenter.run", false], [17, "module-autorag.nodes.passagecompressor", false], [17, "module-autorag.nodes.passagecompressor.base", false], [17, "module-autorag.nodes.passagecompressor.longllmlingua", false], [17, "module-autorag.nodes.passagecompressor.pass_compressor", false], [17, "module-autorag.nodes.passagecompressor.refine", false], [17, "module-autorag.nodes.passagecompressor.run", false], [17, "module-autorag.nodes.passagecompressor.tree_summarize", false], [18, "module-autorag.nodes.passagefilter", false], [18, "module-autorag.nodes.passagefilter.base", false], [18, "module-autorag.nodes.passagefilter.pass_passage_filter", false], [18, "module-autorag.nodes.passagefilter.percentile_cutoff", false], [18, "module-autorag.nodes.passagefilter.recency", false], [18, "module-autorag.nodes.passagefilter.run", false], [18, "module-autorag.nodes.passagefilter.similarity_percentile_cutoff", false], [18, "module-autorag.nodes.passagefilter.similarity_threshold_cutoff", false], [18, "module-autorag.nodes.passagefilter.threshold_cutoff", false], [19, "module-autorag.nodes.passagereranker", false], [19, "module-autorag.nodes.passagereranker.base", false], [19, "module-autorag.nodes.passagereranker.cohere", false], [19, "module-autorag.nodes.passagereranker.colbert", false], [19, "module-autorag.nodes.passagereranker.flag_embedding", false], [19, "module-autorag.nodes.passagereranker.flag_embedding_llm", false], [19, "module-autorag.nodes.passagereranker.jina", false], [19, "module-autorag.nodes.passagereranker.koreranker", false], [19, "module-autorag.nodes.passagereranker.monot5", false], [19, "module-autorag.nodes.passagereranker.pass_reranker", false], [19, "module-autorag.nodes.passagereranker.rankgpt", false], [19, "module-autorag.nodes.passagereranker.run", false], [19, "module-autorag.nodes.passagereranker.sentence_transformer", false], [19, "module-autorag.nodes.passagereranker.time_reranker", false], [19, "module-autorag.nodes.passagereranker.upr", false], [20, "module-autorag.nodes.passagereranker.tart", false], [20, "module-autorag.nodes.passagereranker.tart.modeling_enc_t5", false], [20, "module-autorag.nodes.passagereranker.tart.tart", false], [20, "module-autorag.nodes.passagereranker.tart.tokenization_enc_t5", false], [21, "module-autorag.nodes.promptmaker", false], [21, "module-autorag.nodes.promptmaker.base", false], [21, "module-autorag.nodes.promptmaker.fstring", false], [21, "module-autorag.nodes.promptmaker.long_context_reorder", false], [21, "module-autorag.nodes.promptmaker.run", false], [21, "module-autorag.nodes.promptmaker.window_replacement", false], [22, "module-autorag.nodes.queryexpansion", false], [22, "module-autorag.nodes.queryexpansion.base", false], [22, "module-autorag.nodes.queryexpansion.hyde", false], [22, "module-autorag.nodes.queryexpansion.multi_query_expansion", false], [22, "module-autorag.nodes.queryexpansion.pass_query_expansion", false], [22, "module-autorag.nodes.queryexpansion.query_decompose", false], [22, "module-autorag.nodes.queryexpansion.run", false], [23, "module-autorag.nodes.retrieval", false], [23, "module-autorag.nodes.retrieval.base", false], [23, "module-autorag.nodes.retrieval.bm25", false], [23, "module-autorag.nodes.retrieval.hybrid_cc", false], [23, "module-autorag.nodes.retrieval.hybrid_rrf", false], [23, "module-autorag.nodes.retrieval.run", false], [23, "module-autorag.nodes.retrieval.vectordb", false], [24, "module-autorag.schema", false], [24, "module-autorag.schema.metricinput", false], [24, "module-autorag.schema.module", false], [24, "module-autorag.schema.node", false], [25, "module-autorag.utils", false], [25, "module-autorag.utils.preprocess", false], [25, "module-autorag.utils.util", false]], "module (autorag.schema.module.module attribute)": [[24, "autorag.schema.module.Module.module", false]], "module (class in autorag.schema.module)": [[24, "autorag.schema.module.Module", false]], "module_param (autorag.schema.module.module attribute)": [[24, "autorag.schema.module.Module.module_param", false]], "module_type (autorag.schema.module.module attribute)": [[24, "autorag.schema.module.Module.module_type", false]], "module_type_exists() (in module autorag.schema.node)": [[24, "autorag.schema.node.module_type_exists", false]], "modules (autorag.schema.node.node attribute)": [[24, "autorag.schema.node.Node.modules", false]], "monot5 (class in autorag.nodes.passagereranker.monot5)": [[19, "autorag.nodes.passagereranker.monot5.MonoT5", false]], "monot5_run_model() (in module autorag.nodes.passagereranker.monot5)": [[19, "autorag.nodes.passagereranker.monot5.monot5_run_model", false]], "multiqueryexpansion (class in autorag.nodes.queryexpansion.multi_query_expansion)": [[22, "autorag.nodes.queryexpansion.multi_query_expansion.MultiQueryExpansion", false]], "node (class in autorag.schema.node)": [[24, "autorag.schema.node.Node", false]], "node_params (autorag.schema.node.node attribute)": [[24, "autorag.schema.node.Node.node_params", false]], "node_type (autorag.schema.node.node attribute)": [[24, "autorag.schema.node.Node.node_type", false]], "node_view() (in module autorag.dashboard)": [[0, "autorag.dashboard.node_view", false]], "normalize_dbsf() (in module autorag.nodes.retrieval.hybrid_cc)": [[23, "autorag.nodes.retrieval.hybrid_cc.normalize_dbsf", false]], "normalize_mm() (in module autorag.nodes.retrieval.hybrid_cc)": [[23, "autorag.nodes.retrieval.hybrid_cc.normalize_mm", false]], "normalize_string() (in module autorag.utils.util)": [[25, "autorag.utils.util.normalize_string", false]], "normalize_tmm() (in module autorag.nodes.retrieval.hybrid_cc)": [[23, "autorag.nodes.retrieval.hybrid_cc.normalize_tmm", false]], "normalize_unicode() (in module autorag.utils.util)": [[25, "autorag.utils.util.normalize_unicode", false]], "normalize_z() (in module autorag.nodes.retrieval.hybrid_cc)": [[23, "autorag.nodes.retrieval.hybrid_cc.normalize_z", false]], "openai_truncate_by_token() (in module autorag.utils.util)": [[25, "autorag.utils.util.openai_truncate_by_token", false]], "openaillm (class in autorag.nodes.generator.openai_llm)": [[15, "autorag.nodes.generator.openai_llm.OpenAILLM", false]], "optimize_hybrid() (in module autorag.nodes.retrieval.run)": [[23, "autorag.nodes.retrieval.run.optimize_hybrid", false]], "parallelize() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[20, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.parallelize", false]], "param_list (autorag.nodes.passagecompressor.base.llamaindexcompressor attribute)": [[17, "autorag.nodes.passagecompressor.base.LlamaIndexCompressor.param_list", false]], "passage_filter_node() (in module autorag.nodes.passagefilter.base)": [[18, "autorag.nodes.passagefilter.base.passage_filter_node", false]], "passcompressor (class in autorag.nodes.passagecompressor.pass_compressor)": [[17, "autorag.nodes.passagecompressor.pass_compressor.PassCompressor", false]], "passpassageaugmenter (class in autorag.nodes.passageaugmenter.pass_passage_augmenter)": [[16, "autorag.nodes.passageaugmenter.pass_passage_augmenter.PassPassageAugmenter", false]], "passpassagefilter (class in autorag.nodes.passagefilter.pass_passage_filter)": [[18, "autorag.nodes.passagefilter.pass_passage_filter.PassPassageFilter", false]], "passqueryexpansion (class in autorag.nodes.queryexpansion.pass_query_expansion)": [[22, "autorag.nodes.queryexpansion.pass_query_expansion.PassQueryExpansion", false]], "passreranker (class in autorag.nodes.passagereranker.pass_reranker)": [[19, "autorag.nodes.passagereranker.pass_reranker.PassReranker", false]], "percentilecutoff (class in autorag.nodes.passagefilter.percentile_cutoff)": [[18, "autorag.nodes.passagefilter.percentile_cutoff.PercentileCutoff", false]], "pop_params() (in module autorag.utils.util)": [[25, "autorag.utils.util.pop_params", false]], "prev_next_augmenter_pure() (in module autorag.nodes.passageaugmenter.prev_next_augmenter)": [[16, "autorag.nodes.passageaugmenter.prev_next_augmenter.prev_next_augmenter_pure", false]], "prevnextpassageaugmenter (class in autorag.nodes.passageaugmenter.prev_next_augmenter)": [[16, "autorag.nodes.passageaugmenter.prev_next_augmenter.PrevNextPassageAugmenter", false]], "process_batch() (in module autorag.utils.util)": [[25, "autorag.utils.util.process_batch", false]], "prompt (autorag.schema.metricinput.metricinput attribute)": [[24, "autorag.schema.metricinput.MetricInput.prompt", false]], "pure() (autorag.nodes.generator.llama_index_llm.llamaindexllm method)": [[15, "autorag.nodes.generator.llama_index_llm.LlamaIndexLLM.pure", false]], "pure() (autorag.nodes.generator.openai_llm.openaillm method)": [[15, "autorag.nodes.generator.openai_llm.OpenAILLM.pure", false]], "pure() (autorag.nodes.generator.vllm.vllm method)": [[15, "autorag.nodes.generator.vllm.Vllm.pure", false]], "pure() (autorag.nodes.passageaugmenter.pass_passage_augmenter.passpassageaugmenter method)": [[16, "autorag.nodes.passageaugmenter.pass_passage_augmenter.PassPassageAugmenter.pure", false]], "pure() (autorag.nodes.passageaugmenter.prev_next_augmenter.prevnextpassageaugmenter method)": [[16, "autorag.nodes.passageaugmenter.prev_next_augmenter.PrevNextPassageAugmenter.pure", false]], "pure() (autorag.nodes.passagecompressor.base.llamaindexcompressor method)": [[17, "autorag.nodes.passagecompressor.base.LlamaIndexCompressor.pure", false]], "pure() (autorag.nodes.passagecompressor.longllmlingua.longllmlingua method)": [[17, "autorag.nodes.passagecompressor.longllmlingua.LongLLMLingua.pure", false]], "pure() (autorag.nodes.passagecompressor.pass_compressor.passcompressor method)": [[17, "autorag.nodes.passagecompressor.pass_compressor.PassCompressor.pure", false]], "pure() (autorag.nodes.passagefilter.pass_passage_filter.passpassagefilter method)": [[18, "autorag.nodes.passagefilter.pass_passage_filter.PassPassageFilter.pure", false]], "pure() (autorag.nodes.passagefilter.percentile_cutoff.percentilecutoff method)": [[18, "autorag.nodes.passagefilter.percentile_cutoff.PercentileCutoff.pure", false]], "pure() (autorag.nodes.passagefilter.recency.recencyfilter method)": [[18, "autorag.nodes.passagefilter.recency.RecencyFilter.pure", false]], "pure() (autorag.nodes.passagefilter.similarity_percentile_cutoff.similaritypercentilecutoff method)": [[18, "autorag.nodes.passagefilter.similarity_percentile_cutoff.SimilarityPercentileCutoff.pure", false]], "pure() (autorag.nodes.passagefilter.similarity_threshold_cutoff.similaritythresholdcutoff method)": [[18, "autorag.nodes.passagefilter.similarity_threshold_cutoff.SimilarityThresholdCutoff.pure", false]], "pure() (autorag.nodes.passagefilter.threshold_cutoff.thresholdcutoff method)": [[18, "autorag.nodes.passagefilter.threshold_cutoff.ThresholdCutoff.pure", false]], "pure() (autorag.nodes.passagereranker.cohere.coherereranker method)": [[19, "autorag.nodes.passagereranker.cohere.CohereReranker.pure", false]], "pure() (autorag.nodes.passagereranker.colbert.colbertreranker method)": [[19, "autorag.nodes.passagereranker.colbert.ColbertReranker.pure", false]], "pure() (autorag.nodes.passagereranker.flag_embedding.flagembeddingreranker method)": [[19, "autorag.nodes.passagereranker.flag_embedding.FlagEmbeddingReranker.pure", false]], "pure() (autorag.nodes.passagereranker.flag_embedding_llm.flagembeddingllmreranker method)": [[19, "autorag.nodes.passagereranker.flag_embedding_llm.FlagEmbeddingLLMReranker.pure", false]], "pure() (autorag.nodes.passagereranker.jina.jinareranker method)": [[19, "autorag.nodes.passagereranker.jina.JinaReranker.pure", false]], "pure() (autorag.nodes.passagereranker.koreranker.koreranker method)": [[19, "autorag.nodes.passagereranker.koreranker.KoReranker.pure", false]], "pure() (autorag.nodes.passagereranker.monot5.monot5 method)": [[19, "autorag.nodes.passagereranker.monot5.MonoT5.pure", false]], "pure() (autorag.nodes.passagereranker.pass_reranker.passreranker method)": [[19, "autorag.nodes.passagereranker.pass_reranker.PassReranker.pure", false]], "pure() (autorag.nodes.passagereranker.rankgpt.rankgpt method)": [[19, "autorag.nodes.passagereranker.rankgpt.RankGPT.pure", false]], "pure() (autorag.nodes.passagereranker.sentence_transformer.sentencetransformerreranker method)": [[19, "autorag.nodes.passagereranker.sentence_transformer.SentenceTransformerReranker.pure", false]], "pure() (autorag.nodes.passagereranker.tart.tart.tart method)": [[20, "autorag.nodes.passagereranker.tart.tart.Tart.pure", false]], "pure() (autorag.nodes.passagereranker.time_reranker.timereranker method)": [[19, "autorag.nodes.passagereranker.time_reranker.TimeReranker.pure", false]], "pure() (autorag.nodes.passagereranker.upr.upr method)": [[19, "autorag.nodes.passagereranker.upr.Upr.pure", false]], "pure() (autorag.nodes.promptmaker.fstring.fstring method)": [[21, "autorag.nodes.promptmaker.fstring.Fstring.pure", false]], "pure() (autorag.nodes.promptmaker.long_context_reorder.longcontextreorder method)": [[21, "autorag.nodes.promptmaker.long_context_reorder.LongContextReorder.pure", false]], "pure() (autorag.nodes.promptmaker.window_replacement.windowreplacement method)": [[21, "autorag.nodes.promptmaker.window_replacement.WindowReplacement.pure", false]], "pure() (autorag.nodes.queryexpansion.hyde.hyde method)": [[22, "autorag.nodes.queryexpansion.hyde.HyDE.pure", false]], "pure() (autorag.nodes.queryexpansion.multi_query_expansion.multiqueryexpansion method)": [[22, "autorag.nodes.queryexpansion.multi_query_expansion.MultiQueryExpansion.pure", false]], "pure() (autorag.nodes.queryexpansion.pass_query_expansion.passqueryexpansion method)": [[22, "autorag.nodes.queryexpansion.pass_query_expansion.PassQueryExpansion.pure", false]], "pure() (autorag.nodes.queryexpansion.query_decompose.querydecompose method)": [[22, "autorag.nodes.queryexpansion.query_decompose.QueryDecompose.pure", false]], "pure() (autorag.nodes.retrieval.base.hybridretrieval method)": [[23, "autorag.nodes.retrieval.base.HybridRetrieval.pure", false]], "pure() (autorag.nodes.retrieval.bm25.bm25 method)": [[23, "autorag.nodes.retrieval.bm25.BM25.pure", false]], "pure() (autorag.nodes.retrieval.vectordb.vectordb method)": [[23, "autorag.nodes.retrieval.vectordb.VectorDB.pure", false]], "queries (autorag.schema.metricinput.metricinput attribute)": [[24, "autorag.schema.metricinput.MetricInput.queries", false]], "query (autorag.deploy.runnerinput attribute)": [[0, "autorag.deploy.RunnerInput.query", false]], "query (autorag.schema.metricinput.metricinput attribute)": [[24, "autorag.schema.metricinput.MetricInput.query", false]], "querydecompose (class in autorag.nodes.queryexpansion.query_decompose)": [[22, "autorag.nodes.queryexpansion.query_decompose.QueryDecompose", false]], "random() (in module autorag)": [[0, "autorag.random", false]], "rankgpt (class in autorag.nodes.passagereranker.rankgpt)": [[19, "autorag.nodes.passagereranker.rankgpt.RankGPT", false]], "rankgpt_rerank_prompt (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[19, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.rankgpt_rerank_prompt", false]], "recencyfilter (class in autorag.nodes.passagefilter.recency)": [[18, "autorag.nodes.passagefilter.recency.RecencyFilter", false]], "reconstruct_list() (in module autorag.utils.util)": [[25, "autorag.utils.util.reconstruct_list", false]], "refine (class in autorag.nodes.passagecompressor.refine)": [[17, "autorag.nodes.passagecompressor.refine.Refine", false]], "replace_value_in_dict() (in module autorag.utils.util)": [[25, "autorag.utils.util.replace_value_in_dict", false]], "restart_trial() (autorag.evaluator.evaluator method)": [[0, "autorag.evaluator.Evaluator.restart_trial", false]], "result_column (autorag.deploy.runnerinput attribute)": [[0, "autorag.deploy.RunnerInput.result_column", false]], "result_to_dataframe() (in module autorag.utils.util)": [[25, "autorag.utils.util.result_to_dataframe", false]], "retrieval_f1() (in module autorag.evaluation.metric.retrieval)": [[13, "autorag.evaluation.metric.retrieval.retrieval_f1", false]], "retrieval_gt (autorag.schema.metricinput.metricinput attribute)": [[24, "autorag.schema.metricinput.MetricInput.retrieval_gt", false]], "retrieval_gt_contents (autorag.schema.metricinput.metricinput attribute)": [[24, "autorag.schema.metricinput.MetricInput.retrieval_gt_contents", false]], "retrieval_map() (in module autorag.evaluation.metric.retrieval)": [[13, "autorag.evaluation.metric.retrieval.retrieval_map", false]], "retrieval_mrr() (in module autorag.evaluation.metric.retrieval)": [[13, "autorag.evaluation.metric.retrieval.retrieval_mrr", false]], "retrieval_ndcg() (in module autorag.evaluation.metric.retrieval)": [[13, "autorag.evaluation.metric.retrieval.retrieval_ndcg", false]], "retrieval_precision() (in module autorag.evaluation.metric.retrieval)": [[13, "autorag.evaluation.metric.retrieval.retrieval_precision", false]], "retrieval_recall() (in module autorag.evaluation.metric.retrieval)": [[13, "autorag.evaluation.metric.retrieval.retrieval_recall", false]], "retrieval_token_f1() (in module autorag.evaluation.metric.retrieval_contents)": [[13, "autorag.evaluation.metric.retrieval_contents.retrieval_token_f1", false]], "retrieval_token_precision() (in module autorag.evaluation.metric.retrieval_contents)": [[13, "autorag.evaluation.metric.retrieval_contents.retrieval_token_precision", false]], "retrieval_token_recall() (in module autorag.evaluation.metric.retrieval_contents)": [[13, "autorag.evaluation.metric.retrieval_contents.retrieval_token_recall", false]], "retrieved_contents (autorag.schema.metricinput.metricinput attribute)": [[24, "autorag.schema.metricinput.MetricInput.retrieved_contents", false]], "retrieved_ids (autorag.schema.metricinput.metricinput attribute)": [[24, "autorag.schema.metricinput.MetricInput.retrieved_ids", false]], "rouge() (in module autorag.evaluation.metric.generation)": [[13, "autorag.evaluation.metric.generation.rouge", false]], "rrf_calculate() (in module autorag.nodes.retrieval.hybrid_rrf)": [[23, "autorag.nodes.retrieval.hybrid_rrf.rrf_calculate", false]], "rrf_pure() (in module autorag.nodes.retrieval.hybrid_rrf)": [[23, "autorag.nodes.retrieval.hybrid_rrf.rrf_pure", false]], "run() (autorag.deploy.runner method)": [[0, "autorag.deploy.Runner.run", false]], "run() (autorag.schema.node.node method)": [[24, "autorag.schema.node.Node.run", false]], "run() (in module autorag.dashboard)": [[0, "autorag.dashboard.run", false]], "run_api_server() (autorag.deploy.runner method)": [[0, "autorag.deploy.Runner.run_api_server", false]], "run_chunker() (in module autorag.data.chunk.run)": [[7, "autorag.data.chunk.run.run_chunker", false]], "run_evaluator() (autorag.nodes.retrieval.hybrid_cc.hybridcc class method)": [[23, "autorag.nodes.retrieval.hybrid_cc.HybridCC.run_evaluator", false]], "run_evaluator() (autorag.nodes.retrieval.hybrid_rrf.hybridrrf class method)": [[23, "autorag.nodes.retrieval.hybrid_rrf.HybridRRF.run_evaluator", false]], "run_generator_node() (in module autorag.nodes.generator.run)": [[15, "autorag.nodes.generator.run.run_generator_node", false]], "run_node (autorag.schema.node.node attribute)": [[24, "autorag.schema.node.Node.run_node", false]], "run_node_line() (in module autorag.node_line)": [[0, "autorag.node_line.run_node_line", false]], "run_passage_augmenter_node() (in module autorag.nodes.passageaugmenter.run)": [[16, "autorag.nodes.passageaugmenter.run.run_passage_augmenter_node", false]], "run_passage_compressor_node() (in module autorag.nodes.passagecompressor.run)": [[17, "autorag.nodes.passagecompressor.run.run_passage_compressor_node", false]], "run_passage_filter_node() (in module autorag.nodes.passagefilter.run)": [[18, "autorag.nodes.passagefilter.run.run_passage_filter_node", false]], "run_passage_reranker_node() (in module autorag.nodes.passagereranker.run)": [[19, "autorag.nodes.passagereranker.run.run_passage_reranker_node", false]], "run_prompt_maker_node() (in module autorag.nodes.promptmaker.run)": [[21, "autorag.nodes.promptmaker.run.run_prompt_maker_node", false]], "run_query_embedding_batch() (in module autorag.nodes.retrieval.vectordb)": [[23, "autorag.nodes.retrieval.vectordb.run_query_embedding_batch", false]], "run_query_expansion_node() (in module autorag.nodes.queryexpansion.run)": [[22, "autorag.nodes.queryexpansion.run.run_query_expansion_node", false]], "run_retrieval_node() (in module autorag.nodes.retrieval.run)": [[23, "autorag.nodes.retrieval.run.run_retrieval_node", false]], "run_web() (autorag.deploy.runner method)": [[0, "autorag.deploy.Runner.run_web", false]], "runner (class in autorag.deploy)": [[0, "autorag.deploy.Runner", false]], "runnerinput (class in autorag.deploy)": [[0, "autorag.deploy.RunnerInput", false]], "save_parquet_safe() (in module autorag.utils.util)": [[25, "autorag.utils.util.save_parquet_safe", false]], "select_best() (in module autorag.strategy)": [[0, "autorag.strategy.select_best", false]], "select_best_average() (in module autorag.strategy)": [[0, "autorag.strategy.select_best_average", false]], "select_best_rr() (in module autorag.strategy)": [[0, "autorag.strategy.select_best_rr", false]], "select_bm25_tokenizer() (in module autorag.nodes.retrieval.bm25)": [[23, "autorag.nodes.retrieval.bm25.select_bm25_tokenizer", false]], "select_normalize_mean() (in module autorag.strategy)": [[0, "autorag.strategy.select_normalize_mean", false]], "select_top_k() (in module autorag.utils.util)": [[25, "autorag.utils.util.select_top_k", false]], "sem_score() (in module autorag.evaluation.metric.generation)": [[13, "autorag.evaluation.metric.generation.sem_score", false]], "sentence_transformer_run_model() (in module autorag.nodes.passagereranker.sentence_transformer)": [[19, "autorag.nodes.passagereranker.sentence_transformer.sentence_transformer_run_model", false]], "sentencetransformerreranker (class in autorag.nodes.passagereranker.sentence_transformer)": [[19, "autorag.nodes.passagereranker.sentence_transformer.SentenceTransformerReranker", false]], "set_initial_state() (in module autorag.web)": [[0, "autorag.web.set_initial_state", false]], "set_input_embeddings() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[20, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.set_input_embeddings", false]], "set_page_config() (in module autorag.web)": [[0, "autorag.web.set_page_config", false]], "set_page_header() (in module autorag.web)": [[0, "autorag.web.set_page_header", false]], "similaritypercentilecutoff (class in autorag.nodes.passagefilter.similarity_percentile_cutoff)": [[18, "autorag.nodes.passagefilter.similarity_percentile_cutoff.SimilarityPercentileCutoff", false]], "similaritythresholdcutoff (class in autorag.nodes.passagefilter.similarity_threshold_cutoff)": [[18, "autorag.nodes.passagefilter.similarity_threshold_cutoff.SimilarityThresholdCutoff", false]], "single_token_f1() (in module autorag.evaluation.metric.retrieval_contents)": [[13, "autorag.evaluation.metric.retrieval_contents.single_token_f1", false]], "slice_tensor() (in module autorag.nodes.passagereranker.colbert)": [[19, "autorag.nodes.passagereranker.colbert.slice_tensor", false]], "slice_tokenizer_result() (in module autorag.nodes.passagereranker.colbert)": [[19, "autorag.nodes.passagereranker.colbert.slice_tokenizer_result", false]], "sort_by_scores() (autorag.nodes.passageaugmenter.base.basepassageaugmenter static method)": [[16, "autorag.nodes.passageaugmenter.base.BasePassageAugmenter.sort_by_scores", false]], "sort_by_scores() (in module autorag.utils.util)": [[25, "autorag.utils.util.sort_by_scores", false]], "split_by_sentence_kiwi() (in module autorag.data)": [[1, "autorag.data.split_by_sentence_kiwi", false]], "split_dataframe() (in module autorag.utils.util)": [[25, "autorag.utils.util.split_dataframe", false]], "start_chunking() (autorag.chunker.chunker method)": [[0, "autorag.chunker.Chunker.start_chunking", false]], "start_trial() (autorag.evaluator.evaluator method)": [[0, "autorag.evaluator.Evaluator.start_trial", false]], "strategy (autorag.schema.node.node attribute)": [[24, "autorag.schema.node.Node.strategy", false]], "summary_df_to_yaml() (in module autorag.deploy)": [[0, "autorag.deploy.summary_df_to_yaml", false]], "tart (class in autorag.nodes.passagereranker.tart.tart)": [[20, "autorag.nodes.passagereranker.tart.tart.Tart", false]], "tart_run_model() (in module autorag.nodes.passagereranker.tart.tart)": [[20, "autorag.nodes.passagereranker.tart.tart.tart_run_model", false]], "thresholdcutoff (class in autorag.nodes.passagefilter.threshold_cutoff)": [[18, "autorag.nodes.passagefilter.threshold_cutoff.ThresholdCutoff", false]], "timereranker (class in autorag.nodes.passagereranker.time_reranker)": [[19, "autorag.nodes.passagereranker.time_reranker.TimeReranker", false]], "to_list() (in module autorag.utils.util)": [[25, "autorag.utils.util.to_list", false]], "tokenize() (in module autorag.nodes.retrieval.bm25)": [[23, "autorag.nodes.retrieval.bm25.tokenize", false]], "tokenize_ko_kiwi() (in module autorag.nodes.retrieval.bm25)": [[23, "autorag.nodes.retrieval.bm25.tokenize_ko_kiwi", false]], "tokenize_ko_kkma() (in module autorag.nodes.retrieval.bm25)": [[23, "autorag.nodes.retrieval.bm25.tokenize_ko_kkma", false]], "tokenize_ko_okt() (in module autorag.nodes.retrieval.bm25)": [[23, "autorag.nodes.retrieval.bm25.tokenize_ko_okt", false]], "tokenize_porter_stemmer() (in module autorag.nodes.retrieval.bm25)": [[23, "autorag.nodes.retrieval.bm25.tokenize_porter_stemmer", false]], "tokenize_space() (in module autorag.nodes.retrieval.bm25)": [[23, "autorag.nodes.retrieval.bm25.tokenize_space", false]], "top_n (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[19, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.top_n", false]], "treesummarize (class in autorag.nodes.passagecompressor.tree_summarize)": [[17, "autorag.nodes.passagecompressor.tree_summarize.TreeSummarize", false]], "truncate_by_token() (in module autorag.nodes.generator.openai_llm)": [[15, "autorag.nodes.generator.openai_llm.truncate_by_token", false]], "upr (class in autorag.nodes.passagereranker.upr)": [[19, "autorag.nodes.passagereranker.upr.Upr", false]], "uprscorer (class in autorag.nodes.passagereranker.upr)": [[19, "autorag.nodes.passagereranker.upr.UPRScorer", false]], "validate() (autorag.validator.validator method)": [[0, "autorag.validator.Validator.validate", false]], "validate_corpus_dataset() (in module autorag.utils.preprocess)": [[25, "autorag.utils.preprocess.validate_corpus_dataset", false]], "validate_qa_dataset() (in module autorag.utils.preprocess)": [[25, "autorag.utils.preprocess.validate_qa_dataset", false]], "validate_qa_from_corpus_dataset() (in module autorag.utils.preprocess)": [[25, "autorag.utils.preprocess.validate_qa_from_corpus_dataset", false]], "validate_strategy_inputs() (in module autorag.strategy)": [[0, "autorag.strategy.validate_strategy_inputs", false]], "validator (class in autorag.validator)": [[0, "autorag.validator.Validator", false]], "vectordb (class in autorag.nodes.retrieval.vectordb)": [[23, "autorag.nodes.retrieval.vectordb.VectorDB", false]], "vectordb_ingest() (in module autorag.nodes.retrieval.vectordb)": [[23, "autorag.nodes.retrieval.vectordb.vectordb_ingest", false]], "vectordb_pure() (in module autorag.nodes.retrieval.vectordb)": [[23, "autorag.nodes.retrieval.vectordb.vectordb_pure", false]], "verbose (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[19, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.verbose", false]], "vllm (class in autorag.nodes.generator.vllm)": [[15, "autorag.nodes.generator.vllm.Vllm", false]], "windowreplacement (class in autorag.nodes.promptmaker.window_replacement)": [[21, "autorag.nodes.promptmaker.window_replacement.WindowReplacement", false]], "yaml_to_markdown() (in module autorag.dashboard)": [[0, "autorag.dashboard.yaml_to_markdown", false]]}, "objects": {"": [[0, 0, 0, "-", "autorag"]], "autorag": [[0, 1, 1, "", "LazyInit"], [0, 1, 1, "", "MockEmbeddingRandom"], [0, 0, 0, "-", "chunker"], [0, 0, 0, "-", "cli"], [0, 0, 0, "-", "dashboard"], [1, 0, 0, "-", "data"], [0, 0, 0, "-", "deploy"], [12, 0, 0, "-", "evaluation"], [0, 0, 0, "-", "evaluator"], [0, 4, 1, "", "handle_exception"], [0, 0, 0, "-", "node_line"], [14, 0, 0, "-", "nodes"], [0, 4, 1, "", "random"], [24, 0, 0, "-", "schema"], [0, 0, 0, "-", "strategy"], [0, 0, 0, "-", "support"], [25, 0, 0, "-", "utils"], [0, 0, 0, "-", "validator"], [0, 0, 0, "-", "web"]], "autorag.MockEmbeddingRandom": [[0, 2, 1, "", "embed_dim"], [0, 2, 1, "", "model_computed_fields"], [0, 2, 1, "", "model_config"], [0, 2, 1, "", "model_fields"]], "autorag.chunker": [[0, 1, 1, "", "Chunker"]], "autorag.chunker.Chunker": [[0, 3, 1, "", "from_parquet"], [0, 3, 1, "", "start_chunking"]], "autorag.dashboard": [[0, 4, 1, "", "find_node_dir"], [0, 4, 1, "", "get_metric_values"], [0, 4, 1, "", "make_trial_summary_md"], [0, 4, 1, "", "node_view"], [0, 4, 1, "", "run"], [0, 4, 1, "", "yaml_to_markdown"]], "autorag.data": [[7, 0, 0, "-", "chunk"], [1, 4, 1, "", "split_by_sentence_kiwi"], [11, 0, 0, "-", "utils"]], "autorag.data.chunk": [[7, 0, 0, "-", "base"], [7, 0, 0, "-", "langchain_chunk"], [7, 0, 0, "-", "llama_index_chunk"], [7, 0, 0, "-", "run"]], "autorag.data.chunk.base": [[7, 4, 1, "", "add_file_name"], [7, 4, 1, "", "chunker_node"], [7, 4, 1, "", "make_metadata_list"]], "autorag.data.chunk.langchain_chunk": [[7, 4, 1, "", "langchain_chunk"], [7, 4, 1, "", "langchain_chunk_pure"]], "autorag.data.chunk.llama_index_chunk": [[7, 4, 1, "", "llama_index_chunk"], [7, 4, 1, "", "llama_index_chunk_pure"]], "autorag.data.chunk.run": [[7, 4, 1, "", "run_chunker"]], "autorag.data.utils": [[11, 0, 0, "-", "util"]], "autorag.data.utils.util": [[11, 4, 1, "", "add_essential_metadata"], [11, 4, 1, "", "add_essential_metadata_llama_text_node"], [11, 4, 1, "", "corpus_df_to_langchain_documents"], [11, 4, 1, "", "get_file_metadata"], [11, 4, 1, "", "get_param_combinations"], [11, 4, 1, "", "get_start_end_idx"], [11, 4, 1, "", "load_yaml"]], "autorag.deploy": [[0, 1, 1, "", "Runner"], [0, 1, 1, "", "RunnerInput"], [0, 4, 1, "", "extract_best_config"], [0, 4, 1, "", "extract_node_line_names"], [0, 4, 1, "", "extract_node_strategy"], [0, 4, 1, "", "summary_df_to_yaml"]], "autorag.deploy.Runner": [[0, 3, 1, "", "from_trial_folder"], [0, 3, 1, "", "from_yaml"], [0, 3, 1, "", "run"], [0, 3, 1, "", "run_api_server"], [0, 3, 1, "", "run_web"]], "autorag.deploy.RunnerInput": [[0, 2, 1, "", "model_computed_fields"], [0, 2, 1, "", "model_config"], [0, 2, 1, "", "model_fields"], [0, 2, 1, "", "query"], [0, 2, 1, "", "result_column"]], "autorag.evaluation": [[12, 0, 0, "-", "generation"], [13, 0, 0, "-", "metric"], [12, 0, 0, "-", "retrieval"], [12, 0, 0, "-", "retrieval_contents"], [12, 0, 0, "-", "util"]], "autorag.evaluation.generation": [[12, 4, 1, "", "evaluate_generation"]], "autorag.evaluation.metric": [[13, 0, 0, "-", "generation"], [13, 0, 0, "-", "retrieval"], [13, 0, 0, "-", "retrieval_contents"], [13, 0, 0, "-", "util"]], "autorag.evaluation.metric.generation": [[13, 4, 1, "", "async_g_eval"], [13, 4, 1, "", "bert_score"], [13, 4, 1, "", "bleu"], [13, 4, 1, "", "g_eval"], [13, 4, 1, "", "huggingface_evaluate"], [13, 4, 1, "", "meteor"], [13, 4, 1, "", "rouge"], [13, 4, 1, "", "sem_score"]], "autorag.evaluation.metric.retrieval": [[13, 4, 1, "", "retrieval_f1"], [13, 4, 1, "", "retrieval_map"], [13, 4, 1, "", "retrieval_mrr"], [13, 4, 1, "", "retrieval_ndcg"], [13, 4, 1, "", "retrieval_precision"], [13, 4, 1, "", "retrieval_recall"]], "autorag.evaluation.metric.retrieval_contents": [[13, 4, 1, "", "retrieval_token_f1"], [13, 4, 1, "", "retrieval_token_precision"], [13, 4, 1, "", "retrieval_token_recall"], [13, 4, 1, "", "single_token_f1"]], "autorag.evaluation.metric.util": [[13, 4, 1, "", "autorag_metric"], [13, 4, 1, "", "autorag_metric_loop"], [13, 4, 1, "", "calculate_cosine_similarity"]], "autorag.evaluation.retrieval": [[12, 4, 1, "", "evaluate_retrieval"]], "autorag.evaluation.retrieval_contents": [[12, 4, 1, "", "evaluate_retrieval_contents"]], "autorag.evaluation.util": [[12, 4, 1, "", "cast_embedding_model"], [12, 4, 1, "", "cast_metrics"]], "autorag.evaluator": [[0, 1, 1, "", "Evaluator"]], "autorag.evaluator.Evaluator": [[0, 3, 1, "", "restart_trial"], [0, 3, 1, "", "start_trial"]], "autorag.node_line": [[0, 4, 1, "", "make_node_lines"], [0, 4, 1, "", "run_node_line"]], "autorag.nodes": [[15, 0, 0, "-", "generator"], [16, 0, 0, "-", "passageaugmenter"], [17, 0, 0, "-", "passagecompressor"], [18, 0, 0, "-", "passagefilter"], [19, 0, 0, "-", "passagereranker"], [21, 0, 0, "-", "promptmaker"], [22, 0, 0, "-", "queryexpansion"], [23, 0, 0, "-", "retrieval"]], "autorag.nodes.generator": [[15, 0, 0, "-", "base"], [15, 0, 0, "-", "llama_index_llm"], [15, 0, 0, "-", "openai_llm"], [15, 0, 0, "-", "run"], [15, 0, 0, "-", "vllm"]], "autorag.nodes.generator.base": [[15, 1, 1, "", "BaseGenerator"], [15, 4, 1, "", "generator_node"]], "autorag.nodes.generator.base.BaseGenerator": [[15, 3, 1, "", "cast_to_run"]], "autorag.nodes.generator.llama_index_llm": [[15, 1, 1, "", "LlamaIndexLLM"]], "autorag.nodes.generator.llama_index_llm.LlamaIndexLLM": [[15, 3, 1, "", "pure"]], "autorag.nodes.generator.openai_llm": [[15, 1, 1, "", "OpenAILLM"], [15, 4, 1, "", "truncate_by_token"]], "autorag.nodes.generator.openai_llm.OpenAILLM": [[15, 3, 1, "", "get_result"], [15, 3, 1, "", "get_result_o1"], [15, 3, 1, "", "pure"]], "autorag.nodes.generator.run": [[15, 4, 1, "", "evaluate_generator_node"], [15, 4, 1, "", "run_generator_node"]], "autorag.nodes.generator.vllm": [[15, 1, 1, "", "Vllm"]], "autorag.nodes.generator.vllm.Vllm": [[15, 3, 1, "", "pure"]], "autorag.nodes.passageaugmenter": [[16, 0, 0, "-", "base"], [16, 0, 0, "-", "pass_passage_augmenter"], [16, 0, 0, "-", "prev_next_augmenter"], [16, 0, 0, "-", "run"]], "autorag.nodes.passageaugmenter.base": [[16, 1, 1, "", "BasePassageAugmenter"]], "autorag.nodes.passageaugmenter.base.BasePassageAugmenter": [[16, 3, 1, "", "cast_to_run"], [16, 3, 1, "", "sort_by_scores"]], "autorag.nodes.passageaugmenter.pass_passage_augmenter": [[16, 1, 1, "", "PassPassageAugmenter"]], "autorag.nodes.passageaugmenter.pass_passage_augmenter.PassPassageAugmenter": [[16, 3, 1, "", "pure"]], "autorag.nodes.passageaugmenter.prev_next_augmenter": [[16, 1, 1, "", "PrevNextPassageAugmenter"], [16, 4, 1, "", "prev_next_augmenter_pure"]], "autorag.nodes.passageaugmenter.prev_next_augmenter.PrevNextPassageAugmenter": [[16, 3, 1, "", "pure"]], "autorag.nodes.passageaugmenter.run": [[16, 4, 1, "", "run_passage_augmenter_node"]], "autorag.nodes.passagecompressor": [[17, 0, 0, "-", "base"], [17, 0, 0, "-", "longllmlingua"], [17, 0, 0, "-", "pass_compressor"], [17, 0, 0, "-", "refine"], [17, 0, 0, "-", "run"], [17, 0, 0, "-", "tree_summarize"]], "autorag.nodes.passagecompressor.base": [[17, 1, 1, "", "BasePassageCompressor"], [17, 1, 1, "", "LlamaIndexCompressor"], [17, 4, 1, "", "make_llm"]], "autorag.nodes.passagecompressor.base.BasePassageCompressor": [[17, 3, 1, "", "cast_to_run"]], "autorag.nodes.passagecompressor.base.LlamaIndexCompressor": [[17, 2, 1, "", "param_list"], [17, 3, 1, "", "pure"]], "autorag.nodes.passagecompressor.longllmlingua": [[17, 1, 1, "", "LongLLMLingua"], [17, 4, 1, "", "llmlingua_pure"]], "autorag.nodes.passagecompressor.longllmlingua.LongLLMLingua": [[17, 3, 1, "", "pure"]], "autorag.nodes.passagecompressor.pass_compressor": [[17, 1, 1, "", "PassCompressor"]], "autorag.nodes.passagecompressor.pass_compressor.PassCompressor": [[17, 3, 1, "", "pure"]], "autorag.nodes.passagecompressor.refine": [[17, 1, 1, "", "Refine"]], "autorag.nodes.passagecompressor.refine.Refine": [[17, 2, 1, "", "llm"]], "autorag.nodes.passagecompressor.run": [[17, 4, 1, "", "evaluate_passage_compressor_node"], [17, 4, 1, "", "run_passage_compressor_node"]], "autorag.nodes.passagecompressor.tree_summarize": [[17, 1, 1, "", "TreeSummarize"]], "autorag.nodes.passagecompressor.tree_summarize.TreeSummarize": [[17, 2, 1, "", "llm"]], "autorag.nodes.passagefilter": [[18, 0, 0, "-", "base"], [18, 0, 0, "-", "pass_passage_filter"], [18, 0, 0, "-", "percentile_cutoff"], [18, 0, 0, "-", "recency"], [18, 0, 0, "-", "run"], [18, 0, 0, "-", "similarity_percentile_cutoff"], [18, 0, 0, "-", "similarity_threshold_cutoff"], [18, 0, 0, "-", "threshold_cutoff"]], "autorag.nodes.passagefilter.base": [[18, 1, 1, "", "BasePassageFilter"], [18, 4, 1, "", "passage_filter_node"]], "autorag.nodes.passagefilter.base.BasePassageFilter": [[18, 3, 1, "", "cast_to_run"]], "autorag.nodes.passagefilter.pass_passage_filter": [[18, 1, 1, "", "PassPassageFilter"]], "autorag.nodes.passagefilter.pass_passage_filter.PassPassageFilter": [[18, 3, 1, "", "pure"]], "autorag.nodes.passagefilter.percentile_cutoff": [[18, 1, 1, "", "PercentileCutoff"]], "autorag.nodes.passagefilter.percentile_cutoff.PercentileCutoff": [[18, 3, 1, "", "pure"]], "autorag.nodes.passagefilter.recency": [[18, 1, 1, "", "RecencyFilter"]], "autorag.nodes.passagefilter.recency.RecencyFilter": [[18, 3, 1, "", "pure"]], "autorag.nodes.passagefilter.run": [[18, 4, 1, "", "run_passage_filter_node"]], "autorag.nodes.passagefilter.similarity_percentile_cutoff": [[18, 1, 1, "", "SimilarityPercentileCutoff"]], "autorag.nodes.passagefilter.similarity_percentile_cutoff.SimilarityPercentileCutoff": [[18, 3, 1, "", "pure"]], "autorag.nodes.passagefilter.similarity_threshold_cutoff": [[18, 1, 1, "", "SimilarityThresholdCutoff"]], "autorag.nodes.passagefilter.similarity_threshold_cutoff.SimilarityThresholdCutoff": [[18, 3, 1, "", "pure"]], "autorag.nodes.passagefilter.threshold_cutoff": [[18, 1, 1, "", "ThresholdCutoff"]], "autorag.nodes.passagefilter.threshold_cutoff.ThresholdCutoff": [[18, 3, 1, "", "pure"]], "autorag.nodes.passagereranker": [[19, 0, 0, "-", "base"], [19, 0, 0, "-", "cohere"], [19, 0, 0, "-", "colbert"], [19, 0, 0, "-", "flag_embedding"], [19, 0, 0, "-", "flag_embedding_llm"], [19, 0, 0, "-", "jina"], [19, 0, 0, "-", "koreranker"], [19, 0, 0, "-", "monot5"], [19, 0, 0, "-", "pass_reranker"], [19, 0, 0, "-", "rankgpt"], [19, 0, 0, "-", "run"], [19, 0, 0, "-", "sentence_transformer"], [20, 0, 0, "-", "tart"], [19, 0, 0, "-", "time_reranker"], [19, 0, 0, "-", "upr"]], "autorag.nodes.passagereranker.base": [[19, 1, 1, "", "BasePassageReranker"]], "autorag.nodes.passagereranker.base.BasePassageReranker": [[19, 3, 1, "", "cast_to_run"]], "autorag.nodes.passagereranker.cohere": [[19, 1, 1, "", "CohereReranker"], [19, 4, 1, "", "cohere_rerank_pure"]], "autorag.nodes.passagereranker.cohere.CohereReranker": [[19, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.colbert": [[19, 1, 1, "", "ColbertReranker"], [19, 4, 1, "", "get_colbert_embedding_batch"], [19, 4, 1, "", "get_colbert_score"], [19, 4, 1, "", "slice_tensor"], [19, 4, 1, "", "slice_tokenizer_result"]], "autorag.nodes.passagereranker.colbert.ColbertReranker": [[19, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.flag_embedding": [[19, 1, 1, "", "FlagEmbeddingReranker"], [19, 4, 1, "", "flag_embedding_run_model"]], "autorag.nodes.passagereranker.flag_embedding.FlagEmbeddingReranker": [[19, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.flag_embedding_llm": [[19, 1, 1, "", "FlagEmbeddingLLMReranker"]], "autorag.nodes.passagereranker.flag_embedding_llm.FlagEmbeddingLLMReranker": [[19, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.jina": [[19, 1, 1, "", "JinaReranker"], [19, 4, 1, "", "jina_reranker_pure"]], "autorag.nodes.passagereranker.jina.JinaReranker": [[19, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.koreranker": [[19, 1, 1, "", "KoReranker"], [19, 4, 1, "", "exp_normalize"], [19, 4, 1, "", "koreranker_run_model"]], "autorag.nodes.passagereranker.koreranker.KoReranker": [[19, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.monot5": [[19, 1, 1, "", "MonoT5"], [19, 4, 1, "", "monot5_run_model"]], "autorag.nodes.passagereranker.monot5.MonoT5": [[19, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.pass_reranker": [[19, 1, 1, "", "PassReranker"]], "autorag.nodes.passagereranker.pass_reranker.PassReranker": [[19, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.rankgpt": [[19, 1, 1, "", "AsyncRankGPTRerank"], [19, 1, 1, "", "RankGPT"]], "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank": [[19, 3, 1, "", "async_postprocess_nodes"], [19, 3, 1, "", "async_run_llm"], [19, 2, 1, "", "llm"], [19, 2, 1, "", "model_computed_fields"], [19, 2, 1, "", "model_config"], [19, 2, 1, "", "model_fields"], [19, 2, 1, "", "rankgpt_rerank_prompt"], [19, 2, 1, "", "top_n"], [19, 2, 1, "", "verbose"]], "autorag.nodes.passagereranker.rankgpt.RankGPT": [[19, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.run": [[19, 4, 1, "", "run_passage_reranker_node"]], "autorag.nodes.passagereranker.sentence_transformer": [[19, 1, 1, "", "SentenceTransformerReranker"], [19, 4, 1, "", "sentence_transformer_run_model"]], "autorag.nodes.passagereranker.sentence_transformer.SentenceTransformerReranker": [[19, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.tart": [[20, 0, 0, "-", "modeling_enc_t5"], [20, 0, 0, "-", "tart"], [20, 0, 0, "-", "tokenization_enc_t5"]], "autorag.nodes.passagereranker.tart.modeling_enc_t5": [[20, 1, 1, "", "EncT5ForSequenceClassification"]], "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification": [[20, 3, 1, "", "deparallelize"], [20, 3, 1, "", "forward"], [20, 3, 1, "", "get_encoder"], [20, 3, 1, "", "get_input_embeddings"], [20, 3, 1, "", "parallelize"], [20, 3, 1, "", "set_input_embeddings"]], "autorag.nodes.passagereranker.tart.tart": [[20, 1, 1, "", "Tart"], [20, 4, 1, "", "tart_run_model"]], "autorag.nodes.passagereranker.tart.tart.Tart": [[20, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.tart.tokenization_enc_t5": [[20, 1, 1, "", "EncT5Tokenizer"]], "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer": [[20, 3, 1, "", "build_inputs_with_special_tokens"], [20, 3, 1, "", "create_token_type_ids_from_sequences"], [20, 3, 1, "", "get_special_tokens_mask"]], "autorag.nodes.passagereranker.time_reranker": [[19, 1, 1, "", "TimeReranker"]], "autorag.nodes.passagereranker.time_reranker.TimeReranker": [[19, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.upr": [[19, 1, 1, "", "UPRScorer"], [19, 1, 1, "", "Upr"]], "autorag.nodes.passagereranker.upr.UPRScorer": [[19, 3, 1, "", "compute"]], "autorag.nodes.passagereranker.upr.Upr": [[19, 3, 1, "", "pure"]], "autorag.nodes.promptmaker": [[21, 0, 0, "-", "base"], [21, 0, 0, "-", "fstring"], [21, 0, 0, "-", "long_context_reorder"], [21, 0, 0, "-", "run"], [21, 0, 0, "-", "window_replacement"]], "autorag.nodes.promptmaker.base": [[21, 1, 1, "", "BasePromptMaker"]], "autorag.nodes.promptmaker.base.BasePromptMaker": [[21, 3, 1, "", "cast_to_run"]], "autorag.nodes.promptmaker.fstring": [[21, 1, 1, "", "Fstring"]], "autorag.nodes.promptmaker.fstring.Fstring": [[21, 3, 1, "", "pure"]], "autorag.nodes.promptmaker.long_context_reorder": [[21, 1, 1, "", "LongContextReorder"]], "autorag.nodes.promptmaker.long_context_reorder.LongContextReorder": [[21, 3, 1, "", "pure"]], "autorag.nodes.promptmaker.run": [[21, 4, 1, "", "evaluate_generator_result"], [21, 4, 1, "", "evaluate_one_prompt_maker_node"], [21, 4, 1, "", "make_generator_callable_params"], [21, 4, 1, "", "run_prompt_maker_node"]], "autorag.nodes.promptmaker.window_replacement": [[21, 1, 1, "", "WindowReplacement"]], "autorag.nodes.promptmaker.window_replacement.WindowReplacement": [[21, 3, 1, "", "pure"]], "autorag.nodes.queryexpansion": [[22, 0, 0, "-", "base"], [22, 0, 0, "-", "hyde"], [22, 0, 0, "-", "multi_query_expansion"], [22, 0, 0, "-", "pass_query_expansion"], [22, 0, 0, "-", "query_decompose"], [22, 0, 0, "-", "run"]], "autorag.nodes.queryexpansion.base": [[22, 1, 1, "", "BaseQueryExpansion"], [22, 4, 1, "", "check_expanded_query"]], "autorag.nodes.queryexpansion.base.BaseQueryExpansion": [[22, 3, 1, "", "cast_to_run"]], "autorag.nodes.queryexpansion.hyde": [[22, 1, 1, "", "HyDE"]], "autorag.nodes.queryexpansion.hyde.HyDE": [[22, 3, 1, "", "pure"]], "autorag.nodes.queryexpansion.multi_query_expansion": [[22, 1, 1, "", "MultiQueryExpansion"], [22, 4, 1, "", "get_multi_query_expansion"]], "autorag.nodes.queryexpansion.multi_query_expansion.MultiQueryExpansion": [[22, 3, 1, "", "pure"]], "autorag.nodes.queryexpansion.pass_query_expansion": [[22, 1, 1, "", "PassQueryExpansion"]], "autorag.nodes.queryexpansion.pass_query_expansion.PassQueryExpansion": [[22, 3, 1, "", "pure"]], "autorag.nodes.queryexpansion.query_decompose": [[22, 1, 1, "", "QueryDecompose"], [22, 4, 1, "", "get_query_decompose"]], "autorag.nodes.queryexpansion.query_decompose.QueryDecompose": [[22, 3, 1, "", "pure"]], "autorag.nodes.queryexpansion.run": [[22, 4, 1, "", "evaluate_one_query_expansion_node"], [22, 4, 1, "", "make_retrieval_callable_params"], [22, 4, 1, "", "run_query_expansion_node"]], "autorag.nodes.retrieval": [[23, 0, 0, "-", "base"], [23, 0, 0, "-", "bm25"], [23, 0, 0, "-", "hybrid_cc"], [23, 0, 0, "-", "hybrid_rrf"], [23, 0, 0, "-", "run"], [23, 0, 0, "-", "vectordb"]], "autorag.nodes.retrieval.base": [[23, 1, 1, "", "BaseRetrieval"], [23, 1, 1, "", "HybridRetrieval"], [23, 4, 1, "", "cast_queries"], [23, 4, 1, "", "evenly_distribute_passages"], [23, 4, 1, "", "get_bm25_pkl_name"]], "autorag.nodes.retrieval.base.BaseRetrieval": [[23, 3, 1, "", "cast_to_run"]], "autorag.nodes.retrieval.base.HybridRetrieval": [[23, 3, 1, "", "pure"]], "autorag.nodes.retrieval.bm25": [[23, 1, 1, "", "BM25"], [23, 4, 1, "", "bm25_ingest"], [23, 4, 1, "", "bm25_pure"], [23, 4, 1, "", "get_bm25_scores"], [23, 4, 1, "", "load_bm25_corpus"], [23, 4, 1, "", "select_bm25_tokenizer"], [23, 4, 1, "", "tokenize"], [23, 4, 1, "", "tokenize_ko_kiwi"], [23, 4, 1, "", "tokenize_ko_kkma"], [23, 4, 1, "", "tokenize_ko_okt"], [23, 4, 1, "", "tokenize_porter_stemmer"], [23, 4, 1, "", "tokenize_space"]], "autorag.nodes.retrieval.bm25.BM25": [[23, 3, 1, "", "pure"]], "autorag.nodes.retrieval.hybrid_cc": [[23, 1, 1, "", "HybridCC"], [23, 4, 1, "", "fuse_per_query"], [23, 4, 1, "", "hybrid_cc"], [23, 4, 1, "", "normalize_dbsf"], [23, 4, 1, "", "normalize_mm"], [23, 4, 1, "", "normalize_tmm"], [23, 4, 1, "", "normalize_z"]], "autorag.nodes.retrieval.hybrid_cc.HybridCC": [[23, 3, 1, "", "run_evaluator"]], "autorag.nodes.retrieval.hybrid_rrf": [[23, 1, 1, "", "HybridRRF"], [23, 4, 1, "", "hybrid_rrf"], [23, 4, 1, "", "rrf_calculate"], [23, 4, 1, "", "rrf_pure"]], "autorag.nodes.retrieval.hybrid_rrf.HybridRRF": [[23, 3, 1, "", "run_evaluator"]], "autorag.nodes.retrieval.run": [[23, 4, 1, "", "edit_summary_df_params"], [23, 4, 1, "", "evaluate_retrieval_node"], [23, 4, 1, "", "find_unique_elems"], [23, 4, 1, "", "get_hybrid_execution_times"], [23, 4, 1, "", "get_ids_and_scores"], [23, 4, 1, "", "get_scores_by_ids"], [23, 4, 1, "", "optimize_hybrid"], [23, 4, 1, "", "run_retrieval_node"]], "autorag.nodes.retrieval.vectordb": [[23, 1, 1, "", "VectorDB"], [23, 4, 1, "", "get_id_scores"], [23, 4, 1, "", "load_chroma_collection"], [23, 4, 1, "", "run_query_embedding_batch"], [23, 4, 1, "", "vectordb_ingest"], [23, 4, 1, "", "vectordb_pure"]], "autorag.nodes.retrieval.vectordb.VectorDB": [[23, 3, 1, "", "pure"]], "autorag.schema": [[24, 0, 0, "-", "metricinput"], [24, 0, 0, "-", "module"], [24, 0, 0, "-", "node"]], "autorag.schema.metricinput": [[24, 1, 1, "", "MetricInput"]], "autorag.schema.metricinput.MetricInput": [[24, 3, 1, "", "from_dataframe"], [24, 2, 1, "", "generated_log_probs"], [24, 2, 1, "", "generated_texts"], [24, 2, 1, "", "generation_gt"], [24, 3, 1, "", "is_fields_notnone"], [24, 2, 1, "", "prompt"], [24, 2, 1, "", "queries"], [24, 2, 1, "", "query"], [24, 2, 1, "", "retrieval_gt"], [24, 2, 1, "", "retrieval_gt_contents"], [24, 2, 1, "", "retrieved_contents"], [24, 2, 1, "", "retrieved_ids"]], "autorag.schema.module": [[24, 1, 1, "", "Module"]], "autorag.schema.module.Module": [[24, 3, 1, "", "from_dict"], [24, 2, 1, "", "module"], [24, 2, 1, "", "module_param"], [24, 2, 1, "", "module_type"]], "autorag.schema.node": [[24, 1, 1, "", "Node"], [24, 4, 1, "", "extract_values"], [24, 4, 1, "", "extract_values_from_nodes"], [24, 4, 1, "", "extract_values_from_nodes_strategy"], [24, 4, 1, "", "module_type_exists"]], "autorag.schema.node.Node": [[24, 3, 1, "", "from_dict"], [24, 3, 1, "", "get_param_combinations"], [24, 2, 1, "", "modules"], [24, 2, 1, "", "node_params"], [24, 2, 1, "", "node_type"], [24, 3, 1, "", "run"], [24, 2, 1, "", "run_node"], [24, 2, 1, "", "strategy"]], "autorag.strategy": [[0, 4, 1, "", "avoid_empty_result"], [0, 4, 1, "", "filter_by_threshold"], [0, 4, 1, "", "measure_speed"], [0, 4, 1, "", "select_best"], [0, 4, 1, "", "select_best_average"], [0, 4, 1, "", "select_best_rr"], [0, 4, 1, "", "select_normalize_mean"], [0, 4, 1, "", "validate_strategy_inputs"]], "autorag.support": [[0, 4, 1, "", "dynamically_find_function"], [0, 4, 1, "", "get_support_modules"], [0, 4, 1, "", "get_support_nodes"]], "autorag.utils": [[25, 0, 0, "-", "preprocess"], [25, 0, 0, "-", "util"]], "autorag.utils.preprocess": [[25, 4, 1, "", "cast_corpus_dataset"], [25, 4, 1, "", "cast_qa_dataset"], [25, 4, 1, "", "validate_corpus_dataset"], [25, 4, 1, "", "validate_qa_dataset"], [25, 4, 1, "", "validate_qa_from_corpus_dataset"]], "autorag.utils.util": [[25, 4, 1, "", "convert_datetime_string"], [25, 4, 1, "", "convert_env_in_dict"], [25, 4, 1, "", "convert_inputs_to_list"], [25, 4, 1, "", "convert_string_to_tuple_in_dict"], [25, 4, 1, "", "dict_to_markdown"], [25, 4, 1, "", "dict_to_markdown_table"], [25, 4, 1, "", "embedding_query_content"], [25, 4, 1, "", "explode"], [25, 4, 1, "", "fetch_contents"], [25, 4, 1, "", "fetch_one_content"], [25, 4, 1, "", "filter_dict_keys"], [25, 4, 1, "", "find_key_values"], [25, 4, 1, "", "find_node_summary_files"], [25, 4, 1, "", "find_trial_dir"], [25, 4, 1, "", "flatten_apply"], [25, 4, 1, "", "get_best_row"], [25, 4, 1, "", "get_event_loop"], [25, 4, 1, "", "load_summary_file"], [25, 4, 1, "", "make_batch"], [25, 4, 1, "", "make_combinations"], [25, 4, 1, "", "normalize_string"], [25, 4, 1, "", "normalize_unicode"], [25, 4, 1, "", "openai_truncate_by_token"], [25, 4, 1, "", "pop_params"], [25, 4, 1, "", "process_batch"], [25, 4, 1, "", "reconstruct_list"], [25, 4, 1, "", "replace_value_in_dict"], [25, 4, 1, "", "result_to_dataframe"], [25, 4, 1, "", "save_parquet_safe"], [25, 4, 1, "", "select_top_k"], [25, 4, 1, "", "sort_by_scores"], [25, 4, 1, "", "split_dataframe"], [25, 4, 1, "", "to_list"]], "autorag.validator": [[0, 1, 1, "", "Validator"]], "autorag.validator.Validator": [[0, 3, 1, "", "validate"]], "autorag.web": [[0, 4, 1, "", "chat_box"], [0, 4, 1, "", "get_runner"], [0, 4, 1, "", "set_initial_state"], [0, 4, 1, "", "set_page_config"], [0, 4, 1, "", "set_page_header"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function"}, "terms": {"": [0, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 41, 43, 46, 48, 49, 51, 53, 54, 55, 61, 63, 65, 67, 68, 69, 82, 83, 84, 85, 86, 87, 88, 89, 94, 98, 99, 100, 103], "0": [0, 13, 19, 20, 23, 27, 34, 42, 43, 44, 45, 46, 51, 53, 54, 55, 56, 64, 65, 67, 68, 69, 70, 71, 78, 90, 92, 94, 97, 98, 99, 102, 103], "002": 51, "01": 66, "0125": 13, "04": 55, "06": 39, "07": 39, "08": 39, "09": 55, "1": [0, 13, 20, 23, 25, 30, 41, 43, 53, 54, 56, 59, 64, 89, 92, 94, 97, 98], "10": [0, 51, 53, 61, 77, 85, 90, 93, 94, 96, 99, 100], "100": [20, 102], "1000": 85, "100k": 76, "101": 92, "1024": [27, 29, 40], "10k": [19, 76], "10x": 56, "11": 102, "1106": [53, 54, 85, 88, 89, 98, 102], "125m": 56, "128": [13, 23, 25, 38, 40, 43], "13a": 13, "13b": 76, "16": [15, 54, 56, 62, 63, 74, 78], "16k": [53, 54, 55, 61, 62, 63, 78, 85, 88, 89, 98, 102], "17": 50, "18": 39, "1d": 41, "2": [13, 17, 19, 22, 30, 41, 43, 51, 52, 56, 60, 79, 89, 90, 91, 92, 99], "2015": 66, "2022": 39, "2024": [39, 55], "2048": 0, "24": [27, 29, 40], "25": 42, "2d": [23, 41], "3": [13, 21, 23, 30, 33, 42, 43, 51, 53, 54, 61, 62, 63, 78, 85, 88, 89, 92, 96, 98, 100], "300": [17, 60], "32": [43, 72, 73, 79], "3b": [19, 76], "4": [13, 30, 42, 48, 53, 55, 78, 89, 92, 93, 94], "4000": 53, "42": 0, "4o": 39, "5": [0, 13, 19, 21, 40, 42, 43, 48, 51, 53, 54, 55, 58, 61, 62, 63, 77, 78, 85, 88, 89, 92, 96, 98, 99], "50": [22, 42, 43], "51": 94, "512": [27, 29, 40, 43, 55, 56, 79], "514": 46, "6": [43, 48, 53, 65, 67, 89, 92], "60": [23, 93], "64": [25, 43, 53, 67, 68, 70, 71, 72, 73, 75, 76, 79, 80, 87, 90, 95], "666": 48, "7": 92, "7039180890341347": 47, "72": 45, "7680": [0, 45], "777": 48, "797979": 48, "7b": [17, 51, 56, 60, 91], "8": [7, 13, 48, 74, 78, 92], "80": [93, 94], "8000": [0, 44, 103], "8191": 23, "822": 48, "85": [64, 68, 69], "9": [13, 43], "A": [0, 7, 13, 19, 20, 23, 25, 27, 34, 39, 41, 43, 46, 53, 81, 84, 90, 98, 100, 101], "And": [0, 15, 23, 25, 30, 38, 43, 44, 49, 50, 55, 56, 85, 91, 96, 98, 100, 103], "As": [21, 41, 44, 45, 47, 51, 58, 95, 96], "At": [30, 37, 38, 51, 70, 74, 96, 98, 100], "But": [37, 38, 41, 43, 49, 96, 98, 100], "By": [46, 54, 61, 62, 63, 90, 92, 101], "For": [23, 27, 28, 34, 39, 40, 41, 43, 47, 50, 51, 52, 55, 56, 98, 99, 100, 102, 103], "If": [0, 13, 21, 22, 23, 25, 27, 28, 29, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 45, 47, 49, 50, 56, 65, 66, 68, 69, 70, 71, 72, 73, 74, 79, 91, 92, 95, 96, 97, 98, 100, 101, 102, 103], "In": [17, 18, 19, 22, 27, 30, 34, 38, 39, 41, 47, 49, 55, 64, 96, 97, 98, 100, 102], "It": [0, 13, 15, 17, 18, 19, 21, 23, 24, 25, 27, 30, 31, 34, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 51, 53, 54, 55, 59, 63, 64, 66, 70, 74, 77, 80, 81, 82, 84, 85, 87, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103], "Its": [23, 25, 41, 56, 58, 61, 64, 77, 90], "No": 98, "Not": [16, 81, 90], "Of": 49, "On": [41, 64], "Or": [41, 50, 70, 74, 103], "That": [49, 100], "The": [0, 7, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103], "Then": [39, 40, 41, 44, 50, 51, 98], "There": [23, 41, 43, 49, 52, 55, 64, 81, 90, 92, 97, 100, 103], "These": [53, 54, 61, 62, 63, 77, 87, 88, 89, 94, 101, 103], "To": [23, 30, 35, 38, 41, 43, 50, 51, 55, 98, 99, 100, 103], "Will": 23, "With": [21, 40, 55, 100, 103], "__fields__": [0, 19], "_metadata": 7, "abil": 80, "abl": 90, "about": [0, 19, 27, 28, 29, 32, 33, 34, 39, 40, 41, 42, 54, 56, 62, 63, 67, 68, 83, 84, 85, 86, 91, 95, 96, 97, 98, 101, 103], "abov": [47, 51, 96, 97, 100, 103], "absolut": 47, "abstracteventloop": 25, "accept": [44, 47], "access": [0, 42, 45, 77], "accomplish": 35, "accord": [27, 34], "accumul": 61, "accur": [30, 43, 97], "accuraci": [13, 82, 90, 94], "achiev": [38, 46, 98, 101], "across": [62, 85, 90, 94, 99, 101], "act": 101, "action": [96, 100], "actual": [25, 41, 47, 93], "ad": [20, 43, 101, 102], "ada": 51, "add": [7, 13, 35, 43, 53, 58, 59, 67, 68, 95, 98, 100, 103], "add_essential_metadata": [1, 11], "add_essential_metadata_llama_text_nod": [1, 11], "add_file_nam": [1, 7, 27, 28, 29, 40], "addit": [13, 17, 50, 51, 54, 58, 59, 60, 62, 63, 85, 87, 88, 89, 102, 103], "addition": 84, "additional_special_token": 20, "address": [61, 101], "adjust": [43, 102], "advanc": [42, 100], "advanced rag": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100], "advantag": 55, "advent": [40, 43], "aespa": [39, 41], "aespa1": 41, "aespa2": 41, "aespa3": 41, "affect": [16, 41, 98, 101], "afraid": 43, "after": [25, 27, 30, 37, 38, 39, 40, 43, 45, 49, 50, 59, 77, 96, 98, 100, 103], "afterward": 20, "ag": 89, "again": [40, 100, 103], "ai": 74, "aim": [43, 92, 94, 101], "album": 39, "algorithm": [91, 92, 93], "all": [0, 13, 20, 22, 25, 27, 34, 35, 40, 41, 43, 46, 47, 48, 49, 51, 53, 55, 56, 57, 64, 66, 68, 69, 85, 89, 90, 94, 96, 97, 99, 100, 101, 102, 103], "alloc": 89, "allow": [53, 54, 58, 59, 62, 63, 76, 87, 88, 89, 92, 101], "alon": [85, 90, 100], "along": 46, "alpha": [13, 98], "alreadi": [0, 20, 23, 40, 98], "already_has_special_token": 20, "also": [24, 27, 41, 42, 43, 46, 47, 49, 55, 56, 70, 92, 100], "altern": 50, "although": 20, "alwai": [28, 29, 32, 43, 45, 98], "among": [0, 15, 17, 18, 19, 21, 22, 23, 93, 98], "amount": 61, "an": [0, 13, 23, 27, 30, 32, 34, 41, 43, 45, 46, 47, 49, 50, 51, 61, 77, 86, 87, 88, 95, 96, 97, 98, 100, 102], "analysi": 61, "ani": [0, 7, 12, 20, 24, 25, 41, 47, 49, 50, 56, 58, 60, 61, 64, 77, 85, 90, 94, 100, 101, 102], "annot": [0, 19], "anoth": [39, 78, 101, 103], "answer": [0, 22, 30, 39, 41, 43, 44, 46, 47, 48, 55, 60, 64, 80, 83, 84, 85, 86, 100], "answer_creation_func": 43, "answer_gt": 48, "anywher": 45, "ap": [13, 47], "api": [0, 23, 55, 70, 74, 95, 96], "api_bas": [51, 102], "api_kei": [19, 51, 55, 70, 74, 96, 102], "app": 0, "appear": 102, "appli": [25, 53, 77, 85, 90, 94, 101], "applic": [44, 61, 81, 90], "approach": [61, 92], "appropri": 20, "apt": 102, "ar": [22, 23, 25, 27, 30, 34, 35, 37, 38, 39, 40, 41, 43, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 81, 85, 87, 88, 89, 90, 94, 96, 97, 98, 99, 100, 101, 102, 103], "arbitrari": [53, 58, 61, 64, 77, 85, 90], "arbitrary_types_allow": [0, 19], "arg": [0, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23], "argument": [0, 13, 17, 25, 54, 62, 63, 87, 88, 89], "aris": 84, "arrai": 19, "arrang": 101, "articl": 25, "asap": 100, "ask": [39, 41, 46, 49, 100], "aspect": 101, "assess": [46, 77], "assign": 13, "associ": [25, 61], "ast": 96, "async": [0, 7, 13, 15, 19, 23, 25], "async_g_ev": [12, 13], "async_postprocess_nod": [14, 19], "async_run_llm": [14, 19], "asynccli": 19, "asynchron": 25, "asyncio": 25, "asyncopenai": [36, 37, 39, 85], "asyncrankgptrerank": [14, 19], "atom": 89, "attempt": 97, "attention_mask": 20, "augment": [16, 101], "augmented_cont": 16, "augmented_id": 16, "augmented_scor": 16, "auto": [50, 92], "auto rag": 49, "autom": 88, "automat": [24, 25, 43, 49, 53, 58, 61, 64, 77, 85, 90, 95, 98, 103], "automl": 49, "autorag": [27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102], "autorag config": 96, "autorag doc": 49, "autorag fold": 97, "autorag instal": 50, "autorag multi gpu": 56, "autorag system": 101, "autorag tutori": 103, "autorag yaml": 96, "autorag_metr": [12, 13], "autorag_metric_loop": [12, 13], "autotoken": 85, "avail": [43, 86, 102], "averag": [0, 13, 48, 53, 85, 90, 94], "avoid": 0, "avoid_empty_result": [0, 26], "awai": 103, "b": [13, 20, 98], "baai": [19, 51, 72, 73], "back": 13, "backbon": 46, "backward": 59, "bad": [37, 38, 100], "badminton": 89, "band": 39, "base": [0, 1, 2, 13, 14, 20, 24, 27, 43, 46, 51, 54, 60, 62, 63, 69, 72, 74, 75, 76, 77, 78, 80, 82, 83, 86, 92, 93, 94, 99, 100, 101], "baseembed": [13, 23], "basegener": [14, 15], "basemodel": 0, "basemodul": [15, 16, 17, 18, 19, 21, 22, 23], "basepassageaugment": [14, 16], "basepassagecompressor": [14, 17], "basepassagefilt": [14, 18], "basepassagererank": [14, 19, 20], "basepromptmak": [14, 21], "baseprompttempl": 19, "basequeryexpans": [14, 22], "baseretriev": [14, 23], "basi": [34, 48, 101], "basic": 38, "batch": [0, 7, 13, 15, 17, 19, 25, 43, 53, 54, 55, 62, 63, 67, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 95, 102], "batch_appli": [36, 38, 39, 40], "batch_filt": 37, "batch_siz": [13, 19, 20, 23, 25], "becaus": [21, 23, 27, 30, 34, 35, 37, 38, 39, 41, 56, 58, 61, 64, 77, 82, 90, 95, 100, 102, 103], "becom": [40, 43, 96], "been": [99, 103], "befor": [23, 27, 39, 40, 51, 59, 61, 96, 100, 102, 103], "behavior": [41, 54, 62, 63, 82, 87, 88, 89, 101], "being": [54, 62, 63], "belong": 97, "below": [0, 27, 36, 37, 38, 40, 45, 47, 50, 53, 65, 66, 67, 68, 69, 100, 102, 103], "benz": 89, "bert_scor": [12, 13, 53], "best": [0, 15, 17, 18, 19, 21, 22, 23, 25, 40, 49, 84, 92, 97, 99, 100, 103], "best_": 97, "best_0": 97, "best_column_nam": 25, "beta": [0, 1, 13, 30, 52], "better": [38, 58, 61, 64, 65, 69, 77, 90, 98, 103], "between": [13, 35, 46, 47, 53, 58, 91, 92, 99], "bfloat16": 82, "bge": [19, 51, 72, 73], "bigram": 13, "bilingu": 46, "bird": 89, "bleu": [12, 13, 53, 85, 96, 99, 100, 102], "blob": 13, "blue": 100, "bm": 51, "bm25": [0, 14, 22, 90, 94, 96, 97, 100], "bm25_api": 23, "bm25_corpu": 23, "bm25_ingest": [14, 23], "bm25_path": 23, "bm25_pure": [14, 23], "bm25_token": [23, 91], "bm25okapi": [23, 91], "bodi": [0, 44], "bool": [0, 13, 16, 19, 20, 24, 25], "boolean": 82, "boost": 55, "bos_token": 20, "both": [47, 59, 102], "bottom": 63, "bowl": 39, "branch": 100, "break": [35, 48], "brew": 102, "brief": 39, "broader": 101, "browser": 0, "bshtml": 32, "bug": 30, "bui": 48, "build": [20, 40, 41, 97, 98, 100], "build_inputs_with_special_token": [19, 20], "bulb": 39, "c": 102, "cache_batch": 43, "calcul": [13, 47, 58, 61, 67, 68, 82, 92, 93, 99], "calculate_cosine_similar": [12, 13], "call": [0, 20, 51, 54, 55, 62, 63, 82, 91, 92], "callabl": [0, 1, 7, 11, 23, 24, 25, 27], "callback_manag": [0, 19], "callbackmanag": [0, 19], "can": [0, 17, 18, 19, 21, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 70, 72, 73, 74, 75, 77, 78, 81, 82, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103], "cannot": [85, 90], "capit": 39, "care": 20, "case": [22, 40, 41, 43, 47, 49, 98, 100, 102], "cast": [15, 16, 17, 18, 19, 21, 22, 23], "cast_corpus_dataset": [0, 25], "cast_embedding_model": [0, 12], "cast_metr": [0, 12], "cast_qa_dataset": [0, 25], "cast_queri": [14, 23], "cast_to_run": [14, 15, 16, 17, 18, 19, 21, 22, 23], "castorini": [19, 76], "caus": [70, 74, 98, 102, 103], "cc": [23, 94], "cd": 50, "certain": 25, "cg": 47, "chain": [46, 98], "chang": [25, 38, 43, 51, 70, 74, 91, 100, 101, 102], "channel": [49, 102, 103], "charact": 34, "chat": [55, 102], "chat_box": [0, 26], "chat_prompt": 17, "chatinterfac": 0, "chatmessag": 19, "chatmodel": 42, "chatopenai": 42, "chatrespons": 19, "check": [0, 13, 24, 30, 38, 40, 41, 49, 50, 51, 53, 56, 57, 72, 73, 91, 96, 97, 100, 102, 103], "check_expanded_queri": [14, 22], "child": 89, "choic": [91, 98], "choos": [13, 22, 41, 78, 91, 95, 98, 99], "chroma": [23, 97], "chromadb": [23, 43, 95], "chunk": [0, 1, 23, 30, 38, 41, 43, 62, 86, 100], "chunk_config": 27, "chunk_method": [27, 29, 38, 40], "chunk_modul": [28, 29], "chunk_overlap": [27, 29, 38, 40, 43], "chunk_project_dir": 40, "chunk_siz": [25, 27, 29, 38, 40, 43], "chunk_text": 7, "chunked_cont": [7, 27], "chunked_str": 27, "chunker": [7, 26, 34, 40], "chunker_nod": [1, 7], "circl": 100, "ciudad": 39, "cl": 25, "clarifi": 43, "class": [0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 41, 42, 51, 78, 80, 95], "classif": [20, 38], "classifi": [37, 47], "classmethod": [0, 23, 24], "classvar": [0, 19], "clear": 36, "cli": 26, "client": [23, 36, 37, 39, 43], "clone": 50, "close": 82, "clova": [0, 1, 34, 35], "co": 51, "code": [13, 27, 28, 29, 31, 32, 40, 50, 51, 96, 103], "coher": [0, 13, 14, 53, 70, 74], "cohere_api_kei": 70, "cohere_cli": 19, "cohere_rerank": 77, "cohere_rerank_pur": [14, 19], "coherererank": [14, 19], "cointegr": 51, "colber": 71, "colbert": [0, 14, 74, 77], "colbert_rerank": 71, "colbertrerank": [14, 19], "colbertv2": [19, 71], "collect": [23, 25, 41, 43, 96, 100, 101], "collection_nam": [23, 97], "column": [0, 15, 16, 17, 18, 19, 21, 22, 23, 25, 30, 39, 41, 43, 44, 103], "column_nam": 25, "com": [13, 49, 50, 100], "combin": [22, 23, 24, 25, 35, 85, 92, 93, 96, 98, 101], "come": [39, 47, 49, 87, 88, 89, 98, 100], "comedi": 89, "command": [45, 102], "commit": 102, "common": [13, 23, 50, 89, 99, 101, 102, 103], "compar": [48, 53, 99], "comparison": 48, "compat": 56, "compatibilti": 56, "complet": [27, 34, 55], "complex": [31, 100], "compon": 101, "compress": [17, 48, 60, 61, 64, 100], "compressor": [17, 48, 60, 61, 62, 63], "comput": [0, 13, 14, 19, 20, 61], "computedfieldinfo": [0, 19], "concaten": 20, "concept": 46, "concept_completion_query_gen": 39, "concis": 38, "conclud": 82, "conclus": 84, "condit": [41, 42], "config": [0, 19, 20, 51, 99, 100, 102], "config_dict": 0, "config_path": [44, 103], "configdict": [0, 19], "configur": [0, 19, 49, 53, 54, 61, 62, 63, 77, 82, 85, 90, 94, 98, 101, 103], "conflict": 46, "conform": [0, 19], "confus": 64, "connect": [46, 95], "consid": [47, 56, 90], "consist": [13, 53], "constraint": 36, "consum": 49, "contain": [7, 13, 15, 17, 18, 19, 21, 23, 24, 25, 34, 35, 41, 43, 47, 83, 84, 86, 89, 97, 98, 101, 102, 103], "content": [26, 27, 32, 43, 44, 61, 65, 66, 67, 68, 69, 77, 85, 94, 95], "content_embed": 19, "content_s": 43, "contents_list": [20, 25], "context": [36, 46, 47, 60, 82, 85, 101], "contextu": 46, "contradict": 46, "contributor": 50, "control": [13, 56], "conveni": [43, 45], "convert": [0, 24, 25, 31, 33, 43, 96], "convert_datetime_str": [0, 25], "convert_env_in_dict": [0, 25], "convert_inputs_to_list": [0, 25], "convert_string_to_tuple_in_dict": [0, 25], "convex": [23, 92], "cool": 100, "core": [29, 43, 46, 51], "coroutin": 25, "corpu": [0, 1, 23, 30, 37, 38, 39, 46, 52, 58, 66, 81, 86, 94, 97, 103], "corpus_data": [23, 25], "corpus_data_path": [0, 103], "corpus_df": [11, 16, 25, 42, 43], "corpus_df_to_langchain_docu": [1, 11], "corpus_path": 23, "corpus_test": 103, "correct": 47, "correl": 46, "correspond": [0, 19, 24], "cosin": [13, 46, 58], "cost": [35, 61, 103], "cot": 46, "could": [15, 17, 18, 19, 21, 23], "couldn": 45, "count": [13, 60, 91], "cours": 49, "cover": [27, 30, 34, 38, 39, 40, 43], "cpu": 13, "creat": [0, 20, 24, 25, 27, 30, 31, 34, 38, 40, 41, 45, 49, 83, 86, 92, 97, 100], "create_token_type_ids_from_sequ": [19, 20], "creation": [39, 49, 103], "criterion": 101, "critic_llm": 42, "cross": [19, 79], "crucial": [27, 30, 34, 38, 41, 61, 77, 84, 101], "csv": [27, 34, 98, 103], "cucumb": 89, "cuda": [71, 72, 73, 79], "cue": 82, "cumul": 56, "curl": 44, "current": [0, 25, 27, 34, 48, 101, 103], "custom": [45, 54, 62, 63, 67, 68, 78, 82, 87, 88, 89, 95, 99, 101, 102], "cutoff": 64, "cycl": 100, "czech": 27, "d": [22, 25, 41, 44], "dag": 100, "dai": 100, "danish": 27, "dashboard": 26, "data": [0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 36, 37, 39, 41, 44, 46, 49, 53, 61, 77, 84, 90, 95, 101, 103], "databas": 95, "dataformat": 27, "datafram": [0, 7, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "dataset": [25, 27, 30, 37, 39, 43, 47, 49, 92, 97, 102], "date": [39, 66], "datetim": [34, 41, 66, 81], "db": 100, "db_path": 23, "dbsf": [23, 92, 94], "dcg": 47, "dd": 66, "de": 39, "deal": 61, "decid": [56, 100, 101], "decis": 101, "decompos": [22, 90], "decomposit": 89, "decor": [0, 15, 16, 17, 18, 19, 21, 22, 23, 25], "decreas": [55, 71, 72, 73, 79], "def": 27, "default": [0, 7, 13, 17, 19, 20, 21, 22, 23, 25, 27, 41, 43, 44, 51, 54, 55, 59, 60, 62, 63, 65, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 82, 85, 87, 88, 91, 92, 93, 96, 99, 101], "default_config": 103, "default_factori": [0, 19], "defaulttoken": 13, "defin": [0, 19, 20, 58, 76, 77, 94, 95, 99], "delet": [25, 64], "deliv": 100, "dens": [23, 87, 91, 95], "deparallel": [19, 20], "depend": [27, 50, 91, 97, 103], "deploi": [26, 44, 45, 49], "deploy": [49, 92], "deportiva": 39, "deprec": [23, 30], "descript": [0, 19, 38, 53, 58, 77, 94], "design": [43, 46, 53, 80, 84, 92, 93], "detail": [31, 39, 40, 46, 53, 56, 75, 78, 85, 86, 90, 101, 103], "detect": 92, "determin": [53, 97, 99], "develop": [30, 56, 98, 101], "devic": [19, 20], "device_map": 20, "df": [25, 37, 38, 40, 102], "diagram": [98, 100], "dict": [0, 7, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 35], "dict_": 25, "dict_column": 25, "dict_to_markdown": [0, 25], "dict_to_markdown_t": [0, 25], "dictionari": [0, 12, 19, 23, 25, 27, 41, 42, 43, 53, 76], "did": 0, "didn": 42, "differ": [25, 27, 38, 40, 41, 43, 46, 51, 53, 76, 88, 90, 91, 93, 97, 101], "difficulti": 102, "dimens": [22, 25], "direct": [81, 90], "directli": [39, 42, 46, 47, 61, 70, 74, 96, 98, 102], "directori": [0, 15, 17, 18, 19, 21, 22, 23, 27, 32, 34, 40, 45, 103], "directoryload": 43, "discord": [49, 100, 102, 103], "distinct": 61, "distinguish": [35, 92], "distribut": [42, 43], "divid": [31, 47, 91], "dl": 76, "do": [22, 35, 41, 47, 48, 49, 50, 96, 97, 100, 103], "doc": [41, 47, 50, 51, 56, 99], "doc_id": [7, 23, 25, 27], "document": [7, 11, 19, 23, 27, 30, 31, 32, 33, 34, 35, 39, 41, 50, 53, 61, 77, 85, 86, 90, 91, 94, 96, 98, 99, 100, 101, 103], "document_load": [32, 43], "doe": [0, 20, 23, 36, 46, 53, 54, 55, 56, 61, 64, 77, 85, 96, 98], "doesn": [30, 47, 89, 100, 102], "domain": 91, "don": [21, 25, 34, 38, 41, 43, 47, 49, 85, 92, 100, 102, 103], "done": 103, "dontknow": [1, 2, 37, 38, 40], "dontknow_filter_llama_index": 37, "dontknow_filter_openai": 37, "dontknow_filter_rule_bas": [37, 38, 40], "dotenv": [50, 102], "doubl": 41, "down": 47, "download": [41, 103], "drive": 89, "drop": [37, 38, 40, 84, 102], "dropout": 20, "duplic": [24, 41, 96], "dure": [90, 102], "dutch": 27, "dynam": 101, "dynamically_find_funct": [0, 26], "e": [50, 54, 62, 63], "each": [0, 22, 23, 24, 25, 41, 42, 43, 46, 67, 68, 89, 92, 93, 96, 97, 98, 99, 100, 101], "earli": 41, "easier": 96, "easili": [27, 34, 39, 95, 100, 103], "echo": 102, "edit": 50, "edit_summary_df_param": [14, 23], "editor": 96, "effect": [35, 53, 77, 93, 94, 101, 103], "effici": 61, "effort": 101, "either": 47, "elem": 25, "element": [23, 24, 25], "emb": [23, 95, 100], "embed": [0, 13, 20, 23, 43, 46, 49, 50, 53, 58, 67, 68, 77, 91, 95, 97, 103], "embed_batch_s": 0, "embed_dim": [0, 26], "embedding model": 51, "embedding_batch": [23, 95], "embedding_model": [13, 16, 22, 23, 25, 42, 43, 51, 53, 58, 67, 68, 90, 94, 95, 96], "embedding_query_cont": [0, 25], "emploi": 89, "empti": [0, 23, 41, 96], "en": [13, 19, 27, 33, 37, 38, 39, 40, 51, 53, 74, 76], "encod": [15, 19, 79], "encount": 102, "enct5forsequenceclassif": [19, 20], "enct5token": [19, 20], "end": [25, 82], "end_idx": 7, "endpoint": 103, "engin": 102, "enginearg": 56, "english": [7, 27, 29, 40, 70, 91], "enhanc": [77, 82, 99, 101], "enough": [41, 64], "ensur": [53, 61, 77, 85, 90, 94], "entri": 61, "env": [50, 55], "environ": [25, 32, 45, 50, 56, 70, 74, 102, 103], "eos_token": 20, "equal": 47, "error": [55, 70, 74, 78, 89, 95], "essenc": 39, "essenti": [65, 66, 67, 68, 69, 85, 92, 93, 98, 101, 102], "estonian": 27, "etc": [41, 43, 96], "eval": 13, "evalu": [15, 17, 18, 19, 21, 22, 23, 25, 26, 27, 30, 34, 41, 46, 49, 53, 61, 77, 85, 90, 92, 94, 96, 97, 99, 101], "evaluate_gener": [0, 12], "evaluate_generator_nod": [14, 15], "evaluate_generator_result": [14, 21], "evaluate_one_prompt_maker_nod": [14, 21], "evaluate_one_query_expansion_nod": [14, 22], "evaluate_passage_compressor_nod": [14, 17], "evaluate_retriev": [0, 12], "evaluate_retrieval_cont": [0, 12], "evaluate_retrieval_nod": [14, 23], "even": [0, 84, 92], "evenly_distribute_passag": [14, 23], "event": [25, 39], "ever": 100, "everi": [15, 20, 55, 101], "evolut": 42, "evolv": 39, "exact": 46, "exactli": 47, "exampl": [34, 38, 40, 41, 43, 46, 51, 52, 96, 98, 100, 102, 103], "example_node_line_1": 99, "example_node_line_2": 99, "exc_traceback": 0, "exc_typ": 0, "exc_valu": 0, "exce": [53, 55, 61, 77, 85, 89], "exceed": [85, 90, 94], "except": 48, "exclud": [0, 19], "exclus": 95, "execut": [0, 23, 25, 40, 51, 90, 103], "exist": [23, 24, 41, 97], "exist_gen_gt": 43, "existing_qa": 43, "existing_qa_df": 43, "exp": 13, "exp_norm": [14, 19], "expand": [90, 98], "expanded_queri": 22, "expanded_query_list": 22, "expans": [21, 22, 23, 41, 61, 87, 89, 100], "expect": [41, 82], "expens": [35, 37], "experi": [49, 97, 100, 102, 103], "experiment": 53, "expir": 45, "explain": [97, 99, 100], "explan": 39, "explicit": 46, "explod": [0, 25], "explode_valu": 25, "explor": [92, 93], "export": [50, 70, 74, 102], "extens": [34, 96], "extent": 46, "extra": [25, 91], "extra_id": 20, "extract": [0, 24, 32, 44, 66, 81, 91, 92], "extract_best_config": [0, 26, 103], "extract_evid": [0, 1], "extract_node_line_nam": [0, 26], "extract_node_strategi": [0, 26], "extract_valu": [0, 24], "extract_values_from_nod": [0, 24], "extract_values_from_nodes_strategi": [0, 24], "f": 85, "f1": [13, 61], "face": 49, "facebook": 56, "facilit": 53, "fact": 100, "factoid": 38, "factoid_query_gen": [38, 39, 40, 52], "factori": 0, "factual": 39, "fall": 13, "fallback": 13, "fals": [0, 13, 19, 20, 25, 65, 69, 72, 73, 78, 82], "familiar": 100, "fashion": 63, "fast": [37, 56, 70, 74], "faster": [56, 61], "fate": 100, "favorit": 96, "featur": [7, 30, 31, 41, 46, 53, 100, 103], "fee": 95, "feedback": [98, 100], "feel": [49, 100, 103], "fetch": [58, 59, 94], "fetch_cont": [0, 25], "fetch_one_cont": [0, 25], "few": [89, 100, 103], "field": [0, 13, 19, 47, 66, 81], "fieldinfo": [0, 19], "fields_to_check": [13, 24], "file": [0, 11, 13, 25, 40, 41, 43, 44, 45, 46, 49, 50, 51, 56, 70, 74, 78, 92, 97, 98, 99, 100, 101, 102], "file_nam": [7, 27], "file_name_languag": 7, "file_path": 11, "filenam": 23, "filepath": [25, 40], "filesystem": 11, "fill": [25, 46], "filter": [0, 1, 2, 18, 40, 55, 58, 65, 67, 68, 69], "filter_by_threshold": [0, 26], "filter_dict_kei": [0, 25], "filtered_qa": 37, "final": [0, 27, 34, 35, 60, 93, 98, 100], "find": [25, 28, 29, 31, 32, 33, 39, 40, 43, 46, 47, 49, 51, 60, 80, 85, 92, 93, 94, 97, 98, 101], "find_key_valu": [0, 25], "find_node_dir": [0, 26], "find_node_summary_fil": [0, 25], "find_trial_dir": [0, 25], "find_unique_elem": [14, 23], "fine": 86, "finnish": 27, "first": [0, 13, 23, 25, 27, 34, 38, 39, 40, 43, 47, 48, 49, 50, 56, 70, 74, 77, 95, 96, 97, 98, 100], "fit": [46, 101], "five": 41, "fix": [46, 102], "fixed_min_valu": 23, "flag": 77, "flag_embed": [0, 14], "flag_embedding_llm": [0, 14], "flag_embedding_llm_rerank": 72, "flag_embedding_rerank": 73, "flag_embedding_run_model": [14, 19], "flagembed": [72, 73], "flagembeddingllm": 73, "flagembeddingllmrerank": [14, 19], "flagembeddingrerank": [14, 19], "flask": [0, 44, 49], "flat_list": 25, "flatten": 25, "flatten_appli": [0, 25], "flexibl": [76, 92, 101], "float": [13, 19, 23, 24, 56], "floor": 13, "flow": 46, "fluenci": [13, 53], "focu": [61, 103], "focus": 101, "folder": [0, 44, 50, 100], "follow": [20, 23, 27, 28, 29, 30, 32, 34, 35, 40, 41, 42, 43, 44, 45, 47, 51, 66, 82, 92, 97, 100, 102], "forget": 103, "form": [7, 27, 30, 31, 40, 43, 46], "format": [20, 25, 27, 31, 34, 43, 47, 66, 82, 97], "former": 20, "forward": [19, 20, 59], "found": [39, 43, 46, 54, 62, 63, 67, 68, 75, 78, 95, 103], "four": 48, "fp16": [72, 73], "fragment": 13, "framework": [42, 46, 100], "franc": 39, "free": [49, 100, 103], "french": 27, "frequent": 51, "friendli": 45, "from": [0, 7, 11, 13, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 32, 34, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 51, 52, 54, 55, 56, 58, 61, 66, 70, 74, 77, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 103], "from_datafram": [0, 24], "from_dict": [0, 24], "from_parquet": [0, 26, 27, 40], "from_trial_fold": [0, 26, 44, 45], "from_yaml": [0, 26, 44, 45, 103], "fstring": [0, 14, 83, 85, 86, 100], "full": [41, 56, 97, 101], "func": [0, 7, 15, 18, 25], "function": [0, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 31, 34, 38, 39, 43, 80, 101, 103], "fundament": 94, "further": [23, 47, 54, 62, 63, 87, 88, 89], "fuse": [23, 92], "fuse_per_queri": [14, 23], "fusion": [23, 93], "futur": [41, 55, 98, 100, 101], "g": [13, 54, 62, 63], "g_eval": [12, 13, 46, 53], "gamma": 13, "gcc": 102, "gemma": [19, 72], "gener": [0, 14, 21, 25, 26, 30, 37, 41, 43, 51, 54, 55, 56, 61, 82, 85, 87, 88, 89, 90, 98, 100, 101, 102], "generate_answ": 43, "generate_qa_llama_index": [43, 52], "generate_qa_llama_index_by_ratio": 43, "generate_qa_raga": 42, "generated_log_prob": [0, 24], "generated_text": [0, 13, 24], "generation_gt": [0, 1, 2, 13, 24, 36, 37, 38, 40], "generator_class": 21, "generator_llm": 42, "generator_model": 51, "generator_modul": [21, 85], "generator_module_typ": [87, 88, 89], "generator_nod": [14, 15], "generator_param": 21, "german": 27, "get": [0, 11, 16, 25, 39, 40, 42, 43, 44, 46, 50, 54, 55, 64, 70, 74, 95, 96, 98, 100, 102, 103], "get_best_row": [0, 25], "get_bm25_pkl_nam": [14, 23], "get_bm25_scor": [14, 23], "get_colbert_embedding_batch": [14, 19], "get_colbert_scor": [14, 19], "get_default_llm": 19, "get_encod": [19, 20], "get_event_loop": [0, 25], "get_file_metadata": [1, 11], "get_hybrid_execution_tim": [14, 23], "get_id_scor": [14, 23], "get_ids_and_scor": [14, 23], "get_input_embed": [19, 20], "get_metric_valu": [0, 26], "get_multi_query_expans": [14, 22], "get_nodes_from_docu": 43, "get_or_create_collect": 43, "get_param_combin": [0, 1, 11, 24], "get_query_decompos": [14, 22], "get_result": [14, 15], "get_result_o1": [14, 15], "get_runn": [0, 26], "get_scores_by_id": [14, 23], "get_special_tokens_mask": [19, 20], "get_start_end_idx": [1, 11], "get_support_modul": [0, 26], "get_support_nod": [0, 26], "gg": [49, 100], "girl": [41, 89], "gist": 46, "git": 50, "github": [13, 41, 49, 50, 100, 102, 103], "give": [0, 47], "given": [0, 13, 23, 25, 36, 37, 43, 60, 76, 78, 80, 87, 88, 98], "glob": [34, 43], "glossari": 20, "go": [41, 47, 49, 91, 99, 103], "goal": [90, 98], "goe": [52, 100], "gone": 55, "good": [37, 38, 40, 41, 43, 46, 100, 103], "got": 55, "gpt": [13, 21, 39, 42, 43, 46, 53, 54, 55, 61, 62, 63, 78, 85, 88, 89, 98, 102], "gpt-3.5": 55, "gpt-4": 55, "gpt2": [53, 55, 85, 91], "gpu": 103, "gr": 0, "grain": 86, "gram": [13, 46], "great": [30, 37, 43, 49, 91, 98], "greek": 27, "ground": [13, 36, 41, 46, 47, 53, 98], "ground_truth": 13, "group": [39, 41], "gt": [0, 13, 36, 41, 46, 47, 48, 98], "guarante": [64, 98], "guid": [30, 40, 43, 49, 53, 61, 77, 85, 90, 91, 94, 100, 101, 103], "h": 44, "ha": [20, 37, 39, 40, 41, 43, 46, 48, 61, 99, 100, 103], "had": 103, "halftim": 39, "hallucin": [7, 27, 100], "hamlet": 89, "hand": [41, 64], "handi": 11, "handle_except": [0, 26], "happen": 100, "hard": [43, 49, 98, 100], "harmon": [46, 47, 48], "have": [0, 23, 25, 27, 30, 31, 33, 36, 38, 39, 40, 41, 50, 51, 65, 66, 67, 68, 69, 71, 72, 73, 74, 79, 81, 89, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 103], "head": 25, "head_mask": 20, "header": 44, "help": [61, 86, 92], "here": [27, 28, 29, 30, 32, 33, 34, 40, 41, 42, 46, 49, 50, 51, 55, 56, 57, 60, 67, 68, 72, 73, 75, 91, 95, 96, 97, 98, 100, 102, 103], "hf": [17, 60], "hh": 66, "hidden": 20, "high": [13, 77], "higher": [46, 47, 56, 61, 74, 101], "highli": [40, 46, 91, 103], "hit": 47, "home": 39, "hood": 98, "hook": 20, "hop": [38, 43, 89], "hope": 97, "hopefulli": 47, "host": [0, 44, 103], "hour": 45, "how": [27, 30, 34, 36, 38, 39, 40, 43, 47, 54, 62, 63, 67, 68, 82, 89, 91, 95, 96, 97, 99, 100, 103], "howev": [40, 43, 47, 92, 98, 100], "html": 29, "htmlnodepars": 29, "http": [0, 13, 44, 49, 50, 51, 100], "huggingfac": [13, 22, 41, 51, 56, 85, 103], "huggingface_all_mpnet_base_v2": 51, "huggingface_baai_bge_smal": 51, "huggingface_bge_m3": 51, "huggingface_cointegrated_rubert_tiny2": 51, "huggingface_evalu": [12, 13], "huggingfaceembed": 51, "huggingfacellm": [51, 54, 62, 63], "human": 46, "hybrid": [23, 34, 94, 96], "hybrid cc": 92, "hybrid rrf": 93, "hybrid_cc": [0, 14, 90, 92, 94], "hybrid_module_func": 23, "hybrid_module_param": 23, "hybrid_rrf": [0, 14, 90, 93, 94, 96], "hybridcc": [14, 23], "hybridretriev": [14, 23], "hybridrrf": [14, 23], "hyde": [0, 14, 51, 90], "hydrogen": 89, "hyperparamet": [23, 96], "hypothet": 87, "i": [0, 7, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 97, 101, 103], "id": [16, 19, 20, 23, 25, 27, 38, 41, 69, 94], "id_": 25, "id_column_nam": 25, "idcg": 47, "ideal": 47, "ident": 39, "identifi": [41, 77, 94], "idf": [46, 91], "ignor": [20, 23], "imag": [41, 97, 103], "imagin": 41, "imdb": 89, "immedi": 90, "impact": [47, 61, 85, 90, 95], "implement": [30, 100], "import": [27, 28, 29, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 50, 51, 52, 64, 89, 91, 93, 100, 103], "importerror": 102, "imposs": 100, "improv": [13, 61, 77, 82, 90], "inc": [49, 50, 100], "includ": [15, 41, 46, 47, 51, 54, 62, 63, 85, 90, 92, 99, 101], "incorrect": [47, 66], "increas": [47, 74, 90, 101, 102], "index": [0, 7, 23, 25, 27, 37, 54, 55, 86, 102], "index_valu": 25, "indic": [13, 25, 47], "indici": 41, "individu": 101, "influenc": 47, "info": 50, "inform": [23, 27, 28, 29, 32, 33, 34, 39, 41, 46, 47, 51, 54, 62, 63, 66, 67, 68, 77, 81, 91, 92, 93, 94, 95, 97, 99, 100, 101, 103], "ingest": [23, 95], "ini": 50, "initi": [0, 22, 38, 40, 51, 56, 77, 82, 102], "initial_corpu": [38, 40], "initial_corpus_df": 40, "initial_qa": [38, 40], "initial_qa_df": 40, "initial_raw": [38, 40], "initial_raw_df": 40, "input": [0, 16, 20, 22, 23, 25, 41, 42, 43, 45, 54, 55, 61, 79, 83, 84, 86, 88, 92, 93, 98, 100], "input_id": 20, "input_metr": 23, "input_str": 19, "input_tensor": 19, "input_text": [19, 20], "inputs_emb": 20, "inquir": 39, "insid": [0, 102, 103], "inspir": [59, 65, 66, 67, 68, 69, 87], "instal": [49, 51, 91, 103], "instanc": [7, 13, 17, 20, 23, 24, 25, 39, 40, 41, 51, 54], "instead": [20, 39, 52, 103], "instruct": [17, 41, 50, 51, 56, 60, 80, 82, 91], "int": [0, 7, 11, 13, 15, 16, 17, 19, 20, 23, 25], "integ": 20, "integr": [51, 76, 101], "intend": 101, "interact": [0, 45], "interchang": 101, "interest": 100, "interfac": [0, 51], "intermedi": 19, "internet": 95, "interv": 0, "introduc": [46, 52, 99], "invent": 39, "involv": [77, 94], "ir": [19, 71], "irrelev": 64, "is_best": 25, "is_fields_notnon": [0, 24], "issu": [49, 53, 100, 102, 103], "italian": 27, "item": [13, 25, 47, 68, 69], "iter": 0, "its": [0, 17, 21, 23, 24, 25, 41, 43, 45, 80, 85, 90, 95, 98, 99, 100], "itself": [51, 92, 98], "java_hom": 50, "jdk": 50, "jean": [39, 41], "jina": [0, 14, 74], "jina_rerank": 77, "jina_reranker_pur": [14, 19], "jinaai": 74, "jinaai_api_kei": 74, "jinarerank": [14, 19], "job": 98, "jq_schema": 32, "json": [0, 31, 33, 44, 103], "json_to_html_t": 31, "judgment": 46, "just": [0, 23, 36, 37, 41, 43, 55, 91, 100, 103], "k": [13, 15, 16, 17, 18, 19, 21, 22, 23, 41, 51, 58, 77, 94], "keep": [0, 25, 40, 55, 66, 68, 69, 96, 103], "kei": [0, 12, 13, 24, 25, 27, 28, 29, 32, 41, 43, 51, 55, 70, 74, 95, 96, 102, 103], "key_column_nam": 25, "keyword": [17, 46, 51, 54, 62, 63, 87, 88, 89], "kf1_polici": 100, "kind": [41, 100, 102], "kiwi": [27, 40, 91], "kiwi_result": 27, "kiwipiepi": 27, "kkma": 91, "know": [38, 41, 49, 85, 96, 97, 98, 101, 103], "knowledg": 41, "known": [43, 47], "ko": [27, 37, 39, 50, 77], "ko-rerank": 75, "konlpi": [28, 50, 91], "korea": [49, 50, 100], "korean": [7, 27, 28, 51, 75], "korerank": [0, 14, 75], "koreranker_run_model": [14, 19], "kosimcs": 51, "kwarg": [0, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 54, 62, 63, 87, 88, 89], "l": [19, 79], "label": [20, 47, 87], "lama_index": 43, "lambda": [0, 27, 37, 38, 40], "lang": [13, 37, 38, 39, 40, 53], "langchain": [0, 1, 7, 27, 34, 42, 43, 88, 100], "langchain_chunk": [0, 1, 28], "langchain_chunk_pur": [1, 7], "langchain_commun": [32, 43], "langchain_document_to_parquet": 43, "langchain_documents_to_parquet": [43, 52], "langchain_openai": 42, "langchain_pars": [0, 1, 32, 34, 35, 40], "langchain_text_splitt": 43, "languag": [7, 13, 27, 37, 39, 46, 50, 53, 54, 61, 62, 63, 70, 82, 91, 101], "laredo": 39, "larg": [19, 46, 51, 53, 54, 61, 62, 63, 70, 73, 74, 76, 86, 101], "last": [34, 44], "last_modified_datetim": [27, 34, 41, 66, 81], "lastli": [95, 96], "later": [47, 66, 103], "latest": [56, 66, 81], "latter": 20, "launch": [0, 45, 103], "lazyinit": [0, 26, 27, 51], "le": 0, "lead": 61, "learn": [42, 49, 67, 68, 95, 96, 98, 100, 103], "least": [47, 68, 69, 98, 102], "legaci": [30, 42, 43, 52], "legal": 89, "length": [0, 17, 23, 25, 47, 48, 53, 55, 65, 67, 79, 85], "lengthen": 84, "less": [43, 47, 58, 61], "let": [47, 48, 98, 100, 103], "level": [25, 46, 58, 61, 77, 94, 101], "lexcial": 92, "lexic": [23, 92], "lexical_id": 23, "lexical_scor": 23, "lexical_summari": 23, "lexical_summary_df": 23, "lexical_theoretical_min_valu": [23, 92], "li": 80, "librari": [52, 56, 103], "licens": 89, "life": 41, "light": 39, "like": [0, 22, 23, 25, 27, 34, 36, 38, 40, 41, 44, 47, 50, 54, 55, 61, 62, 63, 82, 85, 91, 92, 93, 96, 98, 100, 102, 103], "likelihood": 82, "limit": [55, 71, 72, 73, 74, 78, 79, 100, 101, 102], "line": [0, 15, 17, 18, 19, 21, 22, 23, 53, 58, 61, 64, 77, 85, 90], "linear": 100, "lingua": 61, "link": [0, 45, 46], "linux": 102, "list": [0, 1, 7, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 41, 42, 43, 47, 54, 62, 63, 72, 73, 80, 89, 92, 96], "list1": 23, "list2": 23, "liter": 47, "literal_ev": 96, "littl": [22, 40, 43, 100], "ll": [45, 47, 90, 102], "llama": [7, 17, 27, 34, 37, 43, 54, 55, 60], "llama3": [37, 102], "llama_document_to_parquet": 43, "llama_gen_queri": [1, 2, 38, 39, 40, 52], "llama_index": [0, 1, 29, 36, 37, 38, 39, 40, 43, 51, 53, 62, 63, 86, 102], "llama_index_chunk": [0, 1, 27, 29, 38, 40], "llama_index_chunk_pur": [1, 7], "llama_index_gen_gt": [1, 2, 36, 38, 40], "llama_index_llm": [0, 14, 21, 51, 53, 54, 55, 56, 78, 85, 87, 88, 89, 98, 100, 102], "llama_pars": [33, 34, 35], "llama_text_node_to_parquet": 43, "llamaindex": [39, 43, 51, 54, 56, 59, 66, 67, 68, 78, 100], "llamaindexcompressor": [14, 17], "llamaindexllm": [14, 15], "llamapars": [0, 1], "llm": [13, 14, 15, 17, 19, 30, 31, 36, 38, 39, 40, 41, 43, 46, 49, 50, 53, 56, 61, 62, 63, 64, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 98, 100, 103], "llm evalu": 53, "llm infer": 56, "llm metric": [46, 99, 102], "llm_lingua": [17, 60], "llm_name": 17, "llmlingua": 60, "llmlingua_pur": [14, 17], "load": [0, 25, 41, 43, 50], "load_bm25_corpu": [14, 23], "load_chroma_collect": [14, 23], "load_data": 43, "load_dotenv": 50, "load_summary_fil": [0, 25], "load_yaml": [1, 11], "loader": [32, 34, 43], "local": [43, 49, 51, 78, 95, 103], "local model": 51, "locat": 100, "log": 54, "log2": 47, "log_cli": 50, "log_cli_level": 50, "logarithm": 47, "logarithmic": 47, "logic": 46, "logprob": 55, "long": [61, 85, 97, 100], "long context reord": 84, "long_context_reord": [0, 14, 84], "longcontextreord": [14, 21], "longer": 52, "longest": 13, "longllmlingua": [0, 14, 60], "look": [22, 23, 27, 34, 38, 40, 41, 44, 47, 48, 91, 92, 93, 96, 100], "loop": [25, 101], "lost in the middl": 84, "lot": [37, 41, 98, 103], "lower": [25, 37, 47, 61, 65, 69, 95, 102], "lowercas": [28, 29, 32], "m": [19, 50, 79], "m3": 51, "mac": [50, 102], "made": [37, 48, 100, 103], "magic": 100, "mai": [47, 101, 102], "main": [30, 100], "major": 51, "make": [0, 20, 23, 25, 30, 39, 40, 41, 42, 49, 50, 54, 56, 61, 62, 63, 83, 84, 85, 86, 98, 100, 103], "make_basic_gen_gt": [36, 38, 40], "make_batch": [0, 25], "make_combin": [0, 25], "make_concise_gen_gt": [36, 38, 40], "make_generator_callable_param": [14, 21], "make_llm": [14, 17], "make_metadata_list": [1, 7], "make_node_lin": [0, 26], "make_qa_with_existing_qa": 43, "make_retrieval_callable_param": [14, 22], "make_retrieval_gt_cont": [38, 40], "make_single_content_qa": [43, 52], "make_trial_summary_md": [0, 26], "maker": [15, 21, 83, 86, 98, 100], "malayalam": 27, "malfunct": 103, "manag": 96, "mani": [47, 54, 56, 62, 63, 89, 98], "manual": 103, "map": [0, 13, 19, 20, 27, 30, 37, 38], "marco": [19, 79], "margin": 46, "markdown": [25, 33, 35], "marker": [49, 50, 100], "markov": 98, "mask": 20, "master": 13, "match": [13, 41, 46], "matter": 100, "max": [23, 55, 92], "max_length": 79, "max_ngram_ord": 13, "max_token": [51, 54, 55, 56, 62, 63, 87, 88, 89, 90], "max_token_s": 15, "maximum": [13, 56, 79], "md": 43, "me": [83, 84, 85, 86, 98, 100], "mean": [0, 13, 17, 18, 19, 23, 25, 36, 41, 43, 46, 48, 56, 64, 91, 92, 97, 98, 101, 102], "measur": [0, 46, 48, 85, 90, 94], "measure_spe": [0, 26], "mechan": 101, "med": 76, "meet": 46, "meger": 100, "member": [39, 41], "memori": [71, 72, 73, 79, 102], "mention": [44, 45], "merced": 89, "merg": [35, 63, 100, 101], "messag": [19, 32], "metad": 11, "metadata": [0, 7, 11, 19, 27, 66, 81], "metadata_list": 7, "meteor": [12, 13, 53, 85, 96, 99, 100, 102], "method": [0, 7, 13, 20, 23, 24, 27, 34, 35, 36, 37, 38, 39, 40, 42, 46, 53, 85, 86, 90, 91, 92, 94, 96, 98, 99, 102], "metric": [0, 12, 15, 17, 21, 22, 23, 24, 41, 53, 58, 61, 64, 77, 85, 90, 94, 96, 97, 99, 100, 101, 102], "metric_input": [12, 13, 15, 17, 21, 22, 23], "metric_nam": [46, 53], "metricinput": [0, 12, 13, 15, 17, 21, 22, 23, 26], "mexican": 39, "might": [13, 42, 55, 98, 103], "min": [23, 92], "mind": [96, 103], "mini": 39, "minilm": [19, 79], "minimum": [23, 89, 92, 103], "mip": 95, "miss": 102, "mistak": [37, 102, 103], "mistral": [51, 56, 91], "mistralai": [51, 56, 91], "mix": 101, "mjpost": 13, "mm": [23, 66, 92, 94], "mmarco": 76, "mock": [0, 51], "mockembed": 0, "mockembeddingrandom": [0, 26], "mockllm": 51, "modal": 41, "mode": [16, 58, 59], "model": [0, 13, 19, 20, 21, 23, 35, 37, 38, 39, 41, 43, 45, 46, 47, 49, 50, 53, 54, 55, 56, 58, 61, 62, 63, 67, 68, 70, 71, 72, 73, 74, 75, 78, 79, 80, 82, 84, 85, 87, 88, 89, 91, 95, 97, 98, 100, 101, 102, 103], "model_computed_field": [0, 14, 19, 26], "model_config": [0, 14, 19, 26], "model_field": [0, 14, 19, 26], "model_nam": [0, 17, 19, 25, 51, 60, 71, 72, 73, 76, 79], "modeling_enc_t5": [14, 19], "modest": 47, "modifi": [34, 41, 103], "modul": [26, 28, 29, 31, 32, 33, 40, 49, 57, 58, 64, 97, 99, 100, 102, 103], "modular": [97, 101], "modular rag": 100, "module_dict": 24, "module_nam": 0, "module_param": [0, 7, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25], "module_summary_df": 23, "module_typ": [0, 22, 24, 27, 28, 29, 31, 32, 33, 34, 35, 40, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 102], "module_type_exist": [0, 24], "monot5": [0, 14, 77], "monot5_run_model": [14, 19], "more": [23, 28, 29, 32, 33, 38, 39, 40, 41, 42, 46, 47, 53, 56, 61, 75, 77, 78, 85, 86, 89, 90, 91, 97, 99, 101, 103], "most": [40, 43, 47, 51, 53, 77, 86, 91, 94, 95, 96, 98, 103], "mpnet": [13, 51], "mrr": 13, "msmarco": [19, 76], "mt5": 76, "much": [37, 100, 102], "multi": [39, 41, 89, 90], "multi query expans": 88, "multi_context": 42, "multi_query_expans": [0, 14, 51, 88], "multilingu": [70, 91], "multipl": [21, 22, 23, 34, 88, 89, 92, 93, 96, 97, 98, 100, 101], "multiqueryexpans": [14, 22], "multiqueryretriev": 88, "multitask": 51, "must": [0, 16, 17, 18, 19, 21, 23, 25, 28, 29, 39, 40, 41, 43, 44, 47, 51, 56, 58, 66, 76, 81, 83, 84, 86, 89, 92, 96, 100, 101, 102, 103], "n": [13, 19, 27, 31, 38, 40, 46, 50, 55, 81, 83, 84, 85, 86, 90, 100], "n_thread": 13, "naiv": 100, "name": [0, 12, 13, 19, 22, 23, 25, 39, 53, 55, 56, 58, 60, 61, 64, 67, 68, 77, 78, 85, 90, 91, 92, 93, 97, 103], "natur": [38, 46], "naver": 31, "necessari": [43, 90], "need": [7, 20, 27, 30, 35, 40, 41, 42, 43, 45, 47, 50, 61, 70, 74, 85, 89, 91, 95, 96, 97, 100, 102, 103], "nest": 25, "nested_list": 25, "never": 49, "new": [30, 39, 40, 41, 45, 50, 51, 56, 96, 99, 100, 103], "new_corpus_df": 40, "new_embed": 20, "new_qa": 40, "newjeans1": 41, "newjeans2": 41, "newlin": 13, "next": [48, 58, 70, 74, 85, 100], "nlg": 46, "nn": 20, "node": [0, 26, 41, 43, 48, 51, 54, 57, 87, 88, 89, 92, 99], "node_dict": 24, "node_dir": [0, 23], "node_lin": [26, 58, 61, 64, 77, 85, 90, 96, 97, 99, 100], "node_line_1": [51, 96, 100], "node_line_2": [96, 100], "node_line_3": 96, "node_line_dict": 0, "node_line_dir": [0, 15, 16, 17, 18, 19, 21, 22, 23, 24], "node_line_nam": [51, 53, 58, 61, 64, 77, 85, 90, 94, 96, 97, 99, 100], "node_nam": 0, "node_param": [0, 24], "node_pars": [29, 43], "node_summary_df": 0, "node_typ": [0, 24, 51, 53, 58, 61, 64, 77, 85, 90, 94, 96, 99, 100, 102], "node_view": [0, 26], "nodepars": 7, "nodewithscor": 19, "non": 35, "none": [0, 7, 13, 19, 20, 24, 25, 53, 61, 85], "nonetyp": 0, "normal": [23, 73, 92], "normalize_dbsf": [14, 23], "normalize_mean": 99, "normalize_method": [23, 92, 94], "normalize_mm": [14, 23], "normalize_str": [0, 25], "normalize_tmm": [14, 23], "normalize_unicod": [0, 25], "normalize_z": [14, 23], "norwegian": 27, "notabl": 84, "note": 58, "nousresearch": [17, 60], "now": [38, 40, 41, 42, 43, 56, 95, 96, 98, 99, 100, 102, 103], "ntabl": 31, "nuevo": 39, "num_passag": [16, 59], "num_quest": 43, "num_work": 0, "number": [0, 19, 23, 25, 34, 43, 47, 48, 56, 58, 59, 61, 64, 89, 90, 97, 101, 103], "numer": 49, "object": [0, 19, 24, 43, 54, 62, 63, 66, 81, 87, 88, 89], "observ": [45, 84], "obtain": 77, "occur": [41, 55, 96, 100, 102], "ocr": [31, 35], "offer": 92, "offici": 25, "often": [39, 43, 91, 102], "okai": 41, "okt": 91, "ollama": [37, 51], "onc": [41, 54, 56, 62, 63, 70, 74, 92, 97, 100, 103], "one": [0, 7, 17, 18, 19, 20, 21, 25, 27, 38, 39, 40, 41, 43, 44, 47, 66, 68, 69, 85, 96, 97, 98, 101, 102], "onli": [13, 15, 16, 17, 18, 19, 21, 22, 23, 25, 27, 34, 38, 39, 41, 48, 54, 62, 63, 66, 85, 86, 97, 98, 100, 103], "oom": [78, 102], "open": [95, 98, 102], "openai": [13, 16, 21, 22, 37, 38, 39, 40, 43, 51, 53, 54, 58, 61, 62, 63, 67, 68, 78, 85, 87, 88, 89, 90, 94, 95, 96, 98, 100], "openai_api_kei": [50, 55, 96, 102], "openai_cli": [37, 39], "openai_embed_3_larg": [43, 51], "openai_embed_3_smal": 51, "openai_gen_gt": [1, 2, 36], "openai_gen_queri": [1, 2, 39], "openai_llm": [0, 14, 85], "openai_truncate_by_token": [0, 25], "openaiembed": [23, 42], "openailik": [51, 102], "openaillm": [14, 15], "oper": [41, 44, 61, 94, 101], "oppos": 58, "opt": 56, "optim": [0, 27, 30, 34, 37, 38, 41, 42, 49, 55, 56, 61, 67, 68, 91, 92, 93, 96, 97, 99, 100, 101], "optimize_hybrid": [14, 23], "option": [13, 20, 27, 34, 45, 50, 53, 58, 60, 61, 64, 75, 76, 77, 80, 82, 85, 90, 92, 93, 96, 98, 99, 101, 103], "order": [0, 13, 46, 47], "org": 49, "organ": 97, "orient": 46, "origin": [0, 23, 25, 66, 82], "original_str": 27, "original_text": 11, "other": [0, 13, 23, 25, 41, 46, 47, 50, 54, 61, 62, 63, 64, 78, 87, 88, 89, 92, 96, 97, 98, 100, 103], "otherwis": 34, "our": [23, 27, 31, 34, 41, 43, 49, 50, 57, 65, 69, 87, 88, 89, 98, 100, 102, 103], "out": [40, 41, 47, 49, 50, 51, 53, 56, 64, 65, 66, 67, 68, 69, 96, 97, 100, 102, 103], "outcom": [85, 90], "outperform": 46, "output": [0, 30, 39, 42, 44, 46, 53, 60, 82, 85, 90, 102], "output_attent": 20, "output_filepath": 43, "output_hidden_st": 20, "output_path": [0, 103], "over": [56, 101], "overal": [46, 77, 98], "overfit": 103, "overlap": 48, "overrid": 13, "overridden": 20, "overview": 30, "own": [31, 41, 49, 64, 87, 88, 89, 98, 101, 103], "p4dyxfmsa": [49, 100], "packag": [26, 50, 51, 52, 102], "pad": 20, "pad_token": 20, "page": [27, 31, 34, 35, 38, 50, 78], "paid": 35, "pair": [20, 25, 30, 43, 46], "panda": [24, 25, 42, 43], "paper": [13, 39, 46, 82, 87, 89, 100], "paradigm": [46, 100], "parallel": [19, 20, 23, 56], "param": [0, 7, 13, 21, 22, 56, 97], "param_list": [14, 17], "paramet": [0, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 33, 43, 45, 46, 51, 96, 97, 98, 101, 102, 103], "parent": 0, "parquet": [0, 27, 34, 38, 40, 41, 42, 43, 97, 102, 103], "pars": [0, 1, 7, 27, 28, 29, 30, 31, 96], "parse_config": [27, 34], "parse_method": [28, 32, 34, 35, 40], "parse_modul": 32, "parse_project_dir": 40, "parsed_data_path": [0, 27], "parsed_result": 7, "parser": [26, 27, 40], "part": [30, 47, 101], "pass": [20, 21, 42, 54, 62, 63, 87, 88, 89, 100], "pass_compressor": [0, 14], "pass_passage_augment": [0, 14], "pass_passage_filt": [0, 14], "pass_query_expans": [0, 14], "pass_rerank": [0, 14], "pass_valu": 100, "passag": [16, 17, 18, 19, 23, 27, 37, 41, 47, 48, 59, 61, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 87, 91, 92, 93, 95, 100], "passage augment": [58, 59], "passage compressor": [61, 62, 63], "passage compressor metr": 48, "passage filt": [64, 65, 66, 67, 68, 69], "passage_augment": 58, "passage_filt": 64, "passage_filter_nod": [14, 18], "passage_id": 23, "passage_rerank": 100, "passageaugment": [0, 14], "passagecompressor": [0, 14], "passagefilt": [0, 14], "passagererank": [0, 14], "passcompressor": [14, 17], "passpassageaugment": [14, 16], "passpassagefilt": [14, 18], "passqueryexpans": [14, 22], "passrerank": [14, 19], "path": [0, 7, 11, 18, 19, 21, 22, 23, 25, 27, 34, 42, 43, 44, 50, 91, 103], "pattern": 34, "payload": 44, "pd": [0, 19, 24, 25, 42, 43], "pdf": [34, 40], "pdfminer": [32, 34, 40], "pdfplumber": [32, 34, 35, 40], "penalti": 13, "per": [34, 43, 48, 68, 69, 99], "percentag": 47, "percentil": 64, "percentile cutoff": 65, "percentile_cutoff": [0, 14, 65], "percentilecutoff": [14, 18], "perfect": [37, 100], "perform": [13, 20, 22, 27, 34, 35, 37, 39, 40, 41, 45, 47, 48, 49, 53, 55, 58, 61, 64, 77, 84, 85, 90, 98, 100], "persistentcli": 43, "perspect": 88, "pertin": 77, "phase": [77, 90], "piec": 22, "pip": [49, 50, 102], "pipelin": [0, 30, 38, 40, 44, 45, 49, 92, 97, 98, 100], "pipeline_dict": 103, "pkl": 97, "place": 39, "placehold": 43, "plan": [41, 53, 100], "pleas": [19, 23, 40, 41, 47, 50, 51, 53, 56, 60, 82, 85, 90, 91, 96, 100, 101, 102, 103], "plu": [23, 30, 41, 42, 50, 51, 56, 66, 67, 68, 81, 85, 89, 91, 95, 96], "polish": 27, "pop": [25, 41], "pop_param": [0, 25], "popular": [46, 91], "port": [0, 44, 103], "porter": 13, "porter_stemm": 23, "portugues": 27, "posit": [47, 84], "possibl": [98, 100, 102], "post": [0, 44, 100], "post_retrieve_node_lin": [53, 85], "potenti": [13, 30, 61], "power": [70, 74, 100], "ppv": 47, "pre": [37, 100, 103], "pre_retrieve_node_lin": 90, "precis": [13, 46, 61, 87, 94], "pred": [13, 47], "predefin": [53, 61, 77], "predict": [13, 47], "prefix": 82, "prefix_prompt": [19, 82], "prepare_for_model": 20, "preprocess": [0, 26], "present": 46, "pretti": 100, "prev": 58, "prev next augment": 59, "prev_next_augment": [0, 14, 58, 59], "prev_next_augmenter_pur": [14, 16], "prevent": [7, 27, 55, 78, 100], "preview": 13, "previou": [0, 15, 16, 17, 18, 19, 21, 22, 23, 46, 52, 69, 98, 100], "previous_result": [0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "prevnextpassageaugment": [14, 16], "primari": [58, 64, 77, 80], "primarili": 35, "primit": 43, "print": [19, 44], "prior": [43, 61], "priorit": 77, "prob": 54, "probabl": [55, 56, 98], "problem": [40, 43, 46, 100, 102], "process": [13, 19, 23, 25, 30, 43, 45, 49, 53, 56, 61, 77, 80, 85, 88, 90, 94, 95, 97, 98, 101, 103], "process_batch": [0, 25], "produc": 46, "product": 103, "project": [0, 49, 50], "project_dir": [0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 34, 45, 103], "project_directori": 103, "prompt": [0, 1, 2, 15, 17, 19, 21, 24, 54, 56, 78, 82, 83, 84, 86, 87, 88, 98, 100], "prompt1": 43, "prompt2": 43, "prompt3": 43, "prompt_mak": [85, 98, 100], "promptcompressor": 17, "promptmak": [0, 14], "prompts_ratio": 43, "proper": 55, "properli": [25, 91], "propos": 100, "protected_namespac": 0, "provid": [31, 43, 45, 46, 54, 62, 63, 76, 82, 103], "pseudo": 55, "pt": 76, "ptt5": 76, "publicli": 0, "punctuat": 25, "punktsentencetoken": 27, "pure": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "purpos": [58, 64, 77, 90, 101], "push": 102, "put": [41, 43, 60, 102], "py": 13, "pyarrow": 102, "pydant": [0, 19], "pydantic_model_": 0, "pymupdf": 32, "pypdf": 32, "pypdfdirectori": 32, "pypdfdirectoryload": 32, "pypdfium2": 32, "pypi": 49, "pytest": 50, "python": [25, 28, 41, 43, 50, 83, 96, 102], "pythoncodetextsplitt": 28, "q": 43, "qa": [0, 21, 22, 23, 27, 30, 36, 37, 39, 52, 97, 103], "qa_cnt": 0, "qa_creation_func": 43, "qa_data": 24, "qa_data_path": [0, 103], "qa_df": [25, 36, 37, 39, 42, 43], "qa_test": 103, "qacreat": [0, 1, 42, 43, 52], "qid": 39, "qualiti": [46, 77, 103], "quantit": 101, "quantiz": 102, "queri": [0, 1, 2, 13, 17, 18, 19, 21, 22, 23, 24, 25, 26, 32, 40, 44, 45, 52, 58, 61, 62, 64, 67, 68, 69, 75, 76, 77, 78, 80, 83, 84, 85, 86, 87, 94, 95, 98, 100], "query decompos": 89, "query expans": [87, 88, 89, 90], "query_bundl": 19, "query_decompos": [0, 14, 51, 89, 90], "query_embed": [19, 23], "query_expans": [0, 22, 85, 90, 98], "querybundl": 19, "querydecompos": [14, 22], "queryexpans": [0, 14], "question": [19, 22, 30, 36, 41, 43, 44, 46, 49, 60, 80, 82, 83, 84, 85, 86, 89, 100, 103], "question_num_per_cont": 43, "quickli": 61, "quit": [46, 53], "r": 50, "rag": [27, 30, 34, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102], "rag api": 44, "rag dataset": [41, 42, 43], "rag deploi": [44, 45], "rag evalu": [41, 42, 43, 46, 47, 48, 53, 99, 102], "rag llm": 51, "rag metr": [46, 47, 48, 99, 102], "rag model": 51, "rag optim": [49, 96, 98, 101], "rag perform": 98, "rag structur": 101, "rag tutori": 103, "rag web": 45, "raga": [0, 1, 47], "rais": 13, "ran": 97, "random": [0, 26, 56], "random_single_hop": [38, 40, 52], "random_st": 0, "randomli": [38, 43], "rang": [20, 38, 92, 93], "range_single_hop": 38, "rank": [13, 23, 91, 93], "rankgpt": [0, 14, 77], "rankgpt_rerank_prompt": [14, 19, 78], "rankgptrerank": 19, "rate": [47, 102], "ratio": 43, "ratio_dict": 43, "raw": [30, 31, 32, 33, 34, 35, 38, 40, 49, 52], "raw_df": 0, "re": [67, 68, 100], "read": [49, 83, 84, 85, 86, 96, 100, 102], "read_parquet": [42, 43], "readi": [43, 50, 98, 103], "real": [41, 43, 45, 55, 100], "realli": [23, 41, 56, 98, 100], "reason": 42, "reassess": 77, "recal": [13, 46, 61, 94], "receiv": 45, "recenc": [0, 14, 64], "recency_filt": 66, "recencyfilt": [14, 18], "recip": 20, "reciproc": [13, 23, 93, 99], "recogn": 102, "recommend": [13, 21, 39, 40, 41, 55, 85, 91, 97, 100, 102, 103], "reconstruct": 25, "reconstruct_list": [0, 25], "record": 97, "recurs": [25, 63], "recursivecharact": 28, "recursivecharactertextsplitt": 43, "reduc": [47, 61], "reduct": 61, "refer": [40, 46, 47, 53, 85, 90, 101, 103], "refin": [0, 14, 61, 77], "reflect": 91, "regist": 20, "rel": 13, "relat": [41, 46, 47, 54, 62, 63, 64, 82, 87, 88, 89], "relationship": 11, "releas": [30, 39], "relev": [13, 19, 41, 43, 47, 53, 61, 76, 77, 78, 87, 90, 94], "remain": 101, "remeb": 43, "rememb": [47, 50, 98], "remind": 103, "remov": [23, 24, 25, 37, 43], "reorder": [77, 85], "replac": [0, 17, 19, 25, 45, 85], "replace_valu": 25, "replace_value_in_dict": [0, 25], "repo": [41, 49, 91, 103], "repositori": 50, "repres": [95, 98], "request": [0, 44, 100], "request_timeout": 102, "requir": [0, 13, 19, 34, 39, 46, 50, 54, 61, 62, 63, 76, 87, 88, 89, 92, 93, 101], "rerank": [17, 18, 19, 41, 61, 66, 70, 74, 76, 77, 78, 80, 82, 100], "reranker_recal": 100, "reset": [37, 41, 102], "reset_index": [37, 38, 40, 102], "resid": 101, "resolv": 102, "resourc": 98, "respect": 48, "respond": 90, "respons": [0, 44, 45, 61, 62, 90], "rest": 78, "restart_evalu": 103, "restart_tri": [0, 26, 103], "result": [0, 7, 13, 15, 16, 17, 18, 19, 21, 22, 23, 25, 28, 29, 33, 35, 37, 39, 40, 43, 44, 46, 47, 48, 49, 55, 58, 69, 77, 85, 90, 92, 94, 97, 99, 100, 102], "result_column": [0, 26, 44], "result_df": [15, 17, 21, 23], "result_qa": [36, 39], "result_to_datafram": [0, 25], "result_typ": [33, 35], "retreived_cont": [83, 84, 86], "retri": 98, "retriev": [0, 7, 14, 17, 18, 19, 20, 22, 26, 27, 36, 37, 41, 51, 58, 59, 60, 61, 63, 70, 74, 77, 82, 85, 86, 87, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101], "retrieval metr": 47, "retrieval_cont": [0, 26], "retrieval_f1": [12, 13, 18, 19, 22, 58, 64, 77, 90, 94], "retrieval_func": 22, "retrieval_gt": [0, 24, 27, 39, 40, 43], "retrieval_gt_cont": [0, 24], "retrieval_map": [12, 13], "retrieval_modul": [22, 90], "retrieval_mrr": [12, 13], "retrieval_ndcg": [12, 13], "retrieval_param": 22, "retrieval_precis": [12, 13, 18, 19, 58, 64, 77, 90, 94, 99], "retrieval_recal": [12, 13, 18, 19, 22, 58, 64, 77, 90, 94, 99, 100], "retrieval_result": 47, "retrieval_token_f1": [12, 13, 61], "retrieval_token_precis": [12, 13, 61], "retrieval_token_recal": [12, 13, 61], "retrieve metr": 47, "retrieve_node_lin": [58, 61, 64, 77, 94], "retrieve_scor": [16, 17, 18, 19, 23], "retrieved_cont": [0, 16, 17, 18, 19, 23, 24, 83, 84, 85, 86, 100], "retrieved_id": [0, 16, 17, 18, 19, 23, 24], "return": [0, 7, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 35, 54, 55, 64, 66, 89, 95, 96], "return_dict": 20, "return_index": 0, "revers": [16, 25, 65, 69], "right": [43, 51, 100, 103], "rl_polici": 100, "roadmap": 97, "roberta": 51, "robust": 39, "root": 50, "roug": [12, 13, 53, 85, 96, 99, 100, 102], "rouge1": 13, "rouge2": 13, "rouge_typ": 13, "rougel": 13, "rougelsum": 13, "row": [23, 24, 25, 41, 97], "rpm": 74, "rr": [13, 47], "rrf": [23, 92, 94], "rrf_calcul": [14, 23], "rrf_k": [23, 90, 93, 96], "rrf_pure": [14, 23], "rubert": 51, "run": [0, 1, 14, 20, 24, 26, 30, 38, 49, 50, 61, 65, 66, 67, 68, 69, 96, 97, 98], "run_api": [44, 103], "run_api_serv": [0, 26, 44, 103], "run_chunk": [1, 7], "run_evalu": [14, 23], "run_generator_nod": [14, 15], "run_nod": [0, 24], "run_node_lin": [0, 26], "run_passage_augmenter_nod": [14, 16], "run_passage_compressor_nod": [14, 17], "run_passage_filter_nod": [14, 18], "run_passage_reranker_nod": [14, 19], "run_prompt_maker_nod": [14, 21], "run_query_embedding_batch": [14, 23], "run_query_expansion_nod": [14, 22], "run_retrieval_nod": [14, 23], "run_web": [0, 26, 45, 103], "runner": [0, 26, 44, 103], "runnerinput": [0, 26], "russian": 27, "sacrebleu": 13, "safe": 25, "said": 46, "same": [0, 22, 23, 25, 27, 34, 44, 45, 47, 58, 78, 89, 97, 98, 101, 103], "sampl": [0, 1, 27, 34, 39, 40, 43, 47, 52, 56, 102, 103], "sample_config": 103, "samplingparam": 56, "satisfactori": [40, 43], "save": [0, 15, 27, 31, 33, 34, 41, 96, 103], "save_parquet_saf": [0, 25], "scalabl": 43, "scale": [23, 61, 92, 99], "schema": [0, 1, 13, 23, 26, 30, 32, 36, 37, 39, 40, 52], "score": [13, 19, 23, 25, 48, 61, 65, 68, 69, 91, 92, 93, 94], "script": [25, 41], "search": [25, 90, 91, 95], "search_str": 11, "second": [20, 39, 48, 97, 100], "secret": 96, "section": [27, 34, 38, 96, 99, 101, 103], "secur": 102, "see": [27, 30, 34, 40, 47, 48, 51, 96, 97, 98, 100, 102], "seek": [39, 46], "segment": 46, "select": [0, 15, 17, 18, 19, 21, 22, 23, 39, 40, 43, 91, 97, 98, 99, 100, 101], "select_best": [0, 26], "select_best_averag": [0, 26], "select_best_rr": [0, 26], "select_bm25_token": [14, 23], "select_normalize_mean": [0, 26], "select_top_k": [0, 25], "self": [25, 89], "sem": 13, "sem_scor": [12, 13, 85, 96], "semant": [23, 46, 53, 91, 92], "semantic_id": 23, "semantic_llama_index": [27, 29], "semantic_scor": 23, "semantic_summari": 23, "semantic_summary_df": 23, "semantic_theoretical_min_valu": [23, 92], "semanticdoubl": 27, "semanticdoublemerg": 29, "semscor": 46, "send": [0, 70, 74], "sensit": 47, "sentenc": [13, 19, 37, 40, 46, 51, 67, 68, 77, 86, 91], "sentence transform": 79, "sentence_splitt": [27, 40], "sentence_splitter_modul": 27, "sentence_transform": [0, 14], "sentence_transformer_rerank": 79, "sentence_transformer_run_model": [14, 19], "sentencetransformerrerank": [14, 19], "sentencetransformerstoken": 28, "sentencewindow": [27, 29, 40], "sequenc": [19, 20, 101], "seri": 25, "serializeasani": 19, "seriou": [102, 103], "serv": [53, 61, 77, 82, 85, 90, 94, 101], "server": [0, 49, 55, 95, 102], "server_nam": [0, 45], "server_port": [0, 45], "session": 19, "set": [0, 7, 20, 21, 23, 31, 32, 33, 43, 49, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 77, 78, 82, 85, 87, 88, 89, 90, 92, 95, 96, 97, 98, 100, 101, 102], "set_initial_st": [0, 26], "set_input_embed": [19, 20], "set_page_config": [0, 26], "set_page_head": [0, 26], "setup": 98, "sever": [46, 55, 103], "shape": [13, 25], "share": [0, 45, 103], "shareabl": 0, "short": [36, 100], "shot": [82, 87, 89], "should": [0, 13, 19, 20, 27, 32, 46, 51, 55, 66, 102], "show": [39, 97, 98, 100], "shown": 40, "side": 55, "sigma": [23, 92], "signal": 82, "significantli": [61, 90, 101], "silent": 20, "similar": [13, 46, 53, 58, 64, 65, 69, 91, 92, 93, 95, 98], "similarity percentile cutoff": 67, "similarity_percentile_cutoff": [0, 14, 67], "similarity_threshold_cutoff": [0, 14, 64, 68], "similaritypercentilecutoff": [14, 18], "similaritythresholdcutoff": [14, 18], "simpl": [0, 1, 37, 42, 46, 53, 91, 100], "simpledirectoryread": 43, "simpli": [51, 81, 103], "simul": 101, "sinc": [20, 37, 40, 43, 45, 47, 53, 55, 78, 83, 85, 86], "singl": [0, 20, 25, 38, 41, 43, 49, 89, 96, 97, 100, 101], "single_token_f1": [12, 13], "situat": 92, "six": 48, "size": [0, 7, 13, 40, 55, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 92, 95, 102], "sk": 50, "skip": [17, 18, 19, 21, 85], "slice_tensor": [14, 19], "slice_tokenizer_result": [14, 19], "slovenian": 27, "slow": 56, "slower": [37, 61], "small": 51, "smaller": 47, "smooth": 13, "smooth_method": 13, "smooth_valu": 13, "so": [0, 17, 23, 27, 30, 31, 37, 38, 40, 41, 43, 45, 46, 47, 48, 50, 51, 56, 58, 61, 64, 65, 66, 67, 68, 69, 77, 85, 89, 90, 93, 96, 97, 98, 100, 103], "softwar": 95, "solut": [40, 43, 100], "some": [11, 23, 30, 37, 38, 41, 46, 48, 50, 51, 55, 70, 74, 92, 98, 102], "someon": 89, "someth": [43, 83, 84, 85, 86, 102], "sometim": [37, 55, 102], "soon": 100, "sort": [25, 81], "sort_by_scor": [0, 14, 16, 25], "sound": 47, "sourc": [0, 1, 7, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 41, 92, 93, 95], "sp_model_kwarg": 20, "spanish": 27, "spars": [23, 91], "spearman": 46, "special": [20, 25, 61], "specif": [13, 25, 34, 36, 39, 53, 61, 76, 80, 91, 101, 103], "specifi": [41, 44, 51, 53, 54, 62, 63, 75, 76, 80, 81, 85, 90, 92, 93, 98, 99, 101], "speed": [0, 53, 56, 61, 77, 85, 90, 94, 96, 101], "speed_threshold": [53, 58, 61, 64, 77, 85, 90, 94, 96, 99, 101], "spice": 89, "split": [13, 27, 35, 97, 101, 103], "split_by_sentence_kiwi": [0, 1, 27], "split_datafram": [0, 25], "split_docu": 43, "split_into_s": 27, "split_summari": 13, "splitter": [28, 29], "squad": 25, "squar": 89, "ss": 66, "stabl": 39, "stage": 82, "standalon": 56, "standard": [0, 46], "start": [0, 25, 41, 84, 103], "start_chunk": [0, 26, 27, 40], "start_end_idx": 27, "start_idx": 7, "start_pars": [34, 40], "start_trial": [0, 26, 103], "starter": [49, 103], "state": [20, 39, 98], "static": 16, "statist": 47, "stem": [46, 91], "stemmer": [13, 91], "step": [19, 27, 34, 35, 38, 50, 77, 100], "still": [98, 100, 102], "storag": 31, "store": [27, 95], "str": [0, 1, 7, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 35, 43], "straight": 100, "strateg": 101, "strategi": [15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 41, 58, 64, 96, 100, 102], "strategy_dict": [21, 22], "strategy_nam": [0, 21, 22], "strategyqa": 89, "stream": 55, "string": [12, 23, 24, 25, 27, 41, 43, 82, 85, 96], "strip": 13, "structur": [23, 39, 96, 100, 103], "studi": [84, 91], "sub": 89, "subclass": 20, "submodul": [1, 14, 26], "subpackag": 26, "subsequ": 13, "successfulli": [27, 34, 103], "sudo": 102, "suffix": [13, 82], "suffix_prompt": [19, 82], "suggest": [41, 98, 100, 102], "sum": 47, "summar": [46, 61], "summari": [0, 15, 25, 27, 34, 36, 47, 98, 103], "summary_df": [0, 23, 25], "summary_df_to_yaml": [0, 26], "summary_path": 25, "super": 39, "support": [23, 26, 37, 38, 39, 41, 42, 43, 47, 49, 54, 55, 57, 62, 63, 67, 68, 70, 74, 92, 96, 100, 101], "sure": 103, "survei": 100, "swap": 101, "swedish": 27, "synonym": 46, "synthet": [40, 43], "system": [41, 53, 54, 61, 62, 63, 77, 85, 94, 101], "t": [21, 25, 30, 34, 38, 41, 42, 43, 45, 47, 49, 85, 89, 92, 100, 102], "t5": 20, "t5config": 20, "t5pretrainedmodel": 20, "t5token": 20, "tabl": 34, "table_detect": [31, 35], "table_hybrid_pars": [0, 1, 34, 35], "table_param": 35, "table_parse_modul": 35, "tailor": [61, 93, 101], "take": [20, 51, 100], "taken": 25, "target": [17, 25, 60, 100], "target_dict": [0, 25], "target_kei": 25, "target_modul": [23, 90, 92, 96], "target_module_param": [23, 92], "target_node_lin": 100, "target_token": [17, 60], "tart": [14, 19, 76, 77], "tart_run_model": [19, 20], "task": [20, 25, 46, 53], "team": 31, "techniqu": 101, "tecolot": 39, "tell": [83, 84, 85, 86], "temp_client": 23, "temperatur": [42, 43, 51, 53, 54, 55, 56, 62, 63, 78, 87, 88, 89, 90, 98, 102], "temporari": 101, "temporarili": 101, "tensor_parallel_s": 56, "term": [47, 90], "test": [45, 47, 50, 51, 53, 58, 61, 64, 77, 90, 92, 96, 97, 98], "test_siz": 42, "test_weight_s": [92, 94], "testset": 42, "text": [7, 13, 17, 23, 25, 27, 28, 29, 30, 33, 34, 35, 41, 43, 44, 51, 53, 54, 56, 60, 62, 63, 79, 82], "text_param": 35, "text_parse_modul": 35, "text_splitt": 28, "textnod": 43, "textsplitt": 7, "textur": 89, "tf": 91, "than": [23, 37, 41, 46, 56, 58, 66, 89, 91, 97, 98, 100, 102], "thei": [39, 43, 46, 61, 96, 100, 101], "them": [20, 21, 22, 23, 25, 33, 41, 47, 63, 98], "theoret": [23, 92], "therefor": [20, 35, 43, 47, 48, 85, 90], "thi": [0, 7, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 50, 51, 53, 54, 55, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "thing": [96, 103], "think": [41, 96, 98, 100], "third": [23, 47, 48], "those": [39, 92], "thought": 46, "three": [27, 30, 34, 48, 66, 97, 100], "threshold": [0, 53, 61, 64, 66, 77, 85, 90, 94, 96, 101], "threshold cutoff": 69, "threshold_cutoff": [0, 14, 69], "thresholdcutoff": [14, 18], "through": [49, 85, 90], "thu": 47, "tier": 102, "time": [30, 40, 41, 45, 49, 53, 61, 64, 65, 66, 67, 77, 85, 90, 94, 97, 98, 101, 103], "time_rerank": [0, 14, 81], "timeout": 102, "timererank": [14, 19, 81], "tiny2": 51, "tmm": [23, 92, 94], "to_list": [0, 25], "to_parquet": [38, 40], "token": [13, 14, 15, 17, 19, 20, 23, 27, 38, 40, 46, 53, 56, 60, 61, 78, 85], "token_false_id": 19, "token_ids_0": 20, "token_ids_1": 20, "token_limit": 25, "token_threshold": [53, 85], "token_true_id": 19, "tokenization_enc_t5": [14, 19], "tokenize_ko_kiwi": [14, 23], "tokenize_ko_kkma": [14, 23], "tokenize_ko_okt": [14, 23], "tokenize_porter_stemm": [14, 23], "tokenize_spac": [14, 23], "tokenizer_output": 19, "tokentextsplitt": 43, "too": [70, 74, 97, 98], "took": 97, "tool": 49, "top": [16, 19, 56, 58, 77, 90, 94, 97], "top_k": [16, 19, 22, 23, 25, 43, 58, 64, 77, 90, 92, 93, 94, 96, 99, 100], "top_logprob": 55, "top_n": [14, 19], "top_p": 56, "topic": 46, "topn": 47, "torch": 20, "total": 48, "tpm": 74, "trail": [97, 103], "trail_fold": 0, "train": [97, 103], "transform": [19, 51, 56, 77], "translat": 46, "treat": [41, 96], "tree": 61, "tree summar": 63, "tree_summar": [0, 14, 51, 61, 63], "treesummar": [14, 17], "trg_lang": 13, "trial": [0, 44], "trial_dir": [0, 25, 103], "trial_fold": [27, 34, 44, 45, 103], "trial_path": [0, 7, 45], "troubl": [49, 102], "troubleshoot": [49, 50], "true": [0, 16, 19, 24, 25, 31, 35, 37, 38, 40, 43, 45, 47, 50, 55, 65, 69, 102], "truncat": 23, "truncate_by_token": [14, 15], "truth": [13, 36, 41, 46, 47, 53, 98], "try": [50, 95, 100, 102], "tune": 88, "tupl": [0, 7, 11, 12, 19, 23, 24, 25, 92, 93], "turbo": [21, 42, 43, 53, 54, 55, 61, 62, 63, 78, 85, 88, 89, 98, 102], "turkish": 27, "turn": 12, "tutori": [30, 42, 44, 45, 49, 100], "two": [20, 23, 41, 43, 46, 47, 56, 74, 99, 100, 103], "two_hop_increment": 39, "txt": [43, 50], "type": [0, 13, 20, 23, 24, 25, 27, 33, 34, 38, 41, 43, 44, 47, 51, 53, 55, 56, 70, 71, 72, 73, 74, 79, 87, 88, 89, 90, 91, 94, 100, 103], "typic": [39, 84], "tyre": 100, "u": 89, "ultim": 49, "unanswer": 38, "under": [98, 102], "underscor": 61, "understand": [97, 98], "understudi": 46, "unexpect": [41, 103], "unicamp": 76, "uniform": 42, "unigram": [13, 46], "unintend": [37, 96], "union": 0, "uniqu": [23, 41, 61, 101], "unit": 43, "unk": 20, "unk_token": 20, "unknown": 0, "unless": 25, "unstructur": 32, "unstructured_api_kei": 32, "unstructuredmarkdown": 32, "unstructuredpdf": 32, "unstructuredxml": 32, "until": 101, "up": [41, 48, 61, 63, 101, 103], "updat": [40, 51], "update_corpu": 40, "upgrad": [56, 102], "upr": [0, 14, 77, 100], "uprscor": [14, 19], "upsert": 25, "upstage_api_kei": 32, "upstagelayoutanalysi": [32, 35], "url": 44, "us": [0, 7, 13, 15, 17, 18, 19, 20, 21, 22, 23, 25, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 47, 48, 49, 50, 52, 53, 54, 58, 60, 61, 62, 63, 64, 66, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 97, 100, 102], "usag": [23, 61, 78, 95], "use_bf16": [19, 82], "use_fp16": [72, 73], "use_stemm": 13, "user": [0, 41, 43, 44, 45, 50, 58, 59, 82, 85, 88, 94, 97, 99, 100, 103], "usual": 36, "util": [0, 1, 26, 77], "v0": [30, 43, 51, 53, 56, 91], "v1": [0, 19, 25, 51, 70, 74, 76], "v2": [13, 19, 51, 70, 72, 76, 79], "vagu": 37, "valid": [26, 98], "validate_corpus_dataset": [0, 25], "validate_qa_dataset": [0, 25], "validate_qa_from_corpus_dataset": [0, 25], "validate_strategy_input": [0, 26], "valu": [0, 12, 13, 16, 20, 23, 24, 25, 28, 29, 32, 41, 43, 46, 47, 51, 65, 66, 67, 68, 69, 81, 92, 93, 96, 98, 99, 102], "valuabl": 43, "value_column_nam": 25, "vari": [90, 92, 101], "variabl": [25, 32, 50, 55, 70, 74, 102], "variant": 76, "variat": [41, 90], "variou": [27, 34, 40, 49, 53, 61, 77, 85, 94], "vector": [0, 95, 100], "vector db": 95, "vector_db": 23, "vectordb": [0, 14, 22, 43, 51, 90, 91, 94, 96, 97], "vectordb_ingest": [14, 23], "vectordb_pur": [14, 23], "verbos": [14, 19, 78], "veri": 49, "verifi": 39, "version": [23, 30, 39, 41, 52, 56, 98, 99, 102, 103], "video": 41, "viscond": 89, "visit": 23, "vllm": [0, 14, 53, 85, 102], "vocab_fil": 20, "vocabulari": 20, "voil\u00e0": 100, "vram": 102, "wa": [23, 27, 31, 34, 39, 46, 47, 51, 98, 102], "wai": [22, 27, 34, 37, 45, 96, 98, 100, 102], "wait": [50, 56], "want": [0, 21, 23, 24, 25, 28, 29, 32, 35, 37, 39, 41, 43, 48, 49, 50, 51, 66, 70, 71, 72, 73, 74, 79, 81, 92, 93, 96, 98, 101], "warn": 13, "water": 48, "we": [13, 17, 18, 19, 27, 30, 34, 37, 38, 39, 40, 41, 43, 45, 46, 47, 49, 50, 51, 53, 56, 85, 90, 91, 95, 96, 97, 98, 100, 102, 103], "web": 26, "weight": [13, 23, 46, 90, 92, 93], "weight_rang": [92, 93, 94], "welcom": 100, "well": [27, 34, 38, 43, 46, 47, 49], "were": 45, "what": [27, 34, 39, 41, 47, 49, 51, 82, 83, 84, 85, 86, 89, 97, 101], "when": [0, 13, 17, 18, 19, 20, 21, 23, 31, 39, 41, 48, 50, 51, 53, 55, 56, 64, 66, 74, 81, 84, 85, 89, 95, 96, 97, 101, 102, 103], "where": [49, 61, 94, 97], "whether": [0, 13, 19, 20, 46, 55, 72, 73, 82], "which": [0, 13, 15, 20, 21, 23, 25, 39, 41, 43, 45, 46, 47, 48, 49, 51, 54, 61, 62, 63, 64, 74, 85, 91, 92, 93, 96, 98, 100, 102, 103], "whichev": 47, "while": [20, 37, 43, 50, 101], "whitespac": [23, 25], "who": [39, 103], "whole": [0, 13, 15, 16, 17, 18, 19, 21, 22, 23, 98, 103], "why": [41, 98, 100], "wikipedia": 39, "wildcard": 34, "window": [85, 102], "window_replac": [0, 14, 86], "window_s": [27, 40], "windowreplac": [14, 21], "wise": 78, "within": [20, 53, 61, 77, 85, 94, 101], "without": [35, 49, 52, 54, 55, 58, 61, 62, 63, 64, 77, 87, 90, 92, 100], "wonder": 98, "word": [13, 36, 46, 91], "work": [43, 92, 96, 102, 103], "workaround": 102, "worker": 0, "would": [22, 47, 97], "write": [19, 30, 50, 78, 82, 89, 92, 96, 98, 100], "written": [28, 29, 32], "wrong": [7, 27, 43, 100], "wsl": 102, "x": [0, 19, 20, 27, 44], "yaml": [0, 40, 44, 46, 49, 51, 98, 99, 100, 101, 102], "yaml_filepath": 0, "yaml_path": [0, 11, 45, 103], "yaml_to_markdown": [0, 26], "ye": 39, "yet": [30, 42, 100], "yml": [0, 96], "you": [0, 7, 16, 17, 18, 19, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 81, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 103], "your": [0, 13, 27, 30, 31, 33, 34, 41, 44, 45, 49, 50, 55, 56, 64, 70, 74, 83, 84, 85, 86, 87, 88, 89, 93, 96, 98, 99, 100, 102], "your_api_bas": 51, "your_api_kei": [51, 102], "your_cohere_api_kei": 70, "your_dir_path": 43, "your_jina_api_kei": 74, "your_result_column": 44, "yourself": [23, 92], "yyyi": 66, "z": [23, 92, 94], "zero": [20, 82, 87]}, "titles": ["autorag package", "autorag.data package", "autorag.data.beta package", "autorag.data.beta.filter package", "autorag.data.beta.generation_gt package", "autorag.data.beta.query package", "autorag.data.beta.schema package", "autorag.data.chunk package", "autorag.data.corpus package", "autorag.data.parse package", "autorag.data.qacreation package", "autorag.data.utils package", "autorag.evaluation package", "autorag.evaluation.metric package", "autorag.nodes package", "autorag.nodes.generator package", "autorag.nodes.passageaugmenter package", "autorag.nodes.passagecompressor package", "autorag.nodes.passagefilter package", "autorag.nodes.passagereranker package", "autorag.nodes.passagereranker.tart package", "autorag.nodes.promptmaker package", "autorag.nodes.queryexpansion package", "autorag.nodes.retrieval package", "autorag.schema package", "autorag.utils package", "autorag", "Chunk", "Langchain Chunk", "Llama Index Chunk", "Data Creation", "Clova", "Langchain Parse", "Llama Parse", "Parse", "Table Hybrid Parse", "Answer Generation", "Filtering", "QA creation", "Query Generation", "Evaluation data creation tutorial", "Dataset Format", "RAGAS evaluation data generation", "Start creating your own evaluation data", "API endpoint", "Web Interface", "Generation Metrics", "Retrieval Metrics", "Retrieval Token Metrics", "AutoRAG documentation", "Installation and Setup", "Configure LLM &amp; Embedding models", "Migration Guide", "8. Generator", "llama_index LLM", "OpenAI LLM", "vllm", "Available List", "3. Passage Augmenter", "Prev Next Augmenter", "Long LLM Lingua", "6. Passage_Compressor", "Refine", "Tree Summarize", "5. Passage Filter", "Percentile Cutoff", "Recency Filter", "Similarity Percentile Cutoff", "Similarity Threshold Cutoff", "Threshold Cutoff", "cohere_reranker", "Colbert Reranker", "Flag Embedding LLM Reranker", "Flag Embedding Reranker", "jina_reranker", "Ko-reranker", "MonoT5", "4. Passage_Reranker", "RankGPT", "Sentence Transformer Reranker", "TART", "Time Reranker", "UPR", "F-String", "Long Context Reorder", "7. Prompt Maker", "Window Replacement", "HyDE", "Multi Query Expansion", "Query Decompose", "<strong>1. Query Expansion</strong>", "BM25", "Hybrid - cc", "Hybrid - rrf", "2. Retrieval", "Vectordb", "Make a custom config YAML file", "Folder Structure", "How optimization works", "Strategy", "Road to Modular RAG", "Structure", "TroubleShooting", "Tutorial"], "titleterms": {"": 47, "0": [47, 48], "1": [27, 28, 29, 31, 32, 34, 37, 38, 39, 40, 45, 46, 47, 48, 55, 90, 102, 103], "2": [27, 28, 29, 31, 32, 34, 38, 39, 40, 45, 46, 47, 48, 55, 94, 102, 103], "3": [27, 28, 29, 32, 34, 38, 39, 40, 45, 46, 47, 48, 52, 55, 58, 102, 103], "4": [27, 29, 32, 34, 38, 40, 46, 47, 77, 102], "5": [29, 32, 38, 46, 47, 64, 102], "6": [32, 38, 46, 47, 61, 102], "7": [32, 85], "8": 53, "For": 91, "If": 43, "The": [31, 102], "about": 100, "accur": 55, "add": [27, 51], "addit": [92, 93], "all": [32, 98], "also": 103, "an": 103, "ani": 91, "answer": [36, 38], "api": [32, 44, 50, 102, 103], "appli": [47, 48], "augment": [58, 59], "auto": [43, 55], "autorag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 45, 47, 48, 49, 100, 103], "autotoken": 91, "avail": [27, 28, 29, 32, 35, 57], "averag": 47, "backend": 95, "base": [4, 7, 9, 10, 15, 16, 17, 18, 19, 21, 22, 23, 37], "basic": [30, 36, 47, 48], "befor": [70, 74], "benefit": [58, 61, 64, 77, 90], "bert": 46, "best": 98, "beta": [2, 3, 4, 5, 6], "between": 64, "bleu": 46, "bm25": [23, 91], "both": 43, "build": [50, 102], "can": [49, 98], "cc": 92, "charact": 28, "check": [27, 34], "chunk": [7, 27, 28, 29, 40], "chunker": [0, 27], "cli": [0, 45, 103], "clova": [9, 31], "coher": [19, 46], "cohere_rerank": 70, "colab": 103, "colbert": [19, 71], "column": [27, 34], "come": 31, "command": 103, "complet": 39, "concept": [30, 39, 101], "concis": 36, "config": [53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 103], "configur": [51, 99], "consist": 46, "contact": 100, "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 38, 41], "context": 84, "corpu": [8, 40, 41, 42, 43], "could": 102, "creat": [43, 103], "creation": [30, 38, 40, 52], "csv": [32, 97], "cumul": 47, "custom": [42, 43, 96, 103], "cutoff": [65, 67, 68, 69], "dashboard": [0, 103], "data": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 30, 38, 40, 42, 43, 52, 97, 102], "data_path_glob": 34, "dataset": [41, 103], "decompos": 89, "default": 89, "definit": [46, 47, 48, 53, 58, 61, 64, 77, 85, 90, 94], "deploi": [0, 103], "detect": [31, 35], "didn": 103, "differ": [64, 102], "discount": 47, "do": 98, "doc_id": 41, "document": [43, 49], "don": 37, "dontknow": 3, "dure": 103, "earli": 100, "ecosystem": 49, "embed": [51, 72, 73], "endpoint": 44, "environ": 96, "error": [102, 103], "eval": 46, "evalu": [0, 12, 13, 40, 42, 43, 98, 103], "exampl": [27, 28, 29, 31, 32, 33, 35, 39, 45, 47, 48, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 101], "exist": 43, "expans": [88, 90], "explan": [92, 93, 101], "extract": [33, 103], "extract_evid": 2, "f": 83, "f1": [47, 48], "face": 102, "factoid": 39, "featur": [27, 43], "file": [27, 32, 34, 53, 58, 61, 64, 77, 85, 90, 94, 96, 103], "filter": [3, 37, 38, 64, 66], "find": 103, "first": 103, "flag": [72, 73], "flag_embed": 19, "flag_embedding_llm": 19, "fluenci": 46, "folder": [27, 34, 45, 97, 103], "format": [41, 103], "from": [31, 42, 43, 50, 102], "fstring": 21, "g": 46, "gain": 47, "gener": [12, 13, 15, 36, 38, 39, 42, 46, 53], "generation_gt": [4, 41, 43], "get": [38, 49], "gpu": [56, 102], "gradio": 45, "gt": 38, "guid": 52, "have": [32, 43], "help": 49, "hop": 39, "how": [28, 29, 32, 46, 49, 98], "html": [31, 32], "huggingfac": 91, "hybrid": [35, 92, 93], "hybrid_cc": 23, "hybrid_rrf": 23, "hyde": [22, 87], "i": [27, 28, 29, 32, 43, 58, 61, 64, 77, 90, 96, 98, 100, 102], "import": 102, "increment": 39, "index": [29, 43, 51, 97], "inform": 31, "instal": [50, 102], "instanc": [27, 34], "instead": 45, "interfac": [45, 103], "jina": 19, "jina_rerank": 74, "json": [32, 97], "kei": 50, "know": [37, 100], "ko": 75, "ko_kiwi": 91, "ko_kkma": 91, "ko_okt": 91, "korean": [50, 91], "korerank": 19, "langchain": [8, 28, 32], "langchain_chunk": 7, "langchain_pars": 9, "languag": 33, "length": 102, "line": [96, 97, 100, 101, 103], "lingua": 60, "list": 57, "llama": [29, 33], "llama_gen_queri": 5, "llama_index": [8, 10, 54], "llama_index_chunk": 7, "llama_index_gen_gt": 4, "llama_index_llm": 15, "llamaindex": [36, 102], "llamapars": 9, "llm": [37, 51, 54, 55, 60, 72, 102], "log": 55, "long": [41, 60, 84], "long_context_reord": 21, "longllmlingua": 17, "make": [43, 96], "maker": 85, "map": [40, 47], "markdown": 32, "mean": [47, 99], "merger": 100, "metadata": 41, "meteor": 46, "method": [28, 29, 32], "metric": [13, 46, 47, 48], "metricinput": 24, "migrat": 52, "model": [42, 51, 76], "modeling_enc_t5": 20, "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 34, 35, 51, 53, 54, 55, 56, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 101], "modular": 100, "monot5": [19, 76], "more": [51, 98, 100], "mrr": 47, "multi": [56, 88], "multi_query_expans": 22, "multipl": 43, "must": 32, "name": [27, 76], "ndcg": 47, "need": [32, 98], "next": [59, 98, 103], "node": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 53, 58, 61, 64, 77, 85, 90, 93, 94, 96, 97, 98, 100, 101, 103], "node_lin": 0, "normal": [47, 99], "note": 103, "occur": 103, "ollama": 102, "onli": 43, "openai": [36, 50, 55, 102], "openai_gen_gt": 4, "openai_gen_queri": 5, "openai_llm": [15, 55], "optim": [40, 98, 102, 103], "origin": 102, "output": [27, 34, 55], "overview": [27, 34, 38, 39, 40, 43, 53, 61, 77, 85, 90, 94, 99], "own": 43, "packag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "paramet": [32, 34, 35, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99], "pars": [9, 32, 33, 34, 35, 40], "parser": [0, 31, 34], "pass": 98, "pass_compressor": [17, 61], "pass_passage_augment": [16, 58], "pass_passage_filt": [18, 64], "pass_query_expans": [22, 90], "pass_rerank": [19, 77], "passag": [43, 58, 64], "passage_compressor": 61, "passage_rerank": 77, "passageaugment": 16, "passagecompressor": 17, "passagefilt": 18, "passagererank": [19, 20], "path": 45, "pdf": 32, "percentil": [65, 67], "percentile_cutoff": 18, "pipelin": [27, 34, 103], "point": 31, "polici": 100, "porter_stemm": 91, "pre_retrieve_node_lin": 97, "precis": [47, 48], "prepar": 103, "preprocess": 25, "prev": 59, "prev_next_augment": 16, "prob": 55, "project": [27, 34, 45, 97, 103], "prompt": [3, 4, 5, 43, 55, 85, 89], "promptmak": 21, "purpos": [53, 61, 94], "python": 103, "qa": [38, 40, 41, 42, 43], "qacreat": 10, "qid": 41, "queri": [5, 38, 39, 41, 43, 88, 89, 90], "query_decompos": 22, "query_expans": 97, "queryexpans": 22, "question": [37, 38, 39, 42], "rag": [100, 103], "raga": [10, 42], "rank": [47, 99], "rankgpt": [19, 78], "raw": 43, "recal": [47, 48], "recenc": [18, 66], "reciproc": 47, "refin": [17, 62], "relat": 102, "relev": 46, "reorder": 84, "replac": 86, "requesttimeout": 102, "rerank": [64, 71, 72, 73, 75, 79, 81], "resourc": 97, "restart": 103, "result": [27, 34, 98, 103], "retriev": [12, 13, 23, 38, 47, 48, 94], "retrieval_cont": [12, 13], "retrieval_gt": [41, 47], "retrieve_node_lin": 97, "road": 100, "roug": 46, "row": 102, "rrf": 93, "rule": 37, "run": [7, 9, 15, 16, 17, 18, 19, 21, 22, 23, 27, 34, 44, 45, 102, 103], "runner": 45, "sampl": [2, 38, 41, 97], "save": [38, 43], "schema": [2, 6, 24], "score": [46, 47], "see": 103, "sem": 46, "sem_scor": 53, "semant": 29, "sentenc": [27, 28, 29, 79], "sentence_transform": 19, "separ": 31, "server": [44, 103], "set": [27, 34, 42], "setup": 50, "short": 41, "similar": [67, 68], "similarity_percentile_cutoff": 18, "similarity_threshold_cutoff": 18, "simpl": [10, 29], "sourc": 50, "space": 91, "specif": 46, "specifi": [27, 34, 45, 96, 103], "splitter": 27, "start": [27, 34, 43, 49], "step": 103, "stori": 41, "strategi": [0, 53, 61, 77, 85, 90, 94, 98, 99, 101], "streamlit": 45, "string": 83, "structur": [97, 101], "submodul": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "subpackag": [0, 1, 2, 12, 14, 19], "summar": [63, 101], "summari": 97, "support": [0, 27, 33, 34, 51, 53, 61, 76, 77, 85, 90, 94, 95], "swap": 98, "system": 103, "t": [37, 98, 103], "tabl": [31, 33, 35], "table_hybrid_pars": 9, "tart": [20, 80], "test": 103, "text": 31, "threshold": [68, 69], "threshold_cutoff": 18, "time": 81, "time_rerank": 19, "token": [28, 29, 48, 55, 91], "tokenization_enc_t5": 20, "transform": 79, "tree": 63, "tree_summar": 17, "trial": [45, 97, 103], "trial_path": 103, "troubl": [50, 91], "troubleshoot": 102, "truncat": 55, "tupl": 96, "tutori": [40, 103], "two": 39, "type": [32, 39, 42], "u": 100, "unanswer": 37, "understand": 47, "unicodedecodeerror": 102, "upr": [19, 82], "us": [27, 28, 29, 32, 42, 43, 45, 46, 51, 55, 56, 91, 96, 98, 99, 103], "usag": [39, 70, 74], "util": [11, 12, 13, 25], "v0": 52, "valid": [0, 103], "variabl": 96, "vectordb": [23, 95], "version": 100, "vllm": [15, 51, 56], "want": [27, 34, 45, 100, 103], "web": [0, 45, 103], "what": [43, 58, 61, 64, 77, 90, 96, 100, 103], "wheel": 102, "when": 43, "while": 102, "why": [45, 49, 55, 56, 103], "window": [29, 86], "window_replac": 21, "work": 98, "write": 103, "xml": 32, "yaml": [27, 28, 29, 31, 32, 33, 34, 35, 45, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 103], "you": 43, "your": [43, 51, 103]}})
Search.setIndex({"alltitles": {"0. Retrieval token metric in AutoRAG": [[51, "retrieval-token-metric-in-autorag"]], "0. Understanding AutoRAG\u2019s retrieval_gt": [[50, "understanding-autorag-s-retrieval-gt"]], "1. Add File Name": [[29, "add-file-name"]], "1. Auto-truncate prompt": [[58, "auto-truncate-prompt"]], "1. Bleu": [[49, "bleu"]], "1. Factoid": [[45, "factoid"]], "1. HTML Parser": [[37, "html-parser"]], "1. Installation": [[105, "installation"]], "1. PDF": [[38, "pdf"]], "1. Parse": [[46, "parse"]], "1. Precision": [[50, "precision"]], "1. Query Expansion": [[93, null]], "1. Run as a CLI": [[106, "run-as-a-cli"]], "1. Sample retrieval gt": [[44, "sample-retrieval-gt"]], "1. Set chunker instance": [[29, "set-chunker-instance"]], "1. Set parser instance": [[40, "set-parser-instance"]], "1. Token": [[30, "token"], [31, "token"]], "1. Token Precision": [[51, "token-precision"]], "1. Unanswerable question filtering": [[43, "unanswerable-question-filtering"]], "1. Use YAML path": [[48, "use-yaml-path"]], "2. Accurate token output": [[58, "accurate-token-output"]], "2. CSV": [[38, "csv"]], "2. Character": [[30, "character"]], "2. Concept Completion": [[45, "concept-completion"]], "2. Get retrieval gt contents to generate questions": [[44, "get-retrieval-gt-contents-to-generate-questions"]], "2. Optimization": [[105, "optimization"]], "2. QA Creation": [[46, "qa-creation"]], "2. Recall": [[50, "recall"]], "2. Retrieval": [[97, null]], "2. Rouge": [[49, "rouge"]], "2. Run as an API server": [[106, "run-as-an-api-server"]], "2. Sentence": [[31, "sentence"]], "2. Sentence Splitter": [[29, "sentence-splitter"]], "2. Set YAML file": [[29, "set-yaml-file"], [40, "set-yaml-file"]], "2. The text information comes separately from the table information.": [[37, "the-text-information-comes-separately-from-the-table-information"]], "2. Token Recall": [[51, "token-recall"]], "2. Use a trial path": [[48, "use-a-trial-path"]], "3. Accurate log prob output": [[58, "accurate-log-prob-output"]], "3. Chunking Optimization": [[46, "chunking-optimization"]], "3. F1 Score": [[50, "f1-score"]], "3. Generate queries": [[44, "generate-queries"]], "3. JSON": [[38, "json"]], "3. LlamaIndex": [[105, "llamaindex"]], "3. METEOR": [[49, "meteor"]], "3. Passage Augmenter": [[61, null]], "3. Run as a Web Interface": [[106, "run-as-a-web-interface"]], "3. Sentence": [[30, "sentence"]], "3. Start chunking": [[29, "start-chunking"]], "3. Start parsing": [[40, "start-parsing"]], "3. Token F1": [[51, "token-f1"]], "3. Two-hop Incremental": [[45, "two-hop-incremental"]], "3. Use Runner": [[48, "use-runner"]], "3. Window": [[31, "window"]], "4. Check the result": [[29, "check-the-result"], [40, "check-the-result"]], "4. GPU-related Error": [[105, "gpu-related-error"]], "4. Generate answers": [[44, "generate-answers"]], "4. MRR (Mean Reciprocal Rank)": [[50, "mrr-mean-reciprocal-rank"]], "4. Markdown": [[38, "markdown"]], "4. Passage_Reranker": [[80, null]], "4. QA - Corpus mapping": [[46, "qa-corpus-mapping"]], "4. Sem Score": [[49, "sem-score"]], "4. Semantic": [[31, "semantic"]], "5-1. Coherence": [[49, "coherence"]], "5-2. Consistency": [[49, "consistency"]], "5-3. Fluency": [[49, "fluency"]], "5-4. Relevance": [[49, "relevance"]], "5. Filtering questions": [[44, "filtering-questions"]], "5. G-Eval": [[49, "g-eval"]], "5. HTML": [[38, "html"]], "5. MAP (Mean Average Precision)": [[50, "map-mean-average-precision"]], "5. Passage Filter": [[67, null]], "5. Simple": [[31, "simple"]], "5. UnicodeDecodeError": [[105, "unicodedecodeerror"]], "6. Bert Score": [[49, "bert-score"]], "6. NDCG (Normalized Discounted Cumulative Gain)": [[50, "ndcg-normalized-discounted-cumulative-gain"]], "6. Ollama RequestTimeOut Error": [[105, "ollama-requesttimeout-error"]], "6. Passage_Compressor": [[64, null]], "6. Save the QA data": [[44, "save-the-qa-data"]], "6. XML": [[38, "xml"]], "7. All files": [[38, "all-files"]], "7. Prompt Maker": [[88, null]], "8. Generator": [[56, null]], "API Endpoint": [[47, "id1"]], "API endpoint": [[47, null]], "Add more LLM models": [[54, "add-more-llm-models"]], "Add your embedding models": [[54, "add-your-embedding-models"]], "Answer Generation": [[42, null]], "Any trouble to use Korean tokenizer?": [[94, null]], "Auto-save feature": [[36, null]], "AutoRAG documentation": [[52, null]], "Available Chunk Method": [[30, "available-chunk-method"], [31, "available-chunk-method"]], "Available List": [[60, null]], "Available Parse Method by File Type": [[38, "available-parse-method-by-file-type"]], "Available Sentence Splitter": [[29, "available-sentence-splitter"]], "BM25": [[94, null]], "Backend Support": [[98, "backend-support"]], "Basic Concepts": [[32, "basic-concepts"]], "Basic Generation": [[42, "basic-generation"]], "Before Usage": [[73, "before-usage"], [77, "before-usage"]], "Build from source": [[53, "build-from-source"]], "Chunk": [[29, null]], "Clova": [[37, null]], "Colab Tutorial": [[106, null]], "Colbert Reranker": [[74, null]], "Concise Generation": [[42, "concise-generation"]], "Configuration": [[102, "configuration"]], "Configure LLM & Embedding models": [[54, null]], "Configure the Embedding model": [[54, "configure-the-embedding-model"]], "Configure the LLM model": [[54, "configure-the-llm-model"]], "Contact": [[103, null]], "Contact us": [[103, "contact-us"]], "Corpus Dataset": [[33, "corpus-dataset"]], "Could not build wheels": [[105, "could-not-build-wheels"]], "Data Creation": [[32, null], [55, "data-creation"]], "Dataset Format": [[33, null]], "Default Prompt": [[92, "default-prompt"]], "Deploy your optimal RAG pipeline": [[106, "deploy-your-optimal-rag-pipeline"]], "Do I need to use all nodes?": [[101, null]], "Don\u2019t know Filter": [[43, "don-t-know-filter"]], "Early version of AutoRAG": [[103, "early-version-of-autorag"]], "Error while running LLM": [[105, "error-while-running-llm"]], "Evaluate Nodes that can\u2019t evaluate": [[101, "evaluate-nodes-that-can-t-evaluate"]], "Evaluation data creation tutorial": [[46, null]], "Example": [[45, "example"]], "Example Configuration Using Normalize Mean Strategy": [[102, "example-configuration-using-normalize-mean-strategy"]], "Example Configuration Using mean Strategy": [[102, "example-configuration-using-mean-strategy"]], "Example Configuration Using rank Strategy": [[102, "example-configuration-using-rank-strategy"]], "Example Node Lines": [[104, "example-node-lines"]], "Example YAML": [[29, "example-yaml"], [29, "id1"], [30, "example-yaml"], [31, "example-yaml"], [37, "example-yaml"], [38, "example-yaml"], [38, "id1"], [38, "id2"], [38, "id3"], [38, "id4"], [38, "id5"], [38, "id6"], [39, "example-yaml"], [41, "example-yaml"]], "Example config.yaml": [[57, "example-config-yaml"], [58, "example-config-yaml"], [59, "example-config-yaml"], [62, "example-config-yaml"], [63, "example-config-yaml"], [65, "example-config-yaml"], [66, "example-config-yaml"], [68, "example-config-yaml"], [69, "example-config-yaml"], [70, "example-config-yaml"], [71, "example-config-yaml"], [72, "example-config-yaml"], [73, "example-config-yaml"], [74, "example-config-yaml"], [75, "example-config-yaml"], [76, "example-config-yaml"], [77, "example-config-yaml"], [78, "example-config-yaml"], [79, "example-config-yaml"], [81, "example-config-yaml"], [82, "example-config-yaml"], [83, "example-config-yaml"], [84, "example-config-yaml"], [85, "example-config-yaml"], [86, "example-config-yaml"], [87, "example-config-yaml"], [89, "example-config-yaml"], [90, "example-config-yaml"], [91, "example-config-yaml"], [92, "example-config-yaml"], [94, "example-config-yaml"], [95, "example-config-yaml"], [96, "example-config-yaml"], [98, "example-config-yaml"]], "Example config.yaml file": [[56, "example-config-yaml-file"], [61, "example-config-yaml-file"], [64, "example-config-yaml-file"], [67, "example-config-yaml-file"], [80, "example-config-yaml-file"], [88, "example-config-yaml-file"], [93, "example-config-yaml-file"], [97, "example-config-yaml-file"]], "Explanation of concepts": [[104, "explanation-of-concepts"]], "Extract pipeline and evaluate test dataset": [[106, "extract-pipeline-and-evaluate-test-dataset"]], "F-String": [[86, null]], "Facing Import Error": [[105, "facing-import-error"]], "Facing OPENAI API error": [[105, "facing-openai-api-error"]], "Factoid Example": [[45, "factoid-example"]], "Features": [[29, "features"]], "Filtering": [[43, null]], "Find Optimal RAG Pipeline": [[106, "find-optimal-rag-pipeline"]], "Flag Embedding LLM Reranker": [[75, null]], "Flag Embedding Reranker": [[76, null]], "Folder Structure": [[100, null]], "Generate QA set from Corpus data using RAGAS": [[35, "generate-qa-set-from-corpus-data-using-ragas"]], "Generation Metrics": [[49, null]], "How optimization works": [[101, null]], "How to Use": [[30, "how-to-use"], [31, "how-to-use"], [38, "how-to-use"]], "Huggingface AutoTokenizer": [[94, "huggingface-autotokenizer"]], "HyDE": [[90, null]], "Hybrid - cc": [[95, null]], "Hybrid - rrf": [[96, null]], "If you have both query and generation_gt:": [[36, "if-you-have-both-query-and-generation-gt"]], "If you only have query data:": [[36, "if-you-only-have-query-data"]], "Index": [[36, "index"], [54, "index"]], "Installation and Setup": [[53, null]], "Installation for Korean \ud83c\uddf0\ud83c\uddf7": [[53, "installation-for-korean"]], "Ko-reranker": [[78, null]], "LLM-based Don\u2019t know Filter": [[43, "llm-based-don-t-know-filter"]], "Langchain Chunk": [[30, null]], "Langchain Parse": [[38, null]], "Language Support": [[39, "language-support"]], "Legacy": [[34, null]], "Llama Index Chunk": [[31, null]], "Llama Parse": [[39, null]], "LlamaIndex": [[42, "llamaindex"], [42, "id2"]], "Long Context Reorder": [[87, null]], "Long LLM Lingua": [[63, null]], "Long story short": [[33, null], [33, null], [33, null], [33, null]], "Make Node Line": [[99, "make-node-line"]], "Make YAML file": [[99, "make-yaml-file"]], "Make a custom config YAML file": [[99, null]], "Make corpus data from raw documents": [[36, "make-corpus-data-from-raw-documents"]], "Make qa data from corpus data": [[36, "make-qa-data-from-corpus-data"]], "Merger Node": [[103, "merger-node"]], "Migration Guide": [[55, null]], "Module Parameters": [[57, "module-parameters"], [58, "module-parameters"], [59, "module-parameters"], [62, "module-parameters"], [63, "module-parameters"], [65, "module-parameters"], [66, "module-parameters"], [68, "module-parameters"], [69, "module-parameters"], [70, "module-parameters"], [71, "module-parameters"], [72, "module-parameters"], [73, "module-parameters"], [74, "module-parameters"], [75, "module-parameters"], [76, "module-parameters"], [77, "module-parameters"], [78, "module-parameters"], [79, "module-parameters"], [81, "module-parameters"], [82, "module-parameters"], [83, "module-parameters"], [84, "module-parameters"], [85, "module-parameters"], [86, "module-parameters"], [87, "module-parameters"], [89, "module-parameters"], [90, "module-parameters"], [91, "module-parameters"], [92, "module-parameters"], [94, "module-parameters"], [95, "module-parameters"], [96, "module-parameters"], [98, "module-parameters"]], "Module contents": [[0, "module-autorag"], [1, "module-autorag.data"], [2, "module-autorag.data.chunk"], [3, "module-contents"], [4, "module-autorag.data.legacy"], [5, "module-autorag.data.legacy.corpus"], [6, "module-autorag.data.legacy.qacreation"], [7, "module-autorag.data.parse"], [8, "module-autorag.data.qa"], [9, "module-autorag.data.qa.filter"], [10, "module-autorag.data.qa.generation_gt"], [11, "module-autorag.data.qa.query"], [12, "module-contents"], [13, "module-autorag.data.utils"], [14, "module-autorag.evaluation"], [15, "module-autorag.evaluation.metric"], [16, "module-autorag.nodes"], [17, "module-autorag.nodes.generator"], [18, "module-autorag.nodes.passageaugmenter"], [19, "module-autorag.nodes.passagecompressor"], [20, "module-autorag.nodes.passagefilter"], [21, "module-autorag.nodes.passagereranker"], [22, "module-autorag.nodes.passagereranker.tart"], [23, "module-autorag.nodes.promptmaker"], [24, "module-autorag.nodes.queryexpansion"], [25, "module-autorag.nodes.retrieval"], [26, "module-autorag.schema"], [27, "module-autorag.utils"]], "Modules that use Embedding model": [[54, "modules-that-use-embedding-model"]], "Modules that use LLM model": [[54, "modules-that-use-llm-model"]], "MonoT5": [[79, null]], "More optimization strategies": [[101, "more-optimization-strategies"]], "Multi Query Expansion": [[91, null]], "Next Step": [[106, null]], "Node & Module": [[104, "node-module"]], "Node Line": [[104, "node-line"]], "Node Parameters": [[56, "node-parameters"], [61, "node-parameters"], [64, "node-parameters"], [67, "node-parameters"], [80, "node-parameters"], [88, "node-parameters"], [93, "node-parameters"], [96, "node-parameters"], [97, "node-parameters"]], "Node line for Modular RAG": [[103, "node-line-for-modular-rag"]], "Note: Dataset Format": [[106, null]], "OpenAI": [[42, "openai"], [42, "id1"]], "OpenAI LLM": [[58, null]], "Output Columns": [[29, "output-columns"], [40, "output-columns"]], "Overview": [[29, "overview"], [36, "overview"], [40, "overview"], [44, "overview"], [45, "overview"], [46, "overview"], [56, "overview"], [97, "overview"], [102, "overview"]], "Overview:": [[64, "overview"], [80, "overview"], [88, "overview"], [93, "overview"]], "Parameters": [[41, "parameters"]], "Parse": [[40, null]], "Pass the best result to the next node": [[101, "pass-the-best-result-to-the-next-node"]], "Percentile Cutoff": [[68, null]], "Point": [[37, "point"]], "Policy Node": [[103, "policy-node"]], "Prepare Evaluation Dataset": [[106, "prepare-evaluation-dataset"]], "Prev Next Augmenter": [[62, null]], "Project": [[100, "project"]], "Purpose": [[56, null], [64, null], [97, null]], "QA Dataset": [[33, "qa-dataset"]], "QA creation": [[44, null]], "Query Decompose": [[92, null]], "Query Generation": [[45, null]], "Question types": [[45, "question-types"]], "RAGAS evaluation data generation": [[35, null]], "RAGAS question types": [[35, "ragas-question-types"]], "RankGPT": [[81, null]], "Recency Filter": [[69, null]], "Refine": [[65, null]], "Retrieval Metrics": [[50, null]], "Retrieval Token Metrics": [[51, null]], "Road to Modular RAG": [[103, null]], "Rule-based Don\u2019t know Filter": [[43, "rule-based-don-t-know-filter"]], "Run AutoRAG optimization": [[106, "run-autorag-optimization"]], "Run Chunk Pipeline": [[29, "run-chunk-pipeline"]], "Run Dashboard to see your trial result!": [[106, "run-dashboard-to-see-your-trial-result"]], "Run Parse Pipeline": [[40, "run-parse-pipeline"]], "Run with AutoRAG Runner": [[48, "run-with-autorag-runner"]], "Run with CLI": [[48, "run-with-cli"]], "Running API server": [[47, "running-api-server"]], "Running the Web Interface": [[48, "running-the-web-interface"]], "Sample Structure Index": [[100, "sample-structure-index"]], "Samples": [[33, "samples"]], "Sentence Transformer Reranker": [[82, null]], "Setup OPENAI API KEY": [[53, "setup-openai-api-key"]], "Similarity Percentile Cutoff": [[70, null]], "Similarity Threshold Cutoff": [[71, null]], "Specify modules": [[99, "specify-modules"]], "Specify nodes": [[99, "specify-nodes"]], "Start creating your own evaluation data": [[36, null]], "Strategy": [[88, "strategy"], [93, "strategy"], [102, null], [104, "strategy"]], "Strategy Parameter": [[102, "strategy-parameter"]], "Strategy Parameters": [[56, "strategy-parameters"], [64, "strategy-parameters"], [80, "strategy-parameters"], [97, "strategy-parameters"]], "Strategy Parameters:": [[88, "strategy-parameters"], [93, "strategy-parameters"]], "Structure": [[104, null]], "Submodules": [[0, "submodules"], [2, "submodules"], [3, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"], [12, "submodules"], [13, "submodules"], [14, "submodules"], [15, "submodules"], [16, "submodules"], [17, "submodules"], [18, "submodules"], [19, "submodules"], [20, "submodules"], [21, "submodules"], [22, "submodules"], [23, "submodules"], [24, "submodules"], [25, "submodules"], [26, "submodules"], [27, "submodules"]], "Subpackages": [[0, "subpackages"], [1, "subpackages"], [4, "subpackages"], [8, "subpackages"], [14, "subpackages"], [16, "subpackages"], [21, "subpackages"]], "Summarize": [[104, null], [104, null], [104, null]], "Supported Chunk Modules": [[29, "supported-chunk-modules"]], "Supported Model Names": [[79, "supported-model-names"]], "Supported Modules": [[56, "supported-modules"], [64, "supported-modules"], [80, "supported-modules"], [88, "supported-modules"], [93, "supported-modules"], [97, "supported-modules"]], "Supported Parse Modules": [[40, "supported-parse-modules"]], "Supporting Embedding models": [[54, "supporting-embedding-models"]], "Supporting LLM models": [[54, "supporting-llm-models"]], "Swapping modules in Node": [[101, "swapping-modules-in-node"]], "TART": [[83, null]], "Table Detection": [[37, "table-detection"], [41, "table-detection"]], "Table Extraction": [[39, "table-extraction"]], "Table Hybrid Parse": [[41, null]], "Table Parse Available Modules": [[41, "table-parse-available-modules"]], "The length or row is different from the original data": [[105, "the-length-or-row-is-different-from-the-original-data"]], "Threshold Cutoff": [[72, null]], "Time Reranker": [[84, null]], "Tree Summarize": [[66, null]], "Trouble with installation?": [[53, null]], "TroubleShooting": [[105, null]], "Tutorial": [[106, null]], "UPR": [[85, null]], "Usage": [[45, "usage"], [45, "id1"], [45, "id2"]], "Use custom models": [[35, "use-custom-models"]], "Use custom prompt": [[36, "use-custom-prompt"]], "Use environment variable in the YAML file": [[99, "use-environment-variable-in-the-yaml-file"]], "Use in Multi-GPU": [[59, "use-in-multi-gpu"]], "Use multiple prompts": [[36, "use-multiple-prompts"]], "Use vllm": [[54, "use-vllm"]], "Using Langchain Chunk Method that is not in the Available Chunk Method": [[30, "using-langchain-chunk-method-that-is-not-in-the-available-chunk-method"]], "Using Llama Index Chunk Method that is not in the Available Chunk Method": [[31, "using-llama-index-chunk-method-that-is-not-in-the-available-chunk-method"]], "Using Parse Method that is not in the Available Parse Method": [[38, "using-parse-method-that-is-not-in-the-available-parse-method"]], "Using sentence splitter that is not in the Available Sentence Splitter": [[29, "using-sentence-splitter-that-is-not-in-the-available-sentence-splitter"]], "Validate your system": [[106, "validate-your-system"]], "Vectordb": [[98, null]], "Want to know more about Modular RAG?": [[103, null]], "Want to specify project folder?": [[29, null], [40, null], [48, null], [106, null], [106, null], [106, null]], "Web Interface": [[48, null]], "Web Interface example": [[48, "web-interface-example"]], "What if Trial_Path didn\u2019t also create a First Node Line?": [[106, null]], "What is Node Line?": [[103, null]], "What is difference between Passage Filter and Passage Reranker?": [[67, null]], "What is pass_compressor?": [[64, null]], "What is pass_passage_augmenter?": [[61, null]], "What is pass_passage_filter?": [[67, null]], "What is pass_query_expansion?": [[93, null]], "What is pass_reranker?": [[80, null]], "What is passage?": [[36, null]], "What is tuple in the yaml file?": [[99, null]], "When you have existing qa data": [[36, "when-you-have-existing-qa-data"]], "Why use Gradio instead of Streamlit?": [[48, null]], "Why use openai_llm module?": [[58, "why-use-openai-llm-module"]], "Why use python command?": [[106, null]], "Why use vllm module?": [[59, "why-use-vllm-module"]], "Window Replacement": [[89, null]], "Write custom config yaml file": [[106, null]], "[Node Line] summary.csv": [[100, "node-line-summary-csv"]], "[Node] summary.csv": [[100, "node-summary-csv"]], "[trial] summary.csv": [[100, "trial-summary-csv"]], "autorag": [[28, null]], "autorag package": [[0, null]], "autorag.chunker module": [[0, "module-autorag.chunker"]], "autorag.cli module": [[0, "module-autorag.cli"]], "autorag.dashboard module": [[0, "module-autorag.dashboard"]], "autorag.data package": [[1, null]], "autorag.data.chunk package": [[2, null]], "autorag.data.chunk.base module": [[2, "module-autorag.data.chunk.base"]], "autorag.data.chunk.langchain_chunk module": [[2, "module-autorag.data.chunk.langchain_chunk"]], "autorag.data.chunk.llama_index_chunk module": [[2, "module-autorag.data.chunk.llama_index_chunk"]], "autorag.data.chunk.run module": [[2, "module-autorag.data.chunk.run"]], "autorag.data.corpus package": [[3, null]], "autorag.data.corpus.langchain module": [[3, "autorag-data-corpus-langchain-module"]], "autorag.data.corpus.llama_index module": [[3, "autorag-data-corpus-llama-index-module"]], "autorag.data.legacy package": [[4, null]], "autorag.data.legacy.corpus package": [[5, null]], "autorag.data.legacy.corpus.langchain module": [[5, "module-autorag.data.legacy.corpus.langchain"]], "autorag.data.legacy.corpus.llama_index module": [[5, "module-autorag.data.legacy.corpus.llama_index"]], "autorag.data.legacy.qacreation package": [[6, null]], "autorag.data.legacy.qacreation.base module": [[6, "module-autorag.data.legacy.qacreation.base"]], "autorag.data.legacy.qacreation.llama_index module": [[6, "module-autorag.data.legacy.qacreation.llama_index"]], "autorag.data.legacy.qacreation.ragas module": [[6, "module-autorag.data.legacy.qacreation.ragas"]], "autorag.data.legacy.qacreation.simple module": [[6, "module-autorag.data.legacy.qacreation.simple"]], "autorag.data.parse package": [[7, null]], "autorag.data.parse.base module": [[7, "module-autorag.data.parse.base"]], "autorag.data.parse.clova module": [[7, "autorag-data-parse-clova-module"]], "autorag.data.parse.langchain_parse module": [[7, "module-autorag.data.parse.langchain_parse"]], "autorag.data.parse.llamaparse module": [[7, "module-autorag.data.parse.llamaparse"]], "autorag.data.parse.run module": [[7, "module-autorag.data.parse.run"]], "autorag.data.parse.table_hybrid_parse module": [[7, "autorag-data-parse-table-hybrid-parse-module"]], "autorag.data.qa package": [[8, null]], "autorag.data.qa.extract_evidence module": [[8, "module-autorag.data.qa.extract_evidence"]], "autorag.data.qa.filter package": [[9, null]], "autorag.data.qa.filter.dontknow module": [[9, "module-autorag.data.qa.filter.dontknow"]], "autorag.data.qa.filter.prompt module": [[9, "module-autorag.data.qa.filter.prompt"]], "autorag.data.qa.generation_gt package": [[10, null]], "autorag.data.qa.generation_gt.base module": [[10, "module-autorag.data.qa.generation_gt.base"]], "autorag.data.qa.generation_gt.llama_index_gen_gt module": [[10, "module-autorag.data.qa.generation_gt.llama_index_gen_gt"]], "autorag.data.qa.generation_gt.openai_gen_gt module": [[10, "module-autorag.data.qa.generation_gt.openai_gen_gt"]], "autorag.data.qa.generation_gt.prompt module": [[10, "module-autorag.data.qa.generation_gt.prompt"]], "autorag.data.qa.query package": [[11, null]], "autorag.data.qa.query.llama_gen_query module": [[11, "module-autorag.data.qa.query.llama_gen_query"]], "autorag.data.qa.query.openai_gen_query module": [[11, "module-autorag.data.qa.query.openai_gen_query"]], "autorag.data.qa.query.prompt module": [[11, "module-autorag.data.qa.query.prompt"]], "autorag.data.qa.sample module": [[8, "module-autorag.data.qa.sample"]], "autorag.data.qa.schema module": [[8, "module-autorag.data.qa.schema"]], "autorag.data.qacreation package": [[12, null]], "autorag.data.qacreation.base module": [[12, "autorag-data-qacreation-base-module"]], "autorag.data.qacreation.llama_index module": [[12, "autorag-data-qacreation-llama-index-module"]], "autorag.data.qacreation.ragas module": [[12, "autorag-data-qacreation-ragas-module"]], "autorag.data.qacreation.simple module": [[12, "autorag-data-qacreation-simple-module"]], "autorag.data.utils package": [[13, null]], "autorag.data.utils.util module": [[13, "module-autorag.data.utils.util"]], "autorag.deploy module": [[0, "module-autorag.deploy"]], "autorag.evaluation package": [[14, null]], "autorag.evaluation.generation module": [[14, "module-autorag.evaluation.generation"]], "autorag.evaluation.metric package": [[15, null]], "autorag.evaluation.metric.generation module": [[15, "module-autorag.evaluation.metric.generation"]], "autorag.evaluation.metric.retrieval module": [[15, "module-autorag.evaluation.metric.retrieval"]], "autorag.evaluation.metric.retrieval_contents module": [[15, "module-autorag.evaluation.metric.retrieval_contents"]], "autorag.evaluation.metric.util module": [[15, "module-autorag.evaluation.metric.util"]], "autorag.evaluation.retrieval module": [[14, "module-autorag.evaluation.retrieval"]], "autorag.evaluation.retrieval_contents module": [[14, "module-autorag.evaluation.retrieval_contents"]], "autorag.evaluation.util module": [[14, "module-autorag.evaluation.util"]], "autorag.evaluator module": [[0, "module-autorag.evaluator"]], "autorag.node_line module": [[0, "module-autorag.node_line"]], "autorag.nodes package": [[16, null]], "autorag.nodes.generator package": [[17, null]], "autorag.nodes.generator.base module": [[17, "module-autorag.nodes.generator.base"]], "autorag.nodes.generator.llama_index_llm module": [[17, "module-autorag.nodes.generator.llama_index_llm"]], "autorag.nodes.generator.openai_llm module": [[17, "module-autorag.nodes.generator.openai_llm"]], "autorag.nodes.generator.run module": [[17, "module-autorag.nodes.generator.run"]], "autorag.nodes.generator.vllm module": [[17, "module-autorag.nodes.generator.vllm"]], "autorag.nodes.passageaugmenter package": [[18, null]], "autorag.nodes.passageaugmenter.base module": [[18, "module-autorag.nodes.passageaugmenter.base"]], "autorag.nodes.passageaugmenter.pass_passage_augmenter module": [[18, "module-autorag.nodes.passageaugmenter.pass_passage_augmenter"]], "autorag.nodes.passageaugmenter.prev_next_augmenter module": [[18, "module-autorag.nodes.passageaugmenter.prev_next_augmenter"]], "autorag.nodes.passageaugmenter.run module": [[18, "module-autorag.nodes.passageaugmenter.run"]], "autorag.nodes.passagecompressor package": [[19, null]], "autorag.nodes.passagecompressor.base module": [[19, "module-autorag.nodes.passagecompressor.base"]], "autorag.nodes.passagecompressor.longllmlingua module": [[19, "module-autorag.nodes.passagecompressor.longllmlingua"]], "autorag.nodes.passagecompressor.pass_compressor module": [[19, "module-autorag.nodes.passagecompressor.pass_compressor"]], "autorag.nodes.passagecompressor.refine module": [[19, "module-autorag.nodes.passagecompressor.refine"]], "autorag.nodes.passagecompressor.run module": [[19, "module-autorag.nodes.passagecompressor.run"]], "autorag.nodes.passagecompressor.tree_summarize module": [[19, "module-autorag.nodes.passagecompressor.tree_summarize"]], "autorag.nodes.passagefilter package": [[20, null]], "autorag.nodes.passagefilter.base module": [[20, "module-autorag.nodes.passagefilter.base"]], "autorag.nodes.passagefilter.pass_passage_filter module": [[20, "module-autorag.nodes.passagefilter.pass_passage_filter"]], "autorag.nodes.passagefilter.percentile_cutoff module": [[20, "module-autorag.nodes.passagefilter.percentile_cutoff"]], "autorag.nodes.passagefilter.recency module": [[20, "module-autorag.nodes.passagefilter.recency"]], "autorag.nodes.passagefilter.run module": [[20, "module-autorag.nodes.passagefilter.run"]], "autorag.nodes.passagefilter.similarity_percentile_cutoff module": [[20, "module-autorag.nodes.passagefilter.similarity_percentile_cutoff"]], "autorag.nodes.passagefilter.similarity_threshold_cutoff module": [[20, "module-autorag.nodes.passagefilter.similarity_threshold_cutoff"]], "autorag.nodes.passagefilter.threshold_cutoff module": [[20, "module-autorag.nodes.passagefilter.threshold_cutoff"]], "autorag.nodes.passagereranker package": [[21, null]], "autorag.nodes.passagereranker.base module": [[21, "module-autorag.nodes.passagereranker.base"]], "autorag.nodes.passagereranker.cohere module": [[21, "module-autorag.nodes.passagereranker.cohere"]], "autorag.nodes.passagereranker.colbert module": [[21, "module-autorag.nodes.passagereranker.colbert"]], "autorag.nodes.passagereranker.flag_embedding module": [[21, "module-autorag.nodes.passagereranker.flag_embedding"]], "autorag.nodes.passagereranker.flag_embedding_llm module": [[21, "module-autorag.nodes.passagereranker.flag_embedding_llm"]], "autorag.nodes.passagereranker.jina module": [[21, "module-autorag.nodes.passagereranker.jina"]], "autorag.nodes.passagereranker.koreranker module": [[21, "module-autorag.nodes.passagereranker.koreranker"]], "autorag.nodes.passagereranker.monot5 module": [[21, "module-autorag.nodes.passagereranker.monot5"]], "autorag.nodes.passagereranker.pass_reranker module": [[21, "module-autorag.nodes.passagereranker.pass_reranker"]], "autorag.nodes.passagereranker.rankgpt module": [[21, "module-autorag.nodes.passagereranker.rankgpt"]], "autorag.nodes.passagereranker.run module": [[21, "module-autorag.nodes.passagereranker.run"]], "autorag.nodes.passagereranker.sentence_transformer module": [[21, "module-autorag.nodes.passagereranker.sentence_transformer"]], "autorag.nodes.passagereranker.tart package": [[22, null]], "autorag.nodes.passagereranker.tart.modeling_enc_t5 module": [[22, "module-autorag.nodes.passagereranker.tart.modeling_enc_t5"]], "autorag.nodes.passagereranker.tart.tart module": [[22, "module-autorag.nodes.passagereranker.tart.tart"]], "autorag.nodes.passagereranker.tart.tokenization_enc_t5 module": [[22, "module-autorag.nodes.passagereranker.tart.tokenization_enc_t5"]], "autorag.nodes.passagereranker.time_reranker module": [[21, "module-autorag.nodes.passagereranker.time_reranker"]], "autorag.nodes.passagereranker.upr module": [[21, "module-autorag.nodes.passagereranker.upr"]], "autorag.nodes.promptmaker package": [[23, null]], "autorag.nodes.promptmaker.base module": [[23, "module-autorag.nodes.promptmaker.base"]], "autorag.nodes.promptmaker.fstring module": [[23, "module-autorag.nodes.promptmaker.fstring"]], "autorag.nodes.promptmaker.long_context_reorder module": [[23, "module-autorag.nodes.promptmaker.long_context_reorder"]], "autorag.nodes.promptmaker.run module": [[23, "module-autorag.nodes.promptmaker.run"]], "autorag.nodes.promptmaker.window_replacement module": [[23, "module-autorag.nodes.promptmaker.window_replacement"]], "autorag.nodes.queryexpansion package": [[24, null]], "autorag.nodes.queryexpansion.base module": [[24, "module-autorag.nodes.queryexpansion.base"]], "autorag.nodes.queryexpansion.hyde module": [[24, "module-autorag.nodes.queryexpansion.hyde"]], "autorag.nodes.queryexpansion.multi_query_expansion module": [[24, "module-autorag.nodes.queryexpansion.multi_query_expansion"]], "autorag.nodes.queryexpansion.pass_query_expansion module": [[24, "module-autorag.nodes.queryexpansion.pass_query_expansion"]], "autorag.nodes.queryexpansion.query_decompose module": [[24, "module-autorag.nodes.queryexpansion.query_decompose"]], "autorag.nodes.queryexpansion.run module": [[24, "module-autorag.nodes.queryexpansion.run"]], "autorag.nodes.retrieval package": [[25, null]], "autorag.nodes.retrieval.base module": [[25, "module-autorag.nodes.retrieval.base"]], "autorag.nodes.retrieval.bm25 module": [[25, "module-autorag.nodes.retrieval.bm25"]], "autorag.nodes.retrieval.hybrid_cc module": [[25, "module-autorag.nodes.retrieval.hybrid_cc"]], "autorag.nodes.retrieval.hybrid_rrf module": [[25, "module-autorag.nodes.retrieval.hybrid_rrf"]], "autorag.nodes.retrieval.run module": [[25, "module-autorag.nodes.retrieval.run"]], "autorag.nodes.retrieval.vectordb module": [[25, "module-autorag.nodes.retrieval.vectordb"]], "autorag.nodes.util module": [[16, "module-autorag.nodes.util"]], "autorag.parser module": [[0, "module-autorag.parser"]], "autorag.schema package": [[26, null]], "autorag.schema.base module": [[26, "module-autorag.schema.base"]], "autorag.schema.metricinput module": [[26, "module-autorag.schema.metricinput"]], "autorag.schema.module module": [[26, "module-autorag.schema.module"]], "autorag.schema.node module": [[26, "module-autorag.schema.node"]], "autorag.strategy module": [[0, "module-autorag.strategy"]], "autorag.support module": [[0, "module-autorag.support"]], "autorag.utils package": [[27, null]], "autorag.utils.preprocess module": [[27, "module-autorag.utils.preprocess"]], "autorag.utils.util module": [[27, "module-autorag.utils.util"]], "autorag.validator module": [[0, "module-autorag.validator"]], "autorag.web module": [[0, "module-autorag.web"]], "cohere_reranker": [[73, null]], "config.yaml": [[100, "config-yaml"]], "contents": [[33, "contents"]], "data": [[100, "data"]], "doc_id": [[33, "doc-id"]], "generation_gt": [[33, "generation-gt"]], "jina_reranker": [[77, null]], "ko_kiwi (For Korean \ud83c\uddf0\ud83c\uddf7)": [[94, "ko-kiwi-for-korean"]], "ko_kkma (For Korean \ud83c\uddf0\ud83c\uddf7)": [[94, "ko-kkma-for-korean"]], "ko_okt (For Korean \ud83c\uddf0\ud83c\uddf7)": [[94, "ko-okt-for-korean"]], "llama_index LLM": [[57, null]], "metadata": [[33, "metadata"]], "porter_stemmer": [[94, "porter-stemmer"]], "pre_retrieve_node_line": [[100, "pre-retrieve-node-line"]], "qid": [[33, "qid"]], "query": [[33, "query"]], "query_expansion": [[100, "query-expansion"]], "resources": [[100, "resources"]], "retrieval_gt": [[33, "retrieval-gt"]], "retrieve_node_line": [[100, "retrieve-node-line"]], "sem_score": [[56, null]], "space": [[94, "space"]], "trial": [[100, "trial"]], "trial.json": [[100, "trial-json"]], "v0.3 migration guide": [[55, "v0-3-migration-guide"]], "vllm": [[59, null]], "\u2705Apply Basic Example": [[50, "apply-basic-example"], [50, "id2"], [50, "id4"], [50, "id6"], [50, "id8"], [50, "id10"], [51, "apply-basic-example"], [51, "id2"], [51, "id4"]], "\u2705Basic Example": [[50, "basic-example"], [51, "basic-example"]], "\u2757How to use specific G-Eval metrics": [[49, "how-to-use-specific-g-eval-metrics"]], "\u2757Must have Parameter": [[38, "must-have-parameter"]], "\u2757Restart a trial if an error occurs during the trial": [[106, "restart-a-trial-if-an-error-occurs-during-the-trial"]], "\u2757\ufe0fHybrid additional explanation": [[95, "hybrid-additional-explanation"], [96, "hybrid-additional-explanation"]], "\ud83c\udfc3\u200d\u2642\ufe0f Getting Started": [[52, "getting-started"]], "\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc66 Ecosystem": [[52, "ecosystem"]], "\ud83d\udccc API Needed": [[38, "api-needed"]], "\ud83d\udccc Definition": [[49, "id4"]], "\ud83d\udccc Parameter: data_path_glob": [[40, "parameter-data-path-glob"]], "\ud83d\udcccDefinition": [[49, "definition"], [49, "id1"], [49, "id2"], [49, "id3"], [49, "id5"], [50, "definition"], [50, "id1"], [50, "id3"], [50, "id5"], [50, "id7"], [50, "id9"], [51, "definition"], [51, "id1"], [51, "id3"]], "\ud83d\udd0e Definition": [[56, "definition"], [61, "definition"], [64, "definition"], [67, "definition"], [80, "definition"], [88, "definition"], [93, "definition"], [97, "definition"]], "\ud83d\udd22 Parameters": [[56, "parameters"], [64, "parameters"], [80, "parameters"], [88, "parameters"], [93, "parameters"], [97, "parameters"]], "\ud83d\ude80 Road to Modular RAG": [[103, "id1"]], "\ud83e\udd37\u200d\u2642\ufe0f What is Modular RAG?": [[103, "what-is-modular-rag"]], "\ud83e\udd37\u200d\u2642\ufe0f Why AutoRAG?": [[52, "why-autorag"]], "\ud83e\udd38 Benefits": [[61, "benefits"], [64, "benefits"], [67, "benefits"], [80, "benefits"], [93, "benefits"]], "\ud83e\udd38\u200d\u2642\ufe0f How can AutoRAG helps?": [[52, "how-can-autorag-helps"]]}, "docnames": ["api_spec/autorag", "api_spec/autorag.data", "api_spec/autorag.data.chunk", "api_spec/autorag.data.corpus", "api_spec/autorag.data.legacy", "api_spec/autorag.data.legacy.corpus", "api_spec/autorag.data.legacy.qacreation", "api_spec/autorag.data.parse", "api_spec/autorag.data.qa", "api_spec/autorag.data.qa.filter", "api_spec/autorag.data.qa.generation_gt", "api_spec/autorag.data.qa.query", "api_spec/autorag.data.qacreation", "api_spec/autorag.data.utils", "api_spec/autorag.evaluation", "api_spec/autorag.evaluation.metric", "api_spec/autorag.nodes", "api_spec/autorag.nodes.generator", "api_spec/autorag.nodes.passageaugmenter", "api_spec/autorag.nodes.passagecompressor", "api_spec/autorag.nodes.passagefilter", "api_spec/autorag.nodes.passagereranker", "api_spec/autorag.nodes.passagereranker.tart", "api_spec/autorag.nodes.promptmaker", "api_spec/autorag.nodes.queryexpansion", "api_spec/autorag.nodes.retrieval", "api_spec/autorag.schema", "api_spec/autorag.utils", "api_spec/modules", "data_creation/chunk/chunk", "data_creation/chunk/langchain_chunk", "data_creation/chunk/llama_index_chunk", "data_creation/data_creation", "data_creation/data_format", "data_creation/legacy/legacy", "data_creation/legacy/ragas", "data_creation/legacy/tutorial", "data_creation/parse/clova", "data_creation/parse/langchain_parse", "data_creation/parse/llama_parse", "data_creation/parse/parse", "data_creation/parse/table_hybrid_parse", "data_creation/qa_creation/answer_gen", "data_creation/qa_creation/filter", "data_creation/qa_creation/qa_creation", "data_creation/qa_creation/query_gen", "data_creation/tutorial", "deploy/api_endpoint", "deploy/web", "evaluate_metrics/generation", "evaluate_metrics/retrieval", "evaluate_metrics/retrieval_contents", "index", "install", "local_model", "migration", "nodes/generator/generator", "nodes/generator/llama_index_llm", "nodes/generator/openai_llm", "nodes/generator/vllm", "nodes/index", "nodes/passage_augmenter/passage_augmenter", "nodes/passage_augmenter/prev_next_augmenter", "nodes/passage_compressor/longllmlingua", "nodes/passage_compressor/passage_compressor", "nodes/passage_compressor/refine", "nodes/passage_compressor/tree_summarize", "nodes/passage_filter/passage_filter", "nodes/passage_filter/percentile_cutoff", "nodes/passage_filter/recency_filter", "nodes/passage_filter/similarity_percentile_cutoff", "nodes/passage_filter/similarity_threshold_cutoff", "nodes/passage_filter/threshold_cutoff", "nodes/passage_reranker/cohere", "nodes/passage_reranker/colbert", "nodes/passage_reranker/flag_embedding_llm_reranker", "nodes/passage_reranker/flag_embedding_reranker", "nodes/passage_reranker/jina_reranker", "nodes/passage_reranker/koreranker", "nodes/passage_reranker/monot5", "nodes/passage_reranker/passage_reranker", "nodes/passage_reranker/rankgpt", "nodes/passage_reranker/sentence_transformer_reranker", "nodes/passage_reranker/tart", "nodes/passage_reranker/time_reranker", "nodes/passage_reranker/upr", "nodes/prompt_maker/fstring", "nodes/prompt_maker/long_context_reorder", "nodes/prompt_maker/prompt_maker", "nodes/prompt_maker/window_replacement", "nodes/query_expansion/hyde", "nodes/query_expansion/multi_query_expansion", "nodes/query_expansion/query_decompose", "nodes/query_expansion/query_expansion", "nodes/retrieval/bm25", "nodes/retrieval/hybrid_cc", "nodes/retrieval/hybrid_rrf", "nodes/retrieval/retrieval", "nodes/retrieval/vectordb", "optimization/custom_config", "optimization/folder_structure", "optimization/optimization", "optimization/strategies", "roadmap/modular_rag", "structure", "troubleshooting", "tutorial"], "envversion": {"sphinx": 63, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["api_spec/autorag.rst", "api_spec/autorag.data.rst", "api_spec/autorag.data.chunk.rst", "api_spec/autorag.data.corpus.rst", "api_spec/autorag.data.legacy.rst", "api_spec/autorag.data.legacy.corpus.rst", "api_spec/autorag.data.legacy.qacreation.rst", "api_spec/autorag.data.parse.rst", "api_spec/autorag.data.qa.rst", "api_spec/autorag.data.qa.filter.rst", "api_spec/autorag.data.qa.generation_gt.rst", "api_spec/autorag.data.qa.query.rst", "api_spec/autorag.data.qacreation.rst", "api_spec/autorag.data.utils.rst", "api_spec/autorag.evaluation.rst", "api_spec/autorag.evaluation.metric.rst", "api_spec/autorag.nodes.rst", "api_spec/autorag.nodes.generator.rst", "api_spec/autorag.nodes.passageaugmenter.rst", "api_spec/autorag.nodes.passagecompressor.rst", "api_spec/autorag.nodes.passagefilter.rst", "api_spec/autorag.nodes.passagereranker.rst", "api_spec/autorag.nodes.passagereranker.tart.rst", "api_spec/autorag.nodes.promptmaker.rst", "api_spec/autorag.nodes.queryexpansion.rst", "api_spec/autorag.nodes.retrieval.rst", "api_spec/autorag.schema.rst", "api_spec/autorag.utils.rst", "api_spec/modules.rst", "data_creation/chunk/chunk.md", "data_creation/chunk/langchain_chunk.md", "data_creation/chunk/llama_index_chunk.md", "data_creation/data_creation.md", "data_creation/data_format.md", "data_creation/legacy/legacy.md", "data_creation/legacy/ragas.md", "data_creation/legacy/tutorial.md", "data_creation/parse/clova.md", "data_creation/parse/langchain_parse.md", "data_creation/parse/llama_parse.md", "data_creation/parse/parse.md", "data_creation/parse/table_hybrid_parse.md", "data_creation/qa_creation/answer_gen.md", "data_creation/qa_creation/filter.md", "data_creation/qa_creation/qa_creation.md", "data_creation/qa_creation/query_gen.md", "data_creation/tutorial.md", "deploy/api_endpoint.md", "deploy/web.md", "evaluate_metrics/generation.md", "evaluate_metrics/retrieval.md", "evaluate_metrics/retrieval_contents.md", "index.rst", "install.md", "local_model.md", "migration.md", "nodes/generator/generator.md", "nodes/generator/llama_index_llm.md", "nodes/generator/openai_llm.md", "nodes/generator/vllm.md", "nodes/index.md", "nodes/passage_augmenter/passage_augmenter.md", "nodes/passage_augmenter/prev_next_augmenter.md", "nodes/passage_compressor/longllmlingua.md", "nodes/passage_compressor/passage_compressor.md", "nodes/passage_compressor/refine.md", "nodes/passage_compressor/tree_summarize.md", "nodes/passage_filter/passage_filter.md", "nodes/passage_filter/percentile_cutoff.md", "nodes/passage_filter/recency_filter.md", "nodes/passage_filter/similarity_percentile_cutoff.md", "nodes/passage_filter/similarity_threshold_cutoff.md", "nodes/passage_filter/threshold_cutoff.md", "nodes/passage_reranker/cohere.md", "nodes/passage_reranker/colbert.md", "nodes/passage_reranker/flag_embedding_llm_reranker.md", "nodes/passage_reranker/flag_embedding_reranker.md", "nodes/passage_reranker/jina_reranker.md", "nodes/passage_reranker/koreranker.md", "nodes/passage_reranker/monot5.md", "nodes/passage_reranker/passage_reranker.md", "nodes/passage_reranker/rankgpt.md", "nodes/passage_reranker/sentence_transformer_reranker.md", "nodes/passage_reranker/tart.md", "nodes/passage_reranker/time_reranker.md", "nodes/passage_reranker/upr.md", "nodes/prompt_maker/fstring.md", "nodes/prompt_maker/long_context_reorder.md", "nodes/prompt_maker/prompt_maker.md", "nodes/prompt_maker/window_replacement.md", "nodes/query_expansion/hyde.md", "nodes/query_expansion/multi_query_expansion.md", "nodes/query_expansion/query_decompose.md", "nodes/query_expansion/query_expansion.md", "nodes/retrieval/bm25.md", "nodes/retrieval/hybrid_cc.md", "nodes/retrieval/hybrid_rrf.md", "nodes/retrieval/retrieval.md", "nodes/retrieval/vectordb.md", "optimization/custom_config.md", "optimization/folder_structure.md", "optimization/optimization.md", "optimization/strategies.md", "roadmap/modular_rag.md", "structure.md", "troubleshooting.md", "tutorial.md"], "indexentries": {"add_essential_metadata() (in module autorag.data.utils.util)": [[13, "autorag.data.utils.util.add_essential_metadata", false]], "add_essential_metadata_llama_text_node() (in module autorag.data.utils.util)": [[13, "autorag.data.utils.util.add_essential_metadata_llama_text_node", false]], "add_file_name() (in module autorag.data.chunk.base)": [[2, "autorag.data.chunk.base.add_file_name", false]], "add_gen_gt() (in module autorag.data.qa.generation_gt.base)": [[10, "autorag.data.qa.generation_gt.base.add_gen_gt", false]], "answer (autorag.data.qa.generation_gt.openai_gen_gt.response attribute)": [[10, "autorag.data.qa.generation_gt.openai_gen_gt.Response.answer", false]], "answer (autorag.data.qa.query.openai_gen_query.twohopincrementalresponse attribute)": [[11, "autorag.data.qa.query.openai_gen_query.TwoHopIncrementalResponse.answer", false]], "async_g_eval() (in module autorag.evaluation.metric.generation)": [[15, "autorag.evaluation.metric.generation.async_g_eval", false]], "async_postprocess_nodes() (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank method)": [[21, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.async_postprocess_nodes", false]], "async_qa_gen_llama_index() (in module autorag.data.legacy.qacreation.llama_index)": [[6, "autorag.data.legacy.qacreation.llama_index.async_qa_gen_llama_index", false]], "async_run_llm() (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank method)": [[21, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.async_run_llm", false]], "asyncrankgptrerank (class in autorag.nodes.passagereranker.rankgpt)": [[21, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank", false]], "autorag": [[0, "module-autorag", false]], "autorag.chunker": [[0, "module-autorag.chunker", false]], "autorag.cli": [[0, "module-autorag.cli", false]], "autorag.dashboard": [[0, "module-autorag.dashboard", false]], "autorag.data": [[1, "module-autorag.data", false]], "autorag.data.chunk": [[2, "module-autorag.data.chunk", false]], "autorag.data.chunk.base": [[2, "module-autorag.data.chunk.base", false]], "autorag.data.chunk.langchain_chunk": [[2, "module-autorag.data.chunk.langchain_chunk", false]], "autorag.data.chunk.llama_index_chunk": [[2, "module-autorag.data.chunk.llama_index_chunk", false]], "autorag.data.chunk.run": [[2, "module-autorag.data.chunk.run", false]], "autorag.data.legacy": [[4, "module-autorag.data.legacy", false]], "autorag.data.legacy.corpus": [[5, "module-autorag.data.legacy.corpus", false]], "autorag.data.legacy.corpus.langchain": [[5, "module-autorag.data.legacy.corpus.langchain", false]], "autorag.data.legacy.corpus.llama_index": [[5, "module-autorag.data.legacy.corpus.llama_index", false]], "autorag.data.legacy.qacreation": [[6, "module-autorag.data.legacy.qacreation", false]], "autorag.data.legacy.qacreation.base": [[6, "module-autorag.data.legacy.qacreation.base", false]], "autorag.data.legacy.qacreation.llama_index": [[6, "module-autorag.data.legacy.qacreation.llama_index", false]], "autorag.data.legacy.qacreation.ragas": [[6, "module-autorag.data.legacy.qacreation.ragas", false]], "autorag.data.legacy.qacreation.simple": [[6, "module-autorag.data.legacy.qacreation.simple", false]], "autorag.data.parse": [[7, "module-autorag.data.parse", false]], "autorag.data.parse.base": [[7, "module-autorag.data.parse.base", false]], "autorag.data.parse.langchain_parse": [[7, "module-autorag.data.parse.langchain_parse", false]], "autorag.data.parse.llamaparse": [[7, "module-autorag.data.parse.llamaparse", false]], "autorag.data.parse.run": [[7, "module-autorag.data.parse.run", false]], "autorag.data.qa": [[8, "module-autorag.data.qa", false]], "autorag.data.qa.extract_evidence": [[8, "module-autorag.data.qa.extract_evidence", false]], "autorag.data.qa.filter": [[9, "module-autorag.data.qa.filter", false]], "autorag.data.qa.filter.dontknow": [[9, "module-autorag.data.qa.filter.dontknow", false]], "autorag.data.qa.filter.prompt": [[9, "module-autorag.data.qa.filter.prompt", false]], "autorag.data.qa.generation_gt": [[10, "module-autorag.data.qa.generation_gt", false]], "autorag.data.qa.generation_gt.base": [[10, "module-autorag.data.qa.generation_gt.base", false]], "autorag.data.qa.generation_gt.llama_index_gen_gt": [[10, "module-autorag.data.qa.generation_gt.llama_index_gen_gt", false]], "autorag.data.qa.generation_gt.openai_gen_gt": [[10, "module-autorag.data.qa.generation_gt.openai_gen_gt", false]], "autorag.data.qa.generation_gt.prompt": [[10, "module-autorag.data.qa.generation_gt.prompt", false]], "autorag.data.qa.query": [[11, "module-autorag.data.qa.query", false]], "autorag.data.qa.query.llama_gen_query": [[11, "module-autorag.data.qa.query.llama_gen_query", false]], "autorag.data.qa.query.openai_gen_query": [[11, "module-autorag.data.qa.query.openai_gen_query", false]], "autorag.data.qa.query.prompt": [[11, "module-autorag.data.qa.query.prompt", false]], "autorag.data.qa.sample": [[8, "module-autorag.data.qa.sample", false]], "autorag.data.qa.schema": [[8, "module-autorag.data.qa.schema", false]], "autorag.data.utils": [[13, "module-autorag.data.utils", false]], "autorag.data.utils.util": [[13, "module-autorag.data.utils.util", false]], "autorag.deploy": [[0, "module-autorag.deploy", false]], "autorag.evaluation": [[14, "module-autorag.evaluation", false]], "autorag.evaluation.generation": [[14, "module-autorag.evaluation.generation", false]], "autorag.evaluation.metric": [[15, "module-autorag.evaluation.metric", false]], "autorag.evaluation.metric.generation": [[15, "module-autorag.evaluation.metric.generation", false]], "autorag.evaluation.metric.retrieval": [[15, "module-autorag.evaluation.metric.retrieval", false]], "autorag.evaluation.metric.retrieval_contents": [[15, "module-autorag.evaluation.metric.retrieval_contents", false]], "autorag.evaluation.metric.util": [[15, "module-autorag.evaluation.metric.util", false]], "autorag.evaluation.retrieval": [[14, "module-autorag.evaluation.retrieval", false]], "autorag.evaluation.retrieval_contents": [[14, "module-autorag.evaluation.retrieval_contents", false]], "autorag.evaluation.util": [[14, "module-autorag.evaluation.util", false]], "autorag.evaluator": [[0, "module-autorag.evaluator", false]], "autorag.node_line": [[0, "module-autorag.node_line", false]], "autorag.nodes": [[16, "module-autorag.nodes", false]], "autorag.nodes.generator": [[17, "module-autorag.nodes.generator", false]], "autorag.nodes.generator.base": [[17, "module-autorag.nodes.generator.base", false]], "autorag.nodes.generator.llama_index_llm": [[17, "module-autorag.nodes.generator.llama_index_llm", false]], "autorag.nodes.generator.openai_llm": [[17, "module-autorag.nodes.generator.openai_llm", false]], "autorag.nodes.generator.run": [[17, "module-autorag.nodes.generator.run", false]], "autorag.nodes.generator.vllm": [[17, "module-autorag.nodes.generator.vllm", false]], "autorag.nodes.passageaugmenter": [[18, "module-autorag.nodes.passageaugmenter", false]], "autorag.nodes.passageaugmenter.base": [[18, "module-autorag.nodes.passageaugmenter.base", false]], "autorag.nodes.passageaugmenter.pass_passage_augmenter": [[18, "module-autorag.nodes.passageaugmenter.pass_passage_augmenter", false]], "autorag.nodes.passageaugmenter.prev_next_augmenter": [[18, "module-autorag.nodes.passageaugmenter.prev_next_augmenter", false]], "autorag.nodes.passageaugmenter.run": [[18, "module-autorag.nodes.passageaugmenter.run", false]], "autorag.nodes.passagecompressor": [[19, "module-autorag.nodes.passagecompressor", false]], "autorag.nodes.passagecompressor.base": [[19, "module-autorag.nodes.passagecompressor.base", false]], "autorag.nodes.passagecompressor.longllmlingua": [[19, "module-autorag.nodes.passagecompressor.longllmlingua", false]], "autorag.nodes.passagecompressor.pass_compressor": [[19, "module-autorag.nodes.passagecompressor.pass_compressor", false]], "autorag.nodes.passagecompressor.refine": [[19, "module-autorag.nodes.passagecompressor.refine", false]], "autorag.nodes.passagecompressor.run": [[19, "module-autorag.nodes.passagecompressor.run", false]], "autorag.nodes.passagecompressor.tree_summarize": [[19, "module-autorag.nodes.passagecompressor.tree_summarize", false]], "autorag.nodes.passagefilter": [[20, "module-autorag.nodes.passagefilter", false]], "autorag.nodes.passagefilter.base": [[20, "module-autorag.nodes.passagefilter.base", false]], "autorag.nodes.passagefilter.pass_passage_filter": [[20, "module-autorag.nodes.passagefilter.pass_passage_filter", false]], "autorag.nodes.passagefilter.percentile_cutoff": [[20, "module-autorag.nodes.passagefilter.percentile_cutoff", false]], "autorag.nodes.passagefilter.recency": [[20, "module-autorag.nodes.passagefilter.recency", false]], "autorag.nodes.passagefilter.run": [[20, "module-autorag.nodes.passagefilter.run", false]], "autorag.nodes.passagefilter.similarity_percentile_cutoff": [[20, "module-autorag.nodes.passagefilter.similarity_percentile_cutoff", false]], "autorag.nodes.passagefilter.similarity_threshold_cutoff": [[20, "module-autorag.nodes.passagefilter.similarity_threshold_cutoff", false]], "autorag.nodes.passagefilter.threshold_cutoff": [[20, "module-autorag.nodes.passagefilter.threshold_cutoff", false]], "autorag.nodes.passagereranker": [[21, "module-autorag.nodes.passagereranker", false]], "autorag.nodes.passagereranker.base": [[21, "module-autorag.nodes.passagereranker.base", false]], "autorag.nodes.passagereranker.cohere": [[21, "module-autorag.nodes.passagereranker.cohere", false]], "autorag.nodes.passagereranker.colbert": [[21, "module-autorag.nodes.passagereranker.colbert", false]], "autorag.nodes.passagereranker.flag_embedding": [[21, "module-autorag.nodes.passagereranker.flag_embedding", false]], "autorag.nodes.passagereranker.flag_embedding_llm": [[21, "module-autorag.nodes.passagereranker.flag_embedding_llm", false]], "autorag.nodes.passagereranker.jina": [[21, "module-autorag.nodes.passagereranker.jina", false]], "autorag.nodes.passagereranker.koreranker": [[21, "module-autorag.nodes.passagereranker.koreranker", false]], "autorag.nodes.passagereranker.monot5": [[21, "module-autorag.nodes.passagereranker.monot5", false]], "autorag.nodes.passagereranker.pass_reranker": [[21, "module-autorag.nodes.passagereranker.pass_reranker", false]], "autorag.nodes.passagereranker.rankgpt": [[21, "module-autorag.nodes.passagereranker.rankgpt", false]], "autorag.nodes.passagereranker.run": [[21, "module-autorag.nodes.passagereranker.run", false]], "autorag.nodes.passagereranker.sentence_transformer": [[21, "module-autorag.nodes.passagereranker.sentence_transformer", false]], "autorag.nodes.passagereranker.tart": [[22, "module-autorag.nodes.passagereranker.tart", false]], "autorag.nodes.passagereranker.tart.modeling_enc_t5": [[22, "module-autorag.nodes.passagereranker.tart.modeling_enc_t5", false]], "autorag.nodes.passagereranker.tart.tart": [[22, "module-autorag.nodes.passagereranker.tart.tart", false]], "autorag.nodes.passagereranker.tart.tokenization_enc_t5": [[22, "module-autorag.nodes.passagereranker.tart.tokenization_enc_t5", false]], "autorag.nodes.passagereranker.time_reranker": [[21, "module-autorag.nodes.passagereranker.time_reranker", false]], "autorag.nodes.passagereranker.upr": [[21, "module-autorag.nodes.passagereranker.upr", false]], "autorag.nodes.promptmaker": [[23, "module-autorag.nodes.promptmaker", false]], "autorag.nodes.promptmaker.base": [[23, "module-autorag.nodes.promptmaker.base", false]], "autorag.nodes.promptmaker.fstring": [[23, "module-autorag.nodes.promptmaker.fstring", false]], "autorag.nodes.promptmaker.long_context_reorder": [[23, "module-autorag.nodes.promptmaker.long_context_reorder", false]], "autorag.nodes.promptmaker.run": [[23, "module-autorag.nodes.promptmaker.run", false]], "autorag.nodes.promptmaker.window_replacement": [[23, "module-autorag.nodes.promptmaker.window_replacement", false]], "autorag.nodes.queryexpansion": [[24, "module-autorag.nodes.queryexpansion", false]], "autorag.nodes.queryexpansion.base": [[24, "module-autorag.nodes.queryexpansion.base", false]], "autorag.nodes.queryexpansion.hyde": [[24, "module-autorag.nodes.queryexpansion.hyde", false]], "autorag.nodes.queryexpansion.multi_query_expansion": [[24, "module-autorag.nodes.queryexpansion.multi_query_expansion", false]], "autorag.nodes.queryexpansion.pass_query_expansion": [[24, "module-autorag.nodes.queryexpansion.pass_query_expansion", false]], "autorag.nodes.queryexpansion.query_decompose": [[24, "module-autorag.nodes.queryexpansion.query_decompose", false]], "autorag.nodes.queryexpansion.run": [[24, "module-autorag.nodes.queryexpansion.run", false]], "autorag.nodes.retrieval": [[25, "module-autorag.nodes.retrieval", false]], "autorag.nodes.retrieval.base": [[25, "module-autorag.nodes.retrieval.base", false]], "autorag.nodes.retrieval.bm25": [[25, "module-autorag.nodes.retrieval.bm25", false]], "autorag.nodes.retrieval.hybrid_cc": [[25, "module-autorag.nodes.retrieval.hybrid_cc", false]], "autorag.nodes.retrieval.hybrid_rrf": [[25, "module-autorag.nodes.retrieval.hybrid_rrf", false]], "autorag.nodes.retrieval.run": [[25, "module-autorag.nodes.retrieval.run", false]], "autorag.nodes.retrieval.vectordb": [[25, "module-autorag.nodes.retrieval.vectordb", false]], "autorag.nodes.util": [[16, "module-autorag.nodes.util", false]], "autorag.parser": [[0, "module-autorag.parser", false]], "autorag.schema": [[26, "module-autorag.schema", false]], "autorag.schema.base": [[26, "module-autorag.schema.base", false]], "autorag.schema.metricinput": [[26, "module-autorag.schema.metricinput", false]], "autorag.schema.module": [[26, "module-autorag.schema.module", false]], "autorag.schema.node": [[26, "module-autorag.schema.node", false]], "autorag.strategy": [[0, "module-autorag.strategy", false]], "autorag.support": [[0, "module-autorag.support", false]], "autorag.utils": [[27, "module-autorag.utils", false]], "autorag.utils.preprocess": [[27, "module-autorag.utils.preprocess", false]], "autorag.utils.util": [[27, "module-autorag.utils.util", false]], "autorag.validator": [[0, "module-autorag.validator", false]], "autorag.web": [[0, "module-autorag.web", false]], "autorag_metric() (in module autorag.evaluation.metric.util)": [[15, "autorag.evaluation.metric.util.autorag_metric", false]], "autorag_metric_loop() (in module autorag.evaluation.metric.util)": [[15, "autorag.evaluation.metric.util.autorag_metric_loop", false]], "avoid_empty_result() (in module autorag.strategy)": [[0, "autorag.strategy.avoid_empty_result", false]], "basegenerator (class in autorag.nodes.generator.base)": [[17, "autorag.nodes.generator.base.BaseGenerator", false]], "basemodule (class in autorag.schema.base)": [[26, "autorag.schema.base.BaseModule", false]], "basepassageaugmenter (class in autorag.nodes.passageaugmenter.base)": [[18, "autorag.nodes.passageaugmenter.base.BasePassageAugmenter", false]], "basepassagecompressor (class in autorag.nodes.passagecompressor.base)": [[19, "autorag.nodes.passagecompressor.base.BasePassageCompressor", false]], "basepassagefilter (class in autorag.nodes.passagefilter.base)": [[20, "autorag.nodes.passagefilter.base.BasePassageFilter", false]], "basepassagereranker (class in autorag.nodes.passagereranker.base)": [[21, "autorag.nodes.passagereranker.base.BasePassageReranker", false]], "basepromptmaker (class in autorag.nodes.promptmaker.base)": [[23, "autorag.nodes.promptmaker.base.BasePromptMaker", false]], "basequeryexpansion (class in autorag.nodes.queryexpansion.base)": [[24, "autorag.nodes.queryexpansion.base.BaseQueryExpansion", false]], "baseretrieval (class in autorag.nodes.retrieval.base)": [[25, "autorag.nodes.retrieval.base.BaseRetrieval", false]], "batch_apply() (autorag.data.qa.schema.corpus method)": [[8, "autorag.data.qa.schema.Corpus.batch_apply", false]], "batch_apply() (autorag.data.qa.schema.qa method)": [[8, "autorag.data.qa.schema.QA.batch_apply", false]], "batch_apply() (autorag.data.qa.schema.raw method)": [[8, "autorag.data.qa.schema.Raw.batch_apply", false]], "batch_filter() (autorag.data.qa.schema.qa method)": [[8, "autorag.data.qa.schema.QA.batch_filter", false]], "bert_score() (in module autorag.evaluation.metric.generation)": [[15, "autorag.evaluation.metric.generation.bert_score", false]], "bleu() (in module autorag.evaluation.metric.generation)": [[15, "autorag.evaluation.metric.generation.bleu", false]], "bm25 (class in autorag.nodes.retrieval.bm25)": [[25, "autorag.nodes.retrieval.bm25.BM25", false]], "bm25_ingest() (in module autorag.nodes.retrieval.bm25)": [[25, "autorag.nodes.retrieval.bm25.bm25_ingest", false]], "bm25_pure() (in module autorag.nodes.retrieval.bm25)": [[25, "autorag.nodes.retrieval.bm25.bm25_pure", false]], "build_inputs_with_special_tokens() (autorag.nodes.passagereranker.tart.tokenization_enc_t5.enct5tokenizer method)": [[22, "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer.build_inputs_with_special_tokens", false]], "calculate_cosine_similarity() (in module autorag.evaluation.metric.util)": [[15, "autorag.evaluation.metric.util.calculate_cosine_similarity", false]], "cast_corpus_dataset() (in module autorag.utils.preprocess)": [[27, "autorag.utils.preprocess.cast_corpus_dataset", false]], "cast_embedding_model() (in module autorag.evaluation.util)": [[14, "autorag.evaluation.util.cast_embedding_model", false]], "cast_metrics() (in module autorag.evaluation.util)": [[14, "autorag.evaluation.util.cast_metrics", false]], "cast_qa_dataset() (in module autorag.utils.preprocess)": [[27, "autorag.utils.preprocess.cast_qa_dataset", false]], "cast_queries() (in module autorag.nodes.retrieval.base)": [[25, "autorag.nodes.retrieval.base.cast_queries", false]], "cast_to_run() (autorag.nodes.generator.base.basegenerator method)": [[17, "autorag.nodes.generator.base.BaseGenerator.cast_to_run", false]], "cast_to_run() (autorag.nodes.passageaugmenter.base.basepassageaugmenter method)": [[18, "autorag.nodes.passageaugmenter.base.BasePassageAugmenter.cast_to_run", false]], "cast_to_run() (autorag.nodes.passagecompressor.base.basepassagecompressor method)": [[19, "autorag.nodes.passagecompressor.base.BasePassageCompressor.cast_to_run", false]], "cast_to_run() (autorag.nodes.passagefilter.base.basepassagefilter method)": [[20, "autorag.nodes.passagefilter.base.BasePassageFilter.cast_to_run", false]], "cast_to_run() (autorag.nodes.passagereranker.base.basepassagereranker method)": [[21, "autorag.nodes.passagereranker.base.BasePassageReranker.cast_to_run", false]], "cast_to_run() (autorag.nodes.promptmaker.base.basepromptmaker method)": [[23, "autorag.nodes.promptmaker.base.BasePromptMaker.cast_to_run", false]], "cast_to_run() (autorag.nodes.queryexpansion.base.basequeryexpansion method)": [[24, "autorag.nodes.queryexpansion.base.BaseQueryExpansion.cast_to_run", false]], "cast_to_run() (autorag.nodes.retrieval.base.baseretrieval method)": [[25, "autorag.nodes.retrieval.base.BaseRetrieval.cast_to_run", false]], "cast_to_run() (autorag.schema.base.basemodule method)": [[26, "autorag.schema.base.BaseModule.cast_to_run", false]], "chat_box() (in module autorag.web)": [[0, "autorag.web.chat_box", false]], "check_expanded_query() (in module autorag.nodes.queryexpansion.base)": [[24, "autorag.nodes.queryexpansion.base.check_expanded_query", false]], "chunk() (autorag.data.qa.schema.raw method)": [[8, "autorag.data.qa.schema.Raw.chunk", false]], "chunker (class in autorag.chunker)": [[0, "autorag.chunker.Chunker", false]], "chunker_node() (in module autorag.data.chunk.base)": [[2, "autorag.data.chunk.base.chunker_node", false]], "cohere_rerank_pure() (in module autorag.nodes.passagereranker.cohere)": [[21, "autorag.nodes.passagereranker.cohere.cohere_rerank_pure", false]], "coherereranker (class in autorag.nodes.passagereranker.cohere)": [[21, "autorag.nodes.passagereranker.cohere.CohereReranker", false]], "colbertreranker (class in autorag.nodes.passagereranker.colbert)": [[21, "autorag.nodes.passagereranker.colbert.ColbertReranker", false]], "compute() (autorag.nodes.passagereranker.upr.uprscorer method)": [[21, "autorag.nodes.passagereranker.upr.UPRScorer.compute", false]], "concept_completion_query_gen() (in module autorag.data.qa.query.llama_gen_query)": [[11, "autorag.data.qa.query.llama_gen_query.concept_completion_query_gen", false]], "concept_completion_query_gen() (in module autorag.data.qa.query.openai_gen_query)": [[11, "autorag.data.qa.query.openai_gen_query.concept_completion_query_gen", false]], "convert_datetime_string() (in module autorag.utils.util)": [[27, "autorag.utils.util.convert_datetime_string", false]], "convert_env_in_dict() (in module autorag.utils.util)": [[27, "autorag.utils.util.convert_env_in_dict", false]], "convert_inputs_to_list() (in module autorag.utils.util)": [[27, "autorag.utils.util.convert_inputs_to_list", false]], "convert_string_to_tuple_in_dict() (in module autorag.utils.util)": [[27, "autorag.utils.util.convert_string_to_tuple_in_dict", false]], "corpus (class in autorag.data.qa.schema)": [[8, "autorag.data.qa.schema.Corpus", false]], "corpus_df_to_langchain_documents() (in module autorag.data.utils.util)": [[13, "autorag.data.utils.util.corpus_df_to_langchain_documents", false]], "create_token_type_ids_from_sequences() (autorag.nodes.passagereranker.tart.tokenization_enc_t5.enct5tokenizer method)": [[22, "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer.create_token_type_ids_from_sequences", false]], "deparallelize() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[22, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.deparallelize", false]], "dict_to_markdown() (in module autorag.utils.util)": [[27, "autorag.utils.util.dict_to_markdown", false]], "dict_to_markdown_table() (in module autorag.utils.util)": [[27, "autorag.utils.util.dict_to_markdown_table", false]], "distribute_list_by_ratio() (in module autorag.data.legacy.qacreation.llama_index)": [[6, "autorag.data.legacy.qacreation.llama_index.distribute_list_by_ratio", false]], "dontknow_filter_llama_index() (in module autorag.data.qa.filter.dontknow)": [[9, "autorag.data.qa.filter.dontknow.dontknow_filter_llama_index", false]], "dontknow_filter_openai() (in module autorag.data.qa.filter.dontknow)": [[9, "autorag.data.qa.filter.dontknow.dontknow_filter_openai", false]], "dontknow_filter_rule_based() (in module autorag.data.qa.filter.dontknow)": [[9, "autorag.data.qa.filter.dontknow.dontknow_filter_rule_based", false]], "dynamically_find_function() (in module autorag.support)": [[0, "autorag.support.dynamically_find_function", false]], "edit_summary_df_params() (in module autorag.nodes.retrieval.run)": [[25, "autorag.nodes.retrieval.run.edit_summary_df_params", false]], "embed_dim (autorag.mockembeddingrandom attribute)": [[0, "autorag.MockEmbeddingRandom.embed_dim", false]], "embedding_query_content() (in module autorag.utils.util)": [[27, "autorag.utils.util.embedding_query_content", false]], "enct5forsequenceclassification (class in autorag.nodes.passagereranker.tart.modeling_enc_t5)": [[22, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification", false]], "enct5tokenizer (class in autorag.nodes.passagereranker.tart.tokenization_enc_t5)": [[22, "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer", false]], "evaluate_generation() (in module autorag.evaluation.generation)": [[14, "autorag.evaluation.generation.evaluate_generation", false]], "evaluate_generator_node() (in module autorag.nodes.generator.run)": [[17, "autorag.nodes.generator.run.evaluate_generator_node", false]], "evaluate_generator_result() (in module autorag.nodes.promptmaker.run)": [[23, "autorag.nodes.promptmaker.run.evaluate_generator_result", false]], "evaluate_one_prompt_maker_node() (in module autorag.nodes.promptmaker.run)": [[23, "autorag.nodes.promptmaker.run.evaluate_one_prompt_maker_node", false]], "evaluate_one_query_expansion_node() (in module autorag.nodes.queryexpansion.run)": [[24, "autorag.nodes.queryexpansion.run.evaluate_one_query_expansion_node", false]], "evaluate_passage_compressor_node() (in module autorag.nodes.passagecompressor.run)": [[19, "autorag.nodes.passagecompressor.run.evaluate_passage_compressor_node", false]], "evaluate_retrieval() (in module autorag.evaluation.retrieval)": [[14, "autorag.evaluation.retrieval.evaluate_retrieval", false]], "evaluate_retrieval_contents() (in module autorag.evaluation.retrieval_contents)": [[14, "autorag.evaluation.retrieval_contents.evaluate_retrieval_contents", false]], "evaluate_retrieval_node() (in module autorag.nodes.retrieval.run)": [[25, "autorag.nodes.retrieval.run.evaluate_retrieval_node", false]], "evaluator (class in autorag.evaluator)": [[0, "autorag.evaluator.Evaluator", false]], "evenly_distribute_passages() (in module autorag.nodes.retrieval.base)": [[25, "autorag.nodes.retrieval.base.evenly_distribute_passages", false]], "exp_normalize() (in module autorag.nodes.passagereranker.koreranker)": [[21, "autorag.nodes.passagereranker.koreranker.exp_normalize", false]], "explode() (in module autorag.utils.util)": [[27, "autorag.utils.util.explode", false]], "extract_best_config() (in module autorag.deploy)": [[0, "autorag.deploy.extract_best_config", false]], "extract_node_line_names() (in module autorag.deploy)": [[0, "autorag.deploy.extract_node_line_names", false]], "extract_node_strategy() (in module autorag.deploy)": [[0, "autorag.deploy.extract_node_strategy", false]], "extract_values() (in module autorag.schema.node)": [[26, "autorag.schema.node.extract_values", false]], "extract_values_from_nodes() (in module autorag.schema.node)": [[26, "autorag.schema.node.extract_values_from_nodes", false]], "extract_values_from_nodes_strategy() (in module autorag.schema.node)": [[26, "autorag.schema.node.extract_values_from_nodes_strategy", false]], "factoid_query_gen() (in module autorag.data.qa.query.llama_gen_query)": [[11, "autorag.data.qa.query.llama_gen_query.factoid_query_gen", false]], "factoid_query_gen() (in module autorag.data.qa.query.openai_gen_query)": [[11, "autorag.data.qa.query.openai_gen_query.factoid_query_gen", false]], "fetch_contents() (in module autorag.utils.util)": [[27, "autorag.utils.util.fetch_contents", false]], "fetch_one_content() (in module autorag.utils.util)": [[27, "autorag.utils.util.fetch_one_content", false]], "filter() (autorag.data.qa.schema.qa method)": [[8, "autorag.data.qa.schema.QA.filter", false]], "filter_by_threshold() (in module autorag.strategy)": [[0, "autorag.strategy.filter_by_threshold", false]], "filter_dict_keys() (in module autorag.utils.util)": [[27, "autorag.utils.util.filter_dict_keys", false]], "find_key_values() (in module autorag.utils.util)": [[27, "autorag.utils.util.find_key_values", false]], "find_node_dir() (in module autorag.dashboard)": [[0, "autorag.dashboard.find_node_dir", false]], "find_node_summary_files() (in module autorag.utils.util)": [[27, "autorag.utils.util.find_node_summary_files", false]], "find_trial_dir() (in module autorag.utils.util)": [[27, "autorag.utils.util.find_trial_dir", false]], "find_unique_elems() (in module autorag.nodes.retrieval.run)": [[25, "autorag.nodes.retrieval.run.find_unique_elems", false]], "flag_embedding_run_model() (in module autorag.nodes.passagereranker.flag_embedding)": [[21, "autorag.nodes.passagereranker.flag_embedding.flag_embedding_run_model", false]], "flagembeddingllmreranker (class in autorag.nodes.passagereranker.flag_embedding_llm)": [[21, "autorag.nodes.passagereranker.flag_embedding_llm.FlagEmbeddingLLMReranker", false]], "flagembeddingreranker (class in autorag.nodes.passagereranker.flag_embedding)": [[21, "autorag.nodes.passagereranker.flag_embedding.FlagEmbeddingReranker", false]], "flatmap() (autorag.data.qa.schema.raw method)": [[8, "autorag.data.qa.schema.Raw.flatmap", false]], "flatten_apply() (in module autorag.utils.util)": [[27, "autorag.utils.util.flatten_apply", false]], "forward() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[22, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.forward", false]], "from_dataframe() (autorag.schema.metricinput.metricinput class method)": [[26, "autorag.schema.metricinput.MetricInput.from_dataframe", false]], "from_dict() (autorag.schema.module.module class method)": [[26, "autorag.schema.module.Module.from_dict", false]], "from_dict() (autorag.schema.node.node class method)": [[26, "autorag.schema.node.Node.from_dict", false]], "from_parquet() (autorag.chunker.chunker class method)": [[0, "autorag.chunker.Chunker.from_parquet", false]], "from_trial_folder() (autorag.deploy.runner class method)": [[0, "autorag.deploy.Runner.from_trial_folder", false]], "from_yaml() (autorag.deploy.runner class method)": [[0, "autorag.deploy.Runner.from_yaml", false]], "fstring (class in autorag.nodes.promptmaker.fstring)": [[23, "autorag.nodes.promptmaker.fstring.Fstring", false]], "fuse_per_query() (in module autorag.nodes.retrieval.hybrid_cc)": [[25, "autorag.nodes.retrieval.hybrid_cc.fuse_per_query", false]], "g_eval() (in module autorag.evaluation.metric.generation)": [[15, "autorag.evaluation.metric.generation.g_eval", false]], "generate_answers() (in module autorag.data.legacy.qacreation.llama_index)": [[6, "autorag.data.legacy.qacreation.llama_index.generate_answers", false]], "generate_basic_answer() (in module autorag.data.legacy.qacreation.llama_index)": [[6, "autorag.data.legacy.qacreation.llama_index.generate_basic_answer", false]], "generate_qa_llama_index() (in module autorag.data.legacy.qacreation.llama_index)": [[6, "autorag.data.legacy.qacreation.llama_index.generate_qa_llama_index", false]], "generate_qa_llama_index_by_ratio() (in module autorag.data.legacy.qacreation.llama_index)": [[6, "autorag.data.legacy.qacreation.llama_index.generate_qa_llama_index_by_ratio", false]], "generate_qa_ragas() (in module autorag.data.legacy.qacreation.ragas)": [[6, "autorag.data.legacy.qacreation.ragas.generate_qa_ragas", false]], "generate_qa_row() (in module autorag.data.legacy.qacreation.simple)": [[6, "autorag.data.legacy.qacreation.simple.generate_qa_row", false]], "generate_simple_qa_dataset() (in module autorag.data.legacy.qacreation.simple)": [[6, "autorag.data.legacy.qacreation.simple.generate_simple_qa_dataset", false]], "generated_log_probs (autorag.schema.metricinput.metricinput attribute)": [[26, "autorag.schema.metricinput.MetricInput.generated_log_probs", false]], "generated_texts (autorag.schema.metricinput.metricinput attribute)": [[26, "autorag.schema.metricinput.MetricInput.generated_texts", false]], "generation_gt (autorag.schema.metricinput.metricinput attribute)": [[26, "autorag.schema.metricinput.MetricInput.generation_gt", false]], "generator_node() (in module autorag.nodes.generator.base)": [[17, "autorag.nodes.generator.base.generator_node", false]], "get_best_row() (in module autorag.utils.util)": [[27, "autorag.utils.util.get_best_row", false]], "get_bm25_pkl_name() (in module autorag.nodes.retrieval.base)": [[25, "autorag.nodes.retrieval.base.get_bm25_pkl_name", false]], "get_bm25_scores() (in module autorag.nodes.retrieval.bm25)": [[25, "autorag.nodes.retrieval.bm25.get_bm25_scores", false]], "get_colbert_embedding_batch() (in module autorag.nodes.passagereranker.colbert)": [[21, "autorag.nodes.passagereranker.colbert.get_colbert_embedding_batch", false]], "get_colbert_score() (in module autorag.nodes.passagereranker.colbert)": [[21, "autorag.nodes.passagereranker.colbert.get_colbert_score", false]], "get_encoder() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[22, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.get_encoder", false]], "get_event_loop() (in module autorag.utils.util)": [[27, "autorag.utils.util.get_event_loop", false]], "get_file_metadata() (in module autorag.data.utils.util)": [[13, "autorag.data.utils.util.get_file_metadata", false]], "get_hybrid_execution_times() (in module autorag.nodes.retrieval.run)": [[25, "autorag.nodes.retrieval.run.get_hybrid_execution_times", false]], "get_id_scores() (in module autorag.nodes.retrieval.vectordb)": [[25, "autorag.nodes.retrieval.vectordb.get_id_scores", false]], "get_ids_and_scores() (in module autorag.nodes.retrieval.run)": [[25, "autorag.nodes.retrieval.run.get_ids_and_scores", false]], "get_input_embeddings() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[22, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.get_input_embeddings", false]], "get_metric_values() (in module autorag.dashboard)": [[0, "autorag.dashboard.get_metric_values", false]], "get_multi_query_expansion() (in module autorag.nodes.queryexpansion.multi_query_expansion)": [[24, "autorag.nodes.queryexpansion.multi_query_expansion.get_multi_query_expansion", false]], "get_param_combinations() (autorag.schema.node.node method)": [[26, "autorag.schema.node.Node.get_param_combinations", false]], "get_param_combinations() (in module autorag.data.utils.util)": [[13, "autorag.data.utils.util.get_param_combinations", false]], "get_query_decompose() (in module autorag.nodes.queryexpansion.query_decompose)": [[24, "autorag.nodes.queryexpansion.query_decompose.get_query_decompose", false]], "get_result() (autorag.nodes.generator.openai_llm.openaillm method)": [[17, "autorag.nodes.generator.openai_llm.OpenAILLM.get_result", false]], "get_result_o1() (autorag.nodes.generator.openai_llm.openaillm method)": [[17, "autorag.nodes.generator.openai_llm.OpenAILLM.get_result_o1", false]], "get_runner() (in module autorag.web)": [[0, "autorag.web.get_runner", false]], "get_scores_by_ids() (in module autorag.nodes.retrieval.run)": [[25, "autorag.nodes.retrieval.run.get_scores_by_ids", false]], "get_special_tokens_mask() (autorag.nodes.passagereranker.tart.tokenization_enc_t5.enct5tokenizer method)": [[22, "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer.get_special_tokens_mask", false]], "get_start_end_idx() (in module autorag.data.utils.util)": [[13, "autorag.data.utils.util.get_start_end_idx", false]], "get_support_modules() (in module autorag.support)": [[0, "autorag.support.get_support_modules", false]], "get_support_nodes() (in module autorag.support)": [[0, "autorag.support.get_support_nodes", false]], "handle_exception() (in module autorag)": [[0, "autorag.handle_exception", false]], "huggingface_evaluate() (in module autorag.evaluation.metric.generation)": [[15, "autorag.evaluation.metric.generation.huggingface_evaluate", false]], "hybrid_cc() (in module autorag.nodes.retrieval.hybrid_cc)": [[25, "autorag.nodes.retrieval.hybrid_cc.hybrid_cc", false]], "hybrid_rrf() (in module autorag.nodes.retrieval.hybrid_rrf)": [[25, "autorag.nodes.retrieval.hybrid_rrf.hybrid_rrf", false]], "hybridcc (class in autorag.nodes.retrieval.hybrid_cc)": [[25, "autorag.nodes.retrieval.hybrid_cc.HybridCC", false]], "hybridretrieval (class in autorag.nodes.retrieval.base)": [[25, "autorag.nodes.retrieval.base.HybridRetrieval", false]], "hybridrrf (class in autorag.nodes.retrieval.hybrid_rrf)": [[25, "autorag.nodes.retrieval.hybrid_rrf.HybridRRF", false]], "hyde (class in autorag.nodes.queryexpansion.hyde)": [[24, "autorag.nodes.queryexpansion.hyde.HyDE", false]], "is_dont_know (autorag.data.qa.filter.dontknow.response attribute)": [[9, "autorag.data.qa.filter.dontknow.Response.is_dont_know", false]], "is_fields_notnone() (autorag.schema.metricinput.metricinput method)": [[26, "autorag.schema.metricinput.MetricInput.is_fields_notnone", false]], "jina_reranker_pure() (in module autorag.nodes.passagereranker.jina)": [[21, "autorag.nodes.passagereranker.jina.jina_reranker_pure", false]], "jinareranker (class in autorag.nodes.passagereranker.jina)": [[21, "autorag.nodes.passagereranker.jina.JinaReranker", false]], "koreranker (class in autorag.nodes.passagereranker.koreranker)": [[21, "autorag.nodes.passagereranker.koreranker.KoReranker", false]], "koreranker_run_model() (in module autorag.nodes.passagereranker.koreranker)": [[21, "autorag.nodes.passagereranker.koreranker.koreranker_run_model", false]], "langchain_chunk() (in module autorag.data.chunk.langchain_chunk)": [[2, "autorag.data.chunk.langchain_chunk.langchain_chunk", false]], "langchain_chunk_pure() (in module autorag.data.chunk.langchain_chunk)": [[2, "autorag.data.chunk.langchain_chunk.langchain_chunk_pure", false]], "langchain_documents_to_parquet() (in module autorag.data.legacy.corpus.langchain)": [[5, "autorag.data.legacy.corpus.langchain.langchain_documents_to_parquet", false]], "langchain_parse() (in module autorag.data.parse.langchain_parse)": [[7, "autorag.data.parse.langchain_parse.langchain_parse", false]], "langchain_parse_pure() (in module autorag.data.parse.langchain_parse)": [[7, "autorag.data.parse.langchain_parse.langchain_parse_pure", false]], "lazyinit (class in autorag)": [[0, "autorag.LazyInit", false]], "linked_corpus (autorag.data.qa.schema.qa property)": [[8, "autorag.data.qa.schema.QA.linked_corpus", false]], "linked_raw (autorag.data.qa.schema.corpus property)": [[8, "autorag.data.qa.schema.Corpus.linked_raw", false]], "llama_documents_to_parquet() (in module autorag.data.legacy.corpus.llama_index)": [[5, "autorag.data.legacy.corpus.llama_index.llama_documents_to_parquet", false]], "llama_index_chunk() (in module autorag.data.chunk.llama_index_chunk)": [[2, "autorag.data.chunk.llama_index_chunk.llama_index_chunk", false]], "llama_index_chunk_pure() (in module autorag.data.chunk.llama_index_chunk)": [[2, "autorag.data.chunk.llama_index_chunk.llama_index_chunk_pure", false]], "llama_index_generate_base() (in module autorag.data.qa.query.llama_gen_query)": [[11, "autorag.data.qa.query.llama_gen_query.llama_index_generate_base", false]], "llama_parse() (in module autorag.data.parse.llamaparse)": [[7, "autorag.data.parse.llamaparse.llama_parse", false]], "llama_parse_pure() (in module autorag.data.parse.llamaparse)": [[7, "autorag.data.parse.llamaparse.llama_parse_pure", false]], "llama_text_node_to_parquet() (in module autorag.data.legacy.corpus.llama_index)": [[5, "autorag.data.legacy.corpus.llama_index.llama_text_node_to_parquet", false]], "llamaindexcompressor (class in autorag.nodes.passagecompressor.base)": [[19, "autorag.nodes.passagecompressor.base.LlamaIndexCompressor", false]], "llamaindexllm (class in autorag.nodes.generator.llama_index_llm)": [[17, "autorag.nodes.generator.llama_index_llm.LlamaIndexLLM", false]], "llm (autorag.nodes.passagecompressor.refine.refine attribute)": [[19, "autorag.nodes.passagecompressor.refine.Refine.llm", false]], "llm (autorag.nodes.passagecompressor.tree_summarize.treesummarize attribute)": [[19, "autorag.nodes.passagecompressor.tree_summarize.TreeSummarize.llm", false]], "llm (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[21, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.llm", false]], "llmlingua_pure() (in module autorag.nodes.passagecompressor.longllmlingua)": [[19, "autorag.nodes.passagecompressor.longllmlingua.llmlingua_pure", false]], "load_bm25_corpus() (in module autorag.nodes.retrieval.bm25)": [[25, "autorag.nodes.retrieval.bm25.load_bm25_corpus", false]], "load_chroma_collection() (in module autorag.nodes.retrieval.vectordb)": [[25, "autorag.nodes.retrieval.vectordb.load_chroma_collection", false]], "load_summary_file() (in module autorag.utils.util)": [[27, "autorag.utils.util.load_summary_file", false]], "load_yaml() (in module autorag.data.utils.util)": [[13, "autorag.data.utils.util.load_yaml", false]], "longcontextreorder (class in autorag.nodes.promptmaker.long_context_reorder)": [[23, "autorag.nodes.promptmaker.long_context_reorder.LongContextReorder", false]], "longllmlingua (class in autorag.nodes.passagecompressor.longllmlingua)": [[19, "autorag.nodes.passagecompressor.longllmlingua.LongLLMLingua", false]], "make_basic_gen_gt() (in module autorag.data.qa.generation_gt.llama_index_gen_gt)": [[10, "autorag.data.qa.generation_gt.llama_index_gen_gt.make_basic_gen_gt", false]], "make_basic_gen_gt() (in module autorag.data.qa.generation_gt.openai_gen_gt)": [[10, "autorag.data.qa.generation_gt.openai_gen_gt.make_basic_gen_gt", false]], "make_batch() (in module autorag.utils.util)": [[27, "autorag.utils.util.make_batch", false]], "make_combinations() (in module autorag.utils.util)": [[27, "autorag.utils.util.make_combinations", false]], "make_concise_gen_gt() (in module autorag.data.qa.generation_gt.llama_index_gen_gt)": [[10, "autorag.data.qa.generation_gt.llama_index_gen_gt.make_concise_gen_gt", false]], "make_concise_gen_gt() (in module autorag.data.qa.generation_gt.openai_gen_gt)": [[10, "autorag.data.qa.generation_gt.openai_gen_gt.make_concise_gen_gt", false]], "make_gen_gt_llama_index() (in module autorag.data.qa.generation_gt.llama_index_gen_gt)": [[10, "autorag.data.qa.generation_gt.llama_index_gen_gt.make_gen_gt_llama_index", false]], "make_gen_gt_openai() (in module autorag.data.qa.generation_gt.openai_gen_gt)": [[10, "autorag.data.qa.generation_gt.openai_gen_gt.make_gen_gt_openai", false]], "make_generator_callable_param() (in module autorag.nodes.util)": [[16, "autorag.nodes.util.make_generator_callable_param", false]], "make_generator_callable_params() (in module autorag.nodes.promptmaker.run)": [[23, "autorag.nodes.promptmaker.run.make_generator_callable_params", false]], "make_llm() (in module autorag.nodes.passagecompressor.base)": [[19, "autorag.nodes.passagecompressor.base.make_llm", false]], "make_metadata_list() (in module autorag.data.chunk.base)": [[2, "autorag.data.chunk.base.make_metadata_list", false]], "make_node_lines() (in module autorag.node_line)": [[0, "autorag.node_line.make_node_lines", false]], "make_qa_with_existing_qa() (in module autorag.data.legacy.qacreation.base)": [[6, "autorag.data.legacy.qacreation.base.make_qa_with_existing_qa", false]], "make_retrieval_callable_params() (in module autorag.nodes.queryexpansion.run)": [[24, "autorag.nodes.queryexpansion.run.make_retrieval_callable_params", false]], "make_retrieval_gt_contents() (autorag.data.qa.schema.qa method)": [[8, "autorag.data.qa.schema.QA.make_retrieval_gt_contents", false]], "make_single_content_qa() (in module autorag.data.legacy.qacreation.base)": [[6, "autorag.data.legacy.qacreation.base.make_single_content_qa", false]], "make_trial_summary_md() (in module autorag.dashboard)": [[0, "autorag.dashboard.make_trial_summary_md", false]], "map() (autorag.data.qa.schema.corpus method)": [[8, "autorag.data.qa.schema.Corpus.map", false]], "map() (autorag.data.qa.schema.qa method)": [[8, "autorag.data.qa.schema.QA.map", false]], "map() (autorag.data.qa.schema.raw method)": [[8, "autorag.data.qa.schema.Raw.map", false]], "measure_speed() (in module autorag.strategy)": [[0, "autorag.strategy.measure_speed", false]], "meteor() (in module autorag.evaluation.metric.generation)": [[15, "autorag.evaluation.metric.generation.meteor", false]], "metricinput (class in autorag.schema.metricinput)": [[26, "autorag.schema.metricinput.MetricInput", false]], "mockembeddingrandom (class in autorag)": [[0, "autorag.MockEmbeddingRandom", false]], "model_computed_fields (autorag.data.qa.filter.dontknow.response attribute)": [[9, "autorag.data.qa.filter.dontknow.Response.model_computed_fields", false]], "model_computed_fields (autorag.data.qa.generation_gt.openai_gen_gt.response attribute)": [[10, "autorag.data.qa.generation_gt.openai_gen_gt.Response.model_computed_fields", false]], "model_computed_fields (autorag.data.qa.query.openai_gen_query.response attribute)": [[11, "autorag.data.qa.query.openai_gen_query.Response.model_computed_fields", false]], "model_computed_fields (autorag.data.qa.query.openai_gen_query.twohopincrementalresponse attribute)": [[11, "autorag.data.qa.query.openai_gen_query.TwoHopIncrementalResponse.model_computed_fields", false]], "model_computed_fields (autorag.deploy.runnerinput attribute)": [[0, "autorag.deploy.RunnerInput.model_computed_fields", false]], "model_computed_fields (autorag.mockembeddingrandom attribute)": [[0, "autorag.MockEmbeddingRandom.model_computed_fields", false]], "model_computed_fields (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[21, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.model_computed_fields", false]], "model_config (autorag.data.qa.filter.dontknow.response attribute)": [[9, "autorag.data.qa.filter.dontknow.Response.model_config", false]], "model_config (autorag.data.qa.generation_gt.openai_gen_gt.response attribute)": [[10, "autorag.data.qa.generation_gt.openai_gen_gt.Response.model_config", false]], "model_config (autorag.data.qa.query.openai_gen_query.response attribute)": [[11, "autorag.data.qa.query.openai_gen_query.Response.model_config", false]], "model_config (autorag.data.qa.query.openai_gen_query.twohopincrementalresponse attribute)": [[11, "autorag.data.qa.query.openai_gen_query.TwoHopIncrementalResponse.model_config", false]], "model_config (autorag.deploy.runnerinput attribute)": [[0, "autorag.deploy.RunnerInput.model_config", false]], "model_config (autorag.mockembeddingrandom attribute)": [[0, "autorag.MockEmbeddingRandom.model_config", false]], "model_config (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[21, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.model_config", false]], "model_fields (autorag.data.qa.filter.dontknow.response attribute)": [[9, "autorag.data.qa.filter.dontknow.Response.model_fields", false]], "model_fields (autorag.data.qa.generation_gt.openai_gen_gt.response attribute)": [[10, "autorag.data.qa.generation_gt.openai_gen_gt.Response.model_fields", false]], "model_fields (autorag.data.qa.query.openai_gen_query.response attribute)": [[11, "autorag.data.qa.query.openai_gen_query.Response.model_fields", false]], "model_fields (autorag.data.qa.query.openai_gen_query.twohopincrementalresponse attribute)": [[11, "autorag.data.qa.query.openai_gen_query.TwoHopIncrementalResponse.model_fields", false]], "model_fields (autorag.deploy.runnerinput attribute)": [[0, "autorag.deploy.RunnerInput.model_fields", false]], "model_fields (autorag.mockembeddingrandom attribute)": [[0, "autorag.MockEmbeddingRandom.model_fields", false]], "model_fields (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[21, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.model_fields", false]], "module": [[0, "module-autorag", false], [0, "module-autorag.chunker", false], [0, "module-autorag.cli", false], [0, "module-autorag.dashboard", false], [0, "module-autorag.deploy", false], [0, "module-autorag.evaluator", false], [0, "module-autorag.node_line", false], [0, "module-autorag.parser", false], [0, "module-autorag.strategy", false], [0, "module-autorag.support", false], [0, "module-autorag.validator", false], [0, "module-autorag.web", false], [1, "module-autorag.data", false], [2, "module-autorag.data.chunk", false], [2, "module-autorag.data.chunk.base", false], [2, "module-autorag.data.chunk.langchain_chunk", false], [2, "module-autorag.data.chunk.llama_index_chunk", false], [2, "module-autorag.data.chunk.run", false], [4, "module-autorag.data.legacy", false], [5, "module-autorag.data.legacy.corpus", false], [5, "module-autorag.data.legacy.corpus.langchain", false], [5, "module-autorag.data.legacy.corpus.llama_index", false], [6, "module-autorag.data.legacy.qacreation", false], [6, "module-autorag.data.legacy.qacreation.base", false], [6, "module-autorag.data.legacy.qacreation.llama_index", false], [6, "module-autorag.data.legacy.qacreation.ragas", false], [6, "module-autorag.data.legacy.qacreation.simple", false], [7, "module-autorag.data.parse", false], [7, "module-autorag.data.parse.base", false], [7, "module-autorag.data.parse.langchain_parse", false], [7, "module-autorag.data.parse.llamaparse", false], [7, "module-autorag.data.parse.run", false], [8, "module-autorag.data.qa", false], [8, "module-autorag.data.qa.extract_evidence", false], [8, "module-autorag.data.qa.sample", false], [8, "module-autorag.data.qa.schema", false], [9, "module-autorag.data.qa.filter", false], [9, "module-autorag.data.qa.filter.dontknow", false], [9, "module-autorag.data.qa.filter.prompt", false], [10, "module-autorag.data.qa.generation_gt", false], [10, "module-autorag.data.qa.generation_gt.base", false], [10, "module-autorag.data.qa.generation_gt.llama_index_gen_gt", false], [10, "module-autorag.data.qa.generation_gt.openai_gen_gt", false], [10, "module-autorag.data.qa.generation_gt.prompt", false], [11, "module-autorag.data.qa.query", false], [11, "module-autorag.data.qa.query.llama_gen_query", false], [11, "module-autorag.data.qa.query.openai_gen_query", false], [11, "module-autorag.data.qa.query.prompt", false], [13, "module-autorag.data.utils", false], [13, "module-autorag.data.utils.util", false], [14, "module-autorag.evaluation", false], [14, "module-autorag.evaluation.generation", false], [14, "module-autorag.evaluation.retrieval", false], [14, "module-autorag.evaluation.retrieval_contents", false], [14, "module-autorag.evaluation.util", false], [15, "module-autorag.evaluation.metric", false], [15, "module-autorag.evaluation.metric.generation", false], [15, "module-autorag.evaluation.metric.retrieval", false], [15, "module-autorag.evaluation.metric.retrieval_contents", false], [15, "module-autorag.evaluation.metric.util", false], [16, "module-autorag.nodes", false], [16, "module-autorag.nodes.util", false], [17, "module-autorag.nodes.generator", false], [17, "module-autorag.nodes.generator.base", false], [17, "module-autorag.nodes.generator.llama_index_llm", false], [17, "module-autorag.nodes.generator.openai_llm", false], [17, "module-autorag.nodes.generator.run", false], [17, "module-autorag.nodes.generator.vllm", false], [18, "module-autorag.nodes.passageaugmenter", false], [18, "module-autorag.nodes.passageaugmenter.base", false], [18, "module-autorag.nodes.passageaugmenter.pass_passage_augmenter", false], [18, "module-autorag.nodes.passageaugmenter.prev_next_augmenter", false], [18, "module-autorag.nodes.passageaugmenter.run", false], [19, "module-autorag.nodes.passagecompressor", false], [19, "module-autorag.nodes.passagecompressor.base", false], [19, "module-autorag.nodes.passagecompressor.longllmlingua", false], [19, "module-autorag.nodes.passagecompressor.pass_compressor", false], [19, "module-autorag.nodes.passagecompressor.refine", false], [19, "module-autorag.nodes.passagecompressor.run", false], [19, "module-autorag.nodes.passagecompressor.tree_summarize", false], [20, "module-autorag.nodes.passagefilter", false], [20, "module-autorag.nodes.passagefilter.base", false], [20, "module-autorag.nodes.passagefilter.pass_passage_filter", false], [20, "module-autorag.nodes.passagefilter.percentile_cutoff", false], [20, "module-autorag.nodes.passagefilter.recency", false], [20, "module-autorag.nodes.passagefilter.run", false], [20, "module-autorag.nodes.passagefilter.similarity_percentile_cutoff", false], [20, "module-autorag.nodes.passagefilter.similarity_threshold_cutoff", false], [20, "module-autorag.nodes.passagefilter.threshold_cutoff", false], [21, "module-autorag.nodes.passagereranker", false], [21, "module-autorag.nodes.passagereranker.base", false], [21, "module-autorag.nodes.passagereranker.cohere", false], [21, "module-autorag.nodes.passagereranker.colbert", false], [21, "module-autorag.nodes.passagereranker.flag_embedding", false], [21, "module-autorag.nodes.passagereranker.flag_embedding_llm", false], [21, "module-autorag.nodes.passagereranker.jina", false], [21, "module-autorag.nodes.passagereranker.koreranker", false], [21, "module-autorag.nodes.passagereranker.monot5", false], [21, "module-autorag.nodes.passagereranker.pass_reranker", false], [21, "module-autorag.nodes.passagereranker.rankgpt", false], [21, "module-autorag.nodes.passagereranker.run", false], [21, "module-autorag.nodes.passagereranker.sentence_transformer", false], [21, "module-autorag.nodes.passagereranker.time_reranker", false], [21, "module-autorag.nodes.passagereranker.upr", false], [22, "module-autorag.nodes.passagereranker.tart", false], [22, "module-autorag.nodes.passagereranker.tart.modeling_enc_t5", false], [22, "module-autorag.nodes.passagereranker.tart.tart", false], [22, "module-autorag.nodes.passagereranker.tart.tokenization_enc_t5", false], [23, "module-autorag.nodes.promptmaker", false], [23, "module-autorag.nodes.promptmaker.base", false], [23, "module-autorag.nodes.promptmaker.fstring", false], [23, "module-autorag.nodes.promptmaker.long_context_reorder", false], [23, "module-autorag.nodes.promptmaker.run", false], [23, "module-autorag.nodes.promptmaker.window_replacement", false], [24, "module-autorag.nodes.queryexpansion", false], [24, "module-autorag.nodes.queryexpansion.base", false], [24, "module-autorag.nodes.queryexpansion.hyde", false], [24, "module-autorag.nodes.queryexpansion.multi_query_expansion", false], [24, "module-autorag.nodes.queryexpansion.pass_query_expansion", false], [24, "module-autorag.nodes.queryexpansion.query_decompose", false], [24, "module-autorag.nodes.queryexpansion.run", false], [25, "module-autorag.nodes.retrieval", false], [25, "module-autorag.nodes.retrieval.base", false], [25, "module-autorag.nodes.retrieval.bm25", false], [25, "module-autorag.nodes.retrieval.hybrid_cc", false], [25, "module-autorag.nodes.retrieval.hybrid_rrf", false], [25, "module-autorag.nodes.retrieval.run", false], [25, "module-autorag.nodes.retrieval.vectordb", false], [26, "module-autorag.schema", false], [26, "module-autorag.schema.base", false], [26, "module-autorag.schema.metricinput", false], [26, "module-autorag.schema.module", false], [26, "module-autorag.schema.node", false], [27, "module-autorag.utils", false], [27, "module-autorag.utils.preprocess", false], [27, "module-autorag.utils.util", false]], "module (autorag.schema.module.module attribute)": [[26, "autorag.schema.module.Module.module", false]], "module (class in autorag.schema.module)": [[26, "autorag.schema.module.Module", false]], "module_param (autorag.schema.module.module attribute)": [[26, "autorag.schema.module.Module.module_param", false]], "module_type (autorag.schema.module.module attribute)": [[26, "autorag.schema.module.Module.module_type", false]], "module_type_exists() (in module autorag.schema.node)": [[26, "autorag.schema.node.module_type_exists", false]], "modules (autorag.schema.node.node attribute)": [[26, "autorag.schema.node.Node.modules", false]], "monot5 (class in autorag.nodes.passagereranker.monot5)": [[21, "autorag.nodes.passagereranker.monot5.MonoT5", false]], "monot5_run_model() (in module autorag.nodes.passagereranker.monot5)": [[21, "autorag.nodes.passagereranker.monot5.monot5_run_model", false]], "multiqueryexpansion (class in autorag.nodes.queryexpansion.multi_query_expansion)": [[24, "autorag.nodes.queryexpansion.multi_query_expansion.MultiQueryExpansion", false]], "node (class in autorag.schema.node)": [[26, "autorag.schema.node.Node", false]], "node_params (autorag.schema.node.node attribute)": [[26, "autorag.schema.node.Node.node_params", false]], "node_type (autorag.schema.node.node attribute)": [[26, "autorag.schema.node.Node.node_type", false]], "node_view() (in module autorag.dashboard)": [[0, "autorag.dashboard.node_view", false]], "normalize_dbsf() (in module autorag.nodes.retrieval.hybrid_cc)": [[25, "autorag.nodes.retrieval.hybrid_cc.normalize_dbsf", false]], "normalize_mm() (in module autorag.nodes.retrieval.hybrid_cc)": [[25, "autorag.nodes.retrieval.hybrid_cc.normalize_mm", false]], "normalize_string() (in module autorag.utils.util)": [[27, "autorag.utils.util.normalize_string", false]], "normalize_tmm() (in module autorag.nodes.retrieval.hybrid_cc)": [[25, "autorag.nodes.retrieval.hybrid_cc.normalize_tmm", false]], "normalize_unicode() (in module autorag.utils.util)": [[27, "autorag.utils.util.normalize_unicode", false]], "normalize_z() (in module autorag.nodes.retrieval.hybrid_cc)": [[25, "autorag.nodes.retrieval.hybrid_cc.normalize_z", false]], "one_hop_question (autorag.data.qa.query.openai_gen_query.twohopincrementalresponse attribute)": [[11, "autorag.data.qa.query.openai_gen_query.TwoHopIncrementalResponse.one_hop_question", false]], "openai_truncate_by_token() (in module autorag.utils.util)": [[27, "autorag.utils.util.openai_truncate_by_token", false]], "openaillm (class in autorag.nodes.generator.openai_llm)": [[17, "autorag.nodes.generator.openai_llm.OpenAILLM", false]], "optimize_hybrid() (in module autorag.nodes.retrieval.run)": [[25, "autorag.nodes.retrieval.run.optimize_hybrid", false]], "parallelize() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[22, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.parallelize", false]], "param_list (autorag.nodes.passagecompressor.base.llamaindexcompressor attribute)": [[19, "autorag.nodes.passagecompressor.base.LlamaIndexCompressor.param_list", false]], "parse_all_files() (in module autorag.data.parse.langchain_parse)": [[7, "autorag.data.parse.langchain_parse.parse_all_files", false]], "parse_output() (in module autorag.data.legacy.qacreation.llama_index)": [[6, "autorag.data.legacy.qacreation.llama_index.parse_output", false]], "parser (class in autorag.parser)": [[0, "autorag.parser.Parser", false]], "parser_node() (in module autorag.data.parse.base)": [[7, "autorag.data.parse.base.parser_node", false]], "passage_filter_node() (in module autorag.nodes.passagefilter.base)": [[20, "autorag.nodes.passagefilter.base.passage_filter_node", false]], "passcompressor (class in autorag.nodes.passagecompressor.pass_compressor)": [[19, "autorag.nodes.passagecompressor.pass_compressor.PassCompressor", false]], "passpassageaugmenter (class in autorag.nodes.passageaugmenter.pass_passage_augmenter)": [[18, "autorag.nodes.passageaugmenter.pass_passage_augmenter.PassPassageAugmenter", false]], "passpassagefilter (class in autorag.nodes.passagefilter.pass_passage_filter)": [[20, "autorag.nodes.passagefilter.pass_passage_filter.PassPassageFilter", false]], "passqueryexpansion (class in autorag.nodes.queryexpansion.pass_query_expansion)": [[24, "autorag.nodes.queryexpansion.pass_query_expansion.PassQueryExpansion", false]], "passreranker (class in autorag.nodes.passagereranker.pass_reranker)": [[21, "autorag.nodes.passagereranker.pass_reranker.PassReranker", false]], "percentilecutoff (class in autorag.nodes.passagefilter.percentile_cutoff)": [[20, "autorag.nodes.passagefilter.percentile_cutoff.PercentileCutoff", false]], "pop_params() (in module autorag.utils.util)": [[27, "autorag.utils.util.pop_params", false]], "prev_next_augmenter_pure() (in module autorag.nodes.passageaugmenter.prev_next_augmenter)": [[18, "autorag.nodes.passageaugmenter.prev_next_augmenter.prev_next_augmenter_pure", false]], "prevnextpassageaugmenter (class in autorag.nodes.passageaugmenter.prev_next_augmenter)": [[18, "autorag.nodes.passageaugmenter.prev_next_augmenter.PrevNextPassageAugmenter", false]], "process_batch() (in module autorag.utils.util)": [[27, "autorag.utils.util.process_batch", false]], "prompt (autorag.schema.metricinput.metricinput attribute)": [[26, "autorag.schema.metricinput.MetricInput.prompt", false]], "pure() (autorag.nodes.generator.llama_index_llm.llamaindexllm method)": [[17, "autorag.nodes.generator.llama_index_llm.LlamaIndexLLM.pure", false]], "pure() (autorag.nodes.generator.openai_llm.openaillm method)": [[17, "autorag.nodes.generator.openai_llm.OpenAILLM.pure", false]], "pure() (autorag.nodes.generator.vllm.vllm method)": [[17, "autorag.nodes.generator.vllm.Vllm.pure", false]], "pure() (autorag.nodes.passageaugmenter.pass_passage_augmenter.passpassageaugmenter method)": [[18, "autorag.nodes.passageaugmenter.pass_passage_augmenter.PassPassageAugmenter.pure", false]], "pure() (autorag.nodes.passageaugmenter.prev_next_augmenter.prevnextpassageaugmenter method)": [[18, "autorag.nodes.passageaugmenter.prev_next_augmenter.PrevNextPassageAugmenter.pure", false]], "pure() (autorag.nodes.passagecompressor.base.llamaindexcompressor method)": [[19, "autorag.nodes.passagecompressor.base.LlamaIndexCompressor.pure", false]], "pure() (autorag.nodes.passagecompressor.longllmlingua.longllmlingua method)": [[19, "autorag.nodes.passagecompressor.longllmlingua.LongLLMLingua.pure", false]], "pure() (autorag.nodes.passagecompressor.pass_compressor.passcompressor method)": [[19, "autorag.nodes.passagecompressor.pass_compressor.PassCompressor.pure", false]], "pure() (autorag.nodes.passagefilter.pass_passage_filter.passpassagefilter method)": [[20, "autorag.nodes.passagefilter.pass_passage_filter.PassPassageFilter.pure", false]], "pure() (autorag.nodes.passagefilter.percentile_cutoff.percentilecutoff method)": [[20, "autorag.nodes.passagefilter.percentile_cutoff.PercentileCutoff.pure", false]], "pure() (autorag.nodes.passagefilter.recency.recencyfilter method)": [[20, "autorag.nodes.passagefilter.recency.RecencyFilter.pure", false]], "pure() (autorag.nodes.passagefilter.similarity_percentile_cutoff.similaritypercentilecutoff method)": [[20, "autorag.nodes.passagefilter.similarity_percentile_cutoff.SimilarityPercentileCutoff.pure", false]], "pure() (autorag.nodes.passagefilter.similarity_threshold_cutoff.similaritythresholdcutoff method)": [[20, "autorag.nodes.passagefilter.similarity_threshold_cutoff.SimilarityThresholdCutoff.pure", false]], "pure() (autorag.nodes.passagefilter.threshold_cutoff.thresholdcutoff method)": [[20, "autorag.nodes.passagefilter.threshold_cutoff.ThresholdCutoff.pure", false]], "pure() (autorag.nodes.passagereranker.cohere.coherereranker method)": [[21, "autorag.nodes.passagereranker.cohere.CohereReranker.pure", false]], "pure() (autorag.nodes.passagereranker.colbert.colbertreranker method)": [[21, "autorag.nodes.passagereranker.colbert.ColbertReranker.pure", false]], "pure() (autorag.nodes.passagereranker.flag_embedding.flagembeddingreranker method)": [[21, "autorag.nodes.passagereranker.flag_embedding.FlagEmbeddingReranker.pure", false]], "pure() (autorag.nodes.passagereranker.flag_embedding_llm.flagembeddingllmreranker method)": [[21, "autorag.nodes.passagereranker.flag_embedding_llm.FlagEmbeddingLLMReranker.pure", false]], "pure() (autorag.nodes.passagereranker.jina.jinareranker method)": [[21, "autorag.nodes.passagereranker.jina.JinaReranker.pure", false]], "pure() (autorag.nodes.passagereranker.koreranker.koreranker method)": [[21, "autorag.nodes.passagereranker.koreranker.KoReranker.pure", false]], "pure() (autorag.nodes.passagereranker.monot5.monot5 method)": [[21, "autorag.nodes.passagereranker.monot5.MonoT5.pure", false]], "pure() (autorag.nodes.passagereranker.pass_reranker.passreranker method)": [[21, "autorag.nodes.passagereranker.pass_reranker.PassReranker.pure", false]], "pure() (autorag.nodes.passagereranker.rankgpt.rankgpt method)": [[21, "autorag.nodes.passagereranker.rankgpt.RankGPT.pure", false]], "pure() (autorag.nodes.passagereranker.sentence_transformer.sentencetransformerreranker method)": [[21, "autorag.nodes.passagereranker.sentence_transformer.SentenceTransformerReranker.pure", false]], "pure() (autorag.nodes.passagereranker.tart.tart.tart method)": [[22, "autorag.nodes.passagereranker.tart.tart.Tart.pure", false]], "pure() (autorag.nodes.passagereranker.time_reranker.timereranker method)": [[21, "autorag.nodes.passagereranker.time_reranker.TimeReranker.pure", false]], "pure() (autorag.nodes.passagereranker.upr.upr method)": [[21, "autorag.nodes.passagereranker.upr.Upr.pure", false]], "pure() (autorag.nodes.promptmaker.fstring.fstring method)": [[23, "autorag.nodes.promptmaker.fstring.Fstring.pure", false]], "pure() (autorag.nodes.promptmaker.long_context_reorder.longcontextreorder method)": [[23, "autorag.nodes.promptmaker.long_context_reorder.LongContextReorder.pure", false]], "pure() (autorag.nodes.promptmaker.window_replacement.windowreplacement method)": [[23, "autorag.nodes.promptmaker.window_replacement.WindowReplacement.pure", false]], "pure() (autorag.nodes.queryexpansion.hyde.hyde method)": [[24, "autorag.nodes.queryexpansion.hyde.HyDE.pure", false]], "pure() (autorag.nodes.queryexpansion.multi_query_expansion.multiqueryexpansion method)": [[24, "autorag.nodes.queryexpansion.multi_query_expansion.MultiQueryExpansion.pure", false]], "pure() (autorag.nodes.queryexpansion.pass_query_expansion.passqueryexpansion method)": [[24, "autorag.nodes.queryexpansion.pass_query_expansion.PassQueryExpansion.pure", false]], "pure() (autorag.nodes.queryexpansion.query_decompose.querydecompose method)": [[24, "autorag.nodes.queryexpansion.query_decompose.QueryDecompose.pure", false]], "pure() (autorag.nodes.retrieval.base.hybridretrieval method)": [[25, "autorag.nodes.retrieval.base.HybridRetrieval.pure", false]], "pure() (autorag.nodes.retrieval.bm25.bm25 method)": [[25, "autorag.nodes.retrieval.bm25.BM25.pure", false]], "pure() (autorag.nodes.retrieval.vectordb.vectordb method)": [[25, "autorag.nodes.retrieval.vectordb.VectorDB.pure", false]], "pure() (autorag.schema.base.basemodule method)": [[26, "autorag.schema.base.BaseModule.pure", false]], "qa (class in autorag.data.qa.schema)": [[8, "autorag.data.qa.schema.QA", false]], "queries (autorag.schema.metricinput.metricinput attribute)": [[26, "autorag.schema.metricinput.MetricInput.queries", false]], "query (autorag.data.qa.query.openai_gen_query.response attribute)": [[11, "autorag.data.qa.query.openai_gen_query.Response.query", false]], "query (autorag.deploy.runnerinput attribute)": [[0, "autorag.deploy.RunnerInput.query", false]], "query (autorag.schema.metricinput.metricinput attribute)": [[26, "autorag.schema.metricinput.MetricInput.query", false]], "query_gen_openai_base() (in module autorag.data.qa.query.openai_gen_query)": [[11, "autorag.data.qa.query.openai_gen_query.query_gen_openai_base", false]], "querydecompose (class in autorag.nodes.queryexpansion.query_decompose)": [[24, "autorag.nodes.queryexpansion.query_decompose.QueryDecompose", false]], "random() (in module autorag)": [[0, "autorag.random", false]], "random_single_hop() (in module autorag.data.qa.sample)": [[8, "autorag.data.qa.sample.random_single_hop", false]], "range_single_hop() (in module autorag.data.qa.sample)": [[8, "autorag.data.qa.sample.range_single_hop", false]], "rankgpt (class in autorag.nodes.passagereranker.rankgpt)": [[21, "autorag.nodes.passagereranker.rankgpt.RankGPT", false]], "rankgpt_rerank_prompt (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[21, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.rankgpt_rerank_prompt", false]], "raw (class in autorag.data.qa.schema)": [[8, "autorag.data.qa.schema.Raw", false]], "recencyfilter (class in autorag.nodes.passagefilter.recency)": [[20, "autorag.nodes.passagefilter.recency.RecencyFilter", false]], "reconstruct_list() (in module autorag.utils.util)": [[27, "autorag.utils.util.reconstruct_list", false]], "refine (class in autorag.nodes.passagecompressor.refine)": [[19, "autorag.nodes.passagecompressor.refine.Refine", false]], "replace_value_in_dict() (in module autorag.utils.util)": [[27, "autorag.utils.util.replace_value_in_dict", false]], "response (class in autorag.data.qa.filter.dontknow)": [[9, "autorag.data.qa.filter.dontknow.Response", false]], "response (class in autorag.data.qa.generation_gt.openai_gen_gt)": [[10, "autorag.data.qa.generation_gt.openai_gen_gt.Response", false]], "response (class in autorag.data.qa.query.openai_gen_query)": [[11, "autorag.data.qa.query.openai_gen_query.Response", false]], "restart_trial() (autorag.evaluator.evaluator method)": [[0, "autorag.evaluator.Evaluator.restart_trial", false]], "result_column (autorag.deploy.runnerinput attribute)": [[0, "autorag.deploy.RunnerInput.result_column", false]], "result_to_dataframe() (in module autorag.utils.util)": [[27, "autorag.utils.util.result_to_dataframe", false]], "retrieval_f1() (in module autorag.evaluation.metric.retrieval)": [[15, "autorag.evaluation.metric.retrieval.retrieval_f1", false]], "retrieval_gt (autorag.schema.metricinput.metricinput attribute)": [[26, "autorag.schema.metricinput.MetricInput.retrieval_gt", false]], "retrieval_gt_contents (autorag.schema.metricinput.metricinput attribute)": [[26, "autorag.schema.metricinput.MetricInput.retrieval_gt_contents", false]], "retrieval_map() (in module autorag.evaluation.metric.retrieval)": [[15, "autorag.evaluation.metric.retrieval.retrieval_map", false]], "retrieval_mrr() (in module autorag.evaluation.metric.retrieval)": [[15, "autorag.evaluation.metric.retrieval.retrieval_mrr", false]], "retrieval_ndcg() (in module autorag.evaluation.metric.retrieval)": [[15, "autorag.evaluation.metric.retrieval.retrieval_ndcg", false]], "retrieval_precision() (in module autorag.evaluation.metric.retrieval)": [[15, "autorag.evaluation.metric.retrieval.retrieval_precision", false]], "retrieval_recall() (in module autorag.evaluation.metric.retrieval)": [[15, "autorag.evaluation.metric.retrieval.retrieval_recall", false]], "retrieval_token_f1() (in module autorag.evaluation.metric.retrieval_contents)": [[15, "autorag.evaluation.metric.retrieval_contents.retrieval_token_f1", false]], "retrieval_token_precision() (in module autorag.evaluation.metric.retrieval_contents)": [[15, "autorag.evaluation.metric.retrieval_contents.retrieval_token_precision", false]], "retrieval_token_recall() (in module autorag.evaluation.metric.retrieval_contents)": [[15, "autorag.evaluation.metric.retrieval_contents.retrieval_token_recall", false]], "retrieved_contents (autorag.schema.metricinput.metricinput attribute)": [[26, "autorag.schema.metricinput.MetricInput.retrieved_contents", false]], "retrieved_ids (autorag.schema.metricinput.metricinput attribute)": [[26, "autorag.schema.metricinput.MetricInput.retrieved_ids", false]], "rouge() (in module autorag.evaluation.metric.generation)": [[15, "autorag.evaluation.metric.generation.rouge", false]], "rrf_calculate() (in module autorag.nodes.retrieval.hybrid_rrf)": [[25, "autorag.nodes.retrieval.hybrid_rrf.rrf_calculate", false]], "rrf_pure() (in module autorag.nodes.retrieval.hybrid_rrf)": [[25, "autorag.nodes.retrieval.hybrid_rrf.rrf_pure", false]], "run() (autorag.deploy.runner method)": [[0, "autorag.deploy.Runner.run", false]], "run() (autorag.schema.node.node method)": [[26, "autorag.schema.node.Node.run", false]], "run() (in module autorag.dashboard)": [[0, "autorag.dashboard.run", false]], "run_api_server() (autorag.deploy.runner method)": [[0, "autorag.deploy.Runner.run_api_server", false]], "run_chunker() (in module autorag.data.chunk.run)": [[2, "autorag.data.chunk.run.run_chunker", false]], "run_evaluator() (autorag.nodes.retrieval.hybrid_cc.hybridcc class method)": [[25, "autorag.nodes.retrieval.hybrid_cc.HybridCC.run_evaluator", false]], "run_evaluator() (autorag.nodes.retrieval.hybrid_rrf.hybridrrf class method)": [[25, "autorag.nodes.retrieval.hybrid_rrf.HybridRRF.run_evaluator", false]], "run_evaluator() (autorag.schema.base.basemodule class method)": [[26, "autorag.schema.base.BaseModule.run_evaluator", false]], "run_generator_node() (in module autorag.nodes.generator.run)": [[17, "autorag.nodes.generator.run.run_generator_node", false]], "run_node (autorag.schema.node.node attribute)": [[26, "autorag.schema.node.Node.run_node", false]], "run_node_line() (in module autorag.node_line)": [[0, "autorag.node_line.run_node_line", false]], "run_parser() (in module autorag.data.parse.run)": [[7, "autorag.data.parse.run.run_parser", false]], "run_passage_augmenter_node() (in module autorag.nodes.passageaugmenter.run)": [[18, "autorag.nodes.passageaugmenter.run.run_passage_augmenter_node", false]], "run_passage_compressor_node() (in module autorag.nodes.passagecompressor.run)": [[19, "autorag.nodes.passagecompressor.run.run_passage_compressor_node", false]], "run_passage_filter_node() (in module autorag.nodes.passagefilter.run)": [[20, "autorag.nodes.passagefilter.run.run_passage_filter_node", false]], "run_passage_reranker_node() (in module autorag.nodes.passagereranker.run)": [[21, "autorag.nodes.passagereranker.run.run_passage_reranker_node", false]], "run_prompt_maker_node() (in module autorag.nodes.promptmaker.run)": [[23, "autorag.nodes.promptmaker.run.run_prompt_maker_node", false]], "run_query_embedding_batch() (in module autorag.nodes.retrieval.vectordb)": [[25, "autorag.nodes.retrieval.vectordb.run_query_embedding_batch", false]], "run_query_expansion_node() (in module autorag.nodes.queryexpansion.run)": [[24, "autorag.nodes.queryexpansion.run.run_query_expansion_node", false]], "run_retrieval_node() (in module autorag.nodes.retrieval.run)": [[25, "autorag.nodes.retrieval.run.run_retrieval_node", false]], "run_web() (autorag.deploy.runner method)": [[0, "autorag.deploy.Runner.run_web", false]], "runner (class in autorag.deploy)": [[0, "autorag.deploy.Runner", false]], "runnerinput (class in autorag.deploy)": [[0, "autorag.deploy.RunnerInput", false]], "sample() (autorag.data.qa.schema.corpus method)": [[8, "autorag.data.qa.schema.Corpus.sample", false]], "save_parquet_safe() (in module autorag.utils.util)": [[27, "autorag.utils.util.save_parquet_safe", false]], "select_best() (in module autorag.strategy)": [[0, "autorag.strategy.select_best", false]], "select_best_average() (in module autorag.strategy)": [[0, "autorag.strategy.select_best_average", false]], "select_best_rr() (in module autorag.strategy)": [[0, "autorag.strategy.select_best_rr", false]], "select_bm25_tokenizer() (in module autorag.nodes.retrieval.bm25)": [[25, "autorag.nodes.retrieval.bm25.select_bm25_tokenizer", false]], "select_normalize_mean() (in module autorag.strategy)": [[0, "autorag.strategy.select_normalize_mean", false]], "select_top_k() (in module autorag.utils.util)": [[27, "autorag.utils.util.select_top_k", false]], "sem_score() (in module autorag.evaluation.metric.generation)": [[15, "autorag.evaluation.metric.generation.sem_score", false]], "sentence_transformer_run_model() (in module autorag.nodes.passagereranker.sentence_transformer)": [[21, "autorag.nodes.passagereranker.sentence_transformer.sentence_transformer_run_model", false]], "sentencetransformerreranker (class in autorag.nodes.passagereranker.sentence_transformer)": [[21, "autorag.nodes.passagereranker.sentence_transformer.SentenceTransformerReranker", false]], "set_initial_state() (in module autorag.web)": [[0, "autorag.web.set_initial_state", false]], "set_input_embeddings() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[22, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.set_input_embeddings", false]], "set_page_config() (in module autorag.web)": [[0, "autorag.web.set_page_config", false]], "set_page_header() (in module autorag.web)": [[0, "autorag.web.set_page_header", false]], "similaritypercentilecutoff (class in autorag.nodes.passagefilter.similarity_percentile_cutoff)": [[20, "autorag.nodes.passagefilter.similarity_percentile_cutoff.SimilarityPercentileCutoff", false]], "similaritythresholdcutoff (class in autorag.nodes.passagefilter.similarity_threshold_cutoff)": [[20, "autorag.nodes.passagefilter.similarity_threshold_cutoff.SimilarityThresholdCutoff", false]], "single_token_f1() (in module autorag.evaluation.metric.retrieval_contents)": [[15, "autorag.evaluation.metric.retrieval_contents.single_token_f1", false]], "slice_tensor() (in module autorag.nodes.passagereranker.colbert)": [[21, "autorag.nodes.passagereranker.colbert.slice_tensor", false]], "slice_tokenizer_result() (in module autorag.nodes.passagereranker.colbert)": [[21, "autorag.nodes.passagereranker.colbert.slice_tokenizer_result", false]], "sort_by_scores() (autorag.nodes.passageaugmenter.base.basepassageaugmenter static method)": [[18, "autorag.nodes.passageaugmenter.base.BasePassageAugmenter.sort_by_scores", false]], "sort_by_scores() (in module autorag.utils.util)": [[27, "autorag.utils.util.sort_by_scores", false]], "split_by_sentence_kiwi() (in module autorag.data)": [[1, "autorag.data.split_by_sentence_kiwi", false]], "split_dataframe() (in module autorag.utils.util)": [[27, "autorag.utils.util.split_dataframe", false]], "start_chunking() (autorag.chunker.chunker method)": [[0, "autorag.chunker.Chunker.start_chunking", false]], "start_parsing() (autorag.parser.parser method)": [[0, "autorag.parser.Parser.start_parsing", false]], "start_trial() (autorag.evaluator.evaluator method)": [[0, "autorag.evaluator.Evaluator.start_trial", false]], "strategy (autorag.schema.node.node attribute)": [[26, "autorag.schema.node.Node.strategy", false]], "summary_df_to_yaml() (in module autorag.deploy)": [[0, "autorag.deploy.summary_df_to_yaml", false]], "tart (class in autorag.nodes.passagereranker.tart.tart)": [[22, "autorag.nodes.passagereranker.tart.tart.Tart", false]], "tart_run_model() (in module autorag.nodes.passagereranker.tart.tart)": [[22, "autorag.nodes.passagereranker.tart.tart.tart_run_model", false]], "thresholdcutoff (class in autorag.nodes.passagefilter.threshold_cutoff)": [[20, "autorag.nodes.passagefilter.threshold_cutoff.ThresholdCutoff", false]], "timereranker (class in autorag.nodes.passagereranker.time_reranker)": [[21, "autorag.nodes.passagereranker.time_reranker.TimeReranker", false]], "to_list() (in module autorag.utils.util)": [[27, "autorag.utils.util.to_list", false]], "to_parquet() (autorag.data.qa.schema.corpus method)": [[8, "autorag.data.qa.schema.Corpus.to_parquet", false]], "to_parquet() (autorag.data.qa.schema.qa method)": [[8, "autorag.data.qa.schema.QA.to_parquet", false]], "tokenize() (in module autorag.nodes.retrieval.bm25)": [[25, "autorag.nodes.retrieval.bm25.tokenize", false]], "tokenize_ko_kiwi() (in module autorag.nodes.retrieval.bm25)": [[25, "autorag.nodes.retrieval.bm25.tokenize_ko_kiwi", false]], "tokenize_ko_kkma() (in module autorag.nodes.retrieval.bm25)": [[25, "autorag.nodes.retrieval.bm25.tokenize_ko_kkma", false]], "tokenize_ko_okt() (in module autorag.nodes.retrieval.bm25)": [[25, "autorag.nodes.retrieval.bm25.tokenize_ko_okt", false]], "tokenize_porter_stemmer() (in module autorag.nodes.retrieval.bm25)": [[25, "autorag.nodes.retrieval.bm25.tokenize_porter_stemmer", false]], "tokenize_space() (in module autorag.nodes.retrieval.bm25)": [[25, "autorag.nodes.retrieval.bm25.tokenize_space", false]], "top_n (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[21, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.top_n", false]], "treesummarize (class in autorag.nodes.passagecompressor.tree_summarize)": [[19, "autorag.nodes.passagecompressor.tree_summarize.TreeSummarize", false]], "truncate_by_token() (in module autorag.nodes.generator.openai_llm)": [[17, "autorag.nodes.generator.openai_llm.truncate_by_token", false]], "two_hop_incremental() (in module autorag.data.qa.query.llama_gen_query)": [[11, "autorag.data.qa.query.llama_gen_query.two_hop_incremental", false]], "two_hop_incremental() (in module autorag.data.qa.query.openai_gen_query)": [[11, "autorag.data.qa.query.openai_gen_query.two_hop_incremental", false]], "two_hop_question (autorag.data.qa.query.openai_gen_query.twohopincrementalresponse attribute)": [[11, "autorag.data.qa.query.openai_gen_query.TwoHopIncrementalResponse.two_hop_question", false]], "twohopincrementalresponse (class in autorag.data.qa.query.openai_gen_query)": [[11, "autorag.data.qa.query.openai_gen_query.TwoHopIncrementalResponse", false]], "update_corpus() (autorag.data.qa.schema.qa method)": [[8, "autorag.data.qa.schema.QA.update_corpus", false]], "upr (class in autorag.nodes.passagereranker.upr)": [[21, "autorag.nodes.passagereranker.upr.Upr", false]], "uprscorer (class in autorag.nodes.passagereranker.upr)": [[21, "autorag.nodes.passagereranker.upr.UPRScorer", false]], "validate() (autorag.validator.validator method)": [[0, "autorag.validator.Validator.validate", false]], "validate_corpus_dataset() (in module autorag.utils.preprocess)": [[27, "autorag.utils.preprocess.validate_corpus_dataset", false]], "validate_llama_index_prompt() (in module autorag.data.legacy.qacreation.llama_index)": [[6, "autorag.data.legacy.qacreation.llama_index.validate_llama_index_prompt", false]], "validate_qa_dataset() (in module autorag.utils.preprocess)": [[27, "autorag.utils.preprocess.validate_qa_dataset", false]], "validate_qa_from_corpus_dataset() (in module autorag.utils.preprocess)": [[27, "autorag.utils.preprocess.validate_qa_from_corpus_dataset", false]], "validate_strategy_inputs() (in module autorag.strategy)": [[0, "autorag.strategy.validate_strategy_inputs", false]], "validator (class in autorag.validator)": [[0, "autorag.validator.Validator", false]], "vectordb (class in autorag.nodes.retrieval.vectordb)": [[25, "autorag.nodes.retrieval.vectordb.VectorDB", false]], "vectordb_ingest() (in module autorag.nodes.retrieval.vectordb)": [[25, "autorag.nodes.retrieval.vectordb.vectordb_ingest", false]], "vectordb_pure() (in module autorag.nodes.retrieval.vectordb)": [[25, "autorag.nodes.retrieval.vectordb.vectordb_pure", false]], "verbose (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[21, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.verbose", false]], "vllm (class in autorag.nodes.generator.vllm)": [[17, "autorag.nodes.generator.vllm.Vllm", false]], "windowreplacement (class in autorag.nodes.promptmaker.window_replacement)": [[23, "autorag.nodes.promptmaker.window_replacement.WindowReplacement", false]], "yaml_to_markdown() (in module autorag.dashboard)": [[0, "autorag.dashboard.yaml_to_markdown", false]]}, "objects": {"": [[0, 0, 0, "-", "autorag"]], "autorag": [[0, 1, 1, "", "LazyInit"], [0, 1, 1, "", "MockEmbeddingRandom"], [0, 0, 0, "-", "chunker"], [0, 0, 0, "-", "cli"], [0, 0, 0, "-", "dashboard"], [1, 0, 0, "-", "data"], [0, 0, 0, "-", "deploy"], [14, 0, 0, "-", "evaluation"], [0, 0, 0, "-", "evaluator"], [0, 4, 1, "", "handle_exception"], [0, 0, 0, "-", "node_line"], [16, 0, 0, "-", "nodes"], [0, 0, 0, "-", "parser"], [0, 4, 1, "", "random"], [26, 0, 0, "-", "schema"], [0, 0, 0, "-", "strategy"], [0, 0, 0, "-", "support"], [27, 0, 0, "-", "utils"], [0, 0, 0, "-", "validator"], [0, 0, 0, "-", "web"]], "autorag.MockEmbeddingRandom": [[0, 2, 1, "", "embed_dim"], [0, 2, 1, "", "model_computed_fields"], [0, 2, 1, "", "model_config"], [0, 2, 1, "", "model_fields"]], "autorag.chunker": [[0, 1, 1, "", "Chunker"]], "autorag.chunker.Chunker": [[0, 3, 1, "", "from_parquet"], [0, 3, 1, "", "start_chunking"]], "autorag.dashboard": [[0, 4, 1, "", "find_node_dir"], [0, 4, 1, "", "get_metric_values"], [0, 4, 1, "", "make_trial_summary_md"], [0, 4, 1, "", "node_view"], [0, 4, 1, "", "run"], [0, 4, 1, "", "yaml_to_markdown"]], "autorag.data": [[2, 0, 0, "-", "chunk"], [4, 0, 0, "-", "legacy"], [7, 0, 0, "-", "parse"], [8, 0, 0, "-", "qa"], [1, 4, 1, "", "split_by_sentence_kiwi"], [13, 0, 0, "-", "utils"]], "autorag.data.chunk": [[2, 0, 0, "-", "base"], [2, 0, 0, "-", "langchain_chunk"], [2, 0, 0, "-", "llama_index_chunk"], [2, 0, 0, "-", "run"]], "autorag.data.chunk.base": [[2, 4, 1, "", "add_file_name"], [2, 4, 1, "", "chunker_node"], [2, 4, 1, "", "make_metadata_list"]], "autorag.data.chunk.langchain_chunk": [[2, 4, 1, "", "langchain_chunk"], [2, 4, 1, "", "langchain_chunk_pure"]], "autorag.data.chunk.llama_index_chunk": [[2, 4, 1, "", "llama_index_chunk"], [2, 4, 1, "", "llama_index_chunk_pure"]], "autorag.data.chunk.run": [[2, 4, 1, "", "run_chunker"]], "autorag.data.legacy": [[5, 0, 0, "-", "corpus"], [6, 0, 0, "-", "qacreation"]], "autorag.data.legacy.corpus": [[5, 0, 0, "-", "langchain"], [5, 0, 0, "-", "llama_index"]], "autorag.data.legacy.corpus.langchain": [[5, 4, 1, "", "langchain_documents_to_parquet"]], "autorag.data.legacy.corpus.llama_index": [[5, 4, 1, "", "llama_documents_to_parquet"], [5, 4, 1, "", "llama_text_node_to_parquet"]], "autorag.data.legacy.qacreation": [[6, 0, 0, "-", "base"], [6, 0, 0, "-", "llama_index"], [6, 0, 0, "-", "ragas"], [6, 0, 0, "-", "simple"]], "autorag.data.legacy.qacreation.base": [[6, 4, 1, "", "make_qa_with_existing_qa"], [6, 4, 1, "", "make_single_content_qa"]], "autorag.data.legacy.qacreation.llama_index": [[6, 4, 1, "", "async_qa_gen_llama_index"], [6, 4, 1, "", "distribute_list_by_ratio"], [6, 4, 1, "", "generate_answers"], [6, 4, 1, "", "generate_basic_answer"], [6, 4, 1, "", "generate_qa_llama_index"], [6, 4, 1, "", "generate_qa_llama_index_by_ratio"], [6, 4, 1, "", "parse_output"], [6, 4, 1, "", "validate_llama_index_prompt"]], "autorag.data.legacy.qacreation.ragas": [[6, 4, 1, "", "generate_qa_ragas"]], "autorag.data.legacy.qacreation.simple": [[6, 4, 1, "", "generate_qa_row"], [6, 4, 1, "", "generate_simple_qa_dataset"]], "autorag.data.parse": [[7, 0, 0, "-", "base"], [7, 0, 0, "-", "langchain_parse"], [7, 0, 0, "-", "llamaparse"], [7, 0, 0, "-", "run"]], "autorag.data.parse.base": [[7, 4, 1, "", "parser_node"]], "autorag.data.parse.langchain_parse": [[7, 4, 1, "", "langchain_parse"], [7, 4, 1, "", "langchain_parse_pure"], [7, 4, 1, "", "parse_all_files"]], "autorag.data.parse.llamaparse": [[7, 4, 1, "", "llama_parse"], [7, 4, 1, "", "llama_parse_pure"]], "autorag.data.parse.run": [[7, 4, 1, "", "run_parser"]], "autorag.data.qa": [[8, 0, 0, "-", "extract_evidence"], [9, 0, 0, "-", "filter"], [10, 0, 0, "-", "generation_gt"], [11, 0, 0, "-", "query"], [8, 0, 0, "-", "sample"], [8, 0, 0, "-", "schema"]], "autorag.data.qa.filter": [[9, 0, 0, "-", "dontknow"], [9, 0, 0, "-", "prompt"]], "autorag.data.qa.filter.dontknow": [[9, 1, 1, "", "Response"], [9, 4, 1, "", "dontknow_filter_llama_index"], [9, 4, 1, "", "dontknow_filter_openai"], [9, 4, 1, "", "dontknow_filter_rule_based"]], "autorag.data.qa.filter.dontknow.Response": [[9, 2, 1, "", "is_dont_know"], [9, 2, 1, "", "model_computed_fields"], [9, 2, 1, "", "model_config"], [9, 2, 1, "", "model_fields"]], "autorag.data.qa.generation_gt": [[10, 0, 0, "-", "base"], [10, 0, 0, "-", "llama_index_gen_gt"], [10, 0, 0, "-", "openai_gen_gt"], [10, 0, 0, "-", "prompt"]], "autorag.data.qa.generation_gt.base": [[10, 4, 1, "", "add_gen_gt"]], "autorag.data.qa.generation_gt.llama_index_gen_gt": [[10, 4, 1, "", "make_basic_gen_gt"], [10, 4, 1, "", "make_concise_gen_gt"], [10, 4, 1, "", "make_gen_gt_llama_index"]], "autorag.data.qa.generation_gt.openai_gen_gt": [[10, 1, 1, "", "Response"], [10, 4, 1, "", "make_basic_gen_gt"], [10, 4, 1, "", "make_concise_gen_gt"], [10, 4, 1, "", "make_gen_gt_openai"]], "autorag.data.qa.generation_gt.openai_gen_gt.Response": [[10, 2, 1, "", "answer"], [10, 2, 1, "", "model_computed_fields"], [10, 2, 1, "", "model_config"], [10, 2, 1, "", "model_fields"]], "autorag.data.qa.query": [[11, 0, 0, "-", "llama_gen_query"], [11, 0, 0, "-", "openai_gen_query"], [11, 0, 0, "-", "prompt"]], "autorag.data.qa.query.llama_gen_query": [[11, 4, 1, "", "concept_completion_query_gen"], [11, 4, 1, "", "factoid_query_gen"], [11, 4, 1, "", "llama_index_generate_base"], [11, 4, 1, "", "two_hop_incremental"]], "autorag.data.qa.query.openai_gen_query": [[11, 1, 1, "", "Response"], [11, 1, 1, "", "TwoHopIncrementalResponse"], [11, 4, 1, "", "concept_completion_query_gen"], [11, 4, 1, "", "factoid_query_gen"], [11, 4, 1, "", "query_gen_openai_base"], [11, 4, 1, "", "two_hop_incremental"]], "autorag.data.qa.query.openai_gen_query.Response": [[11, 2, 1, "", "model_computed_fields"], [11, 2, 1, "", "model_config"], [11, 2, 1, "", "model_fields"], [11, 2, 1, "", "query"]], "autorag.data.qa.query.openai_gen_query.TwoHopIncrementalResponse": [[11, 2, 1, "", "answer"], [11, 2, 1, "", "model_computed_fields"], [11, 2, 1, "", "model_config"], [11, 2, 1, "", "model_fields"], [11, 2, 1, "", "one_hop_question"], [11, 2, 1, "", "two_hop_question"]], "autorag.data.qa.sample": [[8, 4, 1, "", "random_single_hop"], [8, 4, 1, "", "range_single_hop"]], "autorag.data.qa.schema": [[8, 1, 1, "", "Corpus"], [8, 1, 1, "", "QA"], [8, 1, 1, "", "Raw"]], "autorag.data.qa.schema.Corpus": [[8, 3, 1, "", "batch_apply"], [8, 5, 1, "", "linked_raw"], [8, 3, 1, "", "map"], [8, 3, 1, "", "sample"], [8, 3, 1, "", "to_parquet"]], "autorag.data.qa.schema.QA": [[8, 3, 1, "", "batch_apply"], [8, 3, 1, "", "batch_filter"], [8, 3, 1, "", "filter"], [8, 5, 1, "", "linked_corpus"], [8, 3, 1, "", "make_retrieval_gt_contents"], [8, 3, 1, "", "map"], [8, 3, 1, "", "to_parquet"], [8, 3, 1, "", "update_corpus"]], "autorag.data.qa.schema.Raw": [[8, 3, 1, "", "batch_apply"], [8, 3, 1, "", "chunk"], [8, 3, 1, "", "flatmap"], [8, 3, 1, "", "map"]], "autorag.data.utils": [[13, 0, 0, "-", "util"]], "autorag.data.utils.util": [[13, 4, 1, "", "add_essential_metadata"], [13, 4, 1, "", "add_essential_metadata_llama_text_node"], [13, 4, 1, "", "corpus_df_to_langchain_documents"], [13, 4, 1, "", "get_file_metadata"], [13, 4, 1, "", "get_param_combinations"], [13, 4, 1, "", "get_start_end_idx"], [13, 4, 1, "", "load_yaml"]], "autorag.deploy": [[0, 1, 1, "", "Runner"], [0, 1, 1, "", "RunnerInput"], [0, 4, 1, "", "extract_best_config"], [0, 4, 1, "", "extract_node_line_names"], [0, 4, 1, "", "extract_node_strategy"], [0, 4, 1, "", "summary_df_to_yaml"]], "autorag.deploy.Runner": [[0, 3, 1, "", "from_trial_folder"], [0, 3, 1, "", "from_yaml"], [0, 3, 1, "", "run"], [0, 3, 1, "", "run_api_server"], [0, 3, 1, "", "run_web"]], "autorag.deploy.RunnerInput": [[0, 2, 1, "", "model_computed_fields"], [0, 2, 1, "", "model_config"], [0, 2, 1, "", "model_fields"], [0, 2, 1, "", "query"], [0, 2, 1, "", "result_column"]], "autorag.evaluation": [[14, 0, 0, "-", "generation"], [15, 0, 0, "-", "metric"], [14, 0, 0, "-", "retrieval"], [14, 0, 0, "-", "retrieval_contents"], [14, 0, 0, "-", "util"]], "autorag.evaluation.generation": [[14, 4, 1, "", "evaluate_generation"]], "autorag.evaluation.metric": [[15, 0, 0, "-", "generation"], [15, 0, 0, "-", "retrieval"], [15, 0, 0, "-", "retrieval_contents"], [15, 0, 0, "-", "util"]], "autorag.evaluation.metric.generation": [[15, 4, 1, "", "async_g_eval"], [15, 4, 1, "", "bert_score"], [15, 4, 1, "", "bleu"], [15, 4, 1, "", "g_eval"], [15, 4, 1, "", "huggingface_evaluate"], [15, 4, 1, "", "meteor"], [15, 4, 1, "", "rouge"], [15, 4, 1, "", "sem_score"]], "autorag.evaluation.metric.retrieval": [[15, 4, 1, "", "retrieval_f1"], [15, 4, 1, "", "retrieval_map"], [15, 4, 1, "", "retrieval_mrr"], [15, 4, 1, "", "retrieval_ndcg"], [15, 4, 1, "", "retrieval_precision"], [15, 4, 1, "", "retrieval_recall"]], "autorag.evaluation.metric.retrieval_contents": [[15, 4, 1, "", "retrieval_token_f1"], [15, 4, 1, "", "retrieval_token_precision"], [15, 4, 1, "", "retrieval_token_recall"], [15, 4, 1, "", "single_token_f1"]], "autorag.evaluation.metric.util": [[15, 4, 1, "", "autorag_metric"], [15, 4, 1, "", "autorag_metric_loop"], [15, 4, 1, "", "calculate_cosine_similarity"]], "autorag.evaluation.retrieval": [[14, 4, 1, "", "evaluate_retrieval"]], "autorag.evaluation.retrieval_contents": [[14, 4, 1, "", "evaluate_retrieval_contents"]], "autorag.evaluation.util": [[14, 4, 1, "", "cast_embedding_model"], [14, 4, 1, "", "cast_metrics"]], "autorag.evaluator": [[0, 1, 1, "", "Evaluator"]], "autorag.evaluator.Evaluator": [[0, 3, 1, "", "restart_trial"], [0, 3, 1, "", "start_trial"]], "autorag.node_line": [[0, 4, 1, "", "make_node_lines"], [0, 4, 1, "", "run_node_line"]], "autorag.nodes": [[17, 0, 0, "-", "generator"], [18, 0, 0, "-", "passageaugmenter"], [19, 0, 0, "-", "passagecompressor"], [20, 0, 0, "-", "passagefilter"], [21, 0, 0, "-", "passagereranker"], [23, 0, 0, "-", "promptmaker"], [24, 0, 0, "-", "queryexpansion"], [25, 0, 0, "-", "retrieval"], [16, 0, 0, "-", "util"]], "autorag.nodes.generator": [[17, 0, 0, "-", "base"], [17, 0, 0, "-", "llama_index_llm"], [17, 0, 0, "-", "openai_llm"], [17, 0, 0, "-", "run"], [17, 0, 0, "-", "vllm"]], "autorag.nodes.generator.base": [[17, 1, 1, "", "BaseGenerator"], [17, 4, 1, "", "generator_node"]], "autorag.nodes.generator.base.BaseGenerator": [[17, 3, 1, "", "cast_to_run"]], "autorag.nodes.generator.llama_index_llm": [[17, 1, 1, "", "LlamaIndexLLM"]], "autorag.nodes.generator.llama_index_llm.LlamaIndexLLM": [[17, 3, 1, "", "pure"]], "autorag.nodes.generator.openai_llm": [[17, 1, 1, "", "OpenAILLM"], [17, 4, 1, "", "truncate_by_token"]], "autorag.nodes.generator.openai_llm.OpenAILLM": [[17, 3, 1, "", "get_result"], [17, 3, 1, "", "get_result_o1"], [17, 3, 1, "", "pure"]], "autorag.nodes.generator.run": [[17, 4, 1, "", "evaluate_generator_node"], [17, 4, 1, "", "run_generator_node"]], "autorag.nodes.generator.vllm": [[17, 1, 1, "", "Vllm"]], "autorag.nodes.generator.vllm.Vllm": [[17, 3, 1, "", "pure"]], "autorag.nodes.passageaugmenter": [[18, 0, 0, "-", "base"], [18, 0, 0, "-", "pass_passage_augmenter"], [18, 0, 0, "-", "prev_next_augmenter"], [18, 0, 0, "-", "run"]], "autorag.nodes.passageaugmenter.base": [[18, 1, 1, "", "BasePassageAugmenter"]], "autorag.nodes.passageaugmenter.base.BasePassageAugmenter": [[18, 3, 1, "", "cast_to_run"], [18, 3, 1, "", "sort_by_scores"]], "autorag.nodes.passageaugmenter.pass_passage_augmenter": [[18, 1, 1, "", "PassPassageAugmenter"]], "autorag.nodes.passageaugmenter.pass_passage_augmenter.PassPassageAugmenter": [[18, 3, 1, "", "pure"]], "autorag.nodes.passageaugmenter.prev_next_augmenter": [[18, 1, 1, "", "PrevNextPassageAugmenter"], [18, 4, 1, "", "prev_next_augmenter_pure"]], "autorag.nodes.passageaugmenter.prev_next_augmenter.PrevNextPassageAugmenter": [[18, 3, 1, "", "pure"]], "autorag.nodes.passageaugmenter.run": [[18, 4, 1, "", "run_passage_augmenter_node"]], "autorag.nodes.passagecompressor": [[19, 0, 0, "-", "base"], [19, 0, 0, "-", "longllmlingua"], [19, 0, 0, "-", "pass_compressor"], [19, 0, 0, "-", "refine"], [19, 0, 0, "-", "run"], [19, 0, 0, "-", "tree_summarize"]], "autorag.nodes.passagecompressor.base": [[19, 1, 1, "", "BasePassageCompressor"], [19, 1, 1, "", "LlamaIndexCompressor"], [19, 4, 1, "", "make_llm"]], "autorag.nodes.passagecompressor.base.BasePassageCompressor": [[19, 3, 1, "", "cast_to_run"]], "autorag.nodes.passagecompressor.base.LlamaIndexCompressor": [[19, 2, 1, "", "param_list"], [19, 3, 1, "", "pure"]], "autorag.nodes.passagecompressor.longllmlingua": [[19, 1, 1, "", "LongLLMLingua"], [19, 4, 1, "", "llmlingua_pure"]], "autorag.nodes.passagecompressor.longllmlingua.LongLLMLingua": [[19, 3, 1, "", "pure"]], "autorag.nodes.passagecompressor.pass_compressor": [[19, 1, 1, "", "PassCompressor"]], "autorag.nodes.passagecompressor.pass_compressor.PassCompressor": [[19, 3, 1, "", "pure"]], "autorag.nodes.passagecompressor.refine": [[19, 1, 1, "", "Refine"]], "autorag.nodes.passagecompressor.refine.Refine": [[19, 2, 1, "", "llm"]], "autorag.nodes.passagecompressor.run": [[19, 4, 1, "", "evaluate_passage_compressor_node"], [19, 4, 1, "", "run_passage_compressor_node"]], "autorag.nodes.passagecompressor.tree_summarize": [[19, 1, 1, "", "TreeSummarize"]], "autorag.nodes.passagecompressor.tree_summarize.TreeSummarize": [[19, 2, 1, "", "llm"]], "autorag.nodes.passagefilter": [[20, 0, 0, "-", "base"], [20, 0, 0, "-", "pass_passage_filter"], [20, 0, 0, "-", "percentile_cutoff"], [20, 0, 0, "-", "recency"], [20, 0, 0, "-", "run"], [20, 0, 0, "-", "similarity_percentile_cutoff"], [20, 0, 0, "-", "similarity_threshold_cutoff"], [20, 0, 0, "-", "threshold_cutoff"]], "autorag.nodes.passagefilter.base": [[20, 1, 1, "", "BasePassageFilter"], [20, 4, 1, "", "passage_filter_node"]], "autorag.nodes.passagefilter.base.BasePassageFilter": [[20, 3, 1, "", "cast_to_run"]], "autorag.nodes.passagefilter.pass_passage_filter": [[20, 1, 1, "", "PassPassageFilter"]], "autorag.nodes.passagefilter.pass_passage_filter.PassPassageFilter": [[20, 3, 1, "", "pure"]], "autorag.nodes.passagefilter.percentile_cutoff": [[20, 1, 1, "", "PercentileCutoff"]], "autorag.nodes.passagefilter.percentile_cutoff.PercentileCutoff": [[20, 3, 1, "", "pure"]], "autorag.nodes.passagefilter.recency": [[20, 1, 1, "", "RecencyFilter"]], "autorag.nodes.passagefilter.recency.RecencyFilter": [[20, 3, 1, "", "pure"]], "autorag.nodes.passagefilter.run": [[20, 4, 1, "", "run_passage_filter_node"]], "autorag.nodes.passagefilter.similarity_percentile_cutoff": [[20, 1, 1, "", "SimilarityPercentileCutoff"]], "autorag.nodes.passagefilter.similarity_percentile_cutoff.SimilarityPercentileCutoff": [[20, 3, 1, "", "pure"]], "autorag.nodes.passagefilter.similarity_threshold_cutoff": [[20, 1, 1, "", "SimilarityThresholdCutoff"]], "autorag.nodes.passagefilter.similarity_threshold_cutoff.SimilarityThresholdCutoff": [[20, 3, 1, "", "pure"]], "autorag.nodes.passagefilter.threshold_cutoff": [[20, 1, 1, "", "ThresholdCutoff"]], "autorag.nodes.passagefilter.threshold_cutoff.ThresholdCutoff": [[20, 3, 1, "", "pure"]], "autorag.nodes.passagereranker": [[21, 0, 0, "-", "base"], [21, 0, 0, "-", "cohere"], [21, 0, 0, "-", "colbert"], [21, 0, 0, "-", "flag_embedding"], [21, 0, 0, "-", "flag_embedding_llm"], [21, 0, 0, "-", "jina"], [21, 0, 0, "-", "koreranker"], [21, 0, 0, "-", "monot5"], [21, 0, 0, "-", "pass_reranker"], [21, 0, 0, "-", "rankgpt"], [21, 0, 0, "-", "run"], [21, 0, 0, "-", "sentence_transformer"], [22, 0, 0, "-", "tart"], [21, 0, 0, "-", "time_reranker"], [21, 0, 0, "-", "upr"]], "autorag.nodes.passagereranker.base": [[21, 1, 1, "", "BasePassageReranker"]], "autorag.nodes.passagereranker.base.BasePassageReranker": [[21, 3, 1, "", "cast_to_run"]], "autorag.nodes.passagereranker.cohere": [[21, 1, 1, "", "CohereReranker"], [21, 4, 1, "", "cohere_rerank_pure"]], "autorag.nodes.passagereranker.cohere.CohereReranker": [[21, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.colbert": [[21, 1, 1, "", "ColbertReranker"], [21, 4, 1, "", "get_colbert_embedding_batch"], [21, 4, 1, "", "get_colbert_score"], [21, 4, 1, "", "slice_tensor"], [21, 4, 1, "", "slice_tokenizer_result"]], "autorag.nodes.passagereranker.colbert.ColbertReranker": [[21, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.flag_embedding": [[21, 1, 1, "", "FlagEmbeddingReranker"], [21, 4, 1, "", "flag_embedding_run_model"]], "autorag.nodes.passagereranker.flag_embedding.FlagEmbeddingReranker": [[21, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.flag_embedding_llm": [[21, 1, 1, "", "FlagEmbeddingLLMReranker"]], "autorag.nodes.passagereranker.flag_embedding_llm.FlagEmbeddingLLMReranker": [[21, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.jina": [[21, 1, 1, "", "JinaReranker"], [21, 4, 1, "", "jina_reranker_pure"]], "autorag.nodes.passagereranker.jina.JinaReranker": [[21, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.koreranker": [[21, 1, 1, "", "KoReranker"], [21, 4, 1, "", "exp_normalize"], [21, 4, 1, "", "koreranker_run_model"]], "autorag.nodes.passagereranker.koreranker.KoReranker": [[21, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.monot5": [[21, 1, 1, "", "MonoT5"], [21, 4, 1, "", "monot5_run_model"]], "autorag.nodes.passagereranker.monot5.MonoT5": [[21, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.pass_reranker": [[21, 1, 1, "", "PassReranker"]], "autorag.nodes.passagereranker.pass_reranker.PassReranker": [[21, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.rankgpt": [[21, 1, 1, "", "AsyncRankGPTRerank"], [21, 1, 1, "", "RankGPT"]], "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank": [[21, 3, 1, "", "async_postprocess_nodes"], [21, 3, 1, "", "async_run_llm"], [21, 2, 1, "", "llm"], [21, 2, 1, "", "model_computed_fields"], [21, 2, 1, "", "model_config"], [21, 2, 1, "", "model_fields"], [21, 2, 1, "", "rankgpt_rerank_prompt"], [21, 2, 1, "", "top_n"], [21, 2, 1, "", "verbose"]], "autorag.nodes.passagereranker.rankgpt.RankGPT": [[21, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.run": [[21, 4, 1, "", "run_passage_reranker_node"]], "autorag.nodes.passagereranker.sentence_transformer": [[21, 1, 1, "", "SentenceTransformerReranker"], [21, 4, 1, "", "sentence_transformer_run_model"]], "autorag.nodes.passagereranker.sentence_transformer.SentenceTransformerReranker": [[21, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.tart": [[22, 0, 0, "-", "modeling_enc_t5"], [22, 0, 0, "-", "tart"], [22, 0, 0, "-", "tokenization_enc_t5"]], "autorag.nodes.passagereranker.tart.modeling_enc_t5": [[22, 1, 1, "", "EncT5ForSequenceClassification"]], "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification": [[22, 3, 1, "", "deparallelize"], [22, 3, 1, "", "forward"], [22, 3, 1, "", "get_encoder"], [22, 3, 1, "", "get_input_embeddings"], [22, 3, 1, "", "parallelize"], [22, 3, 1, "", "set_input_embeddings"]], "autorag.nodes.passagereranker.tart.tart": [[22, 1, 1, "", "Tart"], [22, 4, 1, "", "tart_run_model"]], "autorag.nodes.passagereranker.tart.tart.Tart": [[22, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.tart.tokenization_enc_t5": [[22, 1, 1, "", "EncT5Tokenizer"]], "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer": [[22, 3, 1, "", "build_inputs_with_special_tokens"], [22, 3, 1, "", "create_token_type_ids_from_sequences"], [22, 3, 1, "", "get_special_tokens_mask"]], "autorag.nodes.passagereranker.time_reranker": [[21, 1, 1, "", "TimeReranker"]], "autorag.nodes.passagereranker.time_reranker.TimeReranker": [[21, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.upr": [[21, 1, 1, "", "UPRScorer"], [21, 1, 1, "", "Upr"]], "autorag.nodes.passagereranker.upr.UPRScorer": [[21, 3, 1, "", "compute"]], "autorag.nodes.passagereranker.upr.Upr": [[21, 3, 1, "", "pure"]], "autorag.nodes.promptmaker": [[23, 0, 0, "-", "base"], [23, 0, 0, "-", "fstring"], [23, 0, 0, "-", "long_context_reorder"], [23, 0, 0, "-", "run"], [23, 0, 0, "-", "window_replacement"]], "autorag.nodes.promptmaker.base": [[23, 1, 1, "", "BasePromptMaker"]], "autorag.nodes.promptmaker.base.BasePromptMaker": [[23, 3, 1, "", "cast_to_run"]], "autorag.nodes.promptmaker.fstring": [[23, 1, 1, "", "Fstring"]], "autorag.nodes.promptmaker.fstring.Fstring": [[23, 3, 1, "", "pure"]], "autorag.nodes.promptmaker.long_context_reorder": [[23, 1, 1, "", "LongContextReorder"]], "autorag.nodes.promptmaker.long_context_reorder.LongContextReorder": [[23, 3, 1, "", "pure"]], "autorag.nodes.promptmaker.run": [[23, 4, 1, "", "evaluate_generator_result"], [23, 4, 1, "", "evaluate_one_prompt_maker_node"], [23, 4, 1, "", "make_generator_callable_params"], [23, 4, 1, "", "run_prompt_maker_node"]], "autorag.nodes.promptmaker.window_replacement": [[23, 1, 1, "", "WindowReplacement"]], "autorag.nodes.promptmaker.window_replacement.WindowReplacement": [[23, 3, 1, "", "pure"]], "autorag.nodes.queryexpansion": [[24, 0, 0, "-", "base"], [24, 0, 0, "-", "hyde"], [24, 0, 0, "-", "multi_query_expansion"], [24, 0, 0, "-", "pass_query_expansion"], [24, 0, 0, "-", "query_decompose"], [24, 0, 0, "-", "run"]], "autorag.nodes.queryexpansion.base": [[24, 1, 1, "", "BaseQueryExpansion"], [24, 4, 1, "", "check_expanded_query"]], "autorag.nodes.queryexpansion.base.BaseQueryExpansion": [[24, 3, 1, "", "cast_to_run"]], "autorag.nodes.queryexpansion.hyde": [[24, 1, 1, "", "HyDE"]], "autorag.nodes.queryexpansion.hyde.HyDE": [[24, 3, 1, "", "pure"]], "autorag.nodes.queryexpansion.multi_query_expansion": [[24, 1, 1, "", "MultiQueryExpansion"], [24, 4, 1, "", "get_multi_query_expansion"]], "autorag.nodes.queryexpansion.multi_query_expansion.MultiQueryExpansion": [[24, 3, 1, "", "pure"]], "autorag.nodes.queryexpansion.pass_query_expansion": [[24, 1, 1, "", "PassQueryExpansion"]], "autorag.nodes.queryexpansion.pass_query_expansion.PassQueryExpansion": [[24, 3, 1, "", "pure"]], "autorag.nodes.queryexpansion.query_decompose": [[24, 1, 1, "", "QueryDecompose"], [24, 4, 1, "", "get_query_decompose"]], "autorag.nodes.queryexpansion.query_decompose.QueryDecompose": [[24, 3, 1, "", "pure"]], "autorag.nodes.queryexpansion.run": [[24, 4, 1, "", "evaluate_one_query_expansion_node"], [24, 4, 1, "", "make_retrieval_callable_params"], [24, 4, 1, "", "run_query_expansion_node"]], "autorag.nodes.retrieval": [[25, 0, 0, "-", "base"], [25, 0, 0, "-", "bm25"], [25, 0, 0, "-", "hybrid_cc"], [25, 0, 0, "-", "hybrid_rrf"], [25, 0, 0, "-", "run"], [25, 0, 0, "-", "vectordb"]], "autorag.nodes.retrieval.base": [[25, 1, 1, "", "BaseRetrieval"], [25, 1, 1, "", "HybridRetrieval"], [25, 4, 1, "", "cast_queries"], [25, 4, 1, "", "evenly_distribute_passages"], [25, 4, 1, "", "get_bm25_pkl_name"]], "autorag.nodes.retrieval.base.BaseRetrieval": [[25, 3, 1, "", "cast_to_run"]], "autorag.nodes.retrieval.base.HybridRetrieval": [[25, 3, 1, "", "pure"]], "autorag.nodes.retrieval.bm25": [[25, 1, 1, "", "BM25"], [25, 4, 1, "", "bm25_ingest"], [25, 4, 1, "", "bm25_pure"], [25, 4, 1, "", "get_bm25_scores"], [25, 4, 1, "", "load_bm25_corpus"], [25, 4, 1, "", "select_bm25_tokenizer"], [25, 4, 1, "", "tokenize"], [25, 4, 1, "", "tokenize_ko_kiwi"], [25, 4, 1, "", "tokenize_ko_kkma"], [25, 4, 1, "", "tokenize_ko_okt"], [25, 4, 1, "", "tokenize_porter_stemmer"], [25, 4, 1, "", "tokenize_space"]], "autorag.nodes.retrieval.bm25.BM25": [[25, 3, 1, "", "pure"]], "autorag.nodes.retrieval.hybrid_cc": [[25, 1, 1, "", "HybridCC"], [25, 4, 1, "", "fuse_per_query"], [25, 4, 1, "", "hybrid_cc"], [25, 4, 1, "", "normalize_dbsf"], [25, 4, 1, "", "normalize_mm"], [25, 4, 1, "", "normalize_tmm"], [25, 4, 1, "", "normalize_z"]], "autorag.nodes.retrieval.hybrid_cc.HybridCC": [[25, 3, 1, "", "run_evaluator"]], "autorag.nodes.retrieval.hybrid_rrf": [[25, 1, 1, "", "HybridRRF"], [25, 4, 1, "", "hybrid_rrf"], [25, 4, 1, "", "rrf_calculate"], [25, 4, 1, "", "rrf_pure"]], "autorag.nodes.retrieval.hybrid_rrf.HybridRRF": [[25, 3, 1, "", "run_evaluator"]], "autorag.nodes.retrieval.run": [[25, 4, 1, "", "edit_summary_df_params"], [25, 4, 1, "", "evaluate_retrieval_node"], [25, 4, 1, "", "find_unique_elems"], [25, 4, 1, "", "get_hybrid_execution_times"], [25, 4, 1, "", "get_ids_and_scores"], [25, 4, 1, "", "get_scores_by_ids"], [25, 4, 1, "", "optimize_hybrid"], [25, 4, 1, "", "run_retrieval_node"]], "autorag.nodes.retrieval.vectordb": [[25, 1, 1, "", "VectorDB"], [25, 4, 1, "", "get_id_scores"], [25, 4, 1, "", "load_chroma_collection"], [25, 4, 1, "", "run_query_embedding_batch"], [25, 4, 1, "", "vectordb_ingest"], [25, 4, 1, "", "vectordb_pure"]], "autorag.nodes.retrieval.vectordb.VectorDB": [[25, 3, 1, "", "pure"]], "autorag.nodes.util": [[16, 4, 1, "", "make_generator_callable_param"]], "autorag.parser": [[0, 1, 1, "", "Parser"]], "autorag.parser.Parser": [[0, 3, 1, "", "start_parsing"]], "autorag.schema": [[26, 0, 0, "-", "base"], [26, 0, 0, "-", "metricinput"], [26, 0, 0, "-", "module"], [26, 0, 0, "-", "node"]], "autorag.schema.base": [[26, 1, 1, "", "BaseModule"]], "autorag.schema.base.BaseModule": [[26, 3, 1, "", "cast_to_run"], [26, 3, 1, "", "pure"], [26, 3, 1, "", "run_evaluator"]], "autorag.schema.metricinput": [[26, 1, 1, "", "MetricInput"]], "autorag.schema.metricinput.MetricInput": [[26, 3, 1, "", "from_dataframe"], [26, 2, 1, "", "generated_log_probs"], [26, 2, 1, "", "generated_texts"], [26, 2, 1, "", "generation_gt"], [26, 3, 1, "", "is_fields_notnone"], [26, 2, 1, "", "prompt"], [26, 2, 1, "", "queries"], [26, 2, 1, "", "query"], [26, 2, 1, "", "retrieval_gt"], [26, 2, 1, "", "retrieval_gt_contents"], [26, 2, 1, "", "retrieved_contents"], [26, 2, 1, "", "retrieved_ids"]], "autorag.schema.module": [[26, 1, 1, "", "Module"]], "autorag.schema.module.Module": [[26, 3, 1, "", "from_dict"], [26, 2, 1, "", "module"], [26, 2, 1, "", "module_param"], [26, 2, 1, "", "module_type"]], "autorag.schema.node": [[26, 1, 1, "", "Node"], [26, 4, 1, "", "extract_values"], [26, 4, 1, "", "extract_values_from_nodes"], [26, 4, 1, "", "extract_values_from_nodes_strategy"], [26, 4, 1, "", "module_type_exists"]], "autorag.schema.node.Node": [[26, 3, 1, "", "from_dict"], [26, 3, 1, "", "get_param_combinations"], [26, 2, 1, "", "modules"], [26, 2, 1, "", "node_params"], [26, 2, 1, "", "node_type"], [26, 3, 1, "", "run"], [26, 2, 1, "", "run_node"], [26, 2, 1, "", "strategy"]], "autorag.strategy": [[0, 4, 1, "", "avoid_empty_result"], [0, 4, 1, "", "filter_by_threshold"], [0, 4, 1, "", "measure_speed"], [0, 4, 1, "", "select_best"], [0, 4, 1, "", "select_best_average"], [0, 4, 1, "", "select_best_rr"], [0, 4, 1, "", "select_normalize_mean"], [0, 4, 1, "", "validate_strategy_inputs"]], "autorag.support": [[0, 4, 1, "", "dynamically_find_function"], [0, 4, 1, "", "get_support_modules"], [0, 4, 1, "", "get_support_nodes"]], "autorag.utils": [[27, 0, 0, "-", "preprocess"], [27, 0, 0, "-", "util"]], "autorag.utils.preprocess": [[27, 4, 1, "", "cast_corpus_dataset"], [27, 4, 1, "", "cast_qa_dataset"], [27, 4, 1, "", "validate_corpus_dataset"], [27, 4, 1, "", "validate_qa_dataset"], [27, 4, 1, "", "validate_qa_from_corpus_dataset"]], "autorag.utils.util": [[27, 4, 1, "", "convert_datetime_string"], [27, 4, 1, "", "convert_env_in_dict"], [27, 4, 1, "", "convert_inputs_to_list"], [27, 4, 1, "", "convert_string_to_tuple_in_dict"], [27, 4, 1, "", "dict_to_markdown"], [27, 4, 1, "", "dict_to_markdown_table"], [27, 4, 1, "", "embedding_query_content"], [27, 4, 1, "", "explode"], [27, 4, 1, "", "fetch_contents"], [27, 4, 1, "", "fetch_one_content"], [27, 4, 1, "", "filter_dict_keys"], [27, 4, 1, "", "find_key_values"], [27, 4, 1, "", "find_node_summary_files"], [27, 4, 1, "", "find_trial_dir"], [27, 4, 1, "", "flatten_apply"], [27, 4, 1, "", "get_best_row"], [27, 4, 1, "", "get_event_loop"], [27, 4, 1, "", "load_summary_file"], [27, 4, 1, "", "make_batch"], [27, 4, 1, "", "make_combinations"], [27, 4, 1, "", "normalize_string"], [27, 4, 1, "", "normalize_unicode"], [27, 4, 1, "", "openai_truncate_by_token"], [27, 4, 1, "", "pop_params"], [27, 4, 1, "", "process_batch"], [27, 4, 1, "", "reconstruct_list"], [27, 4, 1, "", "replace_value_in_dict"], [27, 4, 1, "", "result_to_dataframe"], [27, 4, 1, "", "save_parquet_safe"], [27, 4, 1, "", "select_top_k"], [27, 4, 1, "", "sort_by_scores"], [27, 4, 1, "", "split_dataframe"], [27, 4, 1, "", "to_list"]], "autorag.validator": [[0, 1, 1, "", "Validator"]], "autorag.validator.Validator": [[0, 3, 1, "", "validate"]], "autorag.web": [[0, 4, 1, "", "chat_box"], [0, 4, 1, "", "get_runner"], [0, 4, 1, "", "set_initial_state"], [0, 4, 1, "", "set_page_config"], [0, 4, 1, "", "set_page_header"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:property"}, "terms": {"": [0, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 33, 36, 49, 51, 52, 54, 56, 57, 58, 64, 66, 68, 70, 71, 72, 85, 86, 87, 88, 89, 90, 91, 92, 97, 101, 102, 103, 106], "0": [0, 6, 15, 21, 22, 25, 29, 34, 35, 36, 40, 47, 48, 49, 54, 56, 57, 58, 59, 67, 68, 70, 71, 72, 73, 74, 81, 93, 95, 97, 100, 101, 102, 105, 106], "002": 54, "01": 69, "0125": 15, "04": 58, "06": [9, 10, 11, 45], "07": [9, 10, 45], "08": [9, 10, 11, 45], "09": 58, "1": [0, 6, 15, 22, 25, 27, 33, 36, 56, 57, 59, 62, 67, 92, 95, 97, 100, 101], "10": [0, 54, 56, 64, 80, 88, 93, 96, 97, 99, 102, 103], "100": [22, 105], "1000": 88, "100k": 79, "101": 95, "1024": [29, 31, 46], "10k": [21, 79], "10x": 59, "11": 105, "1106": [56, 57, 88, 91, 92, 101, 105], "125m": 59, "128": [15, 25, 27, 36, 44, 46], "13a": 15, "13b": 79, "16": [17, 57, 59, 65, 66, 77, 81], "16k": [56, 57, 58, 64, 65, 66, 81, 88, 91, 92, 101, 105], "17": 53, "18": [9, 10, 45], "1d": 33, "2": [6, 15, 19, 21, 24, 33, 36, 54, 55, 59, 63, 82, 92, 93, 94, 95, 102], "2015": 69, "2022": 45, "2024": [9, 10, 11, 45, 58], "2048": 0, "24": [29, 31, 46], "25": 35, "2d": [25, 33], "3": [6, 15, 23, 25, 32, 34, 35, 36, 39, 54, 56, 57, 64, 65, 66, 81, 88, 91, 92, 95, 99, 101, 103], "300": [19, 63], "32": [6, 8, 36, 75, 76, 82], "3b": [21, 79], "4": [6, 15, 35, 51, 56, 58, 81, 92, 95, 96, 97], "4000": 56, "42": [0, 6, 8], "4o": [9, 10, 11, 45], "5": [0, 6, 15, 21, 23, 35, 36, 46, 51, 54, 56, 57, 58, 61, 64, 65, 66, 80, 81, 88, 91, 92, 95, 99, 101, 102], "50": [24, 35, 36], "51": 97, "512": [29, 31, 36, 46, 58, 59, 82], "514": 49, "6": [36, 51, 56, 68, 70, 92, 95], "60": [25, 96], "64": [27, 36, 56, 70, 71, 73, 74, 75, 76, 78, 79, 82, 83, 90, 93, 98], "666": 51, "7": 95, "7039180890341347": 50, "72": 48, "7680": [0, 48], "777": 51, "797979": 51, "7b": [19, 54, 59, 63, 94], "8": [2, 7, 15, 51, 77, 81, 95], "80": [96, 97], "8000": [0, 47, 106], "8191": 25, "822": 51, "85": [67, 71, 72], "9": [15, 36], "A": [0, 2, 7, 9, 10, 11, 15, 21, 22, 25, 27, 29, 33, 36, 40, 45, 49, 56, 84, 87, 93, 101, 103, 104], "And": [0, 17, 25, 27, 32, 36, 44, 47, 52, 53, 58, 59, 88, 94, 99, 101, 103, 106], "As": [6, 23, 33, 47, 48, 50, 54, 61, 98, 99], "At": [32, 43, 44, 54, 73, 77, 99, 101, 103], "But": [33, 36, 43, 44, 52, 99, 101, 103], "By": [49, 57, 64, 65, 66, 93, 95, 104], "For": [25, 29, 30, 33, 36, 40, 45, 46, 50, 53, 54, 55, 58, 59, 101, 102, 103, 105, 106], "If": [0, 5, 6, 8, 15, 23, 24, 25, 27, 29, 30, 31, 33, 35, 37, 38, 39, 40, 41, 43, 45, 46, 48, 50, 52, 53, 59, 68, 69, 71, 72, 73, 74, 75, 76, 77, 82, 94, 95, 98, 99, 100, 101, 103, 104, 105, 106], "In": [19, 20, 21, 24, 29, 32, 33, 40, 44, 45, 50, 52, 58, 67, 99, 100, 101, 103, 105], "It": [0, 6, 8, 9, 10, 15, 17, 19, 20, 21, 23, 25, 26, 27, 29, 32, 33, 36, 37, 40, 42, 43, 44, 45, 46, 47, 49, 50, 51, 54, 56, 57, 58, 62, 66, 67, 69, 73, 77, 80, 83, 84, 85, 87, 88, 90, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106], "Its": [25, 27, 33, 59, 61, 64, 67, 80, 93], "No": 101, "Not": [8, 18, 84, 93], "Of": 52, "On": [33, 67], "Or": [33, 53, 73, 77, 106], "That": [52, 103], "The": [0, 2, 6, 7, 8, 9, 10, 11, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 36, 38, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106], "Then": [33, 45, 46, 47, 53, 54, 101], "There": [25, 33, 36, 52, 55, 58, 67, 84, 93, 95, 100, 103, 106], "These": [56, 57, 64, 65, 66, 80, 90, 91, 92, 97, 104, 106], "To": [25, 32, 33, 36, 41, 44, 53, 54, 58, 101, 102, 103, 106], "Will": 25, "With": [23, 46, 58, 103, 106], "__fields__": [0, 9, 10, 11, 21], "_metadata": 2, "abil": 83, "abl": 93, "about": [0, 9, 10, 11, 21, 29, 30, 31, 33, 35, 38, 39, 40, 45, 46, 57, 59, 65, 66, 70, 71, 86, 87, 88, 89, 94, 98, 99, 100, 101, 104, 106], "abov": [50, 54, 99, 100, 103, 106], "absolut": [6, 50], "abstract": 26, "abstracteventloop": 27, "accept": [47, 50], "access": [0, 35, 48, 80], "accomplish": 41, "accord": [29, 40], "accumul": 64, "accur": [32, 36, 100], "accuraci": [15, 85, 93, 97], "achiev": [44, 49, 101, 104], "across": [65, 88, 93, 97, 102, 104], "act": 104, "action": [99, 103], "actual": [27, 33, 50, 96], "ad": [10, 22, 36, 104, 105], "ada": 54, "add": [2, 6, 15, 36, 41, 56, 61, 62, 70, 71, 98, 101, 103, 106], "add_essential_metadata": [1, 13], "add_essential_metadata_llama_text_nod": [1, 13], "add_file_nam": [1, 2, 29, 30, 31, 46], "add_gen_gt": [8, 10], "addit": [6, 7, 15, 19, 53, 54, 57, 61, 62, 63, 65, 66, 88, 90, 91, 92, 105, 106], "addition": 87, "additional_special_token": 22, "address": [64, 104], "adjust": [36, 105], "advanc": [35, 103], "advanced rag": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 103], "advantag": 58, "advent": [36, 46], "aespa": [33, 45], "aespa1": 33, "aespa2": 33, "aespa3": 33, "affect": [18, 33, 101, 104], "afraid": 36, "after": [5, 27, 29, 32, 36, 43, 44, 45, 46, 48, 52, 53, 62, 80, 99, 101, 103, 106], "afterward": 22, "ag": 92, "again": [46, 103, 106], "ai": [7, 77], "aim": [36, 95, 97, 104], "album": 45, "algorithm": [94, 95, 96], "all": [0, 6, 15, 22, 24, 27, 29, 33, 36, 40, 41, 46, 49, 50, 51, 52, 54, 56, 58, 59, 60, 67, 69, 71, 72, 88, 92, 93, 97, 99, 100, 102, 103, 104, 105, 106], "alloc": 92, "allow": [56, 57, 61, 62, 65, 66, 79, 90, 91, 92, 95, 104], "alon": [88, 93, 103], "along": 49, "alpha": [15, 101], "alreadi": [0, 6, 22, 25, 46, 101], "already_has_special_token": 22, "also": [26, 29, 33, 35, 36, 49, 50, 52, 58, 59, 73, 95, 103], "altern": 53, "although": 22, "alwai": [30, 31, 36, 38, 48, 101], "among": [0, 17, 19, 20, 21, 23, 24, 25, 96, 101], "amount": 64, "an": [0, 6, 15, 25, 29, 32, 33, 36, 38, 40, 48, 49, 50, 52, 53, 54, 64, 80, 89, 90, 91, 98, 99, 100, 101, 103, 105], "analysi": 64, "ani": [0, 2, 6, 8, 14, 22, 26, 27, 33, 50, 52, 53, 59, 61, 63, 64, 67, 80, 88, 93, 97, 103, 104, 105], "annot": [0, 9, 10, 11, 21], "anoth": [45, 81, 104, 106], "answer": [0, 6, 8, 9, 10, 11, 24, 32, 33, 36, 45, 47, 49, 50, 51, 58, 63, 67, 83, 86, 87, 88, 89, 103], "answer_creation_func": [6, 36], "answer_gt": 51, "anywher": 48, "ap": [15, 50], "api": [0, 7, 25, 58, 73, 77, 98, 99], "api_bas": [54, 105], "api_kei": [21, 54, 58, 73, 77, 99, 105], "app": 0, "appear": 105, "appli": [27, 56, 80, 88, 93, 97, 104], "applic": [47, 64, 84, 93], "approach": [64, 95], "appropri": 22, "apt": 105, "ar": [24, 25, 27, 29, 32, 33, 36, 40, 41, 43, 44, 45, 46, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 64, 65, 66, 67, 68, 69, 70, 71, 72, 84, 88, 90, 91, 92, 93, 97, 99, 100, 101, 102, 103, 104, 105, 106], "arbitrari": [56, 61, 64, 67, 80, 88, 93], "arbitrary_types_allow": [0, 21], "arg": [0, 6, 7, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "argument": [0, 6, 7, 15, 19, 27, 57, 65, 66, 90, 91, 92], "aris": 87, "arrai": 21, "arrang": 104, "articl": 27, "asap": 103, "ask": [33, 45, 49, 52, 103], "aspect": 104, "assess": [49, 80], "assign": 15, "associ": [27, 64], "ast": 99, "async": [0, 2, 6, 7, 9, 10, 11, 15, 17, 21, 25, 27], "async_g_ev": [14, 15], "async_postprocess_nod": [16, 21], "async_qa_gen_llama_index": [4, 6], "async_run_llm": [16, 21], "asynccli": 21, "asynchron": [6, 27], "asyncio": 27, "asyncopenai": [9, 10, 11, 42, 43, 45, 88], "asyncrankgptrerank": [16, 21], "atom": 92, "attempt": 100, "attention_mask": 22, "augment": [18, 104], "augmented_cont": 18, "augmented_id": 18, "augmented_scor": 18, "auto": [6, 53, 95], "auto rag": 52, "autom": 91, "automat": [26, 27, 36, 52, 56, 61, 64, 67, 80, 88, 93, 98, 101, 106], "automl": 52, "autorag": [29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 47, 49, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105], "autorag config": 99, "autorag doc": 52, "autorag fold": 100, "autorag instal": 53, "autorag multi gpu": 59, "autorag system": 104, "autorag tutori": 106, "autorag yaml": 99, "autorag_metr": [14, 15], "autorag_metric_loop": [14, 15], "autotoken": 88, "avail": [36, 89, 105], "averag": [0, 15, 51, 56, 88, 93, 97], "avoid": 0, "avoid_empty_result": [0, 28], "awai": 106, "await": 8, "b": [15, 22, 101], "baai": [21, 54, 75, 76], "back": 15, "backbon": 49, "backward": 62, "bad": [43, 44, 103], "badminton": 92, "band": 45, "base": [0, 1, 4, 8, 9, 11, 15, 16, 22, 28, 29, 36, 49, 54, 57, 63, 65, 66, 72, 75, 77, 78, 79, 80, 81, 83, 85, 86, 89, 95, 96, 97, 102, 103, 104], "basechatmodel": 6, "baseembed": [15, 25], "basegener": [16, 17], "basellm": [9, 10, 11], "basemodel": [0, 9, 10, 11], "basemodul": [0, 17, 18, 19, 20, 21, 23, 24, 25, 26], "basepassageaugment": [16, 18], "basepassagecompressor": [16, 19], "basepassagefilt": [16, 20], "basepassagererank": [16, 21, 22], "basepromptmak": [16, 23], "baseprompttempl": 21, "basequeryexpans": [16, 24], "baseretriev": [16, 25], "basi": [40, 51, 104], "basic": [6, 10, 44], "batch": [0, 2, 6, 7, 15, 17, 19, 21, 27, 36, 56, 57, 58, 65, 66, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 98, 105], "batch_appli": [1, 8, 42, 44, 45, 46], "batch_filt": [1, 8, 9, 43], "batch_siz": [8, 15, 21, 22, 25, 27], "becaus": [23, 25, 29, 32, 33, 40, 41, 43, 44, 45, 59, 61, 64, 67, 80, 85, 93, 98, 103, 105, 106], "becom": [36, 46, 99], "been": [102, 106], "befor": [25, 29, 45, 46, 54, 62, 64, 99, 103, 105, 106], "behavior": [33, 57, 65, 66, 85, 90, 91, 92, 104], "being": [57, 65, 66], "belong": 100, "below": [0, 8, 29, 42, 43, 44, 46, 48, 50, 53, 56, 68, 69, 70, 71, 72, 103, 105, 106], "benz": 92, "bert_scor": [14, 15, 56], "best": [0, 17, 19, 20, 21, 23, 24, 25, 27, 46, 52, 87, 95, 100, 102, 103, 106], "best_": 100, "best_0": 100, "best_column_nam": 27, "beta": [15, 32, 55], "better": [44, 61, 64, 67, 68, 72, 80, 93, 101, 106], "between": [15, 41, 49, 50, 56, 61, 94, 95, 102], "bfloat16": 85, "bge": [21, 54, 75, 76], "bigram": 15, "bilingu": 49, "bird": 92, "bleu": [14, 15, 56, 88, 99, 102, 103, 105], "blob": 15, "blue": 103, "bm": 54, "bm25": [0, 16, 24, 93, 97, 99, 100, 103], "bm25_api": 25, "bm25_corpu": 25, "bm25_ingest": [16, 25], "bm25_path": 25, "bm25_pure": [16, 25], "bm25_token": [25, 94], "bm25okapi": [25, 94], "bodi": [0, 47], "bool": [0, 5, 6, 8, 9, 15, 18, 21, 22, 26, 27], "boolean": [6, 85], "boost": 58, "bos_token": 22, "both": [50, 62, 105], "bottom": 66, "bowl": 45, "branch": 103, "break": [41, 51], "brew": 105, "brief": 45, "broader": 104, "browser": 0, "bshtml": 38, "bug": 32, "bui": 51, "build": [22, 33, 46, 100, 101, 103], "build_inputs_with_special_token": [21, 22], "bulb": 45, "c": 105, "cach": 6, "cache_batch": [6, 36], "calcul": [15, 50, 61, 64, 70, 71, 85, 95, 96, 102], "calculate_cosine_similar": [14, 15], "call": [0, 22, 54, 57, 58, 65, 66, 85, 94, 95], "callabl": [0, 1, 2, 6, 7, 8, 13, 25, 26, 27, 29], "callback_manag": [0, 21], "callbackmanag": [0, 21], "can": [0, 5, 6, 7, 8, 9, 19, 20, 21, 23, 25, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 73, 75, 76, 77, 78, 80, 81, 84, 85, 88, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 104, 105, 106], "cannot": [88, 93], "capit": 45, "care": 22, "case": [24, 33, 36, 46, 50, 52, 101, 103, 105], "cast": [17, 18, 19, 20, 21, 23, 24, 25, 26], "cast_corpus_dataset": [0, 27], "cast_embedding_model": [0, 14], "cast_metr": [0, 14], "cast_qa_dataset": [0, 27], "cast_queri": [16, 25], "cast_to_run": [0, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26], "castorini": [21, 79], "caus": [73, 77, 101, 105, 106], "cc": [25, 97], "cd": 53, "certain": 27, "cg": 50, "chain": [49, 101], "chang": [27, 36, 44, 54, 73, 77, 94, 103, 104, 105], "channel": [52, 105, 106], "charact": 40, "chat": [6, 58, 105], "chat_box": [0, 28], "chat_prompt": 19, "chatinterfac": 0, "chatmessag": [11, 21], "chatmodel": 35, "chatopenai": 35, "chatrespons": 21, "check": [0, 15, 26, 32, 33, 44, 46, 52, 53, 54, 56, 59, 60, 75, 76, 94, 99, 100, 103, 105, 106], "check_expanded_queri": [16, 24], "child": 92, "choic": [94, 101], "choos": [15, 24, 33, 81, 94, 98, 101, 102], "chroma": [25, 100], "chromadb": [6, 25, 36, 98], "chunk": [0, 1, 5, 8, 25, 32, 33, 36, 44, 65, 89, 103], "chunk_config": 29, "chunk_method": [29, 31, 44, 46], "chunk_modul": [30, 31], "chunk_overlap": [29, 31, 36, 44, 46], "chunk_project_dir": 46, "chunk_siz": [27, 29, 31, 36, 44, 46], "chunk_text": 2, "chunked_cont": [2, 29], "chunked_str": 29, "chunker": [2, 28, 40, 46], "chunker_nod": [1, 2], "circl": 103, "ciudad": 45, "cl": 27, "clarifi": 36, "class": [0, 8, 9, 10, 11, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 33, 35, 54, 81, 83, 98], "classif": [22, 44], "classifi": [43, 50], "classmethod": [0, 25, 26], "classvar": [0, 9, 10, 11, 21], "clear": 42, "cli": 28, "client": [9, 10, 11, 25, 36, 42, 43, 45], "clone": 53, "close": 85, "cloud": 7, "clova": [0, 1, 40, 41], "co": 54, "code": [6, 8, 10, 15, 29, 30, 31, 37, 38, 46, 53, 54, 99, 106], "coher": [0, 15, 16, 56, 73, 77], "cohere_api_kei": 73, "cohere_cli": 21, "cohere_rerank": 80, "cohere_rerank_pur": [16, 21], "coherererank": [16, 21], "cointegr": 54, "colber": 74, "colbert": [0, 16, 77, 80], "colbert_rerank": 74, "colbertrerank": [16, 21], "colbertv2": [21, 74], "collect": [6, 25, 27, 33, 36, 99, 103, 104], "collection_nam": [25, 100], "column": [0, 6, 8, 17, 18, 19, 20, 21, 23, 24, 25, 27, 33, 36, 45, 47, 106], "column_nam": 27, "com": [6, 15, 52, 53, 103], "combin": [24, 25, 26, 27, 41, 88, 95, 96, 99, 101, 104], "come": [45, 50, 52, 90, 91, 92, 101, 103], "comedi": 92, "command": [48, 105], "commit": 105, "common": [15, 25, 53, 92, 102, 104, 105, 106], "compar": [51, 56, 102], "comparison": 51, "compat": [8, 59], "compatibilti": 59, "complet": [29, 40, 58], "complex": [37, 103], "compon": 104, "compress": [19, 51, 63, 64, 67, 103], "compressor": [19, 51, 63, 64, 65, 66], "comput": [0, 9, 10, 11, 15, 16, 21, 22, 64], "computedfieldinfo": [0, 9, 10, 11, 21], "concaten": 22, "concept": 49, "concept_completion_query_gen": [8, 11, 45], "concis": [10, 44], "conclud": 85, "conclus": 87, "condit": [33, 35], "config": [0, 9, 10, 11, 21, 22, 54, 102, 103, 105], "config_dict": 0, "config_path": [47, 106], "configdict": [0, 9, 10, 11, 21], "configur": [0, 9, 10, 11, 21, 52, 56, 57, 64, 65, 66, 80, 85, 88, 93, 97, 101, 104, 106], "conflict": 49, "conform": [0, 9, 10, 11, 21], "confus": 67, "connect": [49, 98], "consid": [6, 50, 59, 93], "consist": [15, 56], "constraint": 42, "consum": 52, "contain": [2, 6, 7, 8, 15, 17, 19, 20, 21, 23, 25, 26, 27, 33, 36, 40, 41, 50, 86, 87, 89, 92, 100, 101, 104, 105, 106], "content": [28, 29, 36, 38, 47, 64, 68, 69, 70, 71, 72, 80, 88, 97, 98], "content_embed": 21, "content_s": [6, 36], "contents_list": [22, 27], "context": [42, 49, 50, 63, 85, 88, 104], "contextu": 49, "contradict": 49, "contributor": 53, "control": [15, 59], "conveni": [36, 48], "convert": [0, 26, 27, 36, 37, 39, 99], "convert_datetime_str": [0, 27], "convert_env_in_dict": [0, 27], "convert_inputs_to_list": [0, 27], "convert_string_to_tuple_in_dict": [0, 27], "convex": [25, 95], "cool": 103, "core": [31, 36, 49, 54], "coroutin": 27, "corpu": [1, 4, 6, 8, 25, 32, 43, 44, 45, 49, 55, 61, 69, 84, 89, 97, 100, 106], "corpus_data": [6, 25, 27], "corpus_data_path": [0, 106], "corpus_data_row": 6, "corpus_df": [6, 8, 13, 18, 27, 35, 36], "corpus_df_to_langchain_docu": [1, 13], "corpus_path": 25, "corpus_save_path": 8, "corpus_test": 106, "correct": 50, "correl": 49, "correspond": [0, 9, 10, 11, 21, 26], "cosin": [15, 49, 61], "cost": [41, 64, 106], "cot": 49, "could": [17, 19, 20, 21, 23, 25], "couldn": 48, "count": [15, 63, 94], "cours": 52, "cover": [29, 32, 36, 40, 44, 45, 46], "cpu": 15, "creat": [0, 5, 6, 7, 8, 11, 22, 26, 27, 29, 32, 33, 34, 37, 40, 44, 46, 48, 52, 86, 89, 95, 100, 103], "create_token_type_ids_from_sequ": [21, 22], "creation": [6, 8, 45, 52, 106], "criterion": 104, "critic": 6, "critic_llm": [6, 35], "cross": [21, 82], "crucial": [29, 32, 33, 40, 44, 64, 80, 87, 104], "csv": [29, 40, 101, 106], "cucumb": 92, "cuda": [74, 75, 76, 82], "cue": 85, "cumul": 59, "curl": 47, "current": [0, 27, 29, 40, 51, 104, 106], "custom": [48, 57, 65, 66, 70, 71, 81, 85, 90, 91, 92, 98, 102, 104, 105], "cutoff": 67, "cycl": 103, "czech": 29, "d": [6, 24, 27, 33, 47], "dag": 103, "dai": 103, "danish": 29, "dashboard": 28, "data": [0, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 40, 42, 43, 45, 47, 49, 52, 56, 64, 80, 87, 93, 98, 104, 106], "data_path": 7, "data_path_glob": [0, 7], "data_path_list": 7, "databas": 98, "dataformat": 29, "datafram": [0, 2, 5, 6, 8, 10, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "dataset": [6, 8, 9, 27, 29, 32, 36, 43, 45, 50, 52, 95, 100, 105], "date": [45, 69], "datetim": [33, 40, 69, 84], "db": [6, 103], "db_path": 25, "dbsf": [25, 95, 97], "dcg": 50, "dd": 69, "de": 45, "deal": 64, "decid": [59, 103, 104], "decis": 104, "decompos": [24, 93], "decomposit": 92, "decor": [0, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27], "decreas": [58, 74, 75, 76, 82], "def": 29, "default": [0, 2, 5, 6, 7, 10, 15, 19, 21, 22, 23, 24, 25, 27, 29, 33, 36, 47, 54, 57, 58, 62, 63, 65, 66, 68, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 85, 88, 90, 91, 94, 95, 96, 99, 102, 104], "default_config": 106, "default_factori": [0, 21], "defaulttoken": 15, "defin": [0, 9, 10, 11, 21, 22, 61, 79, 80, 97, 98, 102], "delet": [27, 67], "deliv": 103, "dens": [25, 90, 94, 98], "deparallel": [21, 22], "depend": [29, 53, 94, 100, 106], "deploi": [28, 47, 48, 52], "deploy": [52, 95], "deportiva": 45, "deprec": [25, 32, 34], "descript": [0, 21, 44, 56, 61, 80, 97], "design": [6, 36, 49, 56, 83, 87, 95, 96], "detail": [37, 45, 46, 49, 56, 59, 78, 81, 88, 89, 93, 104, 106], "detect": 95, "determin": [56, 100, 102], "develop": [32, 59, 101, 104], "devic": [21, 22], "device_map": 22, "df": [27, 43, 44, 46, 105], "diagram": [101, 103], "dict": [0, 2, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 41], "dict_": 27, "dict_column": 27, "dict_to_markdown": [0, 27], "dict_to_markdown_t": [0, 27], "dictionari": [0, 6, 9, 10, 11, 14, 21, 25, 27, 29, 33, 35, 36, 56, 79], "did": 0, "didn": 35, "differ": [6, 27, 29, 33, 36, 44, 46, 49, 54, 56, 79, 91, 93, 94, 96, 100, 104], "difficulti": 105, "dimens": [24, 27], "direct": [84, 93], "directli": [8, 35, 45, 49, 50, 64, 73, 77, 99, 101, 105], "directori": [0, 5, 6, 17, 19, 20, 21, 23, 24, 25, 29, 38, 40, 46, 48, 106], "directoryload": 36, "discord": [52, 103, 105, 106], "distinct": 64, "distinguish": [41, 95], "distribut": [6, 35, 36], "distribute_list_by_ratio": [4, 6], "divid": [37, 50, 94], "dl": 79, "do": [5, 6, 8, 24, 33, 41, 50, 51, 52, 53, 99, 100, 103, 106], "doc": [6, 33, 34, 50, 53, 54, 59, 102], "doc_id": [2, 25, 27, 29], "document": [2, 5, 6, 7, 8, 13, 21, 25, 29, 32, 33, 37, 38, 39, 40, 41, 45, 53, 56, 64, 80, 88, 89, 93, 94, 97, 99, 101, 102, 103, 104, 106], "document_load": [7, 36, 38], "doe": [0, 22, 25, 42, 49, 56, 57, 58, 59, 64, 67, 80, 88, 99, 101], "doesn": [6, 32, 50, 92, 103, 105], "domain": 94, "don": [9, 23, 27, 33, 36, 40, 44, 50, 52, 88, 95, 103, 105, 106], "done": 106, "dontknow": [1, 8, 43, 44, 46], "dontknow_filter_llama_index": [8, 9, 43], "dontknow_filter_openai": [8, 9, 43], "dontknow_filter_rule_bas": [8, 9, 43, 44, 46], "dotenv": [53, 105], "doubl": 33, "down": 50, "download": [33, 106], "drive": 92, "drop": [9, 43, 44, 46, 87, 105], "dropout": 22, "duplic": [26, 33, 99], "dure": [93, 105], "dutch": 29, "dynam": 104, "dynamically_find_funct": [0, 28], "e": [53, 57, 65, 66], "each": [0, 6, 8, 24, 25, 26, 27, 33, 35, 36, 49, 70, 71, 92, 95, 96, 99, 100, 101, 102, 103, 104], "earli": 33, "easier": 99, "easili": [29, 40, 45, 98, 103, 106], "echo": 105, "edit": 53, "edit_summary_df_param": [16, 25], "editor": 99, "effect": [11, 41, 56, 80, 96, 97, 104, 106], "effici": 64, "effort": 104, "either": 50, "elem": 27, "element": [25, 26, 27], "emb": [25, 98, 103], "embed": [0, 6, 15, 22, 25, 36, 49, 52, 53, 56, 61, 70, 71, 80, 94, 98, 100, 106], "embed_batch_s": 0, "embed_dim": [0, 28], "embedding model": 54, "embedding_batch": [25, 98], "embedding_model": [6, 15, 18, 24, 25, 27, 35, 36, 54, 56, 61, 70, 71, 93, 97, 98, 99], "embedding_query_cont": [0, 27], "emploi": 92, "empti": [0, 25, 33, 99], "en": [9, 10, 11, 15, 21, 29, 39, 43, 44, 45, 46, 54, 56, 77, 79], "encod": [17, 21, 82], "encount": 105, "enct5forsequenceclassif": [21, 22], "enct5token": [21, 22], "end": [27, 85], "end_idx": 2, "endpoint": 106, "engin": 105, "enginearg": 59, "english": [2, 29, 31, 46, 73, 94], "enhanc": [80, 85, 102, 104], "enough": [33, 67], "ensur": [56, 64, 80, 88, 93, 97], "entri": 64, "env": [53, 58], "environ": [7, 27, 38, 48, 53, 59, 73, 77, 105, 106], "eos_token": 22, "equal": [6, 50], "error": [10, 58, 73, 77, 81, 92, 98], "essenc": 45, "essenti": [68, 69, 70, 71, 72, 88, 95, 96, 101, 104, 105], "estonian": 29, "etc": [33, 36, 99], "eval": 15, "evalu": [17, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 34, 40, 49, 52, 56, 64, 80, 88, 93, 95, 97, 99, 100, 102, 104], "evaluate_gener": [0, 14], "evaluate_generator_nod": [16, 17], "evaluate_generator_result": [16, 23], "evaluate_one_prompt_maker_nod": [16, 23], "evaluate_one_query_expansion_nod": [16, 24], "evaluate_passage_compressor_nod": [16, 19], "evaluate_retriev": [0, 14], "evaluate_retrieval_cont": [0, 14], "evaluate_retrieval_nod": [16, 25], "even": [0, 87, 95], "evenly_distribute_passag": [16, 25], "event": [27, 45], "ever": 103, "everi": [17, 22, 58, 104], "evolut": [6, 35], "evolv": 45, "exact": 49, "exactli": 50, "exampl": [6, 33, 36, 40, 44, 46, 49, 54, 55, 99, 101, 103, 105, 106], "example_node_line_1": 102, "example_node_line_2": 102, "exc_traceback": 0, "exc_typ": 0, "exc_valu": 0, "exce": [56, 58, 64, 80, 88, 92], "exceed": [88, 93, 97], "except": 51, "exclud": [0, 21], "exclus": 98, "execut": [0, 25, 27, 46, 54, 93, 106], "exist": [5, 6, 25, 26, 33, 100], "exist_gen_gt": [6, 36], "existing_qa": 36, "existing_qa_df": 36, "existing_query_df": 6, "exp": 15, "exp_norm": [16, 21], "expand": [93, 101], "expanded_queri": 24, "expanded_query_list": 24, "expans": [23, 24, 25, 33, 64, 90, 92, 103], "expect": [33, 85], "expens": [41, 43], "experi": [52, 100, 103, 105, 106], "experiment": 56, "expir": 48, "explain": [100, 102, 103], "explan": 45, "explicit": 49, "explod": [0, 27], "explode_valu": 27, "explor": [95, 96], "export": [53, 73, 77, 105], "extens": [5, 6, 40, 99], "extent": 49, "extra": [7, 27, 94], "extra_id": 22, "extract": [0, 26, 38, 47, 69, 84, 94, 95], "extract_best_config": [0, 28, 106], "extract_evid": [0, 1], "extract_node_line_nam": [0, 28], "extract_node_strategi": [0, 28], "extract_valu": [0, 26], "extract_values_from_nod": [0, 26], "extract_values_from_nodes_strategi": [0, 26], "f": 88, "f1": [15, 64], "face": 52, "facebook": 59, "facilit": 56, "fact": 103, "factoid": 44, "factoid_query_gen": [8, 11, 44, 45, 46, 55], "factori": 0, "factual": 45, "fall": 15, "fallback": 15, "fals": [0, 5, 6, 9, 15, 21, 22, 27, 68, 72, 75, 76, 81, 85], "familiar": 103, "fashion": 66, "fast": [43, 59, 73, 77], "faster": [59, 64], "fate": 103, "favorit": 99, "featur": [2, 32, 33, 37, 49, 56, 103, 106], "fee": 98, "feedback": [101, 103], "feel": [52, 103, 106], "fetch": [61, 62, 97], "fetch_cont": [0, 27], "fetch_one_cont": [0, 27], "few": [92, 103, 106], "field": [0, 9, 10, 11, 15, 21, 50, 69, 84], "fieldinfo": [0, 9, 10, 11, 21], "fields_to_check": [15, 26], "file": [0, 5, 6, 7, 8, 13, 15, 27, 33, 36, 46, 47, 48, 49, 52, 53, 54, 59, 73, 77, 81, 95, 100, 101, 102, 103, 104, 105], "file_dir": [5, 6], "file_nam": [2, 29], "file_name_languag": 2, "file_path": 13, "filenam": [5, 6, 25], "filepath": [5, 6, 27, 46], "filesystem": 13, "fill": [27, 49], "filter": [0, 1, 8, 20, 46, 58, 61, 68, 70, 71, 72], "filter_by_threshold": [0, 28], "filter_dict_kei": [0, 27], "filtered_qa": 43, "final": [0, 29, 40, 41, 63, 96, 101, 103], "find": [27, 30, 31, 36, 37, 38, 39, 45, 46, 49, 50, 52, 54, 63, 83, 88, 95, 96, 97, 100, 101, 104], "find_key_valu": [0, 27], "find_node_dir": [0, 28], "find_node_summary_fil": [0, 27], "find_trial_dir": [0, 27], "find_unique_elem": [16, 25], "fine": 89, "finnish": 29, "first": [0, 8, 15, 25, 27, 29, 36, 40, 44, 45, 46, 50, 51, 52, 53, 59, 73, 77, 80, 98, 99, 100, 101, 103], "fit": [49, 104], "five": 33, "fix": [49, 105], "fixed_min_valu": 25, "flag": 80, "flag_embed": [0, 16], "flag_embedding_llm": [0, 16], "flag_embedding_llm_rerank": 75, "flag_embedding_rerank": 76, "flag_embedding_run_model": [16, 21], "flagembed": [75, 76], "flagembeddingllm": 76, "flagembeddingllmrerank": [16, 21], "flagembeddingrerank": [16, 21], "flask": [0, 47, 52], "flat_list": 27, "flatmap": [1, 8], "flatten": 27, "flatten_appli": [0, 27], "flexibl": [79, 95, 104], "float": [15, 21, 25, 26, 59], "floor": 15, "flow": 49, "fluenci": [15, 56], "fn": 8, "focu": [64, 106], "focus": 104, "folder": [0, 47, 53, 103], "follow": [6, 22, 25, 29, 30, 31, 32, 33, 35, 36, 38, 40, 41, 46, 47, 48, 50, 54, 69, 85, 95, 100, 103, 105], "forget": 106, "form": [2, 6, 29, 32, 36, 37, 46, 49], "format": [22, 27, 29, 36, 37, 40, 50, 69, 85, 100], "former": 22, "forward": [21, 22, 62], "found": [36, 45, 49, 57, 65, 66, 70, 71, 78, 81, 98, 106], "four": 51, "fp16": [75, 76], "fragment": 15, "framework": [35, 49, 103], "franc": 45, "free": [52, 103, 106], "french": 29, "frequent": 54, "friendli": 48, "from": [0, 2, 6, 7, 8, 9, 10, 11, 13, 15, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 38, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 57, 58, 59, 61, 64, 69, 73, 77, 80, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 106], "from_datafram": [0, 26], "from_dict": [0, 26], "from_parquet": [0, 28, 29, 46], "from_trial_fold": [0, 28, 47, 48], "from_yaml": [0, 28, 47, 48, 106], "fstring": [0, 16, 86, 88, 89, 103], "full": [33, 59, 100, 104], "func": [0, 2, 6, 7, 17, 20, 27], "function": [0, 5, 6, 8, 9, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 36, 37, 40, 44, 45, 83, 104, 106], "fundament": 97, "further": [25, 50, 57, 65, 66, 90, 91, 92], "fuse": [25, 95], "fuse_per_queri": [16, 25], "fusion": [25, 96], "futur": [33, 58, 101, 103, 104], "g": [15, 57, 65, 66], "g_eval": [14, 15, 49, 56], "gamma": 15, "gcc": 105, "gemma": [21, 75], "gener": [0, 6, 8, 10, 16, 23, 27, 28, 32, 33, 34, 36, 43, 54, 57, 58, 59, 64, 85, 88, 90, 91, 92, 93, 101, 103, 104, 105], "generate_answ": [4, 6, 36], "generate_basic_answ": [4, 6], "generate_qa_llama_index": [4, 6, 36, 55], "generate_qa_llama_index_by_ratio": [4, 6, 36], "generate_qa_raga": [4, 6, 35], "generate_qa_row": [4, 6], "generate_row_funct": 6, "generate_simple_qa_dataset": [4, 6], "generate_with_langchain_doc": 6, "generated_log_prob": [0, 26], "generated_text": [0, 15, 26], "generation_gt": [0, 1, 6, 8, 9, 15, 26, 42, 43, 44, 46], "generator_class": 23, "generator_dict": 16, "generator_llm": [6, 35], "generator_model": 54, "generator_modul": [23, 88], "generator_module_typ": [90, 91, 92], "generator_nod": [16, 17], "generator_param": 23, "german": 29, "get": [0, 7, 13, 18, 27, 35, 36, 45, 46, 47, 49, 53, 57, 58, 67, 73, 77, 98, 99, 101, 103, 105, 106], "get_best_row": [0, 27], "get_bm25_pkl_nam": [16, 25], "get_bm25_scor": [16, 25], "get_colbert_embedding_batch": [16, 21], "get_colbert_scor": [16, 21], "get_default_llm": 21, "get_encod": [21, 22], "get_event_loop": [0, 27], "get_file_metadata": [1, 13], "get_hybrid_execution_tim": [16, 25], "get_id_scor": [16, 25], "get_ids_and_scor": [16, 25], "get_input_embed": [21, 22], "get_metric_valu": [0, 28], "get_multi_query_expans": [16, 24], "get_nodes_from_docu": 36, "get_or_create_collect": 36, "get_param_combin": [0, 1, 13, 26], "get_query_decompos": [16, 24], "get_result": [16, 17], "get_result_o1": [16, 17], "get_runn": [0, 28], "get_scores_by_id": [16, 25], "get_special_tokens_mask": [21, 22], "get_start_end_idx": [1, 13], "get_support_modul": [0, 28], "get_support_nod": [0, 28], "gg": [52, 103], "girl": [33, 92], "gist": 49, "git": 53, "github": [15, 33, 52, 53, 103, 105, 106], "give": [0, 50], "given": [0, 5, 6, 15, 25, 27, 36, 42, 43, 63, 79, 81, 83, 90, 91, 101], "glob": [36, 40], "glossari": 22, "go": [33, 50, 52, 94, 102, 106], "goal": [93, 101], "goe": [55, 103], "gone": 58, "good": [9, 33, 36, 43, 44, 46, 49, 103, 106], "got": 58, "gpt": [9, 10, 11, 15, 23, 35, 36, 45, 49, 56, 57, 58, 64, 65, 66, 81, 88, 91, 92, 101, 105], "gpt-3.5": 58, "gpt-4": 58, "gpt2": [56, 58, 88, 94], "gpu": 106, "gr": 0, "grain": 89, "gram": [15, 49], "great": [32, 36, 43, 52, 94, 101], "greek": 29, "ground": [6, 15, 33, 42, 49, 50, 56, 101], "ground_truth": 15, "group": [33, 45], "gt": [0, 15, 33, 42, 49, 50, 51, 101], "guarante": [67, 101], "guid": [32, 36, 46, 52, 56, 64, 80, 88, 93, 94, 97, 103, 104, 106], "guidanc": 6, "h": 47, "ha": [6, 8, 10, 11, 22, 33, 36, 43, 45, 46, 49, 51, 64, 102, 103, 106], "had": 106, "halftim": 45, "hallucin": [2, 29, 103], "hamlet": 92, "hand": [33, 67], "handi": 13, "handle_except": [0, 28], "happen": 103, "hard": [36, 52, 101, 103], "harmon": [49, 50, 51], "have": [0, 6, 8, 9, 25, 27, 29, 32, 33, 37, 39, 42, 44, 45, 46, 53, 54, 68, 69, 70, 71, 72, 74, 75, 76, 77, 82, 84, 92, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106], "head": 27, "head_mask": 22, "header": 47, "help": [64, 89, 95], "here": [6, 29, 30, 31, 32, 33, 35, 38, 39, 40, 46, 49, 52, 53, 54, 58, 59, 60, 63, 70, 71, 75, 76, 78, 94, 98, 99, 100, 101, 103, 105, 106], "hf": [19, 63], "hh": 69, "hidden": 22, "high": [15, 80], "higher": [49, 50, 59, 64, 77, 104], "highli": [46, 49, 94, 106], "hit": 50, "home": 45, "hood": 101, "hook": 22, "hop": [6, 8, 11, 36, 44, 92], "hope": 100, "hopefulli": 50, "host": [0, 47, 106], "hour": 48, "how": [6, 29, 32, 36, 40, 42, 44, 45, 46, 50, 57, 65, 66, 70, 71, 85, 92, 94, 98, 99, 100, 102, 103, 106], "howev": [36, 46, 50, 95, 101, 103], "html": [6, 31], "htmlnodepars": 31, "http": [0, 6, 7, 15, 47, 52, 53, 54, 103], "huggingfac": [15, 24, 33, 54, 59, 88, 106], "huggingface_all_mpnet_base_v2": 54, "huggingface_baai_bge_smal": 54, "huggingface_bge_m3": 54, "huggingface_cointegrated_rubert_tiny2": 54, "huggingface_evalu": [14, 15], "huggingfaceembed": 54, "huggingfacellm": [54, 57, 65, 66], "human": 49, "hybrid": [25, 40, 97, 99], "hybrid cc": 95, "hybrid rrf": 96, "hybrid_cc": [0, 16, 93, 95, 97], "hybrid_module_func": 25, "hybrid_module_param": 25, "hybrid_rrf": [0, 16, 93, 96, 97, 99], "hybridcc": [16, 25], "hybridretriev": [16, 25], "hybridrrf": [16, 25], "hyde": [0, 16, 54, 93], "hydrogen": 92, "hyperparamet": [25, 99], "hypothet": 90, "i": [0, 2, 5, 6, 7, 8, 9, 10, 11, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32, 33, 34, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 100, 104, 106], "id": [18, 21, 22, 25, 27, 29, 33, 44, 72, 97], "id_": 27, "id_column_nam": 27, "idcg": 50, "ideal": 50, "ident": 45, "identifi": [33, 80, 97], "idf": [49, 94], "idx_rang": 8, "ignor": [22, 25], "imag": [33, 100, 106], "imagin": 33, "imdb": 92, "immedi": 93, "impact": [50, 64, 88, 93, 98], "implement": [32, 103], "import": [29, 30, 31, 33, 35, 36, 38, 40, 42, 43, 44, 45, 46, 47, 48, 53, 54, 55, 67, 92, 94, 96, 103, 106], "importerror": 105, "imposs": 103, "improv": [15, 64, 80, 85, 93], "inc": [52, 53, 103], "includ": [6, 11, 17, 33, 49, 50, 54, 57, 65, 66, 88, 93, 95, 102, 104], "incorrect": [50, 69], "increas": [50, 77, 93, 104, 105], "increment": 11, "index": [0, 2, 5, 6, 9, 25, 27, 29, 43, 57, 58, 89, 105], "index_valu": 27, "indic": [15, 27, 50], "indici": 33, "individu": 104, "influenc": 50, "info": 53, "inform": [25, 29, 30, 31, 33, 38, 39, 40, 45, 49, 50, 54, 57, 65, 66, 69, 70, 71, 80, 84, 94, 95, 96, 97, 98, 100, 102, 103, 104, 106], "ingest": [6, 25, 98], "ini": 53, "initi": [0, 24, 44, 46, 54, 59, 80, 85, 105], "initial_corpu": [44, 46], "initial_corpus_df": 46, "initial_qa": [44, 46], "initial_qa_df": 46, "initial_raw": [44, 46], "initial_raw_df": 46, "input": [0, 6, 10, 11, 18, 22, 24, 25, 27, 33, 35, 36, 48, 57, 58, 64, 82, 86, 87, 89, 91, 95, 96, 101, 103], "input_id": 22, "input_list": 6, "input_metr": 25, "input_str": 21, "input_tensor": 21, "input_text": [21, 22], "inputs_emb": 22, "inquir": 45, "insid": [0, 105, 106], "inspir": [62, 68, 69, 70, 71, 72, 90], "instal": [52, 54, 94, 106], "instanc": [2, 7, 8, 9, 15, 19, 22, 25, 26, 27, 33, 45, 46, 54, 57], "instead": [22, 45, 55, 106], "instruct": [19, 33, 53, 54, 59, 63, 83, 85, 94], "int": [0, 2, 6, 7, 8, 13, 15, 17, 18, 19, 21, 22, 25, 27], "integ": 22, "integr": [54, 79, 104], "intend": 104, "interact": [0, 48], "interchang": 104, "interest": 103, "interfac": [0, 54], "intermedi": 21, "internet": 98, "interv": 0, "introduc": [49, 55, 102], "invent": 45, "involv": [80, 97], "ir": [21, 74], "irrelev": 67, "is_async": 6, "is_best": 27, "is_dont_know": [8, 9], "is_fields_notnon": [0, 26], "issu": [52, 56, 103, 105, 106], "italian": 29, "item": [15, 27, 50, 71, 72], "iter": [0, 8], "its": [0, 6, 10, 19, 23, 25, 26, 27, 33, 36, 48, 83, 88, 93, 98, 101, 102, 103], "itself": [54, 95, 101], "java_hom": 53, "jdk": 53, "jean": [33, 45], "jina": [0, 16, 77], "jina_rerank": 80, "jina_reranker_pur": [16, 21], "jinaai": 77, "jinaai_api_kei": 77, "jinarerank": [16, 21], "job": 101, "jq_schema": 38, "json": [0, 37, 39, 47, 106], "json_to_html_t": 37, "judgment": 49, "just": [0, 8, 10, 25, 33, 36, 42, 43, 58, 94, 103, 106], "k": [15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 33, 54, 61, 80, 97], "keep": [0, 27, 46, 58, 69, 71, 72, 99, 106], "kei": [0, 7, 14, 15, 26, 27, 29, 30, 31, 33, 36, 38, 54, 58, 73, 77, 98, 99, 105, 106], "key_column_nam": 27, "keyword": [6, 7, 19, 49, 54, 57, 65, 66, 90, 91, 92], "kf1_polici": 103, "kind": [33, 103, 105], "kiwi": [29, 46, 94], "kiwi_result": 29, "kiwipiepi": 29, "kkma": 94, "know": [9, 33, 44, 52, 88, 99, 100, 101, 104, 106], "knowledg": 33, "known": [36, 50], "ko": [9, 29, 43, 45, 53, 80], "ko-rerank": 78, "konlpi": [30, 53, 94], "korea": [52, 53, 103], "korean": [2, 29, 30, 54, 78], "korerank": [0, 16, 78], "koreranker_run_model": [16, 21], "kosimcs": 54, "kwarg": [0, 6, 7, 8, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 57, 65, 66, 90, 91, 92], "l": [21, 82], "label": [22, 50, 90], "lama_index": 36, "lambda": [0, 29, 43, 44, 46], "lang": [9, 10, 11, 15, 43, 44, 45, 46, 56], "langchain": [1, 2, 4, 6, 7, 29, 35, 36, 40, 91, 103], "langchain_chunk": [0, 1, 30], "langchain_chunk_pur": [1, 2], "langchain_commun": [36, 38], "langchain_docu": 5, "langchain_document_to_parquet": 36, "langchain_documents_to_parquet": [4, 5, 36, 55], "langchain_openai": 35, "langchain_pars": [0, 1, 38, 40, 41, 46], "langchain_parse_pur": [1, 7], "langchain_text_splitt": 36, "languag": [2, 6, 9, 10, 15, 29, 43, 45, 49, 53, 56, 57, 64, 65, 66, 73, 85, 94, 104], "laredo": 45, "larg": [21, 49, 54, 56, 57, 64, 65, 66, 73, 76, 77, 79, 89, 104], "last": [40, 47], "last_modified_datetim": [29, 33, 40, 69, 84], "lastli": [98, 99], "later": [50, 69, 106], "latest": [59, 69, 84], "latter": 22, "launch": [0, 48, 106], "lazyinit": [0, 28, 29, 54], "le": 0, "lead": 64, "learn": [35, 52, 70, 71, 98, 99, 101, 103, 106], "least": [6, 50, 71, 72, 101, 105], "legaci": [0, 1, 32, 35, 36, 55], "legal": 92, "length": [0, 19, 25, 27, 50, 51, 56, 58, 68, 70, 82, 88], "lengthen": 87, "less": [36, 50, 61, 64], "let": [50, 51, 101, 103, 106], "level": [27, 49, 61, 64, 80, 97, 104], "lexcial": 95, "lexic": [25, 95], "lexical_id": 25, "lexical_scor": 25, "lexical_summari": 25, "lexical_summary_df": 25, "lexical_theoretical_min_valu": [25, 95], "li": 83, "librari": [55, 59, 106], "licens": 92, "life": 33, "light": 45, "like": [0, 6, 24, 25, 27, 29, 33, 40, 42, 44, 46, 47, 50, 53, 57, 58, 64, 65, 66, 85, 88, 94, 95, 96, 99, 101, 103, 105, 106], "likelihood": 85, "limit": [58, 74, 75, 76, 77, 81, 82, 103, 104, 105], "line": [0, 17, 19, 20, 21, 23, 24, 25, 56, 61, 64, 67, 80, 88, 93], "linear": 103, "lingua": 64, "link": [0, 8, 48, 49], "linked_corpu": [1, 8], "linked_raw": [1, 8], "linux": 105, "list": [0, 1, 2, 5, 6, 7, 11, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 33, 35, 36, 50, 57, 65, 66, 75, 76, 83, 92, 95, 99], "list1": 25, "list2": 25, "liter": 50, "literal_ev": 99, "littl": [24, 36, 46, 103], "ll": [48, 50, 93, 105], "llama": [2, 5, 6, 9, 19, 29, 36, 40, 43, 57, 58, 63], "llama3": [43, 105], "llama_cloud_api_kei": 7, "llama_docu": 5, "llama_document_to_parquet": 36, "llama_documents_to_parquet": [4, 5], "llama_gen_queri": [1, 8, 44, 45, 46, 55], "llama_index": [1, 4, 31, 36, 42, 43, 44, 45, 46, 54, 56, 65, 66, 89, 105], "llama_index_chunk": [0, 1, 29, 31, 44, 46], "llama_index_chunk_pur": [1, 2], "llama_index_gen_gt": [1, 8, 42, 44, 46], "llama_index_generate_bas": [8, 11], "llama_index_llm": [0, 16, 23, 54, 56, 57, 58, 59, 81, 88, 90, 91, 92, 101, 103, 105], "llama_pars": [1, 7, 39, 40, 41], "llama_parse_pur": [1, 7], "llama_text_node_to_parquet": [4, 5, 36], "llamaindex": [7, 36, 45, 54, 57, 59, 62, 69, 70, 71, 81, 103], "llamaindexcompressor": [16, 19], "llamaindexllm": [16, 17], "llamapars": [0, 1], "llm": [6, 9, 10, 11, 15, 16, 17, 19, 21, 32, 33, 36, 37, 42, 44, 45, 46, 49, 52, 53, 56, 59, 64, 65, 66, 67, 80, 81, 86, 87, 88, 89, 90, 91, 92, 93, 101, 103, 106], "llm evalu": 56, "llm infer": 59, "llm metric": [49, 102, 105], "llm_lingua": [19, 63], "llm_name": 19, "llmlingua": 63, "llmlingua_pur": [16, 19], "load": [0, 5, 27, 33, 36, 53], "load_bm25_corpu": [16, 25], "load_chroma_collect": [16, 25], "load_data": 36, "load_dotenv": 53, "load_summary_fil": [0, 27], "load_yaml": [1, 13], "loader": [36, 38, 40], "local": [36, 52, 54, 81, 98, 106], "local model": 54, "local_model": 6, "locat": 103, "log": 57, "log2": 50, "log_cli": 53, "log_cli_level": 53, "logarithm": 50, "logarithmic": 50, "logic": 49, "logprob": 58, "long": [64, 88, 100, 103], "long context reord": 87, "long_context_reord": [0, 16, 87], "longcontextreord": [16, 23], "longer": [6, 55], "longest": 15, "longllmlingua": [0, 16, 63], "look": [24, 25, 29, 33, 40, 44, 46, 47, 50, 51, 94, 95, 96, 99, 103], "loop": [27, 104], "lost in the middl": 87, "lot": [33, 43, 101, 106], "low": 9, "lower": [27, 43, 50, 64, 68, 72, 98, 105], "lowercas": [30, 31, 38], "m": [21, 53, 82], "m3": 54, "mac": [53, 105], "made": [43, 51, 103, 106], "magic": 103, "mai": [50, 104, 105], "main": [32, 103], "major": 54, "make": [0, 6, 8, 22, 25, 27, 32, 33, 35, 45, 46, 52, 53, 57, 59, 64, 65, 66, 86, 87, 88, 89, 101, 103, 106], "make_basic_gen_gt": [8, 10, 42, 44, 46], "make_batch": [0, 27], "make_combin": [0, 27], "make_concise_gen_gt": [8, 10, 42, 44, 46], "make_gen_gt_llama_index": [8, 10], "make_gen_gt_openai": [8, 10], "make_generator_callable_param": [0, 16, 23], "make_llm": [16, 19], "make_metadata_list": [1, 2], "make_node_lin": [0, 28], "make_qa_with_existing_qa": [4, 6, 36], "make_retrieval_callable_param": [16, 24], "make_retrieval_gt_cont": [1, 8, 44, 46], "make_single_content_qa": [4, 6, 36, 55], "make_trial_summary_md": [0, 28], "maker": [17, 23, 86, 89, 101, 103], "malayalam": 29, "malfunct": 106, "manag": 99, "mani": [50, 57, 59, 65, 66, 92, 101], "manual": 106, "map": [0, 1, 8, 9, 10, 11, 15, 21, 22, 29, 43, 44], "marco": [21, 82], "margin": 49, "markdown": [27, 39, 41], "marker": [52, 53, 103], "markov": 101, "mask": 22, "master": 15, "match": [15, 33, 49], "matter": 103, "max": [9, 25, 58, 95], "max_length": 82, "max_ngram_ord": 15, "max_retri": 6, "max_token": [54, 57, 58, 59, 65, 66, 90, 91, 92, 93], "max_token_s": 17, "maximum": [6, 15, 59, 82], "md": 36, "me": [86, 87, 88, 89, 101, 103], "mean": [0, 6, 9, 15, 19, 20, 21, 25, 27, 33, 36, 42, 49, 51, 59, 67, 94, 95, 100, 101, 104, 105], "measur": [0, 49, 51, 88, 93, 97], "measure_spe": [0, 28], "mechan": 104, "med": 79, "meet": 49, "meger": 103, "member": [33, 45], "memori": [74, 75, 76, 82, 105], "mention": [47, 48], "merced": 92, "merg": [41, 66, 103, 104], "messag": [11, 21, 38], "metad": 13, "metadata": [0, 2, 9, 10, 11, 13, 21, 29, 69, 84], "metadata_list": 2, "meteor": [14, 15, 56, 88, 99, 102, 103, 105], "method": [0, 2, 5, 6, 7, 15, 22, 25, 26, 29, 35, 40, 41, 42, 43, 44, 45, 46, 49, 56, 88, 89, 93, 94, 95, 97, 99, 101, 102, 105], "metric": [0, 14, 17, 19, 23, 24, 25, 26, 33, 56, 61, 64, 67, 80, 88, 93, 97, 99, 100, 102, 103, 104, 105], "metric_input": [14, 15, 17, 19, 23, 24, 25], "metric_nam": [49, 56], "metricinput": [0, 14, 15, 17, 19, 23, 24, 25, 28], "mexican": 45, "might": [15, 35, 58, 101, 106], "min": [25, 95], "mind": [99, 106], "mini": [9, 10, 45], "minilm": [21, 82], "minimum": [25, 92, 95, 106], "mip": 98, "miss": 105, "mistak": [43, 105, 106], "mistral": [54, 59, 94], "mistralai": [54, 59, 94], "mix": 104, "mjpost": 15, "mm": [25, 69, 95, 97], "mmarco": 79, "mock": [0, 54], "mockembed": 0, "mockembeddingrandom": [0, 28], "mockllm": 54, "modal": 33, "mode": [18, 61, 62], "model": [0, 6, 9, 10, 11, 15, 21, 22, 23, 25, 33, 36, 41, 43, 44, 45, 48, 49, 50, 52, 53, 56, 57, 58, 59, 61, 64, 65, 66, 70, 71, 73, 74, 75, 76, 77, 78, 81, 82, 83, 85, 87, 88, 90, 91, 92, 94, 98, 100, 101, 103, 104, 105, 106], "model_computed_field": [0, 8, 9, 10, 11, 16, 21, 28], "model_config": [0, 8, 9, 10, 11, 16, 21, 28], "model_field": [0, 8, 9, 10, 11, 16, 21, 28], "model_nam": [0, 9, 10, 11, 19, 21, 27, 54, 63, 74, 75, 76, 79, 82], "modeling_enc_t5": [16, 21], "modest": 50, "modifi": [33, 40, 106], "modul": [28, 30, 31, 37, 38, 39, 46, 52, 60, 61, 67, 100, 102, 103, 105, 106], "modular": [100, 104], "modular rag": 103, "module_dict": 26, "module_nam": [0, 8], "module_param": [0, 2, 7, 8, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27], "module_summary_df": 25, "module_typ": [0, 24, 26, 29, 30, 31, 37, 38, 39, 40, 41, 46, 54, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 105], "module_type_exist": [0, 26], "monot5": [0, 16, 80], "monot5_run_model": [16, 21], "more": [6, 11, 25, 30, 31, 33, 35, 38, 39, 44, 45, 46, 49, 50, 56, 59, 64, 78, 80, 81, 88, 89, 92, 93, 94, 100, 102, 104, 106], "most": [6, 36, 46, 50, 54, 56, 80, 89, 94, 97, 98, 99, 101, 106], "mpnet": [15, 54], "mrr": 15, "msmarco": [21, 79], "mt5": 79, "much": [43, 103, 105], "multi": [8, 11, 33, 45, 92, 93], "multi query expans": 91, "multi_context": [6, 35], "multi_query_expans": [0, 16, 54, 91], "multilingu": [73, 94], "multipl": [8, 23, 24, 25, 40, 91, 92, 95, 96, 99, 100, 101, 103, 104], "multiqueryexpans": [16, 24], "multiqueryretriev": 91, "multitask": 54, "must": [0, 5, 6, 8, 18, 19, 20, 21, 23, 25, 27, 30, 31, 33, 36, 45, 46, 47, 50, 54, 59, 61, 69, 79, 84, 86, 87, 89, 92, 95, 99, 103, 104, 105, 106], "n": [8, 15, 21, 29, 37, 44, 46, 49, 53, 58, 84, 86, 87, 88, 89, 93, 103], "n_thread": 15, "naiv": 103, "name": [0, 8, 9, 10, 11, 14, 15, 21, 24, 25, 27, 45, 56, 58, 59, 61, 63, 64, 67, 70, 71, 80, 81, 88, 93, 94, 95, 96, 100, 106], "natur": [44, 49], "naver": 37, "necessari": [36, 93], "need": [2, 6, 22, 29, 32, 33, 35, 36, 41, 46, 48, 50, 53, 64, 73, 77, 88, 92, 94, 98, 99, 100, 103, 105, 106], "nest": 27, "nested_list": 27, "never": 52, "new": [8, 32, 33, 45, 46, 48, 53, 54, 59, 99, 102, 103, 106], "new_corpu": 8, "new_corpus_df": 46, "new_embed": 22, "new_gen_gt": 10, "new_qa": 46, "newjeans1": 33, "newjeans2": 33, "newlin": 15, "next": [51, 61, 73, 77, 88, 103], "nlg": 49, "nn": 22, "node": [0, 5, 28, 33, 36, 51, 54, 57, 60, 90, 91, 92, 95, 102], "node_dict": 26, "node_dir": [0, 25], "node_lin": [28, 61, 64, 67, 80, 88, 93, 99, 100, 102, 103], "node_line_1": [54, 99, 103], "node_line_2": [99, 103], "node_line_3": 99, "node_line_dict": 0, "node_line_dir": [0, 17, 18, 19, 20, 21, 23, 24, 25, 26], "node_line_nam": [54, 56, 61, 64, 67, 80, 88, 93, 97, 99, 100, 102, 103], "node_nam": 0, "node_param": [0, 26], "node_pars": [31, 36], "node_summary_df": 0, "node_typ": [0, 26, 54, 56, 61, 64, 67, 80, 88, 93, 97, 99, 102, 103, 105], "node_view": [0, 28], "nodepars": 2, "nodewithscor": 21, "non": 41, "none": [0, 2, 5, 6, 8, 15, 16, 21, 22, 26, 27, 56, 64, 88], "nonetyp": 0, "normal": [25, 76, 95], "normalize_dbsf": [16, 25], "normalize_mean": 102, "normalize_method": [25, 95, 97], "normalize_mm": [16, 25], "normalize_str": [0, 27], "normalize_tmm": [16, 25], "normalize_unicod": [0, 27], "normalize_z": [16, 25], "norwegian": 29, "notabl": 87, "note": 61, "nousresearch": [19, 63], "now": [33, 35, 36, 44, 46, 59, 98, 99, 101, 102, 103, 105, 106], "ntabl": 37, "nuevo": 45, "num_passag": [18, 62], "num_quest": [6, 36], "num_work": 0, "number": [0, 6, 21, 25, 27, 36, 40, 50, 51, 59, 61, 62, 64, 67, 92, 93, 100, 104, 106], "numer": 52, "object": [0, 8, 9, 10, 11, 21, 26, 36, 57, 65, 66, 69, 84, 90, 91, 92], "observ": [48, 87], "obtain": 80, "occur": [33, 58, 99, 103, 105], "ocr": [37, 41], "offer": 95, "offici": 27, "often": [36, 45, 94, 105], "okai": 33, "okt": 94, "ollama": [43, 54], "onc": [33, 57, 59, 65, 66, 73, 77, 95, 100, 103, 106], "one": [0, 2, 6, 8, 11, 19, 20, 21, 22, 23, 27, 29, 33, 36, 44, 45, 46, 47, 50, 69, 71, 72, 88, 99, 100, 101, 104, 105], "one_hop_quest": [8, 11], "onli": [6, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 33, 40, 44, 45, 51, 57, 65, 66, 69, 88, 89, 100, 101, 103, 106], "oom": [81, 105], "open": [98, 101, 105], "openai": [6, 9, 10, 11, 15, 18, 23, 24, 36, 43, 44, 45, 46, 54, 56, 57, 61, 64, 65, 66, 70, 71, 81, 88, 90, 91, 92, 93, 97, 98, 99, 101, 103], "openai_api_kei": [53, 58, 99, 105], "openai_cli": [43, 45], "openai_embed_3_larg": [6, 36, 54], "openai_embed_3_smal": 54, "openai_gen_gt": [1, 8, 42], "openai_gen_queri": [1, 8, 45], "openai_llm": [0, 16, 88], "openai_truncate_by_token": [0, 27], "openaiembed": [25, 35], "openailik": [54, 105], "openaillm": [16, 17], "oper": [33, 47, 64, 97, 104], "oppos": 61, "opt": 59, "optim": [0, 29, 32, 33, 35, 40, 43, 44, 52, 58, 59, 64, 70, 71, 94, 95, 96, 99, 100, 102, 103, 104], "optimize_hybrid": [16, 25], "option": [5, 6, 15, 22, 29, 40, 48, 53, 56, 61, 63, 64, 67, 78, 79, 80, 83, 85, 88, 93, 95, 96, 99, 101, 102, 104, 106], "order": [0, 15, 49, 50], "org": 52, "organ": 100, "orient": 49, "origin": [0, 25, 27, 69, 85], "original_str": 29, "original_text": 13, "other": [0, 15, 25, 27, 33, 49, 50, 53, 57, 64, 65, 66, 67, 81, 90, 91, 92, 95, 99, 100, 101, 103, 106], "otherwis": 40, "our": [25, 29, 33, 36, 37, 40, 52, 53, 60, 68, 72, 90, 91, 92, 101, 103, 105, 106], "out": [33, 46, 50, 52, 53, 54, 56, 59, 67, 68, 69, 70, 71, 72, 99, 100, 103, 105, 106], "outcom": [88, 93], "outperform": 49, "output": [0, 6, 10, 35, 45, 47, 49, 56, 63, 85, 88, 93, 105], "output_attent": 22, "output_filepath": [5, 6, 36], "output_hidden_st": 22, "output_path": [0, 106], "over": [59, 104], "overal": [49, 80, 101], "overfit": 106, "overlap": 51, "overrid": 15, "overridden": 22, "overwrit": [5, 6], "own": [6, 33, 34, 37, 52, 67, 90, 91, 92, 101, 104, 106], "p4dyxfmsa": [52, 103], "packag": [28, 53, 54, 55, 105], "pad": 22, "pad_token": 22, "page": [7, 29, 37, 40, 41, 44, 53, 81], "paid": 41, "pair": [6, 22, 27, 32, 36, 49], "panda": [26, 27, 35, 36], "paper": [15, 45, 49, 85, 90, 92, 103], "paradigm": [49, 103], "parallel": [21, 22, 25, 59], "param": [0, 2, 15, 23, 24, 59, 100], "param_list": [16, 19], "paramet": [0, 5, 6, 7, 8, 9, 10, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 36, 39, 48, 49, 54, 99, 100, 101, 104, 105, 106], "parent": 0, "parquet": [0, 5, 6, 8, 29, 33, 35, 36, 40, 44, 46, 100, 105, 106], "pars": [0, 1, 2, 8, 29, 30, 31, 32, 37, 99], "parse_all_fil": [1, 7], "parse_config": [29, 40], "parse_inst": 7, "parse_method": [7, 30, 38, 40, 41, 46], "parse_modul": 38, "parse_output": [4, 6], "parse_project_dir": 46, "parsed_data_path": [0, 29], "parsed_result": 2, "parser": [28, 29, 46], "parser_nod": [1, 7], "part": [32, 50, 104], "pass": [6, 22, 23, 35, 57, 65, 66, 90, 91, 92, 103], "pass_compressor": [0, 16], "pass_passage_augment": [0, 16], "pass_passage_filt": [0, 16], "pass_query_expans": [0, 16], "pass_rerank": [0, 16], "pass_valu": 103, "passag": [8, 11, 18, 19, 20, 21, 25, 29, 33, 43, 50, 51, 62, 64, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 90, 94, 95, 96, 98, 103], "passage augment": [61, 62], "passage compressor": [64, 65, 66], "passage compressor metr": 51, "passage filt": [67, 68, 69, 70, 71, 72], "passage_augment": 61, "passage_filt": 67, "passage_filter_nod": [16, 20], "passage_id": 25, "passage_rerank": 103, "passage_str": 6, "passageaugment": [0, 16], "passagecompressor": [0, 16], "passagefilt": [0, 16], "passagererank": [0, 16], "passcompressor": [16, 19], "passpassageaugment": [16, 18], "passpassagefilt": [16, 20], "passqueryexpans": [16, 24], "passrerank": [16, 21], "path": [0, 2, 6, 7, 8, 13, 20, 21, 23, 24, 25, 26, 27, 29, 35, 36, 40, 47, 53, 94, 106], "pattern": 40, "payload": 47, "pd": [0, 5, 6, 21, 26, 27, 35, 36], "pdf": [40, 46], "pdfminer": [38, 40, 46], "pdfplumber": [38, 40, 41, 46], "penalti": 15, "per": [36, 40, 51, 71, 72, 102], "percentag": 50, "percentil": 67, "percentile cutoff": 68, "percentile_cutoff": [0, 16, 68], "percentilecutoff": [16, 20], "perfect": [43, 103], "perform": [8, 15, 22, 24, 29, 33, 40, 41, 43, 45, 46, 48, 50, 51, 52, 56, 58, 61, 64, 67, 80, 87, 88, 93, 101, 103], "persistentcli": 36, "perspect": 91, "pertin": 80, "phase": [80, 93], "phrase": 10, "piec": 24, "pip": [52, 53, 105], "pipelin": [0, 32, 44, 46, 47, 48, 52, 95, 100, 101, 103], "pipeline_dict": 106, "pkl": 100, "place": 45, "placehold": [6, 36], "plan": [33, 56, 103], "pleas": [6, 21, 25, 33, 46, 50, 53, 54, 56, 59, 63, 85, 88, 93, 94, 99, 103, 104, 105, 106], "plu": [6, 25, 32, 33, 35, 53, 54, 59, 69, 70, 71, 84, 88, 92, 94, 98, 99], "polish": 29, "pop": [27, 33], "pop_param": [0, 27], "popular": [49, 94], "port": [0, 47, 106], "porter": 15, "porter_stemm": 25, "portugues": 29, "posit": [50, 87], "possibl": [101, 103, 105], "post": [0, 47, 103], "post_retrieve_node_lin": [56, 88], "potenti": [15, 32, 64], "power": [73, 77, 103], "ppv": 50, "pre": [43, 103, 106], "pre_retrieve_node_lin": 93, "precis": [15, 49, 64, 90, 97], "pred": [15, 50], "predefin": [56, 64, 80], "predict": [15, 50], "prefix": 85, "prefix_prompt": [21, 85], "prepare_for_model": 22, "preprocess": [0, 28], "present": 49, "pretti": 103, "prev": 61, "prev next augment": 62, "prev_next_augment": [0, 16, 61, 62], "prev_next_augmenter_pur": [16, 18], "prevent": [2, 10, 29, 58, 81, 103], "preview": 15, "previou": [0, 17, 18, 19, 20, 21, 23, 24, 25, 49, 55, 72, 101, 103], "previous_result": [0, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "prevnextpassageaugment": [16, 18], "primari": [61, 67, 80, 83], "primarili": 41, "primit": 36, "print": [21, 47], "prior": [36, 64], "priorit": 80, "prob": 57, "probabl": [58, 59, 101], "problem": [36, 46, 49, 103, 105], "process": [6, 15, 21, 25, 27, 32, 36, 48, 52, 56, 59, 64, 80, 83, 88, 91, 93, 97, 98, 100, 101, 104, 106], "process_batch": [0, 27], "processed_data": [5, 6], "produc": 49, "product": 106, "project": [0, 52, 53], "project_dir": [0, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 40, 48, 106], "project_directori": 106, "prompt": [0, 1, 6, 8, 17, 19, 21, 23, 26, 57, 59, 81, 85, 86, 87, 89, 90, 91, 101, 103], "prompt1": [6, 36], "prompt2": [6, 36], "prompt3": 36, "prompt_mak": [88, 101, 103], "promptcompressor": 19, "promptmak": [0, 16], "prompts_ratio": [6, 36], "proper": [6, 58], "properli": [27, 94], "properti": 8, "propos": 103, "protected_namespac": 0, "provid": [36, 37, 48, 49, 57, 65, 66, 79, 85, 106], "pseudo": 58, "pt": 79, "ptt5": 79, "publicli": 0, "punctuat": 27, "punktsentencetoken": 29, "pure": [0, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "purpos": [61, 67, 80, 93, 104], "push": 105, "put": [33, 36, 63, 105], "py": 15, "pyarrow": 105, "pydant": [0, 9, 10, 11, 21], "pydantic_model_": 0, "pymupdf": 38, "pypdf": 38, "pypdfdirectori": 38, "pypdfdirectoryload": 38, "pypdfium2": 38, "pypi": 52, "pytest": 53, "python": [27, 30, 33, 36, 53, 86, 99, 105], "pythoncodetextsplitt": 30, "q": 36, "qa": [0, 1, 6, 23, 24, 25, 29, 32, 42, 43, 45, 55, 100, 106], "qa_cnt": 0, "qa_creation_func": [6, 36], "qa_data": 26, "qa_data_path": [0, 106], "qa_dataset": 6, "qa_df": [8, 27, 35, 36, 42, 43, 45], "qa_save_path": 8, "qa_test": 106, "qacreat": [1, 4, 35, 36, 55], "qid": [8, 45], "qualiti": [49, 80, 106], "quantit": 104, "quantiz": 105, "queri": [0, 1, 6, 8, 15, 19, 20, 21, 23, 24, 25, 26, 27, 28, 38, 46, 47, 48, 55, 61, 64, 65, 67, 70, 71, 72, 78, 79, 80, 81, 83, 86, 87, 88, 89, 90, 97, 98, 101, 103], "query decompos": 92, "query expans": [90, 91, 92, 93], "query_bundl": 21, "query_decompos": [0, 16, 54, 92, 93], "query_embed": [21, 25], "query_expans": [0, 24, 88, 93, 101], "query_gen_openai_bas": [8, 11], "querybundl": 21, "querydecompos": [16, 24], "queryexpans": [0, 16], "question": [6, 8, 9, 11, 21, 24, 32, 33, 36, 42, 47, 49, 52, 63, 83, 85, 86, 87, 88, 89, 92, 103, 106], "question_num": 6, "question_num_per_cont": [6, 36], "quickli": 64, "quit": [49, 56], "r": 53, "rag": [6, 29, 32, 33, 35, 36, 40, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105], "rag api": 47, "rag dataset": [33, 35, 36], "rag deploi": [47, 48], "rag evalu": [33, 35, 36, 49, 50, 51, 56, 102, 105], "rag llm": 54, "rag metr": [49, 50, 51, 102, 105], "rag model": 54, "rag optim": [52, 99, 101, 104], "rag perform": 101, "rag structur": 104, "rag tutori": 106, "rag web": 48, "raga": [1, 4, 34, 50], "rais": 15, "raise_except": 6, "ran": 100, "random": [0, 6, 28, 59], "random_single_hop": [1, 8, 44, 46, 55], "random_st": [0, 6, 8], "randomli": [6, 36, 44], "rang": [22, 44, 95, 96], "range_single_hop": [1, 8, 44], "rank": [15, 25, 94, 96], "rankgpt": [0, 16, 80], "rankgpt_rerank_prompt": [16, 21, 81], "rankgptrerank": 21, "rate": [50, 105], "ratio": [6, 36], "ratio_dict": 36, "raw": [1, 8, 32, 37, 38, 39, 40, 41, 44, 46, 52, 55], "raw_df": [0, 8], "raw_end_idx": 8, "raw_id": 8, "raw_start_idx": 8, "re": [70, 71, 103], "read": [52, 86, 87, 88, 89, 99, 103, 105], "read_parquet": [35, 36], "readi": [36, 53, 101, 106], "real": [33, 36, 48, 58, 103], "realli": [25, 33, 59, 101, 103], "reason": [6, 35], "reassess": 80, "recal": [15, 49, 64, 97], "receiv": 48, "recenc": [0, 16, 67], "recency_filt": 69, "recencyfilt": [16, 20], "recip": 22, "reciproc": [15, 25, 96, 102], "recogn": 105, "recommend": [15, 23, 33, 45, 46, 58, 88, 94, 100, 103, 105, 106], "reconstruct": 27, "reconstruct_list": [0, 27], "record": 100, "recurs": [27, 66], "recursivecharact": 30, "recursivecharactertextsplitt": 36, "reduc": [50, 64], "reduct": 64, "refer": [6, 46, 49, 50, 56, 88, 93, 104, 106], "refin": [0, 16, 64, 80], "reflect": 94, "regist": 22, "rel": 15, "relat": [33, 49, 50, 57, 65, 66, 67, 85, 90, 91, 92], "relationship": 13, "releas": [32, 34, 45], "relev": [15, 21, 33, 36, 50, 56, 64, 79, 80, 81, 90, 93, 97], "remain": 104, "remeb": 36, "rememb": [50, 53, 101], "remind": 106, "remov": [25, 26, 27, 36, 43], "reorder": [80, 88], "repeat": 6, "replac": [0, 8, 9, 10, 11, 19, 21, 27, 48, 88], "replace_valu": 27, "replace_value_in_dict": [0, 27], "repo": [33, 52, 94, 106], "repositori": 53, "repres": [98, 101], "request": [0, 47, 103], "request_timeout": 105, "requir": [0, 6, 9, 10, 11, 15, 21, 40, 45, 49, 53, 57, 64, 65, 66, 79, 90, 91, 92, 95, 96, 104], "rerank": [19, 20, 21, 33, 64, 69, 73, 77, 79, 80, 81, 83, 85, 103], "reranker_recal": 103, "reset": [33, 43, 105], "reset_index": [43, 44, 46, 105], "resid": 104, "resolv": 105, "resourc": 101, "respect": 51, "respond": 93, "respons": [0, 8, 9, 10, 11, 47, 48, 64, 65, 93], "rest": 81, "restart_evalu": 106, "restart_tri": [0, 28, 106], "result": [0, 2, 6, 8, 15, 17, 18, 19, 20, 21, 23, 24, 25, 27, 30, 31, 36, 39, 41, 43, 45, 46, 47, 49, 50, 51, 52, 58, 61, 72, 80, 88, 93, 95, 97, 100, 102, 103, 105], "result_column": [0, 28, 47], "result_df": [17, 19, 23, 25], "result_qa": [42, 45], "result_to_datafram": [0, 27], "result_typ": [39, 41], "retreived_cont": [86, 87, 89], "retri": [6, 101], "retriev": [0, 2, 6, 16, 19, 20, 21, 22, 24, 28, 29, 33, 42, 43, 54, 61, 62, 63, 64, 66, 73, 77, 80, 85, 88, 89, 90, 93, 94, 95, 96, 98, 99, 101, 102, 103, 104], "retrieval metr": 50, "retrieval_cont": [0, 28], "retrieval_f1": [14, 15, 20, 21, 24, 61, 67, 80, 93, 97], "retrieval_func": 24, "retrieval_gt": [0, 8, 11, 26, 29, 36, 45, 46], "retrieval_gt_cont": [0, 8, 26], "retrieval_map": [14, 15], "retrieval_modul": [24, 93], "retrieval_mrr": [14, 15], "retrieval_ndcg": [14, 15], "retrieval_param": 24, "retrieval_precis": [14, 15, 20, 21, 61, 67, 80, 93, 97, 102], "retrieval_recal": [14, 15, 20, 21, 24, 61, 67, 80, 93, 97, 102, 103], "retrieval_result": 50, "retrieval_token_f1": [14, 15, 64], "retrieval_token_precis": [14, 15, 64], "retrieval_token_recal": [14, 15, 64], "retrieve metr": 50, "retrieve_node_lin": [61, 64, 67, 80, 97], "retrieve_scor": [18, 19, 20, 21, 25], "retrieved_cont": [0, 18, 19, 20, 21, 25, 26, 86, 87, 88, 89, 103], "retrieved_id": [0, 18, 19, 20, 21, 25, 26], "return": [0, 2, 5, 6, 7, 8, 9, 10, 11, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 41, 57, 58, 67, 69, 92, 98, 99], "return_dict": 22, "return_index": 0, "revers": [18, 27, 68, 72], "right": [36, 54, 103, 106], "rl_polici": 103, "roadmap": 100, "roberta": 54, "robust": 45, "root": 53, "roug": [14, 15, 56, 88, 99, 102, 103, 105], "rouge1": 15, "rouge2": 15, "rouge_typ": 15, "rougel": 15, "rougelsum": 15, "row": [9, 10, 11, 25, 26, 27, 33, 100], "rpm": 77, "rr": [15, 50], "rrf": [25, 95, 97], "rrf_calcul": [16, 25], "rrf_k": [25, 93, 96, 99], "rrf_pure": [16, 25], "rubert": 54, "run": [0, 1, 8, 16, 22, 26, 28, 44, 52, 53, 64, 68, 69, 70, 71, 72, 99, 100, 101], "run_api": [47, 106], "run_api_serv": [0, 28, 47, 106], "run_chunk": [1, 2], "run_config": 6, "run_evalu": [0, 16, 25, 26], "run_generator_nod": [16, 17], "run_nod": [0, 26], "run_node_lin": [0, 28], "run_pars": [1, 7], "run_passage_augmenter_nod": [16, 18], "run_passage_compressor_nod": [16, 19], "run_passage_filter_nod": [16, 20], "run_passage_reranker_nod": [16, 21], "run_prompt_maker_nod": [16, 23], "run_query_embedding_batch": [16, 25], "run_query_expansion_nod": [16, 24], "run_retrieval_nod": [16, 25], "run_web": [0, 28, 48, 106], "runner": [0, 28, 47, 106], "runnerinput": [0, 28], "russian": 29, "sacrebleu": 15, "safe": 27, "said": 49, "same": [0, 24, 25, 27, 29, 40, 47, 48, 50, 61, 81, 92, 100, 101, 104, 106], "sampl": [0, 1, 6, 29, 36, 40, 45, 46, 50, 55, 59, 105, 106], "sample_config": 106, "samplingparam": 59, "satisfactori": [36, 46], "save": [0, 5, 6, 8, 9, 17, 29, 33, 37, 39, 40, 99, 106], "save_parquet_saf": [0, 27], "save_path": 8, "scalabl": 36, "scale": [25, 64, 95, 102], "schema": [0, 1, 15, 25, 28, 32, 38, 42, 43, 45, 46, 55], "score": [15, 21, 25, 27, 51, 64, 68, 71, 72, 94, 95, 96, 97], "script": [27, 33], "search": [27, 93, 94, 98], "search_str": 13, "second": [22, 45, 51, 100, 103], "secret": 99, "section": [29, 40, 44, 99, 102, 104, 106], "secur": 105, "see": [29, 32, 40, 46, 50, 51, 54, 99, 100, 101, 103, 105], "seed": 6, "seek": [45, 49], "segment": 49, "select": [0, 6, 8, 17, 19, 20, 21, 23, 24, 25, 36, 45, 46, 94, 100, 101, 102, 103, 104], "select_best": [0, 28], "select_best_averag": [0, 28], "select_best_rr": [0, 28], "select_bm25_token": [16, 25], "select_normalize_mean": [0, 28], "select_top_k": [0, 27], "self": [27, 92], "sem": 15, "sem_scor": [14, 15, 88, 99], "semant": [25, 49, 56, 94, 95], "semantic_id": 25, "semantic_llama_index": [29, 31], "semantic_scor": 25, "semantic_summari": 25, "semantic_summary_df": 25, "semantic_theoretical_min_valu": [25, 95], "semanticdoubl": 29, "semanticdoublemerg": 31, "semscor": 49, "send": [0, 73, 77], "sensit": 50, "sentenc": [15, 21, 43, 46, 49, 54, 70, 71, 80, 89, 94], "sentence transform": 82, "sentence_splitt": [29, 46], "sentence_splitter_modul": 29, "sentence_transform": [0, 16], "sentence_transformer_rerank": 82, "sentence_transformer_run_model": [16, 21], "sentencetransformerrerank": [16, 21], "sentencetransformerstoken": 30, "sentencewindow": [29, 31, 46], "sequenc": [21, 22, 104], "seri": 27, "serializeasani": 21, "seriou": [105, 106], "serv": [56, 64, 80, 85, 88, 93, 97, 104], "server": [0, 52, 58, 98, 105], "server_nam": [0, 48], "server_port": [0, 48], "session": 21, "set": [0, 2, 6, 7, 8, 9, 22, 23, 25, 36, 37, 38, 39, 52, 53, 54, 56, 57, 58, 59, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 77, 80, 81, 85, 88, 90, 91, 92, 93, 95, 98, 99, 100, 101, 103, 104, 105], "set_initial_st": [0, 28], "set_input_embed": [21, 22], "set_page_config": [0, 28], "set_page_head": [0, 28], "setup": 101, "sever": [49, 58, 106], "shape": [15, 27], "share": [0, 48, 106], "shareabl": 0, "short": [42, 103], "shot": [85, 90, 92], "should": [0, 6, 7, 9, 10, 11, 15, 21, 22, 29, 38, 49, 54, 58, 69, 105], "show": [45, 100, 101, 103], "shown": 46, "side": 58, "sigma": [25, 95], "signal": 85, "significantli": [64, 93, 104], "silent": 22, "similar": [15, 49, 56, 61, 67, 68, 72, 94, 95, 96, 98, 101], "similarity percentile cutoff": 70, "similarity_percentile_cutoff": [0, 16, 70], "similarity_threshold_cutoff": [0, 16, 67, 71], "similaritypercentilecutoff": [16, 20], "similaritythresholdcutoff": [16, 20], "simpl": [1, 4, 10, 35, 43, 49, 56, 94, 103], "simpledirectoryread": 36, "simpli": [54, 84, 106], "simul": 104, "sinc": [22, 34, 36, 43, 46, 48, 50, 56, 58, 81, 86, 88, 89], "singl": [0, 6, 7, 8, 22, 27, 33, 36, 44, 52, 92, 99, 100, 103, 104], "single_token_f1": [14, 15], "situat": 95, "six": 51, "size": [0, 2, 6, 7, 15, 46, 58, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 95, 98, 105], "sk": 53, "skip": [19, 20, 21, 23, 88], "slice_tensor": [16, 21], "slice_tokenizer_result": [16, 21], "slovenian": 29, "slow": 59, "slower": [43, 64], "small": [6, 54], "smaller": 50, "smooth": 15, "smooth_method": 15, "smooth_valu": 15, "so": [0, 10, 19, 25, 29, 32, 33, 36, 37, 43, 44, 46, 48, 49, 50, 51, 53, 54, 59, 61, 64, 67, 68, 69, 70, 71, 72, 80, 88, 92, 93, 96, 99, 100, 101, 103, 106], "softwar": 98, "solut": [36, 46, 103], "some": [13, 25, 32, 33, 43, 44, 49, 51, 53, 54, 58, 73, 77, 95, 101, 105], "someon": 92, "someth": [36, 86, 87, 88, 89, 105], "sometim": [43, 58, 105], "soon": 103, "sort": [27, 84], "sort_by_scor": [0, 16, 18, 27], "sound": 50, "sourc": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 33, 95, 96, 98], "sp_model_kwarg": 22, "spanish": 29, "spars": [25, 94], "spearman": 49, "special": [22, 27, 64], "specif": [15, 27, 40, 42, 45, 56, 64, 79, 83, 94, 104, 106], "specifi": [7, 33, 47, 54, 56, 57, 65, 66, 78, 79, 83, 84, 88, 93, 95, 96, 101, 102, 104], "speed": [0, 56, 59, 64, 80, 88, 93, 97, 99, 104], "speed_threshold": [56, 61, 64, 67, 80, 88, 93, 97, 99, 102, 104], "spice": 92, "split": [15, 29, 41, 100, 104, 106], "split_by_sentence_kiwi": [0, 1, 29], "split_datafram": [0, 27], "split_docu": 36, "split_into_s": 29, "split_summari": 15, "splitter": [30, 31], "squad": 27, "squar": 92, "ss": 69, "stabl": 45, "stage": 85, "standalon": 59, "standard": [0, 49], "start": [0, 27, 33, 34, 87, 106], "start_chunk": [0, 28, 29, 46], "start_end_idx": 29, "start_idx": 2, "start_pars": [0, 28, 40, 46], "start_trial": [0, 28, 106], "starter": [52, 106], "state": [6, 22, 45, 101], "static": 18, "statist": 50, "stem": [49, 94], "stemmer": [15, 94], "step": [8, 21, 29, 40, 41, 44, 53, 80, 103], "still": [101, 103, 105], "storag": 37, "store": [8, 29, 98], "str": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 36, 41], "straight": 103, "strateg": 104, "strategi": [17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 33, 61, 67, 99, 103, 105], "strategy_dict": [23, 24], "strategy_nam": [0, 23, 24], "strategyqa": 92, "stream": 58, "string": [6, 14, 25, 26, 27, 29, 33, 36, 85, 88, 99], "strip": 15, "structur": [6, 10, 25, 45, 99, 103, 106], "studi": [87, 94], "sub": 92, "subclass": 22, "submodul": [1, 4, 28], "subpackag": 28, "subsequ": 15, "subset": 8, "successfulli": [29, 40, 106], "sudo": 105, "suffix": [15, 85], "suffix_prompt": [21, 85], "suggest": [33, 101, 103, 105], "sum": [6, 50], "summar": [49, 64], "summari": [0, 17, 27, 29, 40, 42, 50, 101, 106], "summary_df": [0, 25, 27], "summary_df_to_yaml": [0, 28], "summary_path": 27, "super": 45, "support": [9, 10, 25, 28, 33, 35, 36, 43, 44, 45, 50, 52, 57, 58, 60, 65, 66, 70, 71, 73, 77, 95, 99, 103, 104], "sure": 106, "survei": 103, "swap": 104, "swedish": 29, "synonym": 49, "synthet": [36, 46], "system": [33, 56, 57, 64, 65, 66, 80, 88, 97, 104], "system_prompt": 10, "t": [6, 9, 23, 27, 32, 33, 35, 36, 40, 44, 48, 50, 52, 88, 92, 95, 103, 105], "t5": 22, "t5config": 22, "t5pretrainedmodel": 22, "t5token": 22, "tabl": 40, "table_detect": [37, 41], "table_hybrid_pars": [0, 1, 40, 41], "table_param": 41, "table_parse_modul": 41, "tailor": [64, 96, 104], "take": [22, 54, 103], "taken": 27, "target": [6, 19, 27, 63, 103], "target_dict": [0, 27], "target_kei": 27, "target_modul": [25, 93, 95, 99], "target_module_param": [25, 95], "target_node_lin": 103, "target_token": [19, 63], "tart": [16, 21, 79, 80], "tart_run_model": [21, 22], "task": [22, 27, 49, 56], "team": 37, "techniqu": 104, "tecolot": 45, "tell": [86, 87, 88, 89], "temp_client": 25, "temperatur": [35, 36, 54, 56, 57, 58, 59, 65, 66, 81, 90, 91, 92, 93, 101, 105], "temporari": [6, 104], "temporarili": 104, "tensor_parallel_s": 59, "term": [50, 93], "test": [48, 50, 53, 54, 56, 61, 64, 67, 80, 93, 95, 99, 100, 101], "test_siz": [6, 35], "test_weight_s": [95, 97], "testset": 35, "text": [2, 5, 6, 7, 15, 19, 25, 27, 29, 30, 31, 32, 33, 36, 39, 40, 41, 47, 54, 56, 57, 59, 63, 65, 66, 82, 85], "text_nod": 5, "text_param": 41, "text_parse_modul": 41, "text_splitt": 30, "textnod": [5, 36], "textsplitt": 2, "textur": 92, "tf": 94, "than": [6, 11, 25, 33, 43, 49, 59, 61, 69, 92, 94, 100, 101, 103, 105], "thei": [36, 45, 49, 64, 99, 103, 104], "them": [22, 23, 24, 25, 27, 33, 39, 50, 66, 101], "theoret": [25, 95], "therefor": [22, 36, 41, 50, 51, 88, 93], "thi": [0, 2, 5, 6, 9, 10, 11, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 49, 50, 53, 54, 56, 57, 58, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106], "thing": [99, 106], "think": [33, 99, 101, 103], "third": [25, 50, 51], "those": [45, 95], "thought": 49, "three": [29, 32, 40, 51, 69, 100, 103], "threshold": [0, 56, 64, 67, 69, 80, 88, 93, 97, 99, 104], "threshold cutoff": 72, "threshold_cutoff": [0, 16, 72], "thresholdcutoff": [16, 20], "through": [52, 88, 93], "thu": 50, "tier": 105, "time": [6, 32, 33, 46, 48, 52, 56, 64, 67, 68, 69, 70, 80, 88, 93, 97, 100, 101, 104, 106], "time_rerank": [0, 16, 84], "timeout": 105, "timererank": [16, 21, 84], "tiny2": 54, "tmm": [25, 95, 97], "to_list": [0, 27], "to_parquet": [1, 8, 44, 46], "token": [9, 15, 16, 17, 19, 21, 22, 25, 29, 44, 46, 49, 56, 59, 63, 64, 81, 88], "token_false_id": 21, "token_ids_0": 22, "token_ids_1": 22, "token_limit": 27, "token_threshold": [56, 88], "token_true_id": 21, "tokenization_enc_t5": [16, 21], "tokenize_ko_kiwi": [16, 25], "tokenize_ko_kkma": [16, 25], "tokenize_ko_okt": [16, 25], "tokenize_porter_stemm": [16, 25], "tokenize_spac": [16, 25], "tokenizer_output": 21, "tokentextsplitt": 36, "too": [6, 73, 77, 100, 101], "took": 100, "tool": 52, "top": [18, 21, 59, 61, 80, 93, 97, 100], "top_k": [6, 18, 21, 24, 25, 27, 36, 61, 67, 80, 93, 95, 96, 97, 99, 102, 103], "top_logprob": 58, "top_n": [16, 21], "top_p": 59, "topic": 49, "topn": 50, "torch": 22, "total": 51, "tpm": 77, "trail": [100, 106], "trail_fold": 0, "train": [100, 106], "transform": [21, 54, 59, 80], "translat": 49, "treat": [33, 99], "tree": 64, "tree summar": 66, "tree_summar": [0, 16, 54, 64, 66], "treesummar": [16, 19], "trg_lang": 15, "trial": [0, 47], "trial_dir": [0, 27, 106], "trial_fold": [29, 40, 47, 48, 106], "trial_path": [0, 2, 7, 48], "troubl": [52, 105], "troubleshoot": [52, 53], "true": [0, 5, 6, 9, 10, 11, 18, 21, 26, 27, 36, 37, 41, 43, 44, 46, 48, 50, 53, 58, 68, 72, 105], "truncat": 25, "truncate_by_token": [16, 17], "truth": [6, 15, 33, 42, 49, 50, 56, 101], "try": [53, 98, 103, 105], "tune": 91, "tupl": [0, 2, 7, 13, 14, 21, 25, 26, 27, 95, 96], "turbo": [23, 35, 36, 56, 57, 58, 64, 65, 66, 81, 88, 91, 92, 101, 105], "turkish": 29, "turn": 14, "tutori": [32, 35, 47, 48, 52, 103], "two": [8, 11, 22, 25, 33, 36, 49, 50, 59, 77, 102, 103, 106], "two_hop_increment": [8, 11, 45], "two_hop_quest": [8, 11], "twohopincrementalrespons": [8, 11], "txt": [6, 36, 53], "type": [0, 6, 15, 22, 25, 26, 27, 29, 33, 36, 39, 40, 47, 50, 54, 56, 58, 59, 73, 74, 75, 76, 77, 82, 90, 91, 92, 93, 94, 97, 103, 106], "typic": [45, 87], "tyre": 103, "u": 92, "ultim": 52, "unanswer": 9, "under": [101, 105], "underscor": 64, "understand": [100, 101], "understudi": 49, "unexpect": [33, 106], "unicamp": 79, "uniform": 35, "unigram": [15, 49], "unintend": [43, 99], "union": 0, "uniqu": [25, 33, 64, 104], "unit": 36, "unk": 22, "unk_token": 22, "unknown": 0, "unless": 27, "unstructur": 38, "unstructured_api_kei": 38, "unstructuredmarkdown": 38, "unstructuredpdf": 38, "unstructuredxml": 38, "until": 104, "up": [33, 51, 64, 66, 104, 106], "updat": [8, 46, 54], "update_corpu": [1, 8, 46], "upgrad": [59, 105], "upr": [0, 16, 80, 103], "uprscor": [16, 21], "upsert": [5, 6, 27], "upstage_api_kei": 38, "upstagelayoutanalysi": [38, 41], "url": 47, "us": [0, 2, 5, 6, 7, 8, 9, 10, 11, 15, 17, 19, 20, 21, 22, 23, 24, 25, 27, 32, 33, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 55, 56, 57, 61, 63, 64, 65, 66, 67, 69, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 103, 105], "usag": [25, 64, 81, 98], "use_bf16": [21, 85], "use_fp16": [75, 76], "use_stemm": 15, "user": [0, 33, 36, 47, 48, 53, 61, 62, 85, 88, 91, 97, 100, 102, 103, 106], "usual": 42, "util": [0, 1, 28, 80], "v0": [32, 34, 36, 54, 56, 59, 94], "v1": [0, 9, 10, 11, 21, 27, 54, 73, 77, 79], "v2": [15, 21, 54, 73, 75, 79, 82], "vagu": 43, "valid": [6, 8, 28, 101], "validate_corpus_dataset": [0, 27], "validate_llama_index_prompt": [4, 6], "validate_qa_dataset": [0, 27], "validate_qa_from_corpus_dataset": [0, 27], "validate_strategy_input": [0, 28], "valu": [0, 6, 14, 15, 18, 22, 25, 26, 27, 30, 31, 33, 36, 38, 49, 50, 54, 68, 69, 70, 71, 72, 84, 95, 96, 99, 101, 102, 105], "valuabl": 36, "value_column_nam": 27, "vari": [93, 95, 104], "variabl": [7, 27, 38, 53, 58, 73, 77, 105], "variant": 79, "variat": [33, 93], "variou": [29, 40, 46, 52, 56, 64, 80, 88, 97], "vector": [0, 6, 98, 103], "vector db": 98, "vector_db": 25, "vectordb": [0, 16, 24, 36, 54, 93, 94, 97, 99, 100], "vectordb_ingest": [16, 25], "vectordb_pur": [16, 25], "verbos": [16, 21, 81], "veri": 52, "verifi": 45, "version": [25, 32, 33, 45, 55, 59, 101, 102, 105, 106], "video": 33, "viscond": 92, "visit": 25, "vllm": [0, 16, 56, 88, 105], "vocab_fil": 22, "vocabulari": 22, "voil\u00e0": 103, "vram": 105, "wa": [25, 29, 37, 40, 45, 49, 50, 54, 101, 105], "wai": [24, 29, 40, 43, 48, 99, 101, 103, 105], "wait": [53, 59], "want": [0, 6, 8, 23, 25, 26, 27, 30, 31, 33, 36, 38, 41, 43, 45, 51, 52, 53, 54, 69, 73, 74, 75, 76, 77, 82, 84, 95, 96, 99, 101, 104], "warn": 15, "water": 51, "we": [15, 19, 20, 21, 29, 32, 33, 36, 40, 43, 44, 45, 46, 48, 49, 50, 52, 53, 54, 56, 59, 88, 93, 94, 98, 99, 100, 101, 103, 105, 106], "web": 28, "weight": [15, 25, 49, 93, 95, 96], "weight_rang": [95, 96, 97], "welcom": 103, "well": [29, 36, 40, 44, 49, 50, 52], "were": 48, "what": [29, 33, 40, 45, 50, 52, 54, 85, 86, 87, 88, 89, 92, 100, 104], "when": [0, 6, 15, 19, 20, 21, 22, 23, 25, 33, 37, 45, 51, 53, 54, 56, 58, 59, 67, 69, 77, 84, 87, 88, 92, 98, 99, 100, 104, 105, 106], "where": [52, 64, 97, 100], "whether": [0, 5, 15, 21, 22, 49, 58, 75, 76, 85], "which": [0, 6, 15, 17, 22, 23, 25, 27, 33, 36, 45, 48, 49, 50, 51, 52, 54, 57, 64, 65, 66, 67, 77, 88, 94, 95, 96, 99, 101, 103, 105, 106], "whichev": 50, "while": [22, 36, 43, 53, 104], "whitespac": [25, 27], "who": [45, 106], "whole": [0, 8, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 101, 106], "why": [33, 101, 103], "wikipedia": 45, "wildcard": 40, "window": [88, 105], "window_replac": [0, 16, 89], "window_s": [29, 46], "windowreplac": [16, 23], "wise": 81, "with_debugging_log": 6, "within": [22, 56, 64, 80, 88, 97, 104], "without": [41, 52, 55, 57, 58, 61, 64, 65, 66, 67, 80, 90, 93, 95, 103], "wonder": 101, "word": [10, 15, 42, 49, 94], "work": [36, 95, 99, 105, 106], "workaround": 105, "worker": 0, "would": [24, 50, 100], "write": [21, 32, 53, 81, 85, 92, 95, 99, 101, 103], "written": [30, 31, 38], "wrong": [2, 29, 36, 103], "wsl": 105, "x": [0, 21, 22, 29, 47], "yaml": [0, 46, 47, 49, 52, 54, 101, 102, 103, 104, 105], "yaml_filepath": 0, "yaml_path": [0, 13, 48, 106], "yaml_to_markdown": [0, 28], "ye": 45, "yet": [32, 35, 103], "yml": [0, 99], "you": [0, 2, 5, 6, 7, 8, 9, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 84, 88, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106], "your": [0, 6, 15, 29, 32, 33, 34, 37, 39, 40, 47, 48, 52, 53, 58, 59, 67, 73, 77, 86, 87, 88, 89, 90, 91, 92, 96, 99, 101, 102, 103, 105], "your_api_bas": 54, "your_api_kei": [54, 105], "your_cohere_api_kei": 73, "your_dir_path": 36, "your_jina_api_kei": 77, "your_result_column": 47, "yourself": [25, 95], "yyyi": 69, "z": [25, 95, 97], "zero": [22, 85, 90]}, "titles": ["autorag package", "autorag.data package", "autorag.data.chunk package", "autorag.data.corpus package", "autorag.data.legacy package", "autorag.data.legacy.corpus package", "autorag.data.legacy.qacreation package", "autorag.data.parse package", "autorag.data.qa package", "autorag.data.qa.filter package", "autorag.data.qa.generation_gt package", "autorag.data.qa.query package", "autorag.data.qacreation package", "autorag.data.utils package", "autorag.evaluation package", "autorag.evaluation.metric package", "autorag.nodes package", "autorag.nodes.generator package", "autorag.nodes.passageaugmenter package", "autorag.nodes.passagecompressor package", "autorag.nodes.passagefilter package", "autorag.nodes.passagereranker package", "autorag.nodes.passagereranker.tart package", "autorag.nodes.promptmaker package", "autorag.nodes.queryexpansion package", "autorag.nodes.retrieval package", "autorag.schema package", "autorag.utils package", "autorag", "Chunk", "Langchain Chunk", "Llama Index Chunk", "Data Creation", "Dataset Format", "Legacy", "RAGAS evaluation data generation", "Start creating your own evaluation data", "Clova", "Langchain Parse", "Llama Parse", "Parse", "Table Hybrid Parse", "Answer Generation", "Filtering", "QA creation", "Query Generation", "Evaluation data creation tutorial", "API endpoint", "Web Interface", "Generation Metrics", "Retrieval Metrics", "Retrieval Token Metrics", "AutoRAG documentation", "Installation and Setup", "Configure LLM &amp; Embedding models", "Migration Guide", "8. Generator", "llama_index LLM", "OpenAI LLM", "vllm", "Available List", "3. Passage Augmenter", "Prev Next Augmenter", "Long LLM Lingua", "6. Passage_Compressor", "Refine", "Tree Summarize", "5. Passage Filter", "Percentile Cutoff", "Recency Filter", "Similarity Percentile Cutoff", "Similarity Threshold Cutoff", "Threshold Cutoff", "cohere_reranker", "Colbert Reranker", "Flag Embedding LLM Reranker", "Flag Embedding Reranker", "jina_reranker", "Ko-reranker", "MonoT5", "4. Passage_Reranker", "RankGPT", "Sentence Transformer Reranker", "TART", "Time Reranker", "UPR", "F-String", "Long Context Reorder", "7. Prompt Maker", "Window Replacement", "HyDE", "Multi Query Expansion", "Query Decompose", "<strong>1. Query Expansion</strong>", "BM25", "Hybrid - cc", "Hybrid - rrf", "2. Retrieval", "Vectordb", "Make a custom config YAML file", "Folder Structure", "How optimization works", "Strategy", "Road to Modular RAG", "Structure", "TroubleShooting", "Tutorial"], "titleterms": {"": 50, "0": [50, 51], "1": [29, 30, 31, 37, 38, 40, 43, 44, 45, 46, 48, 49, 50, 51, 58, 93, 105, 106], "2": [29, 30, 31, 37, 38, 40, 44, 45, 46, 48, 49, 50, 51, 58, 97, 105, 106], "3": [29, 30, 31, 38, 40, 44, 45, 46, 48, 49, 50, 51, 55, 58, 61, 105, 106], "4": [29, 31, 38, 40, 44, 46, 49, 50, 80, 105], "5": [31, 38, 44, 49, 50, 67, 105], "6": [38, 44, 49, 50, 64, 105], "7": [38, 88], "8": 56, "For": 94, "If": 36, "The": [37, 105], "about": 103, "accur": 58, "add": [29, 54], "addit": [95, 96], "all": [38, 101], "also": 106, "an": 106, "ani": 94, "answer": [42, 44], "api": [38, 47, 53, 105, 106], "appli": [50, 51], "augment": [61, 62], "auto": [36, 58], "autorag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 48, 50, 51, 52, 103, 106], "autotoken": 94, "avail": [29, 30, 31, 38, 41, 60], "averag": 50, "backend": 98, "base": [2, 6, 7, 10, 12, 17, 18, 19, 20, 21, 23, 24, 25, 26, 43], "basic": [32, 42, 50, 51], "befor": [73, 77], "benefit": [61, 64, 67, 80, 93], "bert": 49, "best": 101, "between": 67, "bleu": 49, "bm25": [25, 94], "both": 36, "build": [53, 105], "can": [52, 101], "cc": 95, "charact": 30, "check": [29, 40], "chunk": [2, 29, 30, 31, 46], "chunker": [0, 29], "cli": [0, 48, 106], "clova": [7, 37], "coher": [21, 49], "cohere_rerank": 73, "colab": 106, "colbert": [21, 74], "column": [29, 40], "come": 37, "command": 106, "complet": 45, "concept": [32, 45, 104], "concis": 42, "config": [56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 106], "configur": [54, 102], "consist": 49, "contact": 103, "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 33, 44], "context": 87, "corpu": [3, 5, 33, 35, 36, 46], "could": 105, "creat": [36, 106], "creation": [32, 44, 46, 55], "csv": [38, 100], "cumul": 50, "custom": [35, 36, 99, 106], "cutoff": [68, 70, 71, 72], "dashboard": [0, 106], "data": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 32, 35, 36, 44, 46, 55, 100, 105], "data_path_glob": 40, "dataset": [33, 106], "decompos": 92, "default": 92, "definit": [49, 50, 51, 56, 61, 64, 67, 80, 88, 93, 97], "deploi": [0, 106], "detect": [37, 41], "didn": 106, "differ": [67, 105], "discount": 50, "do": 101, "doc_id": 33, "document": [36, 52], "don": 43, "dontknow": 9, "dure": 106, "earli": 103, "ecosystem": 52, "embed": [54, 75, 76], "endpoint": 47, "environ": 99, "error": [105, 106], "eval": 49, "evalu": [0, 14, 15, 35, 36, 46, 101, 106], "exampl": [29, 30, 31, 37, 38, 39, 41, 45, 48, 50, 51, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102, 104], "exist": 36, "expans": [91, 93], "explan": [95, 96, 104], "extract": [39, 106], "extract_evid": 8, "f": 86, "f1": [50, 51], "face": 105, "factoid": 45, "featur": [29, 36], "file": [29, 38, 40, 56, 61, 64, 67, 80, 88, 93, 97, 99, 106], "filter": [9, 43, 44, 67, 69], "find": 106, "first": 106, "flag": [75, 76], "flag_embed": 21, "flag_embedding_llm": 21, "fluenci": 49, "folder": [29, 40, 48, 100, 106], "format": [33, 106], "from": [35, 36, 37, 53, 105], "fstring": 23, "g": 49, "gain": 50, "gener": [14, 15, 17, 35, 42, 44, 45, 49, 56], "generation_gt": [10, 33, 36], "get": [44, 52], "gpu": [59, 105], "gradio": 48, "gt": 44, "guid": 55, "have": [36, 38], "help": 52, "hop": 45, "how": [30, 31, 38, 49, 52, 101], "html": [37, 38], "huggingfac": 94, "hybrid": [41, 95, 96], "hybrid_cc": 25, "hybrid_rrf": 25, "hyde": [24, 90], "i": [29, 30, 31, 36, 38, 61, 64, 67, 80, 93, 99, 101, 103, 105], "import": 105, "increment": 45, "index": [31, 36, 54, 100], "inform": 37, "instal": [53, 105], "instanc": [29, 40], "instead": 48, "interfac": [48, 106], "jina": 21, "jina_rerank": 77, "json": [38, 100], "kei": 53, "know": [43, 103], "ko": 78, "ko_kiwi": 94, "ko_kkma": 94, "ko_okt": 94, "korean": [53, 94], "korerank": 21, "langchain": [3, 5, 30, 38], "langchain_chunk": 2, "langchain_pars": 7, "languag": 39, "legaci": [4, 5, 6, 34], "length": 105, "line": [99, 100, 103, 104, 106], "lingua": 63, "list": 60, "llama": [31, 39], "llama_gen_queri": 11, "llama_index": [3, 5, 6, 12, 57], "llama_index_chunk": 2, "llama_index_gen_gt": 10, "llama_index_llm": 17, "llamaindex": [42, 105], "llamapars": 7, "llm": [43, 54, 57, 58, 63, 75, 105], "log": 58, "long": [33, 63, 87], "long_context_reord": 23, "longllmlingua": 19, "make": [36, 99], "maker": 88, "map": [46, 50], "markdown": 38, "mean": [50, 102], "merger": 103, "metadata": 33, "meteor": 49, "method": [30, 31, 38], "metric": [15, 49, 50, 51], "metricinput": 26, "migrat": 55, "model": [35, 54, 79], "modeling_enc_t5": 22, "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 40, 41, 54, 56, 57, 58, 59, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 104], "modular": 103, "monot5": [21, 79], "more": [54, 101, 103], "mrr": 50, "multi": [59, 91], "multi_query_expans": 24, "multipl": 36, "must": 38, "name": [29, 79], "ndcg": 50, "need": [38, 101], "next": [62, 101, 106], "node": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 56, 61, 64, 67, 80, 88, 93, 96, 97, 99, 100, 101, 103, 104, 106], "node_lin": 0, "normal": [50, 102], "note": 106, "occur": 106, "ollama": 105, "onli": 36, "openai": [42, 53, 58, 105], "openai_gen_gt": 10, "openai_gen_queri": 11, "openai_llm": [17, 58], "optim": [46, 101, 105, 106], "origin": 105, "output": [29, 40, 58], "overview": [29, 36, 40, 44, 45, 46, 56, 64, 80, 88, 93, 97, 102], "own": 36, "packag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "paramet": [38, 40, 41, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102], "pars": [7, 38, 39, 40, 41, 46], "parser": [0, 37, 40], "pass": 101, "pass_compressor": [19, 64], "pass_passage_augment": [18, 61], "pass_passage_filt": [20, 67], "pass_query_expans": [24, 93], "pass_rerank": [21, 80], "passag": [36, 61, 67], "passage_compressor": 64, "passage_rerank": 80, "passageaugment": 18, "passagecompressor": 19, "passagefilt": 20, "passagererank": [21, 22], "path": 48, "pdf": 38, "percentil": [68, 70], "percentile_cutoff": 20, "pipelin": [29, 40, 106], "point": 37, "polici": 103, "porter_stemm": 94, "pre_retrieve_node_lin": 100, "precis": [50, 51], "prepar": 106, "preprocess": 27, "prev": 62, "prev_next_augment": 18, "prob": 58, "project": [29, 40, 48, 100, 106], "prompt": [9, 10, 11, 36, 58, 88, 92], "promptmak": 23, "purpos": [56, 64, 97], "python": 106, "qa": [8, 9, 10, 11, 33, 35, 36, 44, 46], "qacreat": [6, 12], "qid": 33, "queri": [11, 33, 36, 44, 45, 91, 92, 93], "query_decompos": 24, "query_expans": 100, "queryexpans": 24, "question": [35, 43, 44, 45], "rag": [103, 106], "raga": [6, 12, 35], "rank": [50, 102], "rankgpt": [21, 81], "raw": 36, "recal": [50, 51], "recenc": [20, 69], "reciproc": 50, "refin": [19, 65], "relat": 105, "relev": 49, "reorder": 87, "replac": 89, "requesttimeout": 105, "rerank": [67, 74, 75, 76, 78, 82, 84], "resourc": 100, "restart": 106, "result": [29, 40, 101, 106], "retriev": [14, 15, 25, 44, 50, 51, 97], "retrieval_cont": [14, 15], "retrieval_gt": [33, 50], "retrieve_node_lin": 100, "road": 103, "roug": 49, "row": 105, "rrf": 96, "rule": 43, "run": [2, 7, 17, 18, 19, 20, 21, 23, 24, 25, 29, 40, 47, 48, 105, 106], "runner": 48, "sampl": [8, 33, 44, 100], "save": [36, 44], "schema": [8, 26], "score": [49, 50], "see": 106, "sem": 49, "sem_scor": 56, "semant": 31, "sentenc": [29, 30, 31, 82], "sentence_transform": 21, "separ": 37, "server": [47, 106], "set": [29, 35, 40], "setup": 53, "short": 33, "similar": [70, 71], "similarity_percentile_cutoff": 20, "similarity_threshold_cutoff": 20, "simpl": [6, 12, 31], "sourc": 53, "space": 94, "specif": 49, "specifi": [29, 40, 48, 99, 106], "splitter": 29, "start": [29, 36, 40, 52], "step": 106, "stori": 33, "strategi": [0, 56, 64, 80, 88, 93, 97, 101, 102, 104], "streamlit": 48, "string": 86, "structur": [100, 104], "submodul": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "subpackag": [0, 1, 4, 8, 14, 16, 21], "summar": [66, 104], "summari": 100, "support": [0, 29, 39, 40, 54, 56, 64, 79, 80, 88, 93, 97, 98], "swap": 101, "system": 106, "t": [43, 101, 106], "tabl": [37, 39, 41], "table_hybrid_pars": 7, "tart": [22, 83], "test": 106, "text": 37, "threshold": [71, 72], "threshold_cutoff": 20, "time": 84, "time_rerank": 21, "token": [30, 31, 51, 58, 94], "tokenization_enc_t5": 22, "transform": 82, "tree": 66, "tree_summar": 19, "trial": [48, 100, 106], "trial_path": 106, "troubl": [53, 94], "troubleshoot": 105, "truncat": 58, "tupl": 99, "tutori": [46, 106], "two": 45, "type": [35, 38, 45], "u": 103, "unanswer": 43, "understand": 50, "unicodedecodeerror": 105, "upr": [21, 85], "us": [29, 30, 31, 35, 36, 38, 48, 49, 54, 58, 59, 94, 99, 101, 102, 106], "usag": [45, 73, 77], "util": [13, 14, 15, 16, 27], "v0": 55, "valid": [0, 106], "variabl": 99, "vectordb": [25, 98], "version": 103, "vllm": [17, 54, 59], "want": [29, 40, 48, 103, 106], "web": [0, 48, 106], "what": [36, 61, 64, 67, 80, 93, 99, 103, 106], "wheel": 105, "when": 36, "while": 105, "why": [48, 52, 58, 59, 106], "window": [31, 89], "window_replac": 23, "work": 101, "write": 106, "xml": 38, "yaml": [29, 30, 31, 37, 38, 39, 40, 41, 48, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 106], "you": 36, "your": [36, 54, 106]}})
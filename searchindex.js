Search.setIndex({"docnames": ["api_spec/autorag", "api_spec/autorag.data", "api_spec/autorag.evaluate", "api_spec/autorag.evaluate.metric", "api_spec/autorag.nodes", "api_spec/autorag.nodes.generator", "api_spec/autorag.nodes.passagecompressor", "api_spec/autorag.nodes.passagereranker", "api_spec/autorag.nodes.passagereranker.tart", "api_spec/autorag.nodes.promptmaker", "api_spec/autorag.nodes.queryexpansion", "api_spec/autorag.nodes.retrieval", "api_spec/autorag.schema", "api_spec/autorag.utils", "api_spec/modules", "data_creation/data_format", "data_creation/tutorial", "deploy/api_endpoint", "index", "install", "local_model", "nodes/generator/generator", "nodes/generator/llama_index_llm", "nodes/index", "nodes/passage_compressor/passage_compressor", "nodes/passage_compressor/tree_summarize", "nodes/passage_reranker/monot5", "nodes/passage_reranker/passage_reranker", "nodes/passage_reranker/tart", "nodes/passage_reranker/upr", "nodes/prompt_maker/fstring", "nodes/prompt_maker/prompt_maker", "nodes/query_expansion/hyde", "nodes/query_expansion/query_decompose", "nodes/query_expansion/query_expansion", "nodes/retrieval/bm25", "nodes/retrieval/hybrid_cc", "nodes/retrieval/hybrid_rrf", "nodes/retrieval/retrieval", "nodes/retrieval/vectordb", "optimization/custom_config", "optimization/folder_structure", "optimization/optimization", "roadmap/modular_rag", "structure", "troubleshooting", "tutorial"], "filenames": ["api_spec/autorag.rst", "api_spec/autorag.data.rst", "api_spec/autorag.evaluate.rst", "api_spec/autorag.evaluate.metric.rst", "api_spec/autorag.nodes.rst", "api_spec/autorag.nodes.generator.rst", "api_spec/autorag.nodes.passagecompressor.rst", "api_spec/autorag.nodes.passagereranker.rst", "api_spec/autorag.nodes.passagereranker.tart.rst", "api_spec/autorag.nodes.promptmaker.rst", "api_spec/autorag.nodes.queryexpansion.rst", "api_spec/autorag.nodes.retrieval.rst", "api_spec/autorag.schema.rst", "api_spec/autorag.utils.rst", "api_spec/modules.rst", "data_creation/data_format.md", "data_creation/tutorial.md", "deploy/api_endpoint.md", "index.rst", "install.md", "local_model.md", "nodes/generator/generator.md", "nodes/generator/llama_index_llm.md", "nodes/index.md", "nodes/passage_compressor/passage_compressor.md", "nodes/passage_compressor/tree_summarize.md", "nodes/passage_reranker/monot5.md", "nodes/passage_reranker/passage_reranker.md", "nodes/passage_reranker/tart.md", "nodes/passage_reranker/upr.md", "nodes/prompt_maker/fstring.md", "nodes/prompt_maker/prompt_maker.md", "nodes/query_expansion/hyde.md", "nodes/query_expansion/query_decompose.md", "nodes/query_expansion/query_expansion.md", "nodes/retrieval/bm25.md", "nodes/retrieval/hybrid_cc.md", "nodes/retrieval/hybrid_rrf.md", "nodes/retrieval/retrieval.md", "nodes/retrieval/vectordb.md", "optimization/custom_config.md", "optimization/folder_structure.md", "optimization/optimization.md", "roadmap/modular_rag.md", "structure.md", "troubleshooting.md", "tutorial.md"], "titles": ["autorag package", "autorag.data package", "autorag.evaluate package", "autorag.evaluate.metric package", "autorag.nodes package", "autorag.nodes.generator package", "autorag.nodes.passagecompressor package", "autorag.nodes.passagereranker package", "autorag.nodes.passagereranker.tart package", "autorag.nodes.promptmaker package", "autorag.nodes.queryexpansion package", "autorag.nodes.retrieval package", "autorag.schema package", "autorag.utils package", "autorag", "Dataset Format", "Start creating your own evaluation data", "API endpoint", "AutoRAG documentation", "Installation and Setup", "Configure LLM &amp; Embedding models", "6. Generator", "llama_index LLM", "Available List", "4. Passage_Compressor", "Tree Summarize", "MonoT5", "3. Passage_Reranker", "TART", "UPR", "F-String", "5. Prompt Maker", "HyDE", "Query Decompose", "<strong>1. Query Expansion</strong>", "BM25", "Hybrid - cc", "Hybrid - rrf", "2. Retrieval", "Vectordb", "Make custom config yaml file", "Folder Structure", "How optimization works", "Road to Modular RAG", "Structure", "TroubleShooting", "Tutorial"], "terms": {"data": [0, 9, 10, 11, 14, 15, 17, 18, 21, 24, 27, 34, 39, 44, 46], "metric": [0, 2, 5, 6, 9, 10, 11, 15, 21, 24, 27, 31, 34, 38, 40, 41, 43, 44, 45], "gener": [0, 4, 7, 9, 10, 13, 14, 15, 16, 20, 22, 23, 24, 29, 31, 32, 34, 36, 37, 42, 43, 44, 45], "retriev": [0, 4, 6, 7, 8, 9, 10, 14, 15, 20, 23, 24, 25, 27, 29, 31, 32, 34, 35, 36, 37, 39, 40, 42, 43, 44], "retrieval_cont": [0, 14], "evaluate_gener": [0, 2], "evaluate_retriev": [0, 2], "evaluate_retrieval_cont": [0, 2], "node": [0, 13, 14, 15, 20, 22, 23, 32, 33, 46], "base": [0, 3, 4, 8, 12, 16, 22, 25, 26, 27, 28, 29, 30, 36, 37, 38, 43, 44], "llama_index_llm": [0, 4, 9, 20, 21, 22, 31, 42, 43, 45], "run": [0, 4, 8, 12, 14, 18, 19, 24, 36, 37, 41, 42, 46], "passagecompressor": [0, 4], "tree_summar": [0, 4, 20, 24, 25], "passagererank": [0, 4], "monot5": [0, 4, 23, 27], "upr": [0, 4, 23, 27, 43], "promptmak": [0, 4], "fstring": [0, 4, 23, 30, 31, 43], "queryexpans": [0, 4], "hyde": [0, 4, 20, 23, 34], "query_decompos": [0, 4, 20, 23, 33, 34], "bm25": [0, 4, 10, 23, 34, 36, 37, 38, 40, 41, 43], "hybrid_cc": [0, 4, 23, 34, 36, 37, 38], "hybrid_rrf": [0, 4, 23, 34, 36, 37, 38, 40], "vectordb": [0, 4, 10, 20, 23, 34, 35, 36, 37, 38, 40, 41], "schema": [0, 14], "from_dict": [0, 12], "module_param": [0, 5, 6, 7, 9, 10, 11, 12, 13], "module_typ": [0, 9, 10, 12, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45], "get_param_combin": [0, 12], "node_param": [0, 12], "node_typ": [0, 9, 12, 20, 21, 24, 27, 31, 34, 38, 40, 43, 45], "run_nod": [0, 12], "extract_valu": [0, 12], "extract_values_from_nod": [0, 12], "module_type_exist": [0, 12], "util": [0, 14, 16, 27, 31, 34, 37, 38], "preprocess": [0, 14], "cast_corpus_dataset": [0, 13], "cast_qa_dataset": [0, 13], "validate_corpus_dataset": [0, 13], "validate_qa_dataset": [0, 13], "convert_string_to_tuple_in_dict": [0, 13], "explod": [0, 13], "fetch_cont": [0, 13], "find_best_result_path": [0, 13], "load_summary_fil": [0, 13], "make_combin": [0, 13], "normalize_str": [0, 13], "process_batch": [0, 13], "replace_value_in_dict": [0, 13], "result_to_datafram": [0, 13], "class": [0, 8, 12, 15, 20, 28, 39], "runner": [0, 14, 17, 46], "config": [0, 8, 9, 20, 43, 45], "dict": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13], "project_dir": [0, 9, 10, 11], "str": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13], "none": [0, 6, 8, 13, 21, 24, 31, 35], "sourc": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 36, 37, 39], "object": [0, 12, 22, 25, 32, 33], "classmethod": [0, 12], "from_trial_fold": [0, 14, 17], "trial_path": [0, 46], "load": [0, 11, 13, 15, 16, 19], "from": [0, 3, 5, 7, 8, 9, 10, 11, 12, 13, 15, 17, 20, 22, 24, 27, 30, 31, 33, 34, 36, 37, 38, 41, 42, 43, 44, 46], "trial": [0, 17, 46], "folder": [0, 17, 19, 43, 46], "must": [0, 3, 6, 7, 9, 11, 13, 15, 16, 17, 20, 26, 30, 36, 37, 40, 43, 44, 46], "alreadi": [0, 8, 11, 42], "us": [0, 5, 6, 7, 8, 9, 10, 11, 15, 17, 18, 19, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46], "It": [0, 3, 5, 6, 7, 9, 11, 12, 13, 15, 17, 22, 25, 27, 28, 29, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46], "set": [0, 5, 6, 7, 8, 9, 11, 16, 18, 19, 20, 21, 22, 24, 25, 27, 29, 31, 32, 33, 34, 40, 41, 42, 43, 44, 45], "parent": 0, "directori": [0, 5, 6, 7, 9, 10, 11, 13, 46], "paramet": [0, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 40, 41, 42, 44, 45, 46], "The": [0, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46], "path": [0, 7, 13, 16, 17, 46], "return": [0, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 22, 39], "initi": [0, 7, 8, 10, 20, 27, 29, 45], "from_yaml": [0, 14, 17, 46], "yaml_path": 0, "yaml": [0, 9, 17, 18, 20, 42, 43, 44, 45], "file": [0, 3, 7, 9, 11, 13, 15, 17, 18, 19, 20, 36, 37, 41, 42, 43, 44, 45], "extract": [0, 12, 17, 36, 37], "extract_best_config": [0, 14, 46], "method": [0, 8, 11, 12, 21, 31, 34, 35, 38, 40, 42, 45], "queri": [0, 6, 7, 8, 9, 10, 11, 14, 16, 17, 24, 26, 27, 28, 30, 31, 32, 38, 39, 42, 43], "result_column": [0, 14, 17], "generated_text": 0, "pipelin": [0, 17, 18, 36, 37, 41, 42, 43], "start": [0, 13, 46], "singl": [0, 8, 13, 15, 18, 33, 40, 41, 43, 44], "so": [0, 6, 11, 15, 16, 19, 31, 36, 37, 40, 41, 42, 43, 46], "first": [0, 5, 11, 18, 19, 27, 39, 40, 41, 42, 43, 46], "query_expans": [0, 10, 23, 31, 34, 42], "user": [0, 15, 16, 17, 29, 31, 38, 41, 43, 46], "result": [0, 3, 5, 6, 7, 9, 10, 11, 13, 17, 18, 27, 31, 34, 36, 37, 38, 41, 43, 46], "column": [0, 5, 6, 7, 9, 11, 13, 15, 17, 46], "name": [0, 7, 11, 21, 24, 27, 31, 34, 38, 41, 46], "answer": [0, 8, 9, 10, 15, 16, 17, 28, 30, 31, 43], "default": [0, 6, 7, 8, 9, 10, 11, 13, 15, 17, 20, 22, 25, 26, 28, 29, 32, 33, 36, 37, 40, 44], "i": [0, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46], "which": [0, 3, 5, 8, 9, 10, 11, 13, 15, 18, 22, 24, 25, 31, 32, 33, 35, 36, 37, 40, 42, 43, 45, 46], "output": [0, 6, 7, 16, 17, 29, 34, 45], "run_api_serv": [0, 14, 17, 46], "host": [0, 17, 46], "0": [0, 8, 11, 17, 21, 22, 33, 34, 36, 38, 41, 42, 45, 46], "port": [0, 17, 46], "int": [0, 5, 6, 7, 8, 10, 11, 13], "8000": [0, 17, 46], "kwarg": [0, 6, 8, 22, 25, 32, 33], "api": [0, 11, 16, 39, 46], "server": [0, 18, 39, 45, 46], "you": [0, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46], "can": [0, 3, 6, 7, 8, 9, 13, 15, 16, 17, 19, 20, 21, 22, 24, 25, 27, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46], "send": 0, "post": [0, 17, 43], "request": [0, 17, 43], "http": [0, 6, 7, 8, 10, 17, 18, 19, 20, 43], "json": [0, 16, 17, 46], "bodi": [0, 17], "like": [0, 9, 10, 11, 15, 17, 19, 20, 22, 24, 25, 29, 31, 32, 33, 36, 37, 40, 42, 43, 45, 46], "below": [0, 19, 43, 45, 46], "your": [0, 15, 17, 18, 19, 30, 31, 40, 42, 43, 45], "And": [0, 5, 10, 11, 17, 18, 19, 40, 42, 43, 46], "respons": [0, 16, 17, 24, 34], "other": [0, 5, 11, 13, 15, 19, 22, 24, 25, 32, 33, 36, 37, 41, 43, 46], "argument": [0, 13, 22, 25, 32, 33], "uvicorn": 0, "runnerinput": [0, 14], "basemodel": 0, "output_path": [0, 46], "optim": [0, 15, 18, 24, 36, 37, 40, 41, 43, 44], "want": [0, 6, 8, 9, 11, 12, 13, 15, 18, 19, 20, 40, 42, 44, 46], "save": [0, 5, 15, 40, 46], "yml": [0, 40], "If": [0, 6, 7, 8, 9, 10, 13, 15, 18, 19, 35, 40, 41, 42, 43, 44, 45, 46], "doe": [0, 5, 8, 11, 21, 22, 24, 27, 40, 42, 43], "just": [0, 11, 15, 43, 46], "valu": [0, 8, 12, 13, 15, 20, 40, 42], "dictionari": [0, 11, 13, 15, 16, 26], "extract_node_line_nam": [0, 14], "config_dict": 0, "list": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 22, 25, 28, 32, 33, 36, 37, 40], "line": [0, 5, 6, 7, 9, 10, 11, 21, 24, 27, 31, 34, 38, 46], "given": [0, 8, 11, 16, 26, 28, 32, 42], "order": 0, "configur": [0, 18, 21, 22, 24, 25, 27, 29, 31, 32, 33, 34, 37, 38, 42, 44, 46], "thi": [0, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], "access": [0, 27], "trail_fold": 0, "extract_node_strategi": [0, 14], "type": [0, 8, 9, 11, 12, 13, 15, 16, 17, 20, 21, 34, 38, 43, 46], "its": [0, 6, 9, 11, 12, 15, 28, 31, 34, 39, 42, 43], "kei": [0, 3, 12, 13, 15, 20, 39, 45, 46], "summary_df_to_yaml": [0, 14], "summary_df": [0, 11], "datafram": [0, 5, 6, 7, 9, 10, 11, 12, 13], "convert": [0, 13, 16, 40], "summari": [0, 5, 11, 13, 42, 46], "qa_data_path": [0, 46], "corpus_data_path": [0, 46], "start_trial": [0, 14, 46], "make_node_lin": [0, 14], "node_line_dict": 0, "make": [0, 7, 8, 9, 11, 13, 15, 18, 19, 22, 24, 25, 30, 31, 32, 33, 42, 43, 46], "param": [0, 7, 8, 9, 10, 13, 41], "get": [0, 5, 11, 17, 19, 22, 40, 42, 43, 45, 46], "input": [0, 5, 8, 10, 11, 15, 22, 24, 30, 42, 43], "insid": [0, 46], "run_node_lin": [0, 14], "node_line_dir": [0, 5, 6, 7, 9, 10, 11, 12], "previous_result": [0, 5, 6, 7, 9, 10, 11, 12], "whole": [0, 42, 46], "each": [0, 10, 11, 12, 13, 15, 36, 37, 40, 41, 42, 43, 44], "A": [0, 3, 5, 8, 9, 11, 13, 15, 21, 34, 42, 43, 44], "": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 18, 20, 22, 24, 25, 29, 30, 31, 32, 33, 38, 42, 43, 46], "previou": [0, 5, 6, 7, 9, 10, 11, 42, 43], "qa": [0, 9, 10, 11, 41, 46], "parquet": [0, 11, 15, 16, 41, 46], "final": [0, 36, 37, 42, 43], "avoid_empty_result": [0, 14], "return_index": 0, "decor": [0, 13], "avoid": 0, "empti": [0, 6, 15], "function": [0, 6, 8, 9, 11, 12, 13, 28, 37, 44], "when": [0, 6, 7, 8, 9, 10, 19, 20, 36, 37, 39, 40, 41, 44, 45, 46], "func": [0, 3, 5, 6, 7, 9, 10, 11], "an": [0, 6, 11, 15, 18, 19, 24, 27, 30, 39, 42, 43, 45, 46], "origin": [0, 29], "tupl": [0, 5, 7, 8, 11, 12, 13, 36, 37], "check": [0, 12, 15, 18, 19, 20, 40, 41, 43, 45, 46], "all": [0, 8, 10, 13, 15, 18, 21, 31, 34, 38, 40, 41, 42, 43, 44, 45, 46], "keep": [0, 13, 40, 46], "index": [0, 5, 6, 13, 22], "filter_by_threshold": [0, 14], "threshold": [0, 21, 24, 27, 31, 34, 38, 40, 44], "metadata": [0, 16], "filter": 0, "have": [0, 11, 13, 15, 16, 19, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46], "same": [0, 10, 11, 13, 17, 41, 42, 44, 46], "length": [0, 6, 11, 13], "even": [0, 36, 37], "did": 0, "give": 0, "measure_spe": [0, 14], "arg": [0, 8], "measur": [0, 31, 34, 38], "execut": [0, 11, 13, 20, 34], "speed": [0, 7, 21, 24, 27, 29, 31, 34, 38, 40, 44], "select_best_averag": [0, 14], "iter": 0, "ani": [0, 8, 13, 15, 18, 19, 31, 34, 38, 43, 44, 45], "select": [0, 5, 6, 7, 9, 10, 11, 41, 42, 43, 44], "best": [0, 5, 6, 7, 9, 10, 11, 13, 18, 36, 37, 41, 43, 46], "averag": [0, 31, 34, 38], "among": [0, 5, 6, 7, 9, 10, 11, 42], "pd": [0, 13, 16], "standard": 0, "one": [0, 6, 7, 8, 9, 13, 15, 16, 17, 40, 41, 42, 44, 45], "dynamically_find_funct": [0, 14], "target_dict": [0, 13], "callabl": [0, 5, 6, 7, 9, 10, 11, 12], "get_support_modul": [0, 14], "module_nam": [0, 11], "get_support_nod": [0, 14], "node_nam": 0, "handle_except": [0, 14], "exc_typ": 0, "exc_valu": 0, "exc_traceback": 0, "bleu": [2, 3, 21, 31, 40, 43, 45], "generation_metr": [2, 3], "huggingface_evalu": [2, 3], "meteor": [2, 3, 21, 31, 40, 43, 45], "roug": [2, 3, 21, 31, 40, 43, 45], "retrieval_f1": [2, 3, 10, 27, 34, 38], "retrieval_metr": [2, 3], "retrieval_precis": [2, 3, 27, 34, 38], "retrieval_recal": [2, 3, 10, 27, 34, 38, 43], "retrieval_contents_metr": [2, 3], "retrieval_token_f1": [2, 3, 24], "retrieval_token_precis": [2, 3, 24], "retrieval_token_recal": [2, 3, 24], "single_token_f1": [2, 3], "generation_gt": [2, 3, 5, 9, 16], "retrieval_gt": [2, 10, 11], "gt": [3, 15, 42], "pred": 3, "float": [3, 5, 7, 8, 11], "comput": [3, 7, 8, 24, 29], "score": [3, 6, 7, 8, 11, 24, 35, 36, 37, 38], "instanc": [3, 5, 6, 8, 11, 15, 20, 22], "huggingfac": [3, 10, 15, 20, 46], "ground": [3, 11, 15, 21, 42], "truth": [3, 11, 15, 21, 42], "2": [3, 10, 11, 15, 20, 33, 34, 46], "d": [3, 11, 13, 15, 17], "string": [3, 9, 11, 13, 15, 29, 31], "llm": [3, 5, 6, 10, 15, 16, 18, 19, 21, 23, 24, 25, 30, 31, 32, 33, 34, 42, 43], "becaus": [3, 7, 9, 11, 15, 20, 24, 29, 36, 37, 39, 43, 45], "multipl": [3, 9, 10, 11, 33, 36, 37, 40, 41, 42, 43, 44], "f1": [3, 24], "id": [3, 5, 6, 7, 8, 11, 13, 15, 38], "contain": [3, 5, 6, 7, 8, 9, 10, 11, 13, 15, 16, 30, 41, 42, 44, 45, 46], "connect": [3, 39], "between": [3, 36], "predict": [3, 7], "mean": [3, 6, 7, 13, 15, 41, 42, 44, 45], "calcul": [3, 24, 29, 36, 37], "item": 3, "ground_truth": 3, "submodul": [4, 14], "generator_nod": [4, 5], "evaluate_generator_nod": [4, 5], "run_generator_nod": [4, 5], "make_llm": [4, 6], "passage_compressor_nod": [4, 6], "evaluate_passage_compressor_nod": [4, 6], "make_contents_gt": [4, 6], "run_passage_compressor_nod": [4, 6], "tart": [4, 7, 23, 27], "modeling_enc_t5": [4, 7], "tokenization_enc_t5": [4, 7], "passage_reranker_nod": [4, 7], "mono_t5_pur": [4, 7], "run_passage_reranker_nod": [4, 7], "calculate_likelihood": [4, 7], "upr_pur": [4, 7], "prompt_maker_nod": [4, 9], "evaluate_generator_result": [4, 9], "evaluate_one_prompt_maker_nod": [4, 9], "make_generator_callable_param": [4, 9], "run_prompt_maker_nod": [4, 9], "query_expansion_nod": [4, 10], "hyde_pur": [4, 10], "query_decompose_pur": [4, 10], "evaluate_one_query_expansion_nod": [4, 10], "make_retrieval_callable_param": [4, 10], "run_query_expansion_nod": [4, 10], "cast_queri": [4, 11], "evenly_distribute_passag": [4, 11], "load_bm25_corpu": [4, 11], "load_chroma_collect": [4, 11], "retrieval_nod": [4, 11], "run_retrieval_modul": [4, 11], "bm25_ingest": [4, 11], "bm25_pure": [4, 11], "bm25_token": [4, 11], "cc_pure": [4, 11], "rrf_calcul": [4, 11], "rrf_pure": [4, 11], "edit_summary_df_param": [4, 11], "evaluate_retrieval_nod": [4, 11], "get_hybrid_execution_tim": [4, 11], "get_ids_and_scor": [4, 11], "get_module_param": [4, 11], "run_retrieval_nod": [4, 11], "select_result_for_hybrid": [4, 11], "vectordb_ingest": [4, 11], "vectordb_pur": [4, 11], "prompt": [5, 6, 7, 9, 10, 22, 23, 29, 30, 33, 42, 43], "basellm": [5, 6, 10], "batch": [5, 6, 10, 11, 13, 22, 25, 32, 33, 45], "16": [5, 6, 7, 10, 22, 25, 29, 32, 33], "llama": [5, 6, 22], "text": [5, 6, 7, 13, 15, 16, 17, 21, 22, 25, 29], "right": [5, 43, 46], "log": [5, 22], "prob": [5, 22], "pseudo": 5, "meant": 5, "size": [5, 6, 7, 10, 27, 29, 45], "low": [5, 6], "face": [5, 6, 18], "some": [5, 6, 15, 19, 20, 42, 45], "error": [5, 6, 10, 11], "three": [5, 41, 43], "element": [5, 11, 12], "second": [5, 8, 41, 43], "token": [5, 7, 8, 11, 24], "gpt2token": 5, "third": 5, "result_df": [5, 6, 9, 11], "strategi": [5, 6, 7, 9, 10, 11, 12, 14, 15, 40, 43, 45], "evalu": [5, 6, 7, 9, 10, 11, 13, 14, 15, 18, 21, 24, 27, 31, 34, 36, 37, 38, 40, 41, 44], "includ": [5, 15, 22, 25, 31, 32, 33, 34, 36, 37, 44], "everi": [5, 8, 44], "could": [5, 6, 7, 9, 11], "maker": [5, 9, 23, 30, 43], "llm_name": 6, "retrieval_contents_gt": 6, "qa_data": 6, "corpus_data": [6, 11, 13, 16], "passag": [6, 7, 8, 9, 10, 11, 15, 24, 26, 27, 28, 29, 32, 35, 36, 37, 39, 43], "compressor": [6, 24, 25], "rerank": [6, 7, 8, 15, 24, 26, 27, 28, 29, 43], "retrieved_cont": [6, 7, 9, 11, 30, 31, 43], "retrieved_id": [6, 7, 11], "retrieve_scor": [6, 7, 11], "In": [6, 7, 10, 15, 18, 36, 37, 40, 41, 42, 43, 45], "we": [6, 7, 15, 16, 18, 19, 20, 21, 31, 34, 36, 37, 39, 40, 41, 42, 43, 45, 46], "skip": [6, 7, 9], "onli": [6, 7, 9, 13, 15, 22, 25, 32, 33, 41, 42, 43], "replac": [6, 13], "compress": [6, 24, 43], "chat_prompt": 6, "context_window": 6, "num_output": 6, "1": [6, 8, 10, 11, 13, 15, 21, 22, 33, 41, 42, 45, 46], "recurs": [6, 13, 25], "merg": [6, 25, 43, 44], "summar": [6, 23, 24], "them": [6, 8, 9, 10, 11, 15, 25, 36, 37, 42], "bottom": [6, 25], "up": [6, 15, 24, 25, 44], "fashion": [6, 25], "wrapper": 6, "llama_index": [6, 16, 20, 21, 23, 25, 32, 33], "response_synthes": 6, "treesummar": 6, "For": [6, 11, 15, 16, 19, 20, 42, 43, 45, 46], "more": [6, 7, 10, 11, 15, 21, 24, 27, 29, 31, 34, 35, 41, 44, 46], "inform": [6, 11, 15, 16, 22, 25, 27, 32, 33, 36, 37, 38, 39, 41, 43, 44, 46], "visit": [6, 11], "doc": [6, 15, 19, 33], "llamaindex": [6, 16, 20, 33, 43, 45], "ai": 6, "en": [6, 20, 26], "latest": 6, "exampl": [6, 10, 11, 15, 16, 20, 40, 42, 43, 45, 46], "html": 6, "do": [6, 15, 18, 19, 40, 41, 43], "pass": [6, 8, 9, 20, 22, 25, 32, 33, 43], "templat": [6, 16], "chat": [6, 45], "should": [6, 8, 16, 20, 45], "instead": [6, 7, 8], "At": [6, 20, 40, 42, 43], "specifi": [6, 15, 17, 20, 22, 25, 28, 32, 33, 34, 36, 37, 42, 44], "where": [6, 18, 24, 38, 41], "put": [6, 15, 45], "context_str": 6, "query_str": 6, "normal": [6, 11], "context": [6, 7, 29, 44], "window": 6, "amount": [6, 24], "enct5forsequenceclassif": [7, 8], "deparallel": [7, 8], "forward": [7, 8], "get_encod": [7, 8], "get_input_embed": [7, 8], "parallel": [7, 8, 11], "set_input_embed": [7, 8], "tart_pur": [7, 8], "enct5token": [7, 8], "build_inputs_with_special_token": [7, 8], "create_token_type_ids_from_sequ": [7, 8], "get_special_tokens_mask": [7, 8], "async": [7, 8, 10, 11, 13], "top_k": [7, 8, 10, 11, 27, 34, 38, 40, 43], "model": [7, 8, 9, 10, 11, 15, 16, 18, 19, 21, 22, 24, 25, 29, 31, 32, 33, 35, 39, 41, 42, 43, 44, 45], "devic": [7, 8], "token_false_id": 7, "token_true_id": 7, "relev": [7, 8, 10, 15, 24, 26, 27, 32, 34, 38], "rank": [7, 8, 11, 35, 37], "gpu": 7, "avail": 7, "otherwis": 7, "cpu": 7, "repres": [7, 39, 42], "fals": [7, 8, 29], "true": [7, 12, 19], "contents_list": [7, 8], "scores_list": [7, 8], "ids_list": [7, 8], "model_nam": [7, 26], "castorini": [7, 26], "3b": [7, 26], "msmarco": [7, 26], "10k": [7, 26], "number": [7, 8, 10, 11, 13, 24, 34, 41, 44, 46], "note": [7, 8, 36, 37], "creat": [7, 8, 10, 15, 18, 30, 36, 37, 41, 43, 46], "store": [7, 39], "twist": 7, "therefor": [7, 8, 16, 31, 34], "receiv": 7, "_": 7, "prefix_prompt": [7, 29], "suffix_prompt": [7, 29], "shard_siz": [7, 29], "use_bf16": [7, 29], "bool": [7, 8, 12], "pleas": [7, 10, 11, 19, 20, 29, 31, 34, 40, 43, 44, 45, 46], "write": [7, 10, 19, 29, 36, 37, 40, 42, 43], "question": [7, 8, 9, 10, 15, 16, 17, 18, 28, 29, 30, 31, 33, 43, 46], "github": [7, 8, 15, 18, 19, 43, 45, 46], "com": [7, 8, 18, 19, 43], "devsinghsachan": 7, "unsupervis": 7, "languag": [7, 10, 21, 22, 24, 25, 29, 32, 33, 44], "likelihood": [7, 29], "t5": [7, 8], "larg": [7, 21, 22, 24, 25, 26, 32, 33, 44], "shard": [7, 29], "larger": [7, 29], "faster": [7, 24, 29], "But": [7, 15, 18, 29, 40, 42, 43], "consum": [7, 18, 29], "memori": [7, 29, 45], "power": [7, 29, 43], "whether": [7, 8, 29], "bfloat16": [7, 29], "prefix": [7, 29], "serv": [7, 21, 24, 27, 29, 31, 34, 38, 44], "instruct": [7, 8, 15, 20, 28, 29], "stage": [7, 29], "what": [7, 10, 15, 18, 20, 29, 30, 31, 41, 44], "expect": [7, 15, 29], "suffix": [7, 29], "provid": [7, 22, 25, 26, 29, 32, 33, 46], "cue": [7, 29], "close": [7, 29], "signal": [7, 29], "how": [7, 10, 16, 22, 25, 29, 32, 33, 35, 39, 40, 41, 43, 46], "conclud": [7, 29], "format": [7, 8, 16, 29, 41], "follow": [7, 8, 15, 16, 17, 20, 29, 41, 43], "end": [7, 13, 16, 29], "t5config": 8, "dropout": 8, "t5pretrainedmodel": 8, "input_id": 8, "attention_mask": 8, "head_mask": 8, "inputs_emb": 8, "label": [8, 10, 32], "output_attent": 8, "output_hidden_st": 8, "return_dict": 8, "defin": [8, 26, 27, 38, 39], "perform": [8, 15, 18, 21, 24, 27, 31, 34, 37, 43], "call": [8, 20, 22, 25, 29, 32, 33, 35, 36, 37], "overridden": 8, "subclass": 8, "although": 8, "recip": 8, "need": [8, 10, 15, 16, 19, 24, 31, 39, 40, 41, 42, 43, 46], "within": [8, 21, 24, 27, 31, 38, 44], "afterward": 8, "sinc": [8, 16, 30], "former": 8, "take": [8, 20, 37, 43], "care": 8, "regist": 8, "hook": 8, "while": [8, 19, 44], "latter": 8, "silent": 8, "ignor": 8, "embed": [8, 11, 18, 19, 35, 39, 41], "nn": 8, "torch": 8, "map": 8, "vocabulari": 8, "hidden": 8, "state": [8, 42], "device_map": 8, "new_embed": 8, "find": [8, 13, 18, 28, 33, 36, 37, 38, 41, 42, 44], "facebookresearch": 8, "tartrerank": 8, "facebook": 8, "full": [8, 15, 41, 44], "flan": 8, "xl": 8, "paper": [8, 29, 32, 33, 43], "being": [8, 22, 25, 32, 33], "differ": [8, 13, 15, 16, 21, 26, 34, 35, 36, 37, 41, 44], "chang": [8, 16, 20, 43, 44], "through": [8, 18, 31, 34], "vocab_fil": 8, "bos_token": 8, "eos_token": 8, "unk_token": 8, "unk": 8, "pad_token": 8, "pad": 8, "extra_id": 8, "100": 8, "additional_special_token": 8, "sp_model_kwarg": 8, "t5token": 8, "token_ids_0": 8, "token_ids_1": 8, "build": [8, 15, 16, 41, 42, 43], "sequenc": [8, 44], "pair": [8, 13], "classif": 8, "task": [8, 13, 21], "concaten": 8, "ad": [8, 44, 45], "special": [8, 24], "ha": [8, 11, 15, 16, 24, 43], "x": [8, 17], "b": [8, 42], "option": [8, 21, 24, 26, 27, 28, 29, 36, 37, 40, 44], "glossari": 8, "appropri": 8, "mask": 8, "two": [8, 11, 15, 43, 46], "zero": [8, 10, 29, 32], "already_has_special_token": 8, "prepare_for_model": 8, "integ": [8, 29], "rang": 8, "f": [9, 16, 31], "prompt_mak": [9, 31, 42, 43], "read": [9, 18, 30, 31, 40, 43], "carefulli": 9, "made": [9, 43, 46], "generator_func": 9, "generator_param": 9, "strategy_dict": [9, 10], "With": [9, 43, 46], "As": [9, 15, 17, 20, 39, 40], "generator_modul": [9, 31], "recommend": [9, 15, 41, 43, 45, 46], "don": [9, 15, 16, 18, 36, 37, 43, 45, 46], "t": [9, 15, 16, 18, 20, 36, 37, 43, 45, 46], "openai": [9, 10, 16, 20, 21, 22, 24, 25, 31, 32, 33, 34, 38, 39, 40, 42, 43], "gpt": [9, 16, 21, 22, 24, 25, 31, 32, 33, 42, 45], "3": [9, 10, 16, 21, 22, 24, 25, 31, 32, 33, 36, 37, 38, 40, 42, 43, 45, 46], "5": [9, 10, 11, 16, 20, 21, 22, 24, 25, 27, 32, 33, 36, 37, 38, 40, 42, 45], "turbo": [9, 16, 21, 22, 24, 25, 31, 32, 33, 42, 45], "expans": [9, 10, 11, 15, 24, 32, 33, 43], "inspir": [10, 32], "precis": [10, 24, 32, 38], "shot": [10, 29, 32, 33], "dens": [10, 11, 32, 35, 39], "without": [10, 18, 22, 25, 32, 33, 34, 36, 37, 43], "arxiv": 10, "org": [10, 18], "pdf": 10, "2212": 10, "10496": 10, "hypothet": [10, 32], "decompos": [10, 34], "self": 10, "sub": 10, "decomposit": [10, 33], "n": [10, 16, 30, 31, 34, 43], "hamlet": 10, "common": [10, 11, 19, 44, 45, 46], "imdb": 10, "than": [10, 11, 15, 35, 41, 42, 43], "comedi": 10, "mani": [10, 22, 25, 32, 33, 42], "ar": [10, 13, 15, 18, 19, 20, 21, 22, 24, 25, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46], "bird": 10, "import": [10, 15, 16, 17, 19, 20, 35, 43, 46], "badminton": 10, "legal": 10, "licens": 10, "child": 10, "drive": 10, "merced": 10, "benz": 10, "emploi": 10, "u": 10, "minimum": 10, "ag": 10, "someon": 10, "4": [10, 45], "cucumb": 10, "textur": 10, "hydrogen": 10, "atom": 10, "squar": 10, "exce": [10, 21, 24, 27], "spice": 10, "girl": [10, 15], "6": 10, "littl": [10, 16, 43], "piec": 10, "come": [10, 18, 42, 43], "viscond": [10, 33], "strategyqa": [10, 33], "few": [10, 33, 43, 46], "retrieval_func": 10, "retrieval_param": 10, "expanded_queri": 10, "look": [10, 11, 15, 17, 43], "50": 10, "retrieval_modul": [10, 34], "embedding_model": [10, 11, 20, 34, 38, 39, 40], "combin": [10, 11, 12, 13, 36, 37, 40, 42, 44], "choos": [10, 15, 39, 42], "wai": [10, 40, 42, 43, 45], "case": [10, 15, 16, 18, 42, 43, 45], "would": [10, 41], "bm25_path": 11, "db_path": 11, "collection_nam": [11, 41], "collect": [11, 13, 15, 40, 43, 44], "resourc": [11, 42], "corpu": [11, 38, 41, 46], "panda": [11, 16], "bm25_corpu": 11, "pickl": 11, "ingest": 11, "row": [11, 15, 41], "doc_id": 11, "Its": [11, 15], "structur": [11, 40, 43, 46], "2d": [11, 15], "passage_id": 11, "corpus_path": 11, "bm25_api": 11, "bm25okapi": [11, 35], "usag": [11, 24, 39], "weight": [11, 34, 36, 38], "hybrid": [11, 38, 40], "cc": [11, 38], "convex": [11, 36], "fuse": 11, "To": [11, 15, 19, 20, 43, 46], "uniqu": [11, 15, 24, 44], "realli": [11, 15, 42, 43], "befor": [11, 24, 43, 46], "plu": [11, 15, 20, 39, 40], "sum": 11, "rrf_k": [11, 34, 37, 38, 40], "60": 11, "rrf": [11, 36, 38], "reciproc": [11, 37], "fusion": [11, 37], "spars": [11, 35], "hyperparamet": [11, 40], "our": [11, 15, 16, 18, 19, 42, 43, 45, 46], "document": [11, 15, 19, 21, 24, 27, 31, 34, 35, 38, 40, 42, 43, 44], "target_modul": [11, 34, 36, 37, 38, 40], "target_module_param": [11, 36, 37], "dataset": [11, 13, 18, 36, 37, 41], "node_dir": [11, 13], "filenam": 11, "csv": [11, 42, 46], "target": [11, 13, 36, 37, 43], "baseembed": [11, 20], "128": 11, "chroma": [11, 41], "emb": [11, 39, 43], "process": [11, 13, 16, 18, 21, 24, 27, 28, 31, 34, 36, 37, 38, 41, 42, 44], "prevent": [11, 43], "vector_db": 11, "module_dict": 12, "node_dict": 12, "also": [12, 15, 18, 36, 37, 43, 46], "correspond": 12, "remov": [12, 13], "duplic": [12, 15, 40], "automat": [12, 18, 36, 37, 42, 46], "exist": [12, 41], "df": 13, "index_valu": 13, "explode_valu": 13, "flatten": 13, "filepath": 13, "summary_path": 13, "dict_column": 13, "fill": 13, "properli": 13, "taken": 13, "offici": 13, "script": [13, 15], "v1": [13, 20, 26], "squad": 13, "lower": [13, 24], "punctuat": 13, "articl": 13, "extra": 13, "whitespac": 13, "batch_siz": 13, "64": [13, 32, 34], "asynchron": 13, "coroutin": 13, "replace_valu": 13, "certain": 13, "column_nam": 13, "packag": [14, 19, 45], "subpackag": 14, "modul": [14, 18, 23, 41, 43, 45, 46], "content": [14, 16, 17, 24, 27, 31, 38, 39], "deploi": [14, 17, 18], "node_lin": [14, 24, 27, 31, 34, 40, 41, 43], "support": [14, 15, 18, 22, 25, 32, 33, 40, 43, 44], "There": [15, 18, 34, 41, 43, 46], "kind": [15, 43, 45], "know": [15, 18, 40, 41, 42, 44, 46], "lot": [15, 42, 46], "variat": [15, 34], "good": [15, 16, 43, 46], "identifi": [15, 27, 38], "occur": [15, 43, 45, 46], "unexpect": 15, "behavior": [15, 22, 25, 29, 32, 33, 44], "imagin": 15, "rag": [15, 16, 18, 34, 38, 41, 44], "system": [15, 21, 22, 24, 25, 27, 31, 32, 33, 38, 44], "ask": [15, 16, 18, 43], "1d": 15, "why": [15, 42, 43, 46], "condit": 15, "think": [15, 40, 42, 43], "about": [15, 16, 22, 25, 30, 31, 32, 33, 39, 40, 41, 42, 44, 46], "real": [15, 43], "life": 15, "knowledg": 15, "k": [15, 20, 27, 37, 38], "pop": 15, "group": 15, "member": 15, "new": [15, 19, 20, 40, 43, 46], "jean": 15, "aespa": 15, "oper": [15, 17, 24, 38, 44], "On": 15, "hand": 15, "five": 15, "Then": [15, 17, 19, 20, 42], "newjeans1": 15, "newjeans2": 15, "aespa1": 15, "aespa2": 15, "aespa3": 15, "enough": 15, "okai": 15, "treat": [15, 40], "crucial": [15, 24, 27, 44], "autorag": [15, 16, 17, 19, 20, 36, 37, 40, 42, 46], "affect": [15, 42, 44], "huge": [15, 37], "own": [15, 18, 42, 44, 46], "chunk": [15, 16, 43], "onc": [15, 22, 25, 32, 33, 36, 37, 41, 43, 46], "actual": 15, "multi": [15, 33], "modal": 15, "imag": [15, 41, 46], "video": 15, "etc": [15, 16, 40], "futur": [15, 42, 43, 44], "earli": 15, "version": [15, 42, 45], "plan": [15, 21, 40, 43], "last_modified_datetim": 15, "modifi": 15, "datetim": 15, "now": [15, 39, 40, 42, 43, 46], "time": [15, 18, 21, 24, 27, 31, 34, 38, 41, 42, 44, 46], "relat": [15, 22, 25, 29, 32, 33], "featur": [15, 40, 43], "python": [15, 16, 19, 30, 36, 37, 40, 45, 46], "out": [15, 18, 19, 40, 41, 43, 45, 46], "Or": [15, 19, 46], "download": [15, 46], "repo": [15, 18, 46], "go": [15, 18, 46], "here": [15, 16, 18, 19, 39, 40, 41, 42, 43, 45, 46], "most": [16, 20, 21, 27, 35, 38, 39, 40, 42, 46], "satisfactori": 16, "howev": [16, 36, 42, 43], "advent": 16, "synthet": 16, "becom": 16, "solut": [16, 43], "problem": [16, 43, 45], "guid": [16, 18, 21, 24, 27, 31, 34, 38, 43, 44, 46], "cover": 16, "form": [16, 36, 37], "aim": [16, 36, 38, 44], "work": [16, 36, 37, 40, 45, 46], "primit": 16, "scalabl": 16, "conveni": 16, "loader": 16, "lama_index": 16, "langchain": [16, 43], "datatyp": 16, "found": [16, 22, 25, 32, 33, 39, 46], "guidanc": 16, "qacreat": 16, "simpl": [16, 43], "generate_simple_qa_dataset": 16, "generate_qa_row": 16, "corpus_df": 16, "read_parquet": 16, "qa_dataset": 16, "output_filepath": 16, "generate_row_funct": 16, "design": [16, 21, 28, 36, 37], "per": 16, "unit": 16, "gen": 16, "def": 16, "corpus_data_row": 16, "temp_llm": 16, "solv": 16, "clean": 16, "clear": 16, "again": [16, 43, 46], "mark": 16, "approach": [16, 24, 36], "clearli": 16, "neatli": 16, "displai": 16, "assist": 16, "stop": 16, "add": [16, 21, 39, 43], "qa_gener": 16, "mention": 17, "tutori": [17, 18, 43], "trial_fold": [17, 46], "run_api": [17, 46], "config_path": [17, 46], "last": 17, "curl": 17, "h": 17, "accept": 17, "applic": [17, 24, 34], "your_result_column": 17, "url": 17, "payload": 17, "header": 17, "print": 17, "automl": 18, "tool": 18, "numer": 18, "great": [18, 42], "veri": 18, "hard": [18, 42, 43], "never": 18, "That": [18, 43], "variou": [18, 21, 24, 27, 31, 38], "creation": [18, 46], "raw": 18, "experi": [18, 41, 43, 45, 46], "deploy": [18, 36, 37], "fastapi": 18, "well": 18, "pip": [18, 19, 45], "instal": [18, 46], "starter": [18, 46], "after": [18, 19, 27, 40, 42, 43, 46], "learn": [18, 39, 40, 42, 43, 46], "ultim": 18, "Of": 18, "cours": 18, "local": [18, 20, 39, 46], "troubl": [18, 45], "troubleshoot": [18, 19], "feel": [18, 43, 46], "free": [18, 43, 46], "issu": [18, 43, 45, 46], "discord": [18, 43, 45, 46], "channel": [18, 45, 46], "marker": [18, 19, 43], "inc": [18, 19, 43], "korea": [18, 19, 43], "pypi": 18, "project": [18, 19], "gg": [18, 43], "p4dyxfmsa": [18, 43], "page": 19, "openai_api_kei": [19, 45], "environ": [19, 45, 46], "variabl": [19, 45], "export": [19, 45], "sk": 19, "altern": 19, "env": 19, "dotenv": [19, 45], "root": 19, "try": [19, 36, 37, 43, 45], "code": [19, 20, 40, 46], "load_dotenv": 19, "readi": [19, 42, 46], "step": [19, 27, 43], "clone": 19, "repositori": 19, "git": 19, "edit": 19, "cd": 19, "e": [19, 22, 25, 32, 33], "test": [19, 20, 21, 36, 37, 40, 41, 42], "addit": [19, 22, 25, 31, 32, 33, 45], "r": 19, "dev_requir": 19, "txt": 19, "requir": [19, 22, 24, 25, 26, 32, 33, 44], "pytest": 19, "ini": 19, "log_cli": 19, "log_cli_level": 19, "info": 19, "m": 19, "contributor": 19, "wait": 19, "anthrop": 20, "azureopenai": 20, "huggingfacellm": [20, 22, 25, 32, 33], "langchainllm": 20, "gradientbasemodelllm": 20, "gradientmodeladapterllm": 20, "litellm": 20, "llamacpp": 20, "openailik": [20, 45], "openllm": 20, "palm": 20, "predibasellm": 20, "replic": 20, "xinfer": 20, "node_line_nam": [20, 21, 24, 27, 31, 34, 38, 40, 41, 43], "node_line_1": [20, 40, 43], "mistralai": 20, "mistral": 20, "7b": 20, "v0": 20, "abov": [20, 40, 41, 43, 46], "see": [20, 40, 41, 42, 43, 45, 46], "frequent": 20, "max_token": [20, 22, 25, 32, 33, 34], "temperatur": [20, 21, 22, 25, 32, 33, 34, 42, 45], "simpli": [20, 46], "generator_model": 20, "mockllm": 20, "itself": [20, 36, 42], "interfac": 20, "babbag": 20, "openai_babbag": 20, "ada": 20, "openai_ada": 20, "davinci": 20, "openai_davinci": 20, "curi": 20, "openai_curi": 20, "baai": 20, "bge": 20, "small": 20, "huggingface_baai_bge_smal": 20, "cointegr": 20, "rubert": 20, "tiny2": 20, "huggingface_cointegrated_rubert_tiny2": 20, "begin": 20, "program": 20, "kosimcs": 20, "co": 20, "bm": 20, "roberta": 20, "multitask": 20, "korean": 20, "huggingfaceembed": 20, "allow": [21, 22, 25, 26, 32, 33, 36, 44], "experiment": 21, "facilit": 21, "determin": [21, 41], "effect": [21, 27, 37, 38, 44, 46], "specif": [21, 24, 26, 28, 35, 36, 37, 44, 46], "These": [21, 22, 24, 25, 27, 32, 33, 38, 44, 46], "compar": 21, "descript": [21, 27, 38], "appli": [21, 27, 31, 34, 36, 38, 44], "ensur": [21, 24, 27, 31, 34, 38], "predefin": [21, 24, 27], "post_retrieve_node_lin": [21, 31], "arbitrari": [21, 24, 27, 31, 34, 38], "speed_threshold": [21, 24, 27, 31, 34, 38, 40, 44], "10": [21, 24, 27, 31, 34, 37, 38, 40, 43], "16k": [21, 22, 24, 25, 31, 42, 45], "1106": [21, 22, 31, 42, 45], "g": [22, 25, 32, 33], "By": [22, 24, 25, 27, 32, 33, 34, 36, 37, 44], "keyword": [22, 25, 32, 33], "further": [22, 25, 32, 33, 36], "custom": [22, 25, 29, 32, 33, 36, 39, 44, 45], "passage_rerank": [23, 43], "passage_compressor": 23, "tree": [23, 24], "thei": [24, 40, 43, 44], "reduc": 24, "effici": 24, "prior": 24, "entri": 24, "significantli": [24, 34, 44], "scale": 24, "quickli": 24, "accumul": 24, "potenti": 24, "lead": 24, "higher": [24, 44], "cost": 24, "slower": 24, "reduct": 24, "directli": [24, 42, 45], "impact": [24, 31, 34, 37, 39], "help": [24, 36, 37], "associ": 24, "analysi": 24, "improv": [24, 27, 29, 34], "deal": 24, "less": 24, "tailor": [24, 37, 44], "level": [24, 27, 38, 44], "address": [24, 44], "recal": [24, 38], "distinct": 24, "underscor": 24, "focu": [24, 46], "retrieve_node_lin": [24, 27, 38], "flexibl": [26, 36, 44], "integr": [26, 44], "variant": 26, "med": 26, "unicamp": 26, "dl": 26, "mt5": 26, "ptt5": 26, "pt": 26, "v2": 26, "100k": 26, "mmarco": 26, "13b": 26, "involv": [27, 38], "reassess": 27, "reorder": 27, "refin": 27, "obtain": 27, "phase": [27, 34], "primari": [27, 28], "enhanc": [27, 29, 44], "priorit": 27, "high": 27, "subsequ": 27, "pertin": 27, "overal": [27, 42], "qualiti": [27, 46], "top": [27, 34, 38, 41], "assess": 27, "li": 28, "abil": 28, "accuraci": [29, 34, 38], "boolean": 29, "8": 29, "retreived_cont": 30, "tell": [30, 31], "me": [30, 31, 42, 43], "someth": [30, 31, 36, 37], "cannot": [31, 34], "alon": [31, 34, 43], "refer": [31, 34, 44], "detail": [31, 34, 44, 46], "outcom": [31, 34, 36], "across": [31, 34, 38, 44], "exceed": [31, 34, 38], "hop": 33, "expand": [34, 42], "immedi": 34, "goal": [34, 42], "search": [34, 35, 39], "term": 34, "vari": [34, 36, 44], "ll": 34, "better": [34, 42, 46], "abl": 34, "respond": 34, "increas": [34, 44], "Not": 34, "direct": 34, "necessari": 34, "consid": 34, "dure": [34, 45], "pre_retrieve_node_lin": 34, "popular": 35, "tf": 35, "idf": 35, "reflect": 35, "word": 35, "often": [35, 45], "similar": [35, 36, 37, 39, 42], "semant": 35, "count": 35, "domain": 35, "algorithm": [35, 36, 37], "distinguish": 36, "offer": 36, "those": [36, 37], "situat": [36, 37], "oppos": [36, 37], "ast": [36, 37, 40], "literal_ev": [36, 37, 40], "were": [36, 37], "quot": [36, 37], "purpos": [36, 44], "adjust": [36, 45], "influenc": 36, "wrote": [36, 37], "7": [36, 38], "constant": 37, "fetch": 38, "fundament": 38, "easili": [39, 43, 46], "vector": [39, 43], "lastli": [39, 40], "exclus": 39, "chromadb": 39, "databas": 39, "internet": 39, "fee": 39, "open": [39, 42, 45], "softwar": 39, "favorit": 40, "editor": 40, "extens": 40, "thing": [40, 46], "node_line_2": [40, 43], "node_line_3": 40, "section": [40, 44, 46], "mind": [40, 46], "pars": 40, "later": [40, 46], "best_": 41, "trail": 41, "ran": 41, "too": [41, 42], "took": 41, "roadmap": 41, "modular": [41, 44], "belong": 41, "depend": 41, "show": [41, 42, 43], "best_0": 41, "attempt": 41, "record": 41, "organ": 41, "long": [41, 43], "explain": [41, 43], "hope": 41, "understand": [41, 42], "split": [41, 44, 46], "train": [41, 46], "accur": 41, "pkl": 41, "under": [42, 45], "hood": 42, "diagram": [42, 43], "rememb": 42, "achiev": [42, 44], "possibl": [42, 43], "let": [42, 43, 46], "markov": 42, "chain": 42, "alwai": 42, "guarante": 42, "choic": 42, "wa": [42, 45], "caus": [42, 45, 46], "retri": 42, "job": 42, "still": [42, 43, 45], "might": [42, 46], "wonder": 42, "valid": 42, "setup": 42, "least": 42, "probabl": 42, "alpha": 42, "develop": [42, 44], "suggest": [42, 43, 45], "feedback": [42, 43], "survei": 43, "propos": 43, "paradigm": 43, "naiv": 43, "db": 43, "easi": 43, "dai": 43, "framework": 43, "ever": 43, "bad": 43, "advanc": 43, "pre": [43, 46], "perfect": 43, "main": 43, "doesn": 43, "cycl": 43, "hallucin": 43, "fact": 43, "deliv": 43, "wrong": 43, "fate": 43, "re": 43, "dag": 43, "imposs": 43, "decid": [43, 44], "next": 43, "asap": 43, "implement": 43, "circl": 43, "goe": 43, "yet": 43, "blue": 43, "limit": [43, 44, 45], "action": 43, "short": 43, "meger": 43, "matter": 43, "pretti": 43, "locat": 43, "voil\u00e0": 43, "complex": 43, "familiar": 43, "much": 43, "straight": 43, "linear": 43, "branch": 43, "magic": 43, "happen": 43, "pass_valu": 43, "reranker_recal": 43, "target_node_lin": 43, "kf1_polici": 43, "rl_polici": 43, "cool": 43, "tyre": 43, "soon": 43, "interest": 43, "welcom": 43, "act": 44, "interchang": 44, "swap": 44, "mix": 44, "individu": 44, "compon": 44, "fit": 44, "over": 44, "remain": 44, "broader": 44, "resid": 44, "loop": 44, "essenti": [44, 45], "augment": 44, "mechan": 44, "dynam": 44, "current": [44, 46], "temporari": 44, "arrang": 44, "temporarili": 44, "simul": 44, "intend": 44, "until": 44, "aspect": 44, "techniqu": 44, "part": 44, "quantit": 44, "basi": 44, "effort": 44, "strateg": 44, "decis": 44, "criterion": 44, "focus": 44, "mai": 44, "anoth": [44, 46], "upgrad": 45, "gcc": 45, "c": 45, "sudo": 45, "apt": 45, "linux": 45, "brew": 45, "mac": 45, "mistak": [45, 46], "miss": 45, "echo": 45, "command": 45, "your_api_kei": 45, "recogn": 45, "difficulti": 45, "sampl": [45, 46], "api_kei": 45, "commit": 45, "push": 45, "seriou": [45, 46], "secur": 45, "api_bas": 45, "sometim": 45, "vllm": 45, "both": 45, "oom": 45, "rate": 45, "tier": 45, "sure": 46, "who": 46, "manual": 46, "librari": 46, "forget": 46, "overfit": 46, "highli": 46, "sample_config": 46, "cli": 46, "default_config": 46, "done": 46, "sever": 46, "remind": 46, "pipeline_dict": 46, "malfunct": 46, "qa_test": 46, "corpus_test": 46, "awai": 46, "endpoint": 46, "share": 46, "successfulli": 46, "launch": 46, "product": 46}, "objects": {"": [[0, 0, 0, "-", "autorag"]], "autorag": [[1, 0, 0, "-", "data"], [0, 0, 0, "-", "deploy"], [2, 0, 0, "-", "evaluate"], [0, 0, 0, "-", "evaluator"], [0, 4, 1, "", "handle_exception"], [0, 0, 0, "-", "node_line"], [4, 0, 0, "-", "nodes"], [12, 0, 0, "-", "schema"], [0, 0, 0, "-", "strategy"], [0, 0, 0, "-", "support"], [13, 0, 0, "-", "utils"]], "autorag.deploy": [[0, 1, 1, "", "Runner"], [0, 1, 1, "", "RunnerInput"], [0, 4, 1, "", "extract_best_config"], [0, 4, 1, "", "extract_node_line_names"], [0, 4, 1, "", "extract_node_strategy"], [0, 4, 1, "", "summary_df_to_yaml"]], "autorag.deploy.Runner": [[0, 2, 1, "", "from_trial_folder"], [0, 2, 1, "", "from_yaml"], [0, 2, 1, "", "run"], [0, 2, 1, "", "run_api_server"]], "autorag.deploy.RunnerInput": [[0, 3, 1, "", "query"], [0, 3, 1, "", "result_column"]], "autorag.evaluate": [[2, 0, 0, "-", "generation"], [3, 0, 0, "-", "metric"], [2, 0, 0, "-", "retrieval"], [2, 0, 0, "-", "retrieval_contents"]], "autorag.evaluate.generation": [[2, 4, 1, "", "evaluate_generation"]], "autorag.evaluate.metric": [[3, 0, 0, "-", "generation"], [3, 0, 0, "-", "retrieval"], [3, 0, 0, "-", "retrieval_contents"]], "autorag.evaluate.metric.generation": [[3, 4, 1, "", "bleu"], [3, 4, 1, "", "generation_metric"], [3, 4, 1, "", "huggingface_evaluate"], [3, 4, 1, "", "meteor"], [3, 4, 1, "", "rouge"]], "autorag.evaluate.metric.retrieval": [[3, 4, 1, "", "retrieval_f1"], [3, 4, 1, "", "retrieval_metric"], [3, 4, 1, "", "retrieval_precision"], [3, 4, 1, "", "retrieval_recall"]], "autorag.evaluate.metric.retrieval_contents": [[3, 4, 1, "", "retrieval_contents_metric"], [3, 4, 1, "", "retrieval_token_f1"], [3, 4, 1, "", "retrieval_token_precision"], [3, 4, 1, "", "retrieval_token_recall"], [3, 4, 1, "", "single_token_f1"]], "autorag.evaluate.retrieval": [[2, 4, 1, "", "evaluate_retrieval"]], "autorag.evaluate.retrieval_contents": [[2, 4, 1, "", "evaluate_retrieval_contents"]], "autorag.evaluator": [[0, 1, 1, "", "Evaluator"]], "autorag.evaluator.Evaluator": [[0, 2, 1, "", "start_trial"]], "autorag.node_line": [[0, 4, 1, "", "make_node_lines"], [0, 4, 1, "", "run_node_line"]], "autorag.nodes": [[5, 0, 0, "-", "generator"], [6, 0, 0, "-", "passagecompressor"], [7, 0, 0, "-", "passagereranker"], [9, 0, 0, "-", "promptmaker"], [10, 0, 0, "-", "queryexpansion"], [11, 0, 0, "-", "retrieval"]], "autorag.nodes.generator": [[5, 0, 0, "-", "base"], [5, 0, 0, "-", "llama_index_llm"], [5, 0, 0, "-", "run"]], "autorag.nodes.generator.base": [[5, 4, 1, "", "generator_node"]], "autorag.nodes.generator.llama_index_llm": [[5, 4, 1, "", "llama_index_llm"]], "autorag.nodes.generator.run": [[5, 4, 1, "", "evaluate_generator_node"], [5, 4, 1, "", "run_generator_node"]], "autorag.nodes.passagecompressor": [[6, 0, 0, "-", "base"], [6, 0, 0, "-", "run"], [6, 0, 0, "-", "tree_summarize"]], "autorag.nodes.passagecompressor.base": [[6, 4, 1, "", "make_llm"], [6, 4, 1, "", "passage_compressor_node"]], "autorag.nodes.passagecompressor.run": [[6, 4, 1, "", "evaluate_passage_compressor_node"], [6, 4, 1, "", "make_contents_gt"], [6, 4, 1, "", "run_passage_compressor_node"]], "autorag.nodes.passagecompressor.tree_summarize": [[6, 4, 1, "", "tree_summarize"]], "autorag.nodes.passagereranker": [[7, 0, 0, "-", "base"], [7, 0, 0, "-", "monot5"], [7, 0, 0, "-", "run"], [8, 0, 0, "-", "tart"], [7, 0, 0, "-", "upr"]], "autorag.nodes.passagereranker.base": [[7, 4, 1, "", "passage_reranker_node"]], "autorag.nodes.passagereranker.monot5": [[7, 4, 1, "", "mono_t5_pure"], [7, 4, 1, "", "monot5"]], "autorag.nodes.passagereranker.run": [[7, 4, 1, "", "run_passage_reranker_node"]], "autorag.nodes.passagereranker.tart": [[8, 0, 0, "-", "modeling_enc_t5"], [8, 0, 0, "-", "tart"], [8, 0, 0, "-", "tokenization_enc_t5"]], "autorag.nodes.passagereranker.tart.modeling_enc_t5": [[8, 1, 1, "", "EncT5ForSequenceClassification"]], "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification": [[8, 2, 1, "", "deparallelize"], [8, 2, 1, "", "forward"], [8, 2, 1, "", "get_encoder"], [8, 2, 1, "", "get_input_embeddings"], [8, 2, 1, "", "parallelize"], [8, 2, 1, "", "set_input_embeddings"]], "autorag.nodes.passagereranker.tart.tart": [[8, 4, 1, "", "tart"], [8, 4, 1, "", "tart_pure"]], "autorag.nodes.passagereranker.tart.tokenization_enc_t5": [[8, 1, 1, "", "EncT5Tokenizer"]], "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer": [[8, 2, 1, "", "build_inputs_with_special_tokens"], [8, 2, 1, "", "create_token_type_ids_from_sequences"], [8, 2, 1, "", "get_special_tokens_mask"]], "autorag.nodes.passagereranker.upr": [[7, 4, 1, "", "calculate_likelihood"], [7, 4, 1, "", "upr"], [7, 4, 1, "", "upr_pure"]], "autorag.nodes.promptmaker": [[9, 0, 0, "-", "base"], [9, 0, 0, "-", "fstring"], [9, 0, 0, "-", "run"]], "autorag.nodes.promptmaker.base": [[9, 4, 1, "", "prompt_maker_node"]], "autorag.nodes.promptmaker.fstring": [[9, 4, 1, "", "fstring"]], "autorag.nodes.promptmaker.run": [[9, 4, 1, "", "evaluate_generator_result"], [9, 4, 1, "", "evaluate_one_prompt_maker_node"], [9, 4, 1, "", "make_generator_callable_params"], [9, 4, 1, "", "run_prompt_maker_node"]], "autorag.nodes.queryexpansion": [[10, 0, 0, "-", "base"], [10, 0, 0, "-", "hyde"], [10, 0, 0, "-", "query_decompose"], [10, 0, 0, "-", "run"]], "autorag.nodes.queryexpansion.base": [[10, 4, 1, "", "query_expansion_node"]], "autorag.nodes.queryexpansion.hyde": [[10, 4, 1, "", "hyde"], [10, 4, 1, "", "hyde_pure"]], "autorag.nodes.queryexpansion.query_decompose": [[10, 4, 1, "", "query_decompose"], [10, 4, 1, "", "query_decompose_pure"]], "autorag.nodes.queryexpansion.run": [[10, 4, 1, "", "evaluate_one_query_expansion_node"], [10, 4, 1, "", "make_retrieval_callable_params"], [10, 4, 1, "", "run_query_expansion_node"]], "autorag.nodes.retrieval": [[11, 0, 0, "-", "base"], [11, 0, 0, "-", "bm25"], [11, 0, 0, "-", "hybrid_cc"], [11, 0, 0, "-", "hybrid_rrf"], [11, 0, 0, "-", "run"], [11, 0, 0, "-", "vectordb"]], "autorag.nodes.retrieval.base": [[11, 4, 1, "", "cast_queries"], [11, 4, 1, "", "evenly_distribute_passages"], [11, 4, 1, "", "load_bm25_corpus"], [11, 4, 1, "", "load_chroma_collection"], [11, 4, 1, "", "retrieval_node"], [11, 4, 1, "", "run_retrieval_modules"]], "autorag.nodes.retrieval.bm25": [[11, 4, 1, "", "bm25"], [11, 4, 1, "", "bm25_ingest"], [11, 4, 1, "", "bm25_pure"], [11, 4, 1, "", "bm25_tokenize"]], "autorag.nodes.retrieval.hybrid_cc": [[11, 4, 1, "", "cc_pure"], [11, 4, 1, "", "hybrid_cc"]], "autorag.nodes.retrieval.hybrid_rrf": [[11, 4, 1, "", "hybrid_rrf"], [11, 4, 1, "", "rrf_calculate"], [11, 4, 1, "", "rrf_pure"]], "autorag.nodes.retrieval.run": [[11, 4, 1, "", "edit_summary_df_params"], [11, 4, 1, "", "evaluate_retrieval_node"], [11, 4, 1, "", "get_hybrid_execution_times"], [11, 4, 1, "", "get_ids_and_scores"], [11, 4, 1, "", "get_module_params"], [11, 4, 1, "", "run_retrieval_node"], [11, 4, 1, "", "select_result_for_hybrid"]], "autorag.nodes.retrieval.vectordb": [[11, 4, 1, "", "vectordb"], [11, 4, 1, "", "vectordb_ingest"], [11, 4, 1, "", "vectordb_pure"]], "autorag.schema": [[12, 0, 0, "-", "module"], [12, 0, 0, "-", "node"]], "autorag.schema.module": [[12, 1, 1, "", "Module"]], "autorag.schema.module.Module": [[12, 2, 1, "", "from_dict"], [12, 3, 1, "", "module"], [12, 3, 1, "", "module_param"], [12, 3, 1, "", "module_type"]], "autorag.schema.node": [[12, 1, 1, "", "Node"], [12, 4, 1, "", "extract_values"], [12, 4, 1, "", "extract_values_from_nodes"], [12, 4, 1, "", "module_type_exists"]], "autorag.schema.node.Node": [[12, 2, 1, "", "from_dict"], [12, 2, 1, "", "get_param_combinations"], [12, 3, 1, "", "modules"], [12, 3, 1, "", "node_params"], [12, 3, 1, "", "node_type"], [12, 2, 1, "", "run"], [12, 3, 1, "", "run_node"], [12, 3, 1, "", "strategy"]], "autorag.strategy": [[0, 4, 1, "", "avoid_empty_result"], [0, 4, 1, "", "filter_by_threshold"], [0, 4, 1, "", "measure_speed"], [0, 4, 1, "", "select_best_average"]], "autorag.support": [[0, 4, 1, "", "dynamically_find_function"], [0, 4, 1, "", "get_support_modules"], [0, 4, 1, "", "get_support_nodes"]], "autorag.utils": [[13, 0, 0, "-", "preprocess"], [13, 0, 0, "-", "util"]], "autorag.utils.preprocess": [[13, 4, 1, "", "cast_corpus_dataset"], [13, 4, 1, "", "cast_qa_dataset"], [13, 4, 1, "", "validate_corpus_dataset"], [13, 4, 1, "", "validate_qa_dataset"]], "autorag.utils.util": [[13, 4, 1, "", "convert_string_to_tuple_in_dict"], [13, 4, 1, "", "explode"], [13, 4, 1, "", "fetch_contents"], [13, 4, 1, "", "find_best_result_path"], [13, 4, 1, "", "load_summary_file"], [13, 4, 1, "", "make_combinations"], [13, 4, 1, "", "normalize_string"], [13, 4, 1, "", "process_batch"], [13, 4, 1, "", "replace_value_in_dict"], [13, 4, 1, "", "result_to_dataframe"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"autorag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 43], "packag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "subpackag": [0, 2, 4, 7], "submodul": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13], "deploi": [0, 46], "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 44], "evalu": [0, 2, 3, 16, 42, 46], "node_lin": 0, "strategi": [0, 21, 24, 27, 31, 34, 38, 42, 44], "support": [0, 20, 21, 24, 26, 27, 31, 34, 38, 39], "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15], "data": [1, 16, 41], "gener": [2, 3, 5, 21], "retriev": [2, 3, 11, 38], "retrieval_cont": [2, 3], "metric": 3, "node": [4, 5, 6, 7, 8, 9, 10, 11, 12, 21, 24, 27, 31, 34, 38, 40, 41, 42, 43, 44], "base": [5, 6, 7, 9, 10, 11], "llama_index_llm": 5, "run": [5, 6, 7, 9, 10, 11, 17, 45], "passagecompressor": 6, "tree_summar": 6, "passagererank": [7, 8], "monot5": [7, 26], "upr": [7, 29], "tart": [8, 28], "modeling_enc_t5": 8, "tokenization_enc_t5": 8, "promptmak": 9, "fstring": 9, "queryexpans": 10, "hyde": [10, 32], "query_decompos": 10, "bm25": [11, 35], "hybrid_cc": 11, "hybrid_rrf": 11, "vectordb": [11, 39], "schema": 12, "util": 13, "preprocess": 13, "dataset": [15, 46], "format": [15, 46], "qa": [15, 16], "long": 15, "stori": 15, "short": 15, "qid": 15, "queri": [15, 33, 34], "retrieval_gt": 15, "generation_gt": 15, "corpu": [15, 16], "doc_id": 15, "metadata": 15, "sampl": [15, 41], "start": [16, 18], "creat": 16, "your": [16, 20, 46], "own": 16, "index": [16, 20, 41], "overview": [16, 21, 24, 27, 31, 34, 38], "make": [16, 40], "from": [16, 19], "raw": 16, "document": [16, 18], "what": [16, 40, 43], "i": [16, 40, 43], "passag": 16, "us": [16, 20, 40], "custom": [16, 40, 46], "creation": 16, "function": 16, "api": [17, 19, 45], "endpoint": 17, "server": 17, "why": 18, "how": [18, 42], "can": [18, 42], "help": 18, "get": 18, "ecosystem": 18, "instal": [19, 45], "setup": 19, "troubl": 19, "openai": [19, 45], "kei": 19, "build": [19, 45], "sourc": 19, "configur": 20, "llm": [20, 22, 45], "embed": 20, "model": [20, 26], "add": 20, "more": [20, 42, 43], "6": 21, "definit": [21, 24, 27, 31, 34, 38], "paramet": [21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39], "purpos": [21, 24, 38], "exampl": [21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 44], "config": [21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46], "yaml": [21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46], "file": [21, 24, 27, 31, 34, 38, 40, 46], "llama_index": 22, "avail": 23, "list": 23, "4": 24, "passage_compressor": 24, "benefit": [24, 27, 34], "tree": 25, "summar": [25, 44], "name": 26, "3": 27, "passage_rerank": 27, "f": 30, "string": 30, "5": 31, "prompt": 31, "maker": 31, "decompos": 33, "1": 34, "expans": 34, "hybrid": [36, 37], "cc": 36, "hybird": [36, 37], "addit": [36, 37], "explan": [36, 37, 44], "rrf": 37, "2": 38, "backend": 39, "line": [40, 41, 43, 44], "specifi": 40, "tupl": 40, "environ": 40, "variabl": 40, "folder": 41, "structur": [41, 44], "project": 41, "trial": 41, "summari": 41, "csv": 41, "pre_retrieve_node_lin": 41, "query_expans": 41, "retrieve_node_lin": 41, "resourc": 41, "json": 41, "optim": [42, 45, 46], "work": 42, "swap": 42, "pass": 42, "best": 42, "result": 42, "next": [42, 46], "t": 42, "road": 43, "modular": 43, "rag": [43, 46], "want": 43, "know": 43, "about": 43, "earli": 43, "version": 43, "polici": 43, "merger": 43, "contact": 43, "u": 43, "concept": 44, "troubleshoot": 45, "could": 45, "wheel": 45, "face": 45, "error": 45, "while": 45, "tutori": 46, "prepar": 46, "note": 46, "find": 46, "pipelin": 46, "write": 46, "extract": 46, "test": 46, "step": 46}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"autorag package": [[0, "autorag-package"]], "Subpackages": [[0, "subpackages"], [2, "subpackages"], [4, "subpackages"], [7, "subpackages"]], "Submodules": [[0, "submodules"], [2, "submodules"], [3, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"], [12, "submodules"], [13, "submodules"]], "autorag.deploy module": [[0, "module-autorag.deploy"]], "autorag.evaluator module": [[0, "module-autorag.evaluator"]], "autorag.node_line module": [[0, "module-autorag.node_line"]], "autorag.strategy module": [[0, "module-autorag.strategy"]], "autorag.support module": [[0, "module-autorag.support"]], "Module contents": [[0, "module-autorag"], [1, "module-autorag.data"], [2, "module-autorag.evaluate"], [3, "module-autorag.evaluate.metric"], [4, "module-autorag.nodes"], [5, "module-autorag.nodes.generator"], [6, "module-autorag.nodes.passagecompressor"], [7, "module-autorag.nodes.passagereranker"], [8, "module-autorag.nodes.passagereranker.tart"], [9, "module-autorag.nodes.promptmaker"], [10, "module-autorag.nodes.queryexpansion"], [11, "module-autorag.nodes.retrieval"], [12, "module-autorag.schema"], [13, "module-autorag.utils"]], "autorag.data package": [[1, "autorag-data-package"]], "autorag.evaluate package": [[2, "autorag-evaluate-package"]], "autorag.evaluate.generation module": [[2, "module-autorag.evaluate.generation"]], "autorag.evaluate.retrieval module": [[2, "module-autorag.evaluate.retrieval"]], "autorag.evaluate.retrieval_contents module": [[2, "module-autorag.evaluate.retrieval_contents"]], "autorag.evaluate.metric package": [[3, "autorag-evaluate-metric-package"]], "autorag.evaluate.metric.generation module": [[3, "module-autorag.evaluate.metric.generation"]], "autorag.evaluate.metric.retrieval module": [[3, "module-autorag.evaluate.metric.retrieval"]], "autorag.evaluate.metric.retrieval_contents module": [[3, "module-autorag.evaluate.metric.retrieval_contents"]], "autorag.nodes package": [[4, "autorag-nodes-package"]], "autorag.nodes.generator package": [[5, "autorag-nodes-generator-package"]], "autorag.nodes.generator.base module": [[5, "module-autorag.nodes.generator.base"]], "autorag.nodes.generator.llama_index_llm module": [[5, "module-autorag.nodes.generator.llama_index_llm"]], "autorag.nodes.generator.run module": [[5, "module-autorag.nodes.generator.run"]], "autorag.nodes.passagecompressor package": [[6, "autorag-nodes-passagecompressor-package"]], "autorag.nodes.passagecompressor.base module": [[6, "module-autorag.nodes.passagecompressor.base"]], "autorag.nodes.passagecompressor.run module": [[6, "module-autorag.nodes.passagecompressor.run"]], "autorag.nodes.passagecompressor.tree_summarize module": [[6, "module-autorag.nodes.passagecompressor.tree_summarize"]], "autorag.nodes.passagereranker package": [[7, "autorag-nodes-passagereranker-package"]], "autorag.nodes.passagereranker.base module": [[7, "module-autorag.nodes.passagereranker.base"]], "autorag.nodes.passagereranker.monot5 module": [[7, "module-autorag.nodes.passagereranker.monot5"]], "autorag.nodes.passagereranker.run module": [[7, "module-autorag.nodes.passagereranker.run"]], "autorag.nodes.passagereranker.upr module": [[7, "module-autorag.nodes.passagereranker.upr"]], "autorag.nodes.passagereranker.tart package": [[8, "autorag-nodes-passagereranker-tart-package"]], "autorag.nodes.passagereranker.tart.modeling_enc_t5 module": [[8, "module-autorag.nodes.passagereranker.tart.modeling_enc_t5"]], "autorag.nodes.passagereranker.tart.tart module": [[8, "module-autorag.nodes.passagereranker.tart.tart"]], "autorag.nodes.passagereranker.tart.tokenization_enc_t5 module": [[8, "module-autorag.nodes.passagereranker.tart.tokenization_enc_t5"]], "autorag.nodes.promptmaker package": [[9, "autorag-nodes-promptmaker-package"]], "autorag.nodes.promptmaker.base module": [[9, "module-autorag.nodes.promptmaker.base"]], "autorag.nodes.promptmaker.fstring module": [[9, "module-autorag.nodes.promptmaker.fstring"]], "autorag.nodes.promptmaker.run module": [[9, "module-autorag.nodes.promptmaker.run"]], "autorag.nodes.queryexpansion package": [[10, "autorag-nodes-queryexpansion-package"]], "autorag.nodes.queryexpansion.base module": [[10, "module-autorag.nodes.queryexpansion.base"]], "autorag.nodes.queryexpansion.hyde module": [[10, "module-autorag.nodes.queryexpansion.hyde"]], "autorag.nodes.queryexpansion.query_decompose module": [[10, "module-autorag.nodes.queryexpansion.query_decompose"]], "autorag.nodes.queryexpansion.run module": [[10, "module-autorag.nodes.queryexpansion.run"]], "autorag.nodes.retrieval package": [[11, "autorag-nodes-retrieval-package"]], "autorag.nodes.retrieval.base module": [[11, "module-autorag.nodes.retrieval.base"]], "autorag.nodes.retrieval.bm25 module": [[11, "module-autorag.nodes.retrieval.bm25"]], "autorag.nodes.retrieval.hybrid_cc module": [[11, "module-autorag.nodes.retrieval.hybrid_cc"]], "autorag.nodes.retrieval.hybrid_rrf module": [[11, "module-autorag.nodes.retrieval.hybrid_rrf"]], "autorag.nodes.retrieval.run module": [[11, "module-autorag.nodes.retrieval.run"]], "autorag.nodes.retrieval.vectordb module": [[11, "module-autorag.nodes.retrieval.vectordb"]], "autorag.schema package": [[12, "autorag-schema-package"]], "autorag.schema.module module": [[12, "module-autorag.schema.module"]], "autorag.schema.node module": [[12, "module-autorag.schema.node"]], "autorag.utils package": [[13, "autorag-utils-package"]], "autorag.utils.preprocess module": [[13, "module-autorag.utils.preprocess"]], "autorag.utils.util module": [[13, "module-autorag.utils.util"]], "autorag": [[14, "autorag"]], "Dataset Format": [[15, "dataset-format"]], "QA Dataset": [[15, "qa-dataset"]], "Long story short": [[15, null], [15, null], [15, null], [15, null]], "qid": [[15, "qid"]], "query": [[15, "query"]], "retrieval_gt": [[15, "retrieval-gt"]], "generation_gt": [[15, "generation-gt"]], "Corpus Dataset": [[15, "corpus-dataset"]], "doc_id": [[15, "doc-id"]], "contents": [[15, "contents"]], "metadata": [[15, "metadata"]], "Samples": [[15, "samples"]], "Start creating your own evaluation data": [[16, "start-creating-your-own-evaluation-data"]], "Index": [[16, "index"], [20, "index"]], "Overview": [[16, "overview"], [21, "overview"], [38, "overview"]], "Make corpus data from raw documents": [[16, "make-corpus-data-from-raw-documents"]], "Make qa data from corpus data": [[16, "make-qa-data-from-corpus-data"]], "What is passage?": [[16, null]], "Use custom data creation function": [[16, "use-custom-data-creation-function"]], "API endpoint": [[17, "api-endpoint"]], "Running API server": [[17, "running-api-server"]], "API Endpoint": [[17, "id1"]], "AutoRAG documentation": [[18, "autorag-documentation"]], "\ud83e\udd37\u200d\u2642\ufe0f Why AutoRAG?": [[18, "why-autorag"]], "\ud83e\udd38\u200d\u2642\ufe0f How can AutoRAG helps?": [[18, "how-can-autorag-helps"]], "\ud83c\udfc3\u200d\u2642\ufe0f Getting Started": [[18, "getting-started"]], "\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc66 Ecosystem": [[18, "ecosystem"]], "Installation and Setup": [[19, "installation-and-setup"]], "Trouble with installation?": [[19, null]], "Setup OPENAI API KEY": [[19, "setup-openai-api-key"]], "Build from source": [[19, "build-from-source"]], "Configure LLM & Embedding models": [[20, "configure-llm-embedding-models"]], "Configure the LLM model": [[20, "configure-the-llm-model"]], "Modules that use LLM model": [[20, "modules-that-use-llm-model"]], "Supporting LLM models": [[20, "supporting-llm-models"]], "Add more LLM models": [[20, "add-more-llm-models"]], "Configure the Embedding model": [[20, "configure-the-embedding-model"]], "Modules that use Embedding model": [[20, "modules-that-use-embedding-model"]], "Supporting Embedding models": [[20, "supporting-embedding-models"]], "Add your embedding models": [[20, "add-your-embedding-models"]], "6. Generator": [[21, "generator"]], "\ud83d\udd0e Definition": [[21, "definition"], [24, "definition"], [27, "definition"], [31, "definition"], [34, "definition"], [38, "definition"]], "\ud83d\udd22 Parameters": [[21, "parameters"], [24, "parameters"], [27, "parameters"], [31, "parameters"], [34, "parameters"], [38, "parameters"]], "Node Parameters": [[21, "node-parameters"], [24, "node-parameters"], [27, "node-parameters"], [31, "node-parameters"], [34, "node-parameters"], [38, "node-parameters"]], "Strategy Parameters": [[21, "strategy-parameters"], [24, "strategy-parameters"], [27, "strategy-parameters"], [38, "strategy-parameters"]], "Purpose": [[21, null], [24, null], [38, null]], "Example config.yaml file": [[21, "example-config-yaml-file"], [24, "example-config-yaml-file"], [27, "example-config-yaml-file"], [31, "example-config-yaml-file"], [34, "example-config-yaml-file"], [38, "example-config-yaml-file"]], "Supported Modules": [[21, "supported-modules"], [24, "supported-modules"], [27, "supported-modules"], [31, "supported-modules"], [34, "supported-modules"], [38, "supported-modules"]], "llama_index LLM": [[22, "llama-index-llm"]], "Module Parameters": [[22, "module-parameters"], [25, "module-parameters"], [26, "module-parameters"], [28, "module-parameters"], [29, "module-parameters"], [30, "module-parameters"], [32, "module-parameters"], [33, "module-parameters"], [35, "module-parameters"], [36, "module-parameters"], [37, "module-parameters"], [39, "module-parameters"]], "Example config.yaml": [[22, "example-config-yaml"], [25, "example-config-yaml"], [26, "example-config-yaml"], [28, "example-config-yaml"], [29, "example-config-yaml"], [30, "example-config-yaml"], [32, "example-config-yaml"], [33, "example-config-yaml"], [35, "example-config-yaml"], [36, "example-config-yaml"], [37, "example-config-yaml"], [39, "example-config-yaml"]], "Available List": [[23, "available-list"]], "4. Passage_Compressor": [[24, "passage-compressor"]], "\ud83e\udd38 Benefits": [[24, "benefits"], [27, "benefits"], [34, "benefits"]], "Overview:": [[24, "overview"], [27, "overview"], [31, "overview"], [34, "overview"]], "Tree Summarize": [[25, "tree-summarize"]], "MonoT5": [[26, "monot5"]], "Supported Model Names": [[26, "supported-model-names"]], "3. Passage_Reranker": [[27, "passage-reranker"]], "TART": [[28, "tart"]], "UPR": [[29, "upr"]], "F-String": [[30, "f-string"]], "5. Prompt Maker": [[31, "prompt-maker"]], "Strategy": [[31, "strategy"], [34, "strategy"], [44, "strategy"]], "Parameters:": [[31, "id1"]], "HyDE": [[32, "hyde"]], "Query Decompose": [[33, "query-decompose"]], "1. Query Expansion": [[34, "query-expansion"]], "Strategy Parameters:": [[34, "strategy-parameters"]], "BM25": [[35, "bm25"]], "Hybrid - cc": [[36, "hybrid-cc"]], "\u2757\ufe0fHybird additional explanation": [[36, "hybird-additional-explanation"]], "Hybrid - rrf": [[37, "hybrid-rrf"]], "\u2757 Hybird additional explanation": [[37, "hybird-additional-explanation"]], "2. Retrieval": [[38, "retrieval"]], "Vectordb": [[39, "vectordb"]], "Backend Support": [[39, "backend-support"]], "Make custom config yaml file": [[40, "make-custom-config-yaml-file"]], "Make yaml file": [[40, "make-yaml-file"]], "Make Node Line": [[40, "make-node-line"]], "Specify nodes": [[40, "specify-nodes"]], "Specify modules": [[40, "specify-modules"]], "What is tuple in the yaml file?": [[40, null]], "Use environment variable in the yaml file": [[40, "use-environment-variable-in-the-yaml-file"]], "Folder Structure": [[41, "folder-structure"]], "Sample Structure Index": [[41, "sample-structure-index"]], "Project": [[41, "project"]], "trial": [[41, "trial"]], "config.yaml": [[41, "config-yaml"]], "[trial] summary.csv": [[41, "trial-summary-csv"]], "pre_retrieve_node_line": [[41, "pre-retrieve-node-line"]], "[Node Line] summary.csv": [[41, "node-line-summary-csv"]], "query_expansion": [[41, "query-expansion"]], "[Node] summary.csv": [[41, "node-summary-csv"]], "retrieve_node_line": [[41, "retrieve-node-line"]], "data": [[41, "data"]], "resources": [[41, "resources"]], "trial.json": [[41, "trial-json"]], "How optimization works": [[42, "how-optimization-works"]], "Swapping modules in Node": [[42, "swapping-modules-in-node"]], "Pass the best result to the next node": [[42, "pass-the-best-result-to-the-next-node"]], "Evaluate Nodes that can\u2019t evaluate": [[42, "evaluate-nodes-that-can-t-evaluate"]], "More optimization strategies": [[42, "more-optimization-strategies"]], "Road to Modular RAG": [[43, "road-to-modular-rag"]], "\ud83e\udd37\u200d\u2642\ufe0f What is Modular RAG?": [[43, "what-is-modular-rag"]], "Want to know more about Modular RAG?": [[43, null]], "\ud83d\ude80 Road to Modular RAG": [[43, "id1"]], "Early version of AutoRAG": [[43, "early-version-of-autorag"]], "Policy Node": [[43, "policy-node"]], "Merger Node": [[43, "merger-node"]], "Node line for Modular RAG": [[43, "node-line-for-modular-rag"]], "What is Node Line?": [[43, null]], "Contact us": [[43, "contact-us"]], "Contact": [[43, null]], "Structure": [[44, "structure"]], "Explanation of concepts": [[44, "explanation-of-concepts"]], "Node & Module": [[44, "node-module"]], "Node Line": [[44, "node-line"]], "Example Node Lines": [[44, "example-node-lines"]], "Summarize": [[44, null], [44, null], [44, null]], "TroubleShooting": [[45, "troubleshooting"]], "Installation": [[45, "installation"]], "Could not build wheels": [[45, "could-not-build-wheels"]], "Optimization": [[45, "optimization"]], "Facing OPENAI API error": [[45, "facing-openai-api-error"]], "Error while running LLM": [[45, "error-while-running-llm"]], "Tutorial": [[46, "tutorial"]], "Prepare Evaluation Dataset": [[46, "prepare-evaluation-dataset"]], "Note: Dataset Format": [[46, null]], "Find Optimal RAG Pipeline": [[46, "find-optimal-rag-pipeline"]], "Write custom config yaml file": [[46, null]], "Extract pipeline and evaluate test dataset": [[46, "extract-pipeline-and-evaluate-test-dataset"]], "Deploy your optimal RAG pipeline": [[46, "deploy-your-optimal-rag-pipeline"]], "Next Step": [[46, null]]}, "indexentries": {"evaluator (class in autorag.evaluator)": [[0, "autorag.evaluator.Evaluator"]], "runner (class in autorag.deploy)": [[0, "autorag.deploy.Runner"]], "runnerinput (class in autorag.deploy)": [[0, "autorag.deploy.RunnerInput"]], "autorag": [[0, "module-autorag"]], "autorag.deploy": [[0, "module-autorag.deploy"]], "autorag.evaluator": [[0, "module-autorag.evaluator"]], "autorag.node_line": [[0, "module-autorag.node_line"]], "autorag.strategy": [[0, "module-autorag.strategy"]], "autorag.support": [[0, "module-autorag.support"]], "avoid_empty_result() (in module autorag.strategy)": [[0, "autorag.strategy.avoid_empty_result"]], "dynamically_find_function() (in module autorag.support)": [[0, "autorag.support.dynamically_find_function"]], "extract_best_config() (in module autorag.deploy)": [[0, "autorag.deploy.extract_best_config"]], "extract_node_line_names() (in module autorag.deploy)": [[0, "autorag.deploy.extract_node_line_names"]], "extract_node_strategy() (in module autorag.deploy)": [[0, "autorag.deploy.extract_node_strategy"]], "filter_by_threshold() (in module autorag.strategy)": [[0, "autorag.strategy.filter_by_threshold"]], "from_trial_folder() (autorag.deploy.runner class method)": [[0, "autorag.deploy.Runner.from_trial_folder"]], "from_yaml() (autorag.deploy.runner class method)": [[0, "autorag.deploy.Runner.from_yaml"]], "get_support_modules() (in module autorag.support)": [[0, "autorag.support.get_support_modules"]], "get_support_nodes() (in module autorag.support)": [[0, "autorag.support.get_support_nodes"]], "handle_exception() (in module autorag)": [[0, "autorag.handle_exception"]], "make_node_lines() (in module autorag.node_line)": [[0, "autorag.node_line.make_node_lines"]], "measure_speed() (in module autorag.strategy)": [[0, "autorag.strategy.measure_speed"]], "module": [[0, "module-autorag"], [0, "module-autorag.deploy"], [0, "module-autorag.evaluator"], [0, "module-autorag.node_line"], [0, "module-autorag.strategy"], [0, "module-autorag.support"], [1, "module-autorag.data"], [2, "module-autorag.evaluate"], [2, "module-autorag.evaluate.generation"], [2, "module-autorag.evaluate.retrieval"], [2, "module-autorag.evaluate.retrieval_contents"], [3, "module-autorag.evaluate.metric"], [3, "module-autorag.evaluate.metric.generation"], [3, "module-autorag.evaluate.metric.retrieval"], [3, "module-autorag.evaluate.metric.retrieval_contents"], [4, "module-autorag.nodes"], [5, "module-autorag.nodes.generator"], [5, "module-autorag.nodes.generator.base"], [5, "module-autorag.nodes.generator.llama_index_llm"], [5, "module-autorag.nodes.generator.run"], [6, "module-autorag.nodes.passagecompressor"], [6, "module-autorag.nodes.passagecompressor.base"], [6, "module-autorag.nodes.passagecompressor.run"], [6, "module-autorag.nodes.passagecompressor.tree_summarize"], [7, "module-autorag.nodes.passagereranker"], [7, "module-autorag.nodes.passagereranker.base"], [7, "module-autorag.nodes.passagereranker.monot5"], [7, "module-autorag.nodes.passagereranker.run"], [7, "module-autorag.nodes.passagereranker.upr"], [8, "module-autorag.nodes.passagereranker.tart"], [8, "module-autorag.nodes.passagereranker.tart.modeling_enc_t5"], [8, "module-autorag.nodes.passagereranker.tart.tart"], [8, "module-autorag.nodes.passagereranker.tart.tokenization_enc_t5"], [9, "module-autorag.nodes.promptmaker"], [9, "module-autorag.nodes.promptmaker.base"], [9, "module-autorag.nodes.promptmaker.fstring"], [9, "module-autorag.nodes.promptmaker.run"], [10, "module-autorag.nodes.queryexpansion"], [10, "module-autorag.nodes.queryexpansion.base"], [10, "module-autorag.nodes.queryexpansion.hyde"], [10, "module-autorag.nodes.queryexpansion.query_decompose"], [10, "module-autorag.nodes.queryexpansion.run"], [11, "module-autorag.nodes.retrieval"], [11, "module-autorag.nodes.retrieval.base"], [11, "module-autorag.nodes.retrieval.bm25"], [11, "module-autorag.nodes.retrieval.hybrid_cc"], [11, "module-autorag.nodes.retrieval.hybrid_rrf"], [11, "module-autorag.nodes.retrieval.run"], [11, "module-autorag.nodes.retrieval.vectordb"], [12, "module-autorag.schema"], [12, "module-autorag.schema.module"], [12, "module-autorag.schema.node"], [13, "module-autorag.utils"], [13, "module-autorag.utils.preprocess"], [13, "module-autorag.utils.util"]], "query (autorag.deploy.runnerinput attribute)": [[0, "autorag.deploy.RunnerInput.query"]], "result_column (autorag.deploy.runnerinput attribute)": [[0, "autorag.deploy.RunnerInput.result_column"]], "run() (autorag.deploy.runner method)": [[0, "autorag.deploy.Runner.run"]], "run_api_server() (autorag.deploy.runner method)": [[0, "autorag.deploy.Runner.run_api_server"]], "run_node_line() (in module autorag.node_line)": [[0, "autorag.node_line.run_node_line"]], "select_best_average() (in module autorag.strategy)": [[0, "autorag.strategy.select_best_average"]], "start_trial() (autorag.evaluator.evaluator method)": [[0, "autorag.evaluator.Evaluator.start_trial"]], "summary_df_to_yaml() (in module autorag.deploy)": [[0, "autorag.deploy.summary_df_to_yaml"]], "autorag.data": [[1, "module-autorag.data"]], "autorag.evaluate": [[2, "module-autorag.evaluate"]], "autorag.evaluate.generation": [[2, "module-autorag.evaluate.generation"]], "autorag.evaluate.retrieval": [[2, "module-autorag.evaluate.retrieval"]], "autorag.evaluate.retrieval_contents": [[2, "module-autorag.evaluate.retrieval_contents"]], "evaluate_generation() (in module autorag.evaluate.generation)": [[2, "autorag.evaluate.generation.evaluate_generation"]], "evaluate_retrieval() (in module autorag.evaluate.retrieval)": [[2, "autorag.evaluate.retrieval.evaluate_retrieval"]], "evaluate_retrieval_contents() (in module autorag.evaluate.retrieval_contents)": [[2, "autorag.evaluate.retrieval_contents.evaluate_retrieval_contents"]], "autorag.evaluate.metric": [[3, "module-autorag.evaluate.metric"]], "autorag.evaluate.metric.generation": [[3, "module-autorag.evaluate.metric.generation"]], "autorag.evaluate.metric.retrieval": [[3, "module-autorag.evaluate.metric.retrieval"]], "autorag.evaluate.metric.retrieval_contents": [[3, "module-autorag.evaluate.metric.retrieval_contents"]], "bleu() (in module autorag.evaluate.metric.generation)": [[3, "autorag.evaluate.metric.generation.bleu"]], "generation_metric() (in module autorag.evaluate.metric.generation)": [[3, "autorag.evaluate.metric.generation.generation_metric"]], "huggingface_evaluate() (in module autorag.evaluate.metric.generation)": [[3, "autorag.evaluate.metric.generation.huggingface_evaluate"]], "meteor() (in module autorag.evaluate.metric.generation)": [[3, "autorag.evaluate.metric.generation.meteor"]], "retrieval_contents_metric() (in module autorag.evaluate.metric.retrieval_contents)": [[3, "autorag.evaluate.metric.retrieval_contents.retrieval_contents_metric"]], "retrieval_f1() (in module autorag.evaluate.metric.retrieval)": [[3, "autorag.evaluate.metric.retrieval.retrieval_f1"]], "retrieval_metric() (in module autorag.evaluate.metric.retrieval)": [[3, "autorag.evaluate.metric.retrieval.retrieval_metric"]], "retrieval_precision() (in module autorag.evaluate.metric.retrieval)": [[3, "autorag.evaluate.metric.retrieval.retrieval_precision"]], "retrieval_recall() (in module autorag.evaluate.metric.retrieval)": [[3, "autorag.evaluate.metric.retrieval.retrieval_recall"]], "retrieval_token_f1() (in module autorag.evaluate.metric.retrieval_contents)": [[3, "autorag.evaluate.metric.retrieval_contents.retrieval_token_f1"]], "retrieval_token_precision() (in module autorag.evaluate.metric.retrieval_contents)": [[3, "autorag.evaluate.metric.retrieval_contents.retrieval_token_precision"]], "retrieval_token_recall() (in module autorag.evaluate.metric.retrieval_contents)": [[3, "autorag.evaluate.metric.retrieval_contents.retrieval_token_recall"]], "rouge() (in module autorag.evaluate.metric.generation)": [[3, "autorag.evaluate.metric.generation.rouge"]], "single_token_f1() (in module autorag.evaluate.metric.retrieval_contents)": [[3, "autorag.evaluate.metric.retrieval_contents.single_token_f1"]], "autorag.nodes": [[4, "module-autorag.nodes"]], "autorag.nodes.generator": [[5, "module-autorag.nodes.generator"]], "autorag.nodes.generator.base": [[5, "module-autorag.nodes.generator.base"]], "autorag.nodes.generator.llama_index_llm": [[5, "module-autorag.nodes.generator.llama_index_llm"]], "autorag.nodes.generator.run": [[5, "module-autorag.nodes.generator.run"]], "evaluate_generator_node() (in module autorag.nodes.generator.run)": [[5, "autorag.nodes.generator.run.evaluate_generator_node"]], "generator_node() (in module autorag.nodes.generator.base)": [[5, "autorag.nodes.generator.base.generator_node"]], "llama_index_llm() (in module autorag.nodes.generator.llama_index_llm)": [[5, "autorag.nodes.generator.llama_index_llm.llama_index_llm"]], "run_generator_node() (in module autorag.nodes.generator.run)": [[5, "autorag.nodes.generator.run.run_generator_node"]], "autorag.nodes.passagecompressor": [[6, "module-autorag.nodes.passagecompressor"]], "autorag.nodes.passagecompressor.base": [[6, "module-autorag.nodes.passagecompressor.base"]], "autorag.nodes.passagecompressor.run": [[6, "module-autorag.nodes.passagecompressor.run"]], "autorag.nodes.passagecompressor.tree_summarize": [[6, "module-autorag.nodes.passagecompressor.tree_summarize"]], "evaluate_passage_compressor_node() (in module autorag.nodes.passagecompressor.run)": [[6, "autorag.nodes.passagecompressor.run.evaluate_passage_compressor_node"]], "make_contents_gt() (in module autorag.nodes.passagecompressor.run)": [[6, "autorag.nodes.passagecompressor.run.make_contents_gt"]], "make_llm() (in module autorag.nodes.passagecompressor.base)": [[6, "autorag.nodes.passagecompressor.base.make_llm"]], "passage_compressor_node() (in module autorag.nodes.passagecompressor.base)": [[6, "autorag.nodes.passagecompressor.base.passage_compressor_node"]], "run_passage_compressor_node() (in module autorag.nodes.passagecompressor.run)": [[6, "autorag.nodes.passagecompressor.run.run_passage_compressor_node"]], "tree_summarize() (in module autorag.nodes.passagecompressor.tree_summarize)": [[6, "autorag.nodes.passagecompressor.tree_summarize.tree_summarize"]], "autorag.nodes.passagereranker": [[7, "module-autorag.nodes.passagereranker"]], "autorag.nodes.passagereranker.base": [[7, "module-autorag.nodes.passagereranker.base"]], "autorag.nodes.passagereranker.monot5": [[7, "module-autorag.nodes.passagereranker.monot5"]], "autorag.nodes.passagereranker.run": [[7, "module-autorag.nodes.passagereranker.run"]], "autorag.nodes.passagereranker.upr": [[7, "module-autorag.nodes.passagereranker.upr"]], "calculate_likelihood() (in module autorag.nodes.passagereranker.upr)": [[7, "autorag.nodes.passagereranker.upr.calculate_likelihood"]], "mono_t5_pure() (in module autorag.nodes.passagereranker.monot5)": [[7, "autorag.nodes.passagereranker.monot5.mono_t5_pure"]], "monot5() (in module autorag.nodes.passagereranker.monot5)": [[7, "autorag.nodes.passagereranker.monot5.monot5"]], "passage_reranker_node() (in module autorag.nodes.passagereranker.base)": [[7, "autorag.nodes.passagereranker.base.passage_reranker_node"]], "run_passage_reranker_node() (in module autorag.nodes.passagereranker.run)": [[7, "autorag.nodes.passagereranker.run.run_passage_reranker_node"]], "upr() (in module autorag.nodes.passagereranker.upr)": [[7, "autorag.nodes.passagereranker.upr.upr"]], "upr_pure() (in module autorag.nodes.passagereranker.upr)": [[7, "autorag.nodes.passagereranker.upr.upr_pure"]], "enct5forsequenceclassification (class in autorag.nodes.passagereranker.tart.modeling_enc_t5)": [[8, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification"]], "enct5tokenizer (class in autorag.nodes.passagereranker.tart.tokenization_enc_t5)": [[8, "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer"]], "autorag.nodes.passagereranker.tart": [[8, "module-autorag.nodes.passagereranker.tart"]], "autorag.nodes.passagereranker.tart.modeling_enc_t5": [[8, "module-autorag.nodes.passagereranker.tart.modeling_enc_t5"]], "autorag.nodes.passagereranker.tart.tart": [[8, "module-autorag.nodes.passagereranker.tart.tart"]], "autorag.nodes.passagereranker.tart.tokenization_enc_t5": [[8, "module-autorag.nodes.passagereranker.tart.tokenization_enc_t5"]], "build_inputs_with_special_tokens() (autorag.nodes.passagereranker.tart.tokenization_enc_t5.enct5tokenizer method)": [[8, "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer.build_inputs_with_special_tokens"]], "create_token_type_ids_from_sequences() (autorag.nodes.passagereranker.tart.tokenization_enc_t5.enct5tokenizer method)": [[8, "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer.create_token_type_ids_from_sequences"]], "deparallelize() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[8, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.deparallelize"]], "forward() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[8, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.forward"]], "get_encoder() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[8, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.get_encoder"]], "get_input_embeddings() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[8, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.get_input_embeddings"]], "get_special_tokens_mask() (autorag.nodes.passagereranker.tart.tokenization_enc_t5.enct5tokenizer method)": [[8, "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer.get_special_tokens_mask"]], "parallelize() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[8, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.parallelize"]], "set_input_embeddings() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[8, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.set_input_embeddings"]], "tart() (in module autorag.nodes.passagereranker.tart.tart)": [[8, "autorag.nodes.passagereranker.tart.tart.tart"]], "tart_pure() (in module autorag.nodes.passagereranker.tart.tart)": [[8, "autorag.nodes.passagereranker.tart.tart.tart_pure"]], "autorag.nodes.promptmaker": [[9, "module-autorag.nodes.promptmaker"]], "autorag.nodes.promptmaker.base": [[9, "module-autorag.nodes.promptmaker.base"]], "autorag.nodes.promptmaker.fstring": [[9, "module-autorag.nodes.promptmaker.fstring"]], "autorag.nodes.promptmaker.run": [[9, "module-autorag.nodes.promptmaker.run"]], "evaluate_generator_result() (in module autorag.nodes.promptmaker.run)": [[9, "autorag.nodes.promptmaker.run.evaluate_generator_result"]], "evaluate_one_prompt_maker_node() (in module autorag.nodes.promptmaker.run)": [[9, "autorag.nodes.promptmaker.run.evaluate_one_prompt_maker_node"]], "fstring() (in module autorag.nodes.promptmaker.fstring)": [[9, "autorag.nodes.promptmaker.fstring.fstring"]], "make_generator_callable_params() (in module autorag.nodes.promptmaker.run)": [[9, "autorag.nodes.promptmaker.run.make_generator_callable_params"]], "prompt_maker_node() (in module autorag.nodes.promptmaker.base)": [[9, "autorag.nodes.promptmaker.base.prompt_maker_node"]], "run_prompt_maker_node() (in module autorag.nodes.promptmaker.run)": [[9, "autorag.nodes.promptmaker.run.run_prompt_maker_node"]], "autorag.nodes.queryexpansion": [[10, "module-autorag.nodes.queryexpansion"]], "autorag.nodes.queryexpansion.base": [[10, "module-autorag.nodes.queryexpansion.base"]], "autorag.nodes.queryexpansion.hyde": [[10, "module-autorag.nodes.queryexpansion.hyde"]], "autorag.nodes.queryexpansion.query_decompose": [[10, "module-autorag.nodes.queryexpansion.query_decompose"]], "autorag.nodes.queryexpansion.run": [[10, "module-autorag.nodes.queryexpansion.run"]], "evaluate_one_query_expansion_node() (in module autorag.nodes.queryexpansion.run)": [[10, "autorag.nodes.queryexpansion.run.evaluate_one_query_expansion_node"]], "hyde() (in module autorag.nodes.queryexpansion.hyde)": [[10, "autorag.nodes.queryexpansion.hyde.hyde"]], "hyde_pure() (in module autorag.nodes.queryexpansion.hyde)": [[10, "autorag.nodes.queryexpansion.hyde.hyde_pure"]], "make_retrieval_callable_params() (in module autorag.nodes.queryexpansion.run)": [[10, "autorag.nodes.queryexpansion.run.make_retrieval_callable_params"]], "query_decompose() (in module autorag.nodes.queryexpansion.query_decompose)": [[10, "autorag.nodes.queryexpansion.query_decompose.query_decompose"]], "query_decompose_pure() (in module autorag.nodes.queryexpansion.query_decompose)": [[10, "autorag.nodes.queryexpansion.query_decompose.query_decompose_pure"]], "query_expansion_node() (in module autorag.nodes.queryexpansion.base)": [[10, "autorag.nodes.queryexpansion.base.query_expansion_node"]], "run_query_expansion_node() (in module autorag.nodes.queryexpansion.run)": [[10, "autorag.nodes.queryexpansion.run.run_query_expansion_node"]], "autorag.nodes.retrieval": [[11, "module-autorag.nodes.retrieval"]], "autorag.nodes.retrieval.base": [[11, "module-autorag.nodes.retrieval.base"]], "autorag.nodes.retrieval.bm25": [[11, "module-autorag.nodes.retrieval.bm25"]], "autorag.nodes.retrieval.hybrid_cc": [[11, "module-autorag.nodes.retrieval.hybrid_cc"]], "autorag.nodes.retrieval.hybrid_rrf": [[11, "module-autorag.nodes.retrieval.hybrid_rrf"]], "autorag.nodes.retrieval.run": [[11, "module-autorag.nodes.retrieval.run"]], "autorag.nodes.retrieval.vectordb": [[11, "module-autorag.nodes.retrieval.vectordb"]], "bm25() (in module autorag.nodes.retrieval.bm25)": [[11, "autorag.nodes.retrieval.bm25.bm25"]], "bm25_ingest() (in module autorag.nodes.retrieval.bm25)": [[11, "autorag.nodes.retrieval.bm25.bm25_ingest"]], "bm25_pure() (in module autorag.nodes.retrieval.bm25)": [[11, "autorag.nodes.retrieval.bm25.bm25_pure"]], "bm25_tokenize() (in module autorag.nodes.retrieval.bm25)": [[11, "autorag.nodes.retrieval.bm25.bm25_tokenize"]], "cast_queries() (in module autorag.nodes.retrieval.base)": [[11, "autorag.nodes.retrieval.base.cast_queries"]], "cc_pure() (in module autorag.nodes.retrieval.hybrid_cc)": [[11, "autorag.nodes.retrieval.hybrid_cc.cc_pure"]], "edit_summary_df_params() (in module autorag.nodes.retrieval.run)": [[11, "autorag.nodes.retrieval.run.edit_summary_df_params"]], "evaluate_retrieval_node() (in module autorag.nodes.retrieval.run)": [[11, "autorag.nodes.retrieval.run.evaluate_retrieval_node"]], "evenly_distribute_passages() (in module autorag.nodes.retrieval.base)": [[11, "autorag.nodes.retrieval.base.evenly_distribute_passages"]], "get_hybrid_execution_times() (in module autorag.nodes.retrieval.run)": [[11, "autorag.nodes.retrieval.run.get_hybrid_execution_times"]], "get_ids_and_scores() (in module autorag.nodes.retrieval.run)": [[11, "autorag.nodes.retrieval.run.get_ids_and_scores"]], "get_module_params() (in module autorag.nodes.retrieval.run)": [[11, "autorag.nodes.retrieval.run.get_module_params"]], "hybrid_cc() (in module autorag.nodes.retrieval.hybrid_cc)": [[11, "autorag.nodes.retrieval.hybrid_cc.hybrid_cc"]], "hybrid_rrf() (in module autorag.nodes.retrieval.hybrid_rrf)": [[11, "autorag.nodes.retrieval.hybrid_rrf.hybrid_rrf"]], "load_bm25_corpus() (in module autorag.nodes.retrieval.base)": [[11, "autorag.nodes.retrieval.base.load_bm25_corpus"]], "load_chroma_collection() (in module autorag.nodes.retrieval.base)": [[11, "autorag.nodes.retrieval.base.load_chroma_collection"]], "retrieval_node() (in module autorag.nodes.retrieval.base)": [[11, "autorag.nodes.retrieval.base.retrieval_node"]], "rrf_calculate() (in module autorag.nodes.retrieval.hybrid_rrf)": [[11, "autorag.nodes.retrieval.hybrid_rrf.rrf_calculate"]], "rrf_pure() (in module autorag.nodes.retrieval.hybrid_rrf)": [[11, "autorag.nodes.retrieval.hybrid_rrf.rrf_pure"]], "run_retrieval_modules() (in module autorag.nodes.retrieval.base)": [[11, "autorag.nodes.retrieval.base.run_retrieval_modules"]], "run_retrieval_node() (in module autorag.nodes.retrieval.run)": [[11, "autorag.nodes.retrieval.run.run_retrieval_node"]], "select_result_for_hybrid() (in module autorag.nodes.retrieval.run)": [[11, "autorag.nodes.retrieval.run.select_result_for_hybrid"]], "vectordb() (in module autorag.nodes.retrieval.vectordb)": [[11, "autorag.nodes.retrieval.vectordb.vectordb"]], "vectordb_ingest() (in module autorag.nodes.retrieval.vectordb)": [[11, "autorag.nodes.retrieval.vectordb.vectordb_ingest"]], "vectordb_pure() (in module autorag.nodes.retrieval.vectordb)": [[11, "autorag.nodes.retrieval.vectordb.vectordb_pure"]], "module (class in autorag.schema.module)": [[12, "autorag.schema.module.Module"]], "node (class in autorag.schema.node)": [[12, "autorag.schema.node.Node"]], "autorag.schema": [[12, "module-autorag.schema"]], "autorag.schema.module": [[12, "module-autorag.schema.module"]], "autorag.schema.node": [[12, "module-autorag.schema.node"]], "extract_values() (in module autorag.schema.node)": [[12, "autorag.schema.node.extract_values"]], "extract_values_from_nodes() (in module autorag.schema.node)": [[12, "autorag.schema.node.extract_values_from_nodes"]], "from_dict() (autorag.schema.module.module class method)": [[12, "autorag.schema.module.Module.from_dict"]], "from_dict() (autorag.schema.node.node class method)": [[12, "autorag.schema.node.Node.from_dict"]], "get_param_combinations() (autorag.schema.node.node method)": [[12, "autorag.schema.node.Node.get_param_combinations"]], "module (autorag.schema.module.module attribute)": [[12, "autorag.schema.module.Module.module"]], "module_param (autorag.schema.module.module attribute)": [[12, "autorag.schema.module.Module.module_param"]], "module_type (autorag.schema.module.module attribute)": [[12, "autorag.schema.module.Module.module_type"]], "module_type_exists() (in module autorag.schema.node)": [[12, "autorag.schema.node.module_type_exists"]], "modules (autorag.schema.node.node attribute)": [[12, "autorag.schema.node.Node.modules"]], "node_params (autorag.schema.node.node attribute)": [[12, "autorag.schema.node.Node.node_params"]], "node_type (autorag.schema.node.node attribute)": [[12, "autorag.schema.node.Node.node_type"]], "run() (autorag.schema.node.node method)": [[12, "autorag.schema.node.Node.run"]], "run_node (autorag.schema.node.node attribute)": [[12, "autorag.schema.node.Node.run_node"]], "strategy (autorag.schema.node.node attribute)": [[12, "autorag.schema.node.Node.strategy"]], "autorag.utils": [[13, "module-autorag.utils"]], "autorag.utils.preprocess": [[13, "module-autorag.utils.preprocess"]], "autorag.utils.util": [[13, "module-autorag.utils.util"]], "cast_corpus_dataset() (in module autorag.utils.preprocess)": [[13, "autorag.utils.preprocess.cast_corpus_dataset"]], "cast_qa_dataset() (in module autorag.utils.preprocess)": [[13, "autorag.utils.preprocess.cast_qa_dataset"]], "convert_string_to_tuple_in_dict() (in module autorag.utils.util)": [[13, "autorag.utils.util.convert_string_to_tuple_in_dict"]], "explode() (in module autorag.utils.util)": [[13, "autorag.utils.util.explode"]], "fetch_contents() (in module autorag.utils.util)": [[13, "autorag.utils.util.fetch_contents"]], "find_best_result_path() (in module autorag.utils.util)": [[13, "autorag.utils.util.find_best_result_path"]], "load_summary_file() (in module autorag.utils.util)": [[13, "autorag.utils.util.load_summary_file"]], "make_combinations() (in module autorag.utils.util)": [[13, "autorag.utils.util.make_combinations"]], "normalize_string() (in module autorag.utils.util)": [[13, "autorag.utils.util.normalize_string"]], "process_batch() (in module autorag.utils.util)": [[13, "autorag.utils.util.process_batch"]], "replace_value_in_dict() (in module autorag.utils.util)": [[13, "autorag.utils.util.replace_value_in_dict"]], "result_to_dataframe() (in module autorag.utils.util)": [[13, "autorag.utils.util.result_to_dataframe"]], "validate_corpus_dataset() (in module autorag.utils.preprocess)": [[13, "autorag.utils.preprocess.validate_corpus_dataset"]], "validate_qa_dataset() (in module autorag.utils.preprocess)": [[13, "autorag.utils.preprocess.validate_qa_dataset"]]}})
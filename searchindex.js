Search.setIndex({"alltitles": {"/v1/run (POST)": [[49, "id2"]], "/v1/stream (POST)": [[49, "id3"]], "/version (GET)": [[49, "id4"]], "0. Retrieval token metric in AutoRAG": [[53, "retrieval-token-metric-in-autorag"]], "0. Understanding AutoRAG\u2019s retrieval_gt": [[52, "understanding-autorag-s-retrieval-gt"]], "1. /v1/run (POST)": [[49, "v1-run-post"]], "1. Add File Name": [[30, "add-file-name"]], "1. Auto-truncate prompt": [[60, "auto-truncate-prompt"]], "1. Bleu": [[51, "bleu"]], "1. Build the Docker Image": [[55, "build-the-docker-image"]], "1. Factoid": [[47, "factoid"]], "1. HTML Parser": [[38, "html-parser"]], "1. Installation": [[109, "installation"]], "1. PDF": [[39, "pdf"]], "1. Parse": [[48, "parse"]], "1. Precision": [[52, "precision"]], "1. Query Expansion": [[97, null]], "1. Reasoning Evolving": [[44, "reasoning-evolving"]], "1. Run as a Code": [[110, "run-as-a-code"]], "1. Sample retrieval gt": [[46, "sample-retrieval-gt"]], "1. Set chunker instance": [[30, "set-chunker-instance"]], "1. Set parser instance": [[41, "set-parser-instance"]], "1. Token": [[31, "token"], [32, "token"]], "1. Token Precision": [[53, "token-precision"]], "1. Unanswerable question filtering": [[45, "unanswerable-question-filtering"]], "1. Use YAML path": [[50, "use-yaml-path"]], "2. /v1/stream (POST)": [[49, "v1-stream-post"]], "2. Accurate token output": [[60, "accurate-token-output"]], "2. CSV": [[39, "csv"]], "2. Character": [[31, "character"]], "2. Concept Completion": [[47, "concept-completion"]], "2. Conditional Evolving": [[44, "conditional-evolving"]], "2. Get retrieval gt contents to generate questions": [[46, "get-retrieval-gt-contents-to-generate-questions"]], "2. Optimization": [[109, "optimization"]], "2. Passage Dependent Filtering": [[45, "passage-dependent-filtering"]], "2. QA Creation": [[48, "qa-creation"]], "2. Recall": [[52, "recall"]], "2. Retrieval": [[101, null]], "2. Rouge": [[51, "rouge"]], "2. Run as an API server": [[110, "run-as-an-api-server"]], "2. Run the Docker Container": [[55, "run-the-docker-container"]], "2. Sentence": [[32, "sentence"]], "2. Sentence Splitter": [[30, "sentence-splitter"]], "2. Set YAML file": [[30, "set-yaml-file"], [41, "set-yaml-file"]], "2. The text information comes separately from the table information.": [[38, "the-text-information-comes-separately-from-the-table-information"]], "2. Token Recall": [[53, "token-recall"]], "2. Use a trial path": [[50, "use-a-trial-path"]], "3. /version (GET)": [[49, "version-get"]], "3. Accurate log prob output": [[60, "accurate-log-prob-output"]], "3. Chunking Optimization": [[48, "chunking-optimization"]], "3. Compress Query": [[44, "compress-query"]], "3. F1 Score": [[52, "f1-score"]], "3. Generate queries": [[46, "generate-queries"]], "3. JSON": [[39, "json"]], "3. LlamaIndex": [[109, "llamaindex"]], "3. METEOR": [[51, "meteor"]], "3. Passage Augmenter": [[63, null]], "3. Run as a Web Interface": [[110, "run-as-a-web-interface"]], "3. Sentence": [[31, "sentence"]], "3. Start chunking": [[30, "start-chunking"]], "3. Start parsing": [[41, "start-parsing"]], "3. Token F1": [[53, "token-f1"]], "3. Two-hop Incremental": [[47, "two-hop-incremental"]], "3. Use Runner": [[50, "use-runner"]], "3. Using a Custom Cache Directory with HF_HOME": [[55, "using-a-custom-cache-directory-with-hf-home"]], "3. Window": [[32, "window"]], "4. Check the result": [[30, "check-the-result"], [41, "check-the-result"]], "4. GPU-related Error": [[109, "gpu-related-error"]], "4. Generate answers": [[46, "generate-answers"]], "4. MRR (Mean Reciprocal Rank)": [[52, "mrr-mean-reciprocal-rank"]], "4. Markdown": [[39, "markdown"]], "4. Passage_Reranker": [[83, null]], "4. QA - Corpus mapping": [[48, "qa-corpus-mapping"]], "4. Sem Score": [[51, "sem-score"]], "4. Semantic": [[32, "semantic"]], "5-1. Coherence": [[51, "coherence"]], "5-2. Consistency": [[51, "consistency"]], "5-3. Fluency": [[51, "fluency"]], "5-4. Relevance": [[51, "relevance"]], "5. Debugging and Manual Access": [[55, "debugging-and-manual-access"]], "5. Filtering questions": [[46, "filtering-questions"]], "5. G-Eval": [[51, "g-eval"]], "5. HTML": [[39, "html"]], "5. MAP (Mean Average Precision)": [[52, "map-mean-average-precision"]], "5. Passage Filter": [[69, null]], "5. Simple": [[32, "simple"]], "5. UnicodeDecodeError": [[109, "unicodedecodeerror"]], "6. Bert Score": [[51, "bert-score"]], "6. NDCG (Normalized Discounted Cumulative Gain)": [[52, "ndcg-normalized-discounted-cumulative-gain"]], "6. Ollama RequestTimeOut Error": [[109, "ollama-requesttimeout-error"]], "6. Passage_Compressor": [[66, null]], "6. Save the QA data": [[46, "save-the-qa-data"]], "6. XML": [[39, "xml"]], "7. All files": [[39, "all-files"]], "7. Prompt Maker": [[92, null]], "8. Generator": [[58, null]], "API Endpoint": [[49, "id1"]], "API client usage example": [[49, "api-client-usage-example"]], "API endpoint": [[49, null]], "Add more LLM models": [[56, "add-more-llm-models"]], "Add your embedding models": [[56, "add-your-embedding-models"]], "Additional Notes": [[55, "additional-notes"]], "Answer Generation": [[43, null]], "Any trouble to use Korean tokenizer?": [[98, null]], "Auto-save feature": [[37, null]], "AutoRAG documentation": [[54, null]], "Available Chunk Method": [[31, "available-chunk-method"], [32, "available-chunk-method"]], "Available List": [[62, null]], "Available Parse Method by File Type": [[39, "available-parse-method-by-file-type"]], "Available Sentence Splitter": [[30, "available-sentence-splitter"]], "BM25": [[98, null]], "Backend Support": [[102, "backend-support"]], "Basic Concepts": [[33, "basic-concepts"]], "Basic Generation": [[43, "basic-generation"]], "Before Usage": [[75, "before-usage"], [79, "before-usage"], [89, "before-usage"]], "Build from source": [[55, "build-from-source"]], "Chunk": [[30, null]], "Clova": [[38, null]], "Colab Tutorial": [[110, null]], "Colbert Reranker": [[76, null]], "Concise Generation": [[43, "concise-generation"]], "Configuration": [[106, "configuration"]], "Configure LLM & Embedding models": [[56, null]], "Configure the Embedding model": [[56, "configure-the-embedding-model"]], "Configure the LLM model": [[56, "configure-the-llm-model"]], "Contact": [[107, null]], "Contact us": [[107, "contact-us"]], "Corpus Dataset": [[34, "corpus-dataset"]], "Could not build wheels": [[109, "could-not-build-wheels"]], "Data Creation": [[33, null], [57, "data-creation"]], "Dataset Format": [[34, null]], "Default Prompt": [[96, "default-prompt"]], "Deploy your optimal RAG pipeline": [[110, "deploy-your-optimal-rag-pipeline"]], "Do I need to use all nodes?": [[105, null]], "Don\u2019t know Filter": [[45, "don-t-know-filter"]], "Early version of AutoRAG": [[107, "early-version-of-autorag"]], "Endpoints": [[49, "endpoints"]], "Error while running LLM": [[109, "error-while-running-llm"]], "Evaluate Nodes that can\u2019t evaluate": [[105, "evaluate-nodes-that-can-t-evaluate"]], "Evaluation data creation tutorial": [[48, null]], "Example": [[47, "example"]], "Example API Documentation": [[49, "example-api-documentation"]], "Example Configuration Using Normalize Mean Strategy": [[106, "example-configuration-using-normalize-mean-strategy"]], "Example Configuration Using mean Strategy": [[106, "example-configuration-using-mean-strategy"]], "Example Configuration Using rank Strategy": [[106, "example-configuration-using-rank-strategy"]], "Example Node Lines": [[108, "example-node-lines"]], "Example YAML": [[30, "example-yaml"], [30, "id1"], [31, "example-yaml"], [32, "example-yaml"], [38, "example-yaml"], [39, "example-yaml"], [39, "id1"], [39, "id2"], [39, "id3"], [39, "id4"], [39, "id5"], [39, "id6"], [40, "example-yaml"], [42, "example-yaml"]], "Example config.yaml": [[59, "example-config-yaml"], [60, "example-config-yaml"], [61, "example-config-yaml"], [64, "example-config-yaml"], [65, "example-config-yaml"], [67, "example-config-yaml"], [68, "example-config-yaml"], [70, "example-config-yaml"], [71, "example-config-yaml"], [72, "example-config-yaml"], [73, "example-config-yaml"], [74, "example-config-yaml"], [75, "example-config-yaml"], [76, "example-config-yaml"], [77, "example-config-yaml"], [78, "example-config-yaml"], [79, "example-config-yaml"], [80, "example-config-yaml"], [81, "example-config-yaml"], [82, "example-config-yaml"], [84, "example-config-yaml"], [85, "example-config-yaml"], [86, "example-config-yaml"], [87, "example-config-yaml"], [88, "example-config-yaml"], [89, "example-config-yaml"], [90, "example-config-yaml"], [91, "example-config-yaml"], [93, "example-config-yaml"], [94, "example-config-yaml"], [95, "example-config-yaml"], [96, "example-config-yaml"], [98, "example-config-yaml"], [99, "example-config-yaml"], [100, "example-config-yaml"], [102, "example-config-yaml"]], "Example config.yaml file": [[58, "example-config-yaml-file"], [63, "example-config-yaml-file"], [66, "example-config-yaml-file"], [69, "example-config-yaml-file"], [83, "example-config-yaml-file"], [92, "example-config-yaml-file"], [97, "example-config-yaml-file"], [101, "example-config-yaml-file"]], "Explanation of concepts": [[108, "explanation-of-concepts"]], "Explanation:": [[55, "explanation"], [55, "id1"]], "Extract pipeline and evaluate test dataset": [[110, "extract-pipeline-and-evaluate-test-dataset"]], "F-String": [[90, null]], "Facing Import Error": [[109, "facing-import-error"]], "Facing OPENAI API error": [[109, "facing-openai-api-error"]], "Factoid Example": [[47, "factoid-example"]], "Features": [[30, "features"]], "Filtering": [[45, null]], "Find Optimal RAG Pipeline": [[110, "find-optimal-rag-pipeline"]], "Flag Embedding LLM Reranker": [[77, null]], "Flag Embedding Reranker": [[78, null]], "Folder Structure": [[104, null]], "Generate QA set from Corpus data using RAGAS": [[36, "generate-qa-set-from-corpus-data-using-ragas"]], "Generation Metrics": [[51, null]], "How optimization works": [[105, null]], "How to Use": [[31, "how-to-use"], [32, "how-to-use"], [39, "how-to-use"]], "Huggingface AutoTokenizer": [[98, "huggingface-autotokenizer"]], "HyDE": [[94, null]], "Hybrid - cc": [[99, null]], "Hybrid - rrf": [[100, null]], "If you have both query and generation_gt:": [[37, "if-you-have-both-query-and-generation-gt"]], "If you only have query data:": [[37, "if-you-only-have-query-data"]], "Index": [[37, "index"], [56, "index"]], "Installation and Setup": [[55, null]], "Installation for Korean \ud83c\uddf0\ud83c\uddf7": [[55, "installation-for-korean"]], "Installation for Parsing \ud83c\udf32": [[55, "installation-for-parsing"]], "Ko-reranker": [[80, null]], "LLM-based Don\u2019t know Filter": [[45, "llm-based-don-t-know-filter"]], "Langchain Chunk": [[31, null]], "Langchain Parse": [[39, null]], "Language Support": [[40, "language-support"]], "Legacy": [[35, null]], "Llama Index Chunk": [[32, null]], "Llama Parse": [[40, null]], "LlamaIndex": [[43, "llamaindex"], [43, "id2"]], "Long Context Reorder": [[91, null]], "Long LLM Lingua": [[65, null]], "Long story short": [[34, null], [34, null], [34, null], [34, null]], "Make Node Line": [[103, "make-node-line"]], "Make YAML file": [[103, "make-yaml-file"]], "Make a Custom Evolving function": [[44, "make-a-custom-evolving-function"]], "Make a custom config YAML file": [[103, null]], "Make corpus data from raw documents": [[37, "make-corpus-data-from-raw-documents"]], "Make qa data from corpus data": [[37, "make-qa-data-from-corpus-data"]], "Merger Node": [[107, "merger-node"]], "Migration Guide": [[57, null]], "Module Parameters": [[59, "module-parameters"], [60, "module-parameters"], [61, "module-parameters"], [64, "module-parameters"], [65, "module-parameters"], [67, "module-parameters"], [68, "module-parameters"], [70, "module-parameters"], [71, "module-parameters"], [72, "module-parameters"], [73, "module-parameters"], [74, "module-parameters"], [75, "module-parameters"], [76, "module-parameters"], [77, "module-parameters"], [78, "module-parameters"], [79, "module-parameters"], [80, "module-parameters"], [81, "module-parameters"], [82, "module-parameters"], [84, "module-parameters"], [85, "module-parameters"], [86, "module-parameters"], [87, "module-parameters"], [88, "module-parameters"], [89, "module-parameters"], [90, "module-parameters"], [91, "module-parameters"], [93, "module-parameters"], [94, "module-parameters"], [95, "module-parameters"], [96, "module-parameters"], [98, "module-parameters"], [99, "module-parameters"], [100, "module-parameters"], [102, "module-parameters"]], "Module contents": [[0, "module-autorag"], [1, "module-autorag.data"], [2, "module-autorag.data.chunk"], [3, "module-contents"], [4, "module-autorag.data.legacy"], [5, "module-autorag.data.legacy.corpus"], [6, "module-autorag.data.legacy.qacreation"], [7, "module-autorag.data.parse"], [8, "module-autorag.data.qa"], [9, "module-autorag.data.qa.evolve"], [10, "module-autorag.data.qa.filter"], [11, "module-autorag.data.qa.generation_gt"], [12, "module-autorag.data.qa.query"], [13, "module-contents"], [14, "module-autorag.data.utils"], [15, "module-autorag.evaluation"], [16, "module-autorag.evaluation.metric"], [17, "module-autorag.nodes"], [18, "module-autorag.nodes.generator"], [19, "module-autorag.nodes.passageaugmenter"], [20, "module-autorag.nodes.passagecompressor"], [21, "module-autorag.nodes.passagefilter"], [22, "module-autorag.nodes.passagereranker"], [23, "module-autorag.nodes.passagereranker.tart"], [24, "module-autorag.nodes.promptmaker"], [25, "module-autorag.nodes.queryexpansion"], [26, "module-autorag.nodes.retrieval"], [27, "module-autorag.schema"], [28, "module-autorag.utils"]], "Modules that use Embedding model": [[56, "modules-that-use-embedding-model"]], "Modules that use LLM model": [[56, "modules-that-use-llm-model"]], "MonoT5": [[81, null]], "More optimization strategies": [[105, "more-optimization-strategies"]], "Multi Query Expansion": [[95, null]], "Next Step": [[110, null]], "Node & Module": [[108, "node-module"]], "Node Line": [[108, "node-line"]], "Node Parameters": [[58, "node-parameters"], [63, "node-parameters"], [66, "node-parameters"], [69, "node-parameters"], [83, "node-parameters"], [92, "node-parameters"], [97, "node-parameters"], [100, "node-parameters"], [101, "node-parameters"]], "Node line for Modular RAG": [[107, "node-line-for-modular-rag"]], "Note for Windows Users": [[55, "note-for-windows-users"]], "Note: Dataset Format": [[110, null]], "OpenAI": [[43, "openai"], [43, "id1"]], "OpenAI LLM": [[60, null]], "OpenVINO Reranker": [[82, null]], "Output Columns": [[30, "output-columns"], [41, "output-columns"]], "Overview": [[30, "overview"], [37, "overview"], [41, "overview"], [46, "overview"], [47, "overview"], [48, "overview"], [58, "overview"], [101, "overview"], [106, "overview"]], "Overview:": [[66, "overview"], [83, "overview"], [92, "overview"], [97, "overview"]], "Parameters": [[42, "parameters"]], "Parse": [[41, null]], "Pass the best result to the next node": [[105, "pass-the-best-result-to-the-next-node"]], "Percentile Cutoff": [[70, null]], "Point": [[38, "point"]], "Policy Node": [[107, "policy-node"]], "Prepare Evaluation Dataset": [[110, "prepare-evaluation-dataset"]], "Prev Next Augmenter": [[64, null]], "Project": [[104, "project"]], "Provided Query Evolving Functions": [[44, "provided-query-evolving-functions"]], "Purpose": [[58, null], [66, null], [101, null]], "Python Sample Code": [[49, "python-sample-code"]], "QA Dataset": [[34, "qa-dataset"]], "QA creation": [[46, null]], "Query Decompose": [[96, null]], "Query Evolving": [[44, null]], "Query Generation": [[47, null]], "Question types": [[47, "question-types"]], "RAGAS evaluation data generation": [[36, null]], "RAGAS question types": [[36, "ragas-question-types"]], "RankGPT": [[84, null]], "Recency Filter": [[71, null]], "Refine": [[67, null]], "Retrieval Metrics": [[52, null]], "Retrieval Token Metrics": [[53, null]], "Road to Modular RAG": [[107, null]], "Rule-based Don\u2019t know Filter": [[45, "rule-based-don-t-know-filter"]], "Run AutoRAG optimization": [[110, "run-autorag-optimization"]], "Run AutoRAG with \ud83d\udc33 Docker": [[55, "run-autorag-with-docker"]], "Run Chunk Pipeline": [[30, "run-chunk-pipeline"]], "Run Dashboard to see your trial result!": [[110, "run-dashboard-to-see-your-trial-result"]], "Run Parse Pipeline": [[41, "run-parse-pipeline"]], "Run with AutoRAG Runner": [[50, "run-with-autorag-runner"]], "Run with CLI": [[50, "run-with-cli"]], "Running API server": [[49, "running-api-server"]], "Running the Web Interface": [[50, "running-the-web-interface"]], "Sample Structure Index": [[104, "sample-structure-index"]], "Samples": [[34, "samples"]], "Sentence Transformer Reranker": [[85, null]], "Setup OPENAI API KEY": [[55, "setup-openai-api-key"]], "Similarity Percentile Cutoff": [[72, null]], "Similarity Threshold Cutoff": [[73, null]], "Specify modules": [[103, "specify-modules"]], "Specify nodes": [[103, "specify-nodes"]], "Start creating your own evaluation data": [[37, null]], "Strategy": [[92, "strategy"], [97, "strategy"], [106, null], [108, "strategy"]], "Strategy Parameter": [[106, "strategy-parameter"]], "Strategy Parameters": [[58, "strategy-parameters"], [66, "strategy-parameters"], [83, "strategy-parameters"], [101, "strategy-parameters"]], "Strategy Parameters:": [[92, "strategy-parameters"], [97, "strategy-parameters"]], "Structure": [[108, null]], "Submodules": [[0, "submodules"], [2, "submodules"], [3, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"], [12, "submodules"], [13, "submodules"], [14, "submodules"], [15, "submodules"], [16, "submodules"], [17, "submodules"], [18, "submodules"], [19, "submodules"], [20, "submodules"], [21, "submodules"], [22, "submodules"], [23, "submodules"], [24, "submodules"], [25, "submodules"], [26, "submodules"], [27, "submodules"], [28, "submodules"]], "Subpackages": [[0, "subpackages"], [1, "subpackages"], [4, "subpackages"], [8, "subpackages"], [15, "subpackages"], [17, "subpackages"], [22, "subpackages"]], "Summarize": [[108, null], [108, null], [108, null]], "Supported Chunk Modules": [[30, "supported-chunk-modules"]], "Supported Model Names": [[81, "supported-model-names"], [89, "supported-model-names"]], "Supported Modules": [[58, "supported-modules"], [66, "supported-modules"], [83, "supported-modules"], [92, "supported-modules"], [97, "supported-modules"], [101, "supported-modules"]], "Supported Parse Modules": [[41, "supported-parse-modules"]], "Supporting Embedding models": [[56, "supporting-embedding-models"]], "Supporting LLM models": [[56, "supporting-llm-models"]], "Swapping modules in Node": [[105, "swapping-modules-in-node"]], "TART": [[86, null]], "Table Detection": [[38, "table-detection"], [42, "table-detection"]], "Table Extraction": [[40, "table-extraction"]], "Table Hybrid Parse": [[42, null]], "Table Parse Available Modules": [[42, "table-parse-available-modules"]], "The length or row is different from the original data": [[109, "the-length-or-row-is-different-from-the-original-data"]], "Threshold Cutoff": [[74, null]], "Time Reranker": [[87, null]], "Tree Summarize": [[68, null]], "Trouble with installation?": [[55, null]], "TroubleShooting": [[109, null]], "Tutorial": [[110, null]], "UPR": [[88, null]], "Usage": [[47, "usage"], [47, "id1"], [47, "id2"]], "Use custom models": [[36, "use-custom-models"]], "Use custom prompt": [[37, "use-custom-prompt"]], "Use environment variable in the YAML file": [[103, "use-environment-variable-in-the-yaml-file"]], "Use in Multi-GPU": [[61, "use-in-multi-gpu"]], "Use multiple prompts": [[37, "use-multiple-prompts"]], "Use vllm": [[56, "use-vllm"]], "Using Langchain Chunk Method that is not in the Available Chunk Method": [[31, "using-langchain-chunk-method-that-is-not-in-the-available-chunk-method"]], "Using Llama Index Chunk Method that is not in the Available Chunk Method": [[32, "using-llama-index-chunk-method-that-is-not-in-the-available-chunk-method"]], "Using Parse Method that is not in the Available Parse Method": [[39, "using-parse-method-that-is-not-in-the-available-parse-method"]], "Using sentence splitter that is not in the Available Sentence Splitter": [[30, "using-sentence-splitter-that-is-not-in-the-available-sentence-splitter"]], "Validate your system": [[110, "validate-your-system"]], "Vectordb": [[102, null]], "Version: 1.0.0": [[49, "version-1-0-0"]], "Want to know more about Modular RAG?": [[107, null]], "Want to specify project folder?": [[30, null], [41, null], [50, null], [110, null], [110, null], [110, null]], "Web Interface": [[50, null]], "Web Interface example": [[50, "web-interface-example"]], "What if Trial_Path didn\u2019t also create a First Node Line?": [[110, null]], "What is Node Line?": [[107, null]], "What is difference between Passage Filter and Passage Reranker?": [[69, null]], "What is pass_compressor?": [[66, null]], "What is pass_passage_augmenter?": [[63, null]], "What is pass_passage_filter?": [[69, null]], "What is pass_query_expansion?": [[97, null]], "What is pass_reranker?": [[83, null]], "What is passage?": [[37, null]], "What is tuple in the yaml file?": [[103, null]], "When you have existing qa data": [[37, "when-you-have-existing-qa-data"]], "Why use Gradio instead of Streamlit?": [[50, null]], "Why use openai_llm module?": [[60, "why-use-openai-llm-module"]], "Why use python command?": [[110, null]], "Why use vllm module?": [[61, "why-use-vllm-module"]], "Window Replacement": [[93, null]], "Write custom config yaml file": [[110, null]], "[Node Line] summary.csv": [[104, "node-line-summary-csv"]], "[Node] summary.csv": [[104, "node-summary-csv"]], "[trial] summary.csv": [[104, "trial-summary-csv"]], "autorag": [[29, null]], "autorag package": [[0, null]], "autorag.chunker module": [[0, "module-autorag.chunker"]], "autorag.cli module": [[0, "module-autorag.cli"]], "autorag.dashboard module": [[0, "module-autorag.dashboard"]], "autorag.data package": [[1, null]], "autorag.data.chunk package": [[2, null]], "autorag.data.chunk.base module": [[2, "module-autorag.data.chunk.base"]], "autorag.data.chunk.langchain_chunk module": [[2, "module-autorag.data.chunk.langchain_chunk"]], "autorag.data.chunk.llama_index_chunk module": [[2, "module-autorag.data.chunk.llama_index_chunk"]], "autorag.data.chunk.run module": [[2, "module-autorag.data.chunk.run"]], "autorag.data.corpus package": [[3, null]], "autorag.data.corpus.langchain module": [[3, "autorag-data-corpus-langchain-module"]], "autorag.data.corpus.llama_index module": [[3, "autorag-data-corpus-llama-index-module"]], "autorag.data.legacy package": [[4, null]], "autorag.data.legacy.corpus package": [[5, null]], "autorag.data.legacy.corpus.langchain module": [[5, "module-autorag.data.legacy.corpus.langchain"]], "autorag.data.legacy.corpus.llama_index module": [[5, "module-autorag.data.legacy.corpus.llama_index"]], "autorag.data.legacy.qacreation package": [[6, null]], "autorag.data.legacy.qacreation.base module": [[6, "module-autorag.data.legacy.qacreation.base"]], "autorag.data.legacy.qacreation.llama_index module": [[6, "module-autorag.data.legacy.qacreation.llama_index"]], "autorag.data.legacy.qacreation.ragas module": [[6, "module-autorag.data.legacy.qacreation.ragas"]], "autorag.data.legacy.qacreation.simple module": [[6, "module-autorag.data.legacy.qacreation.simple"]], "autorag.data.parse package": [[7, null]], "autorag.data.parse.base module": [[7, "module-autorag.data.parse.base"]], "autorag.data.parse.clova module": [[7, "autorag-data-parse-clova-module"]], "autorag.data.parse.langchain_parse module": [[7, "module-autorag.data.parse.langchain_parse"]], "autorag.data.parse.llamaparse module": [[7, "module-autorag.data.parse.llamaparse"]], "autorag.data.parse.run module": [[7, "module-autorag.data.parse.run"]], "autorag.data.parse.table_hybrid_parse module": [[7, "autorag-data-parse-table-hybrid-parse-module"]], "autorag.data.qa package": [[8, null]], "autorag.data.qa.evolve package": [[9, null]], "autorag.data.qa.evolve.llama_index_query_evolve module": [[9, "module-autorag.data.qa.evolve.llama_index_query_evolve"]], "autorag.data.qa.evolve.openai_query_evolve module": [[9, "module-autorag.data.qa.evolve.openai_query_evolve"]], "autorag.data.qa.evolve.prompt module": [[9, "module-autorag.data.qa.evolve.prompt"]], "autorag.data.qa.extract_evidence module": [[8, "module-autorag.data.qa.extract_evidence"]], "autorag.data.qa.filter package": [[10, null]], "autorag.data.qa.filter.dontknow module": [[10, "module-autorag.data.qa.filter.dontknow"]], "autorag.data.qa.filter.passage_dependency module": [[10, "module-autorag.data.qa.filter.passage_dependency"]], "autorag.data.qa.filter.prompt module": [[10, "module-autorag.data.qa.filter.prompt"]], "autorag.data.qa.generation_gt package": [[11, null]], "autorag.data.qa.generation_gt.base module": [[11, "module-autorag.data.qa.generation_gt.base"]], "autorag.data.qa.generation_gt.llama_index_gen_gt module": [[11, "module-autorag.data.qa.generation_gt.llama_index_gen_gt"]], "autorag.data.qa.generation_gt.openai_gen_gt module": [[11, "module-autorag.data.qa.generation_gt.openai_gen_gt"]], "autorag.data.qa.generation_gt.prompt module": [[11, "module-autorag.data.qa.generation_gt.prompt"]], "autorag.data.qa.query package": [[12, null]], "autorag.data.qa.query.llama_gen_query module": [[12, "module-autorag.data.qa.query.llama_gen_query"]], "autorag.data.qa.query.openai_gen_query module": [[12, "module-autorag.data.qa.query.openai_gen_query"]], "autorag.data.qa.query.prompt module": [[12, "module-autorag.data.qa.query.prompt"]], "autorag.data.qa.sample module": [[8, "module-autorag.data.qa.sample"]], "autorag.data.qa.schema module": [[8, "module-autorag.data.qa.schema"]], "autorag.data.qacreation package": [[13, null]], "autorag.data.qacreation.base module": [[13, "autorag-data-qacreation-base-module"]], "autorag.data.qacreation.llama_index module": [[13, "autorag-data-qacreation-llama-index-module"]], "autorag.data.qacreation.ragas module": [[13, "autorag-data-qacreation-ragas-module"]], "autorag.data.qacreation.simple module": [[13, "autorag-data-qacreation-simple-module"]], "autorag.data.utils package": [[14, null]], "autorag.data.utils.util module": [[14, "module-autorag.data.utils.util"]], "autorag.deploy module": [[0, "module-autorag.deploy"]], "autorag.evaluation package": [[15, null]], "autorag.evaluation.generation module": [[15, "module-autorag.evaluation.generation"]], "autorag.evaluation.metric package": [[16, null]], "autorag.evaluation.metric.deepeval_prompt module": [[16, "module-autorag.evaluation.metric.deepeval_prompt"]], "autorag.evaluation.metric.generation module": [[16, "module-autorag.evaluation.metric.generation"]], "autorag.evaluation.metric.retrieval module": [[16, "module-autorag.evaluation.metric.retrieval"]], "autorag.evaluation.metric.retrieval_contents module": [[16, "module-autorag.evaluation.metric.retrieval_contents"]], "autorag.evaluation.metric.util module": [[16, "module-autorag.evaluation.metric.util"]], "autorag.evaluation.retrieval module": [[15, "module-autorag.evaluation.retrieval"]], "autorag.evaluation.retrieval_contents module": [[15, "module-autorag.evaluation.retrieval_contents"]], "autorag.evaluation.util module": [[15, "module-autorag.evaluation.util"]], "autorag.evaluator module": [[0, "module-autorag.evaluator"]], "autorag.node_line module": [[0, "module-autorag.node_line"]], "autorag.nodes package": [[17, null]], "autorag.nodes.generator package": [[18, null]], "autorag.nodes.generator.base module": [[18, "module-autorag.nodes.generator.base"]], "autorag.nodes.generator.llama_index_llm module": [[18, "module-autorag.nodes.generator.llama_index_llm"]], "autorag.nodes.generator.openai_llm module": [[18, "module-autorag.nodes.generator.openai_llm"]], "autorag.nodes.generator.run module": [[18, "module-autorag.nodes.generator.run"]], "autorag.nodes.generator.vllm module": [[18, "module-autorag.nodes.generator.vllm"]], "autorag.nodes.passageaugmenter package": [[19, null]], "autorag.nodes.passageaugmenter.base module": [[19, "module-autorag.nodes.passageaugmenter.base"]], "autorag.nodes.passageaugmenter.pass_passage_augmenter module": [[19, "module-autorag.nodes.passageaugmenter.pass_passage_augmenter"]], "autorag.nodes.passageaugmenter.prev_next_augmenter module": [[19, "module-autorag.nodes.passageaugmenter.prev_next_augmenter"]], "autorag.nodes.passageaugmenter.run module": [[19, "module-autorag.nodes.passageaugmenter.run"]], "autorag.nodes.passagecompressor package": [[20, null]], "autorag.nodes.passagecompressor.base module": [[20, "module-autorag.nodes.passagecompressor.base"]], "autorag.nodes.passagecompressor.longllmlingua module": [[20, "module-autorag.nodes.passagecompressor.longllmlingua"]], "autorag.nodes.passagecompressor.pass_compressor module": [[20, "module-autorag.nodes.passagecompressor.pass_compressor"]], "autorag.nodes.passagecompressor.refine module": [[20, "module-autorag.nodes.passagecompressor.refine"]], "autorag.nodes.passagecompressor.run module": [[20, "module-autorag.nodes.passagecompressor.run"]], "autorag.nodes.passagecompressor.tree_summarize module": [[20, "module-autorag.nodes.passagecompressor.tree_summarize"]], "autorag.nodes.passagefilter package": [[21, null]], "autorag.nodes.passagefilter.base module": [[21, "module-autorag.nodes.passagefilter.base"]], "autorag.nodes.passagefilter.pass_passage_filter module": [[21, "module-autorag.nodes.passagefilter.pass_passage_filter"]], "autorag.nodes.passagefilter.percentile_cutoff module": [[21, "module-autorag.nodes.passagefilter.percentile_cutoff"]], "autorag.nodes.passagefilter.recency module": [[21, "module-autorag.nodes.passagefilter.recency"]], "autorag.nodes.passagefilter.run module": [[21, "module-autorag.nodes.passagefilter.run"]], "autorag.nodes.passagefilter.similarity_percentile_cutoff module": [[21, "module-autorag.nodes.passagefilter.similarity_percentile_cutoff"]], "autorag.nodes.passagefilter.similarity_threshold_cutoff module": [[21, "module-autorag.nodes.passagefilter.similarity_threshold_cutoff"]], "autorag.nodes.passagefilter.threshold_cutoff module": [[21, "module-autorag.nodes.passagefilter.threshold_cutoff"]], "autorag.nodes.passagereranker package": [[22, null]], "autorag.nodes.passagereranker.base module": [[22, "module-autorag.nodes.passagereranker.base"]], "autorag.nodes.passagereranker.cohere module": [[22, "module-autorag.nodes.passagereranker.cohere"]], "autorag.nodes.passagereranker.colbert module": [[22, "module-autorag.nodes.passagereranker.colbert"]], "autorag.nodes.passagereranker.flag_embedding module": [[22, "module-autorag.nodes.passagereranker.flag_embedding"]], "autorag.nodes.passagereranker.flag_embedding_llm module": [[22, "module-autorag.nodes.passagereranker.flag_embedding_llm"]], "autorag.nodes.passagereranker.jina module": [[22, "module-autorag.nodes.passagereranker.jina"]], "autorag.nodes.passagereranker.koreranker module": [[22, "module-autorag.nodes.passagereranker.koreranker"]], "autorag.nodes.passagereranker.monot5 module": [[22, "module-autorag.nodes.passagereranker.monot5"]], "autorag.nodes.passagereranker.openvino module": [[22, "module-autorag.nodes.passagereranker.openvino"]], "autorag.nodes.passagereranker.pass_reranker module": [[22, "module-autorag.nodes.passagereranker.pass_reranker"]], "autorag.nodes.passagereranker.rankgpt module": [[22, "module-autorag.nodes.passagereranker.rankgpt"]], "autorag.nodes.passagereranker.run module": [[22, "module-autorag.nodes.passagereranker.run"]], "autorag.nodes.passagereranker.sentence_transformer module": [[22, "module-autorag.nodes.passagereranker.sentence_transformer"]], "autorag.nodes.passagereranker.tart package": [[23, null]], "autorag.nodes.passagereranker.tart.modeling_enc_t5 module": [[23, "module-autorag.nodes.passagereranker.tart.modeling_enc_t5"]], "autorag.nodes.passagereranker.tart.tart module": [[23, "module-autorag.nodes.passagereranker.tart.tart"]], "autorag.nodes.passagereranker.tart.tokenization_enc_t5 module": [[23, "module-autorag.nodes.passagereranker.tart.tokenization_enc_t5"]], "autorag.nodes.passagereranker.time_reranker module": [[22, "module-autorag.nodes.passagereranker.time_reranker"]], "autorag.nodes.passagereranker.upr module": [[22, "module-autorag.nodes.passagereranker.upr"]], "autorag.nodes.passagereranker.voyageai module": [[22, "module-autorag.nodes.passagereranker.voyageai"]], "autorag.nodes.promptmaker package": [[24, null]], "autorag.nodes.promptmaker.base module": [[24, "module-autorag.nodes.promptmaker.base"]], "autorag.nodes.promptmaker.fstring module": [[24, "module-autorag.nodes.promptmaker.fstring"]], "autorag.nodes.promptmaker.long_context_reorder module": [[24, "module-autorag.nodes.promptmaker.long_context_reorder"]], "autorag.nodes.promptmaker.run module": [[24, "module-autorag.nodes.promptmaker.run"]], "autorag.nodes.promptmaker.window_replacement module": [[24, "module-autorag.nodes.promptmaker.window_replacement"]], "autorag.nodes.queryexpansion package": [[25, null]], "autorag.nodes.queryexpansion.base module": [[25, "module-autorag.nodes.queryexpansion.base"]], "autorag.nodes.queryexpansion.hyde module": [[25, "module-autorag.nodes.queryexpansion.hyde"]], "autorag.nodes.queryexpansion.multi_query_expansion module": [[25, "module-autorag.nodes.queryexpansion.multi_query_expansion"]], "autorag.nodes.queryexpansion.pass_query_expansion module": [[25, "module-autorag.nodes.queryexpansion.pass_query_expansion"]], "autorag.nodes.queryexpansion.query_decompose module": [[25, "module-autorag.nodes.queryexpansion.query_decompose"]], "autorag.nodes.queryexpansion.run module": [[25, "module-autorag.nodes.queryexpansion.run"]], "autorag.nodes.retrieval package": [[26, null]], "autorag.nodes.retrieval.base module": [[26, "module-autorag.nodes.retrieval.base"]], "autorag.nodes.retrieval.bm25 module": [[26, "module-autorag.nodes.retrieval.bm25"]], "autorag.nodes.retrieval.hybrid_cc module": [[26, "module-autorag.nodes.retrieval.hybrid_cc"]], "autorag.nodes.retrieval.hybrid_rrf module": [[26, "module-autorag.nodes.retrieval.hybrid_rrf"]], "autorag.nodes.retrieval.run module": [[26, "module-autorag.nodes.retrieval.run"]], "autorag.nodes.retrieval.vectordb module": [[26, "module-autorag.nodes.retrieval.vectordb"]], "autorag.nodes.util module": [[17, "module-autorag.nodes.util"]], "autorag.parser module": [[0, "module-autorag.parser"]], "autorag.schema package": [[27, null]], "autorag.schema.base module": [[27, "module-autorag.schema.base"]], "autorag.schema.metricinput module": [[27, "module-autorag.schema.metricinput"]], "autorag.schema.module module": [[27, "module-autorag.schema.module"]], "autorag.schema.node module": [[27, "module-autorag.schema.node"]], "autorag.strategy module": [[0, "module-autorag.strategy"]], "autorag.support module": [[0, "module-autorag.support"]], "autorag.utils package": [[28, null]], "autorag.utils.preprocess module": [[28, "module-autorag.utils.preprocess"]], "autorag.utils.util module": [[28, "module-autorag.utils.util"]], "autorag.validator module": [[0, "module-autorag.validator"]], "autorag.web module": [[0, "module-autorag.web"]], "cohere_reranker": [[75, null]], "config.yaml": [[104, "config-yaml"]], "contents": [[34, "contents"]], "curl Commands": [[49, "curl-commands"]], "data": [[104, "data"]], "doc_id": [[34, "doc-id"]], "generation_gt": [[34, "generation-gt"]], "jina_reranker": [[79, null]], "ko_kiwi (For Korean \ud83c\uddf0\ud83c\uddf7)": [[98, "ko-kiwi-for-korean"]], "ko_kkma (For Korean \ud83c\uddf0\ud83c\uddf7)": [[98, "ko-kkma-for-korean"]], "ko_okt (For Korean \ud83c\uddf0\ud83c\uddf7)": [[98, "ko-okt-for-korean"]], "llama_index LLM": [[59, null]], "metadata": [[34, "metadata"]], "path (Optional, but recommended)": [[34, "path-optional-but-recommended"]], "porter_stemmer": [[98, "porter-stemmer"]], "pre_retrieve_node_line": [[104, "pre-retrieve-node-line"]], "qid": [[34, "qid"]], "query": [[34, "query"]], "query_expansion": [[104, "query-expansion"]], "resources": [[104, "resources"]], "retrieval_gt": [[34, "retrieval-gt"]], "retrieve_node_line": [[104, "retrieve-node-line"]], "sem_score": [[58, null]], "space": [[98, "space"]], "start_end_idx (Optional but recommended)": [[34, "start-end-idx-optional-but-recommended"]], "sudachipy (For Japanese \ud83c\uddef\ud83c\uddf5)": [[98, "sudachipy-for-japanese"]], "trial": [[104, "trial"]], "trial.json": [[104, "trial-json"]], "v0.3 migration guide": [[57, "v0-3-migration-guide"]], "vllm": [[61, null]], "voyageai_reranker": [[89, null]], "\u2705Apply Basic Example": [[52, "apply-basic-example"], [52, "id2"], [52, "id4"], [52, "id6"], [52, "id8"], [52, "id10"], [53, "apply-basic-example"], [53, "id2"], [53, "id4"]], "\u2705Basic Example": [[52, "basic-example"], [53, "basic-example"]], "\u2757How to use specific G-Eval metrics": [[51, "how-to-use-specific-g-eval-metrics"]], "\u2757Must have Parameter": [[39, "must-have-parameter"]], "\u2757Restart a trial if an error occurs during the trial": [[110, "restart-a-trial-if-an-error-occurs-during-the-trial"]], "\u2757\ufe0fHybrid additional explanation": [[99, "hybrid-additional-explanation"], [100, "hybrid-additional-explanation"]], "\ud83c\udfc3\u200d\u2642\ufe0f Getting Started": [[54, "getting-started"]], "\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc66 Ecosystem": [[54, "ecosystem"]], "\ud83d\udccc API Needed": [[39, "api-needed"]], "\ud83d\udccc Definition": [[51, "id4"]], "\ud83d\udccc Parameter: data_path_glob": [[41, "parameter-data-path-glob"]], "\ud83d\udcccDefinition": [[51, "definition"], [51, "id1"], [51, "id2"], [51, "id3"], [51, "id5"], [52, "definition"], [52, "id1"], [52, "id3"], [52, "id5"], [52, "id7"], [52, "id9"], [53, "definition"], [53, "id1"], [53, "id3"]], "\ud83d\udd0e Definition": [[58, "definition"], [63, "definition"], [66, "definition"], [69, "definition"], [83, "definition"], [92, "definition"], [97, "definition"], [101, "definition"]], "\ud83d\udd22 Parameters": [[58, "parameters"], [66, "parameters"], [83, "parameters"], [92, "parameters"], [97, "parameters"], [101, "parameters"]], "\ud83d\ude80 Road to Modular RAG": [[107, "id1"]], "\ud83e\udd37\u200d\u2642\ufe0f What is Modular RAG?": [[107, "what-is-modular-rag"]], "\ud83e\udd37\u200d\u2642\ufe0f Why AutoRAG?": [[54, "why-autorag"]], "\ud83e\udd38 Benefits": [[63, "benefits"], [66, "benefits"], [69, "benefits"], [83, "benefits"], [97, "benefits"]], "\ud83e\udd38\u200d\u2642\ufe0f How can AutoRAG helps?": [[54, "how-can-autorag-helps"]]}, "docnames": ["api_spec/autorag", "api_spec/autorag.data", "api_spec/autorag.data.chunk", "api_spec/autorag.data.corpus", "api_spec/autorag.data.legacy", "api_spec/autorag.data.legacy.corpus", "api_spec/autorag.data.legacy.qacreation", "api_spec/autorag.data.parse", "api_spec/autorag.data.qa", "api_spec/autorag.data.qa.evolve", "api_spec/autorag.data.qa.filter", "api_spec/autorag.data.qa.generation_gt", "api_spec/autorag.data.qa.query", "api_spec/autorag.data.qacreation", "api_spec/autorag.data.utils", "api_spec/autorag.evaluation", "api_spec/autorag.evaluation.metric", "api_spec/autorag.nodes", "api_spec/autorag.nodes.generator", "api_spec/autorag.nodes.passageaugmenter", "api_spec/autorag.nodes.passagecompressor", "api_spec/autorag.nodes.passagefilter", "api_spec/autorag.nodes.passagereranker", "api_spec/autorag.nodes.passagereranker.tart", "api_spec/autorag.nodes.promptmaker", "api_spec/autorag.nodes.queryexpansion", "api_spec/autorag.nodes.retrieval", "api_spec/autorag.schema", "api_spec/autorag.utils", "api_spec/modules", "data_creation/chunk/chunk", "data_creation/chunk/langchain_chunk", "data_creation/chunk/llama_index_chunk", "data_creation/data_creation", "data_creation/data_format", "data_creation/legacy/legacy", "data_creation/legacy/ragas", "data_creation/legacy/tutorial", "data_creation/parse/clova", "data_creation/parse/langchain_parse", "data_creation/parse/llama_parse", "data_creation/parse/parse", "data_creation/parse/table_hybrid_parse", "data_creation/qa_creation/answer_gen", "data_creation/qa_creation/evolve", "data_creation/qa_creation/filter", "data_creation/qa_creation/qa_creation", "data_creation/qa_creation/query_gen", "data_creation/tutorial", "deploy/api_endpoint", "deploy/web", "evaluate_metrics/generation", "evaluate_metrics/retrieval", "evaluate_metrics/retrieval_contents", "index", "install", "local_model", "migration", "nodes/generator/generator", "nodes/generator/llama_index_llm", "nodes/generator/openai_llm", "nodes/generator/vllm", "nodes/index", "nodes/passage_augmenter/passage_augmenter", "nodes/passage_augmenter/prev_next_augmenter", "nodes/passage_compressor/longllmlingua", "nodes/passage_compressor/passage_compressor", "nodes/passage_compressor/refine", "nodes/passage_compressor/tree_summarize", "nodes/passage_filter/passage_filter", "nodes/passage_filter/percentile_cutoff", "nodes/passage_filter/recency_filter", "nodes/passage_filter/similarity_percentile_cutoff", "nodes/passage_filter/similarity_threshold_cutoff", "nodes/passage_filter/threshold_cutoff", "nodes/passage_reranker/cohere", "nodes/passage_reranker/colbert", "nodes/passage_reranker/flag_embedding_llm_reranker", "nodes/passage_reranker/flag_embedding_reranker", "nodes/passage_reranker/jina_reranker", "nodes/passage_reranker/koreranker", "nodes/passage_reranker/monot5", "nodes/passage_reranker/openvino_reranker", "nodes/passage_reranker/passage_reranker", "nodes/passage_reranker/rankgpt", "nodes/passage_reranker/sentence_transformer_reranker", "nodes/passage_reranker/tart", "nodes/passage_reranker/time_reranker", "nodes/passage_reranker/upr", "nodes/passage_reranker/voyageai_reranker", "nodes/prompt_maker/fstring", "nodes/prompt_maker/long_context_reorder", "nodes/prompt_maker/prompt_maker", "nodes/prompt_maker/window_replacement", "nodes/query_expansion/hyde", "nodes/query_expansion/multi_query_expansion", "nodes/query_expansion/query_decompose", "nodes/query_expansion/query_expansion", "nodes/retrieval/bm25", "nodes/retrieval/hybrid_cc", "nodes/retrieval/hybrid_rrf", "nodes/retrieval/retrieval", "nodes/retrieval/vectordb", "optimization/custom_config", "optimization/folder_structure", "optimization/optimization", "optimization/strategies", "roadmap/modular_rag", "structure", "troubleshooting", "tutorial"], "envversion": {"sphinx": 63, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["api_spec/autorag.rst", "api_spec/autorag.data.rst", "api_spec/autorag.data.chunk.rst", "api_spec/autorag.data.corpus.rst", "api_spec/autorag.data.legacy.rst", "api_spec/autorag.data.legacy.corpus.rst", "api_spec/autorag.data.legacy.qacreation.rst", "api_spec/autorag.data.parse.rst", "api_spec/autorag.data.qa.rst", "api_spec/autorag.data.qa.evolve.rst", "api_spec/autorag.data.qa.filter.rst", "api_spec/autorag.data.qa.generation_gt.rst", "api_spec/autorag.data.qa.query.rst", "api_spec/autorag.data.qacreation.rst", "api_spec/autorag.data.utils.rst", "api_spec/autorag.evaluation.rst", "api_spec/autorag.evaluation.metric.rst", "api_spec/autorag.nodes.rst", "api_spec/autorag.nodes.generator.rst", "api_spec/autorag.nodes.passageaugmenter.rst", "api_spec/autorag.nodes.passagecompressor.rst", "api_spec/autorag.nodes.passagefilter.rst", "api_spec/autorag.nodes.passagereranker.rst", "api_spec/autorag.nodes.passagereranker.tart.rst", "api_spec/autorag.nodes.promptmaker.rst", "api_spec/autorag.nodes.queryexpansion.rst", "api_spec/autorag.nodes.retrieval.rst", "api_spec/autorag.schema.rst", "api_spec/autorag.utils.rst", "api_spec/modules.rst", "data_creation/chunk/chunk.md", "data_creation/chunk/langchain_chunk.md", "data_creation/chunk/llama_index_chunk.md", "data_creation/data_creation.md", "data_creation/data_format.md", "data_creation/legacy/legacy.md", "data_creation/legacy/ragas.md", "data_creation/legacy/tutorial.md", "data_creation/parse/clova.md", "data_creation/parse/langchain_parse.md", "data_creation/parse/llama_parse.md", "data_creation/parse/parse.md", "data_creation/parse/table_hybrid_parse.md", "data_creation/qa_creation/answer_gen.md", "data_creation/qa_creation/evolve.md", "data_creation/qa_creation/filter.md", "data_creation/qa_creation/qa_creation.md", "data_creation/qa_creation/query_gen.md", "data_creation/tutorial.md", "deploy/api_endpoint.md", "deploy/web.md", "evaluate_metrics/generation.md", "evaluate_metrics/retrieval.md", "evaluate_metrics/retrieval_contents.md", "index.rst", "install.md", "local_model.md", "migration.md", "nodes/generator/generator.md", "nodes/generator/llama_index_llm.md", "nodes/generator/openai_llm.md", "nodes/generator/vllm.md", "nodes/index.md", "nodes/passage_augmenter/passage_augmenter.md", "nodes/passage_augmenter/prev_next_augmenter.md", "nodes/passage_compressor/longllmlingua.md", "nodes/passage_compressor/passage_compressor.md", "nodes/passage_compressor/refine.md", "nodes/passage_compressor/tree_summarize.md", "nodes/passage_filter/passage_filter.md", "nodes/passage_filter/percentile_cutoff.md", "nodes/passage_filter/recency_filter.md", "nodes/passage_filter/similarity_percentile_cutoff.md", "nodes/passage_filter/similarity_threshold_cutoff.md", "nodes/passage_filter/threshold_cutoff.md", "nodes/passage_reranker/cohere.md", "nodes/passage_reranker/colbert.md", "nodes/passage_reranker/flag_embedding_llm_reranker.md", "nodes/passage_reranker/flag_embedding_reranker.md", "nodes/passage_reranker/jina_reranker.md", "nodes/passage_reranker/koreranker.md", "nodes/passage_reranker/monot5.md", "nodes/passage_reranker/openvino_reranker.md", "nodes/passage_reranker/passage_reranker.md", "nodes/passage_reranker/rankgpt.md", "nodes/passage_reranker/sentence_transformer_reranker.md", "nodes/passage_reranker/tart.md", "nodes/passage_reranker/time_reranker.md", "nodes/passage_reranker/upr.md", "nodes/passage_reranker/voyageai_reranker.md", "nodes/prompt_maker/fstring.md", "nodes/prompt_maker/long_context_reorder.md", "nodes/prompt_maker/prompt_maker.md", "nodes/prompt_maker/window_replacement.md", "nodes/query_expansion/hyde.md", "nodes/query_expansion/multi_query_expansion.md", "nodes/query_expansion/query_decompose.md", "nodes/query_expansion/query_expansion.md", "nodes/retrieval/bm25.md", "nodes/retrieval/hybrid_cc.md", "nodes/retrieval/hybrid_rrf.md", "nodes/retrieval/retrieval.md", "nodes/retrieval/vectordb.md", "optimization/custom_config.md", "optimization/folder_structure.md", "optimization/optimization.md", "optimization/strategies.md", "roadmap/modular_rag.md", "structure.md", "troubleshooting.md", "tutorial.md"], "indexentries": {"add_essential_metadata() (in module autorag.data.utils.util)": [[14, "autorag.data.utils.util.add_essential_metadata", false]], "add_essential_metadata_llama_text_node() (in module autorag.data.utils.util)": [[14, "autorag.data.utils.util.add_essential_metadata_llama_text_node", false]], "add_file_name() (in module autorag.data.chunk.base)": [[2, "autorag.data.chunk.base.add_file_name", false]], "add_gen_gt() (in module autorag.data.qa.generation_gt.base)": [[11, "autorag.data.qa.generation_gt.base.add_gen_gt", false]], "answer (autorag.data.qa.generation_gt.openai_gen_gt.response attribute)": [[11, "autorag.data.qa.generation_gt.openai_gen_gt.Response.answer", false]], "answer (autorag.data.qa.query.openai_gen_query.twohopincrementalresponse attribute)": [[12, "autorag.data.qa.query.openai_gen_query.TwoHopIncrementalResponse.answer", false]], "apply_recursive() (in module autorag.utils.util)": [[28, "autorag.utils.util.apply_recursive", false]], "async_g_eval() (in module autorag.evaluation.metric.generation)": [[16, "autorag.evaluation.metric.generation.async_g_eval", false]], "async_postprocess_nodes() (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank method)": [[22, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.async_postprocess_nodes", false]], "async_qa_gen_llama_index() (in module autorag.data.legacy.qacreation.llama_index)": [[6, "autorag.data.legacy.qacreation.llama_index.async_qa_gen_llama_index", false]], "async_run_llm() (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank method)": [[22, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.async_run_llm", false]], "asyncrankgptrerank (class in autorag.nodes.passagereranker.rankgpt)": [[22, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank", false]], "autorag": [[0, "module-autorag", false]], "autorag.chunker": [[0, "module-autorag.chunker", false]], "autorag.cli": [[0, "module-autorag.cli", false]], "autorag.dashboard": [[0, "module-autorag.dashboard", false]], "autorag.data": [[1, "module-autorag.data", false]], "autorag.data.chunk": [[2, "module-autorag.data.chunk", false]], "autorag.data.chunk.base": [[2, "module-autorag.data.chunk.base", false]], "autorag.data.chunk.langchain_chunk": [[2, "module-autorag.data.chunk.langchain_chunk", false]], "autorag.data.chunk.llama_index_chunk": [[2, "module-autorag.data.chunk.llama_index_chunk", false]], "autorag.data.chunk.run": [[2, "module-autorag.data.chunk.run", false]], "autorag.data.legacy": [[4, "module-autorag.data.legacy", false]], "autorag.data.legacy.corpus": [[5, "module-autorag.data.legacy.corpus", false]], "autorag.data.legacy.corpus.langchain": [[5, "module-autorag.data.legacy.corpus.langchain", false]], "autorag.data.legacy.corpus.llama_index": [[5, "module-autorag.data.legacy.corpus.llama_index", false]], "autorag.data.legacy.qacreation": [[6, "module-autorag.data.legacy.qacreation", false]], "autorag.data.legacy.qacreation.base": [[6, "module-autorag.data.legacy.qacreation.base", false]], "autorag.data.legacy.qacreation.llama_index": [[6, "module-autorag.data.legacy.qacreation.llama_index", false]], "autorag.data.legacy.qacreation.ragas": [[6, "module-autorag.data.legacy.qacreation.ragas", false]], "autorag.data.legacy.qacreation.simple": [[6, "module-autorag.data.legacy.qacreation.simple", false]], "autorag.data.parse": [[7, "module-autorag.data.parse", false]], "autorag.data.parse.base": [[7, "module-autorag.data.parse.base", false]], "autorag.data.parse.langchain_parse": [[7, "module-autorag.data.parse.langchain_parse", false]], "autorag.data.parse.llamaparse": [[7, "module-autorag.data.parse.llamaparse", false]], "autorag.data.parse.run": [[7, "module-autorag.data.parse.run", false]], "autorag.data.qa": [[8, "module-autorag.data.qa", false]], "autorag.data.qa.evolve": [[9, "module-autorag.data.qa.evolve", false]], "autorag.data.qa.evolve.llama_index_query_evolve": [[9, "module-autorag.data.qa.evolve.llama_index_query_evolve", false]], "autorag.data.qa.evolve.openai_query_evolve": [[9, "module-autorag.data.qa.evolve.openai_query_evolve", false]], "autorag.data.qa.evolve.prompt": [[9, "module-autorag.data.qa.evolve.prompt", false]], "autorag.data.qa.extract_evidence": [[8, "module-autorag.data.qa.extract_evidence", false]], "autorag.data.qa.filter": [[10, "module-autorag.data.qa.filter", false]], "autorag.data.qa.filter.dontknow": [[10, "module-autorag.data.qa.filter.dontknow", false]], "autorag.data.qa.filter.passage_dependency": [[10, "module-autorag.data.qa.filter.passage_dependency", false]], "autorag.data.qa.filter.prompt": [[10, "module-autorag.data.qa.filter.prompt", false]], "autorag.data.qa.generation_gt": [[11, "module-autorag.data.qa.generation_gt", false]], "autorag.data.qa.generation_gt.base": [[11, "module-autorag.data.qa.generation_gt.base", false]], "autorag.data.qa.generation_gt.llama_index_gen_gt": [[11, "module-autorag.data.qa.generation_gt.llama_index_gen_gt", false]], "autorag.data.qa.generation_gt.openai_gen_gt": [[11, "module-autorag.data.qa.generation_gt.openai_gen_gt", false]], "autorag.data.qa.generation_gt.prompt": [[11, "module-autorag.data.qa.generation_gt.prompt", false]], "autorag.data.qa.query": [[12, "module-autorag.data.qa.query", false]], "autorag.data.qa.query.llama_gen_query": [[12, "module-autorag.data.qa.query.llama_gen_query", false]], "autorag.data.qa.query.openai_gen_query": [[12, "module-autorag.data.qa.query.openai_gen_query", false]], "autorag.data.qa.query.prompt": [[12, "module-autorag.data.qa.query.prompt", false]], "autorag.data.qa.sample": [[8, "module-autorag.data.qa.sample", false]], "autorag.data.qa.schema": [[8, "module-autorag.data.qa.schema", false]], "autorag.data.utils": [[14, "module-autorag.data.utils", false]], "autorag.data.utils.util": [[14, "module-autorag.data.utils.util", false]], "autorag.deploy": [[0, "module-autorag.deploy", false]], "autorag.evaluation": [[15, "module-autorag.evaluation", false]], "autorag.evaluation.generation": [[15, "module-autorag.evaluation.generation", false]], "autorag.evaluation.metric": [[16, "module-autorag.evaluation.metric", false]], "autorag.evaluation.metric.deepeval_prompt": [[16, "module-autorag.evaluation.metric.deepeval_prompt", false]], "autorag.evaluation.metric.generation": [[16, "module-autorag.evaluation.metric.generation", false]], "autorag.evaluation.metric.retrieval": [[16, "module-autorag.evaluation.metric.retrieval", false]], "autorag.evaluation.metric.retrieval_contents": [[16, "module-autorag.evaluation.metric.retrieval_contents", false]], "autorag.evaluation.metric.util": [[16, "module-autorag.evaluation.metric.util", false]], "autorag.evaluation.retrieval": [[15, "module-autorag.evaluation.retrieval", false]], "autorag.evaluation.retrieval_contents": [[15, "module-autorag.evaluation.retrieval_contents", false]], "autorag.evaluation.util": [[15, "module-autorag.evaluation.util", false]], "autorag.evaluator": [[0, "module-autorag.evaluator", false]], "autorag.node_line": [[0, "module-autorag.node_line", false]], "autorag.nodes": [[17, "module-autorag.nodes", false]], "autorag.nodes.generator": [[18, "module-autorag.nodes.generator", false]], "autorag.nodes.generator.base": [[18, "module-autorag.nodes.generator.base", false]], "autorag.nodes.generator.llama_index_llm": [[18, "module-autorag.nodes.generator.llama_index_llm", false]], "autorag.nodes.generator.openai_llm": [[18, "module-autorag.nodes.generator.openai_llm", false]], "autorag.nodes.generator.run": [[18, "module-autorag.nodes.generator.run", false]], "autorag.nodes.generator.vllm": [[18, "module-autorag.nodes.generator.vllm", false]], "autorag.nodes.passageaugmenter": [[19, "module-autorag.nodes.passageaugmenter", false]], "autorag.nodes.passageaugmenter.base": [[19, "module-autorag.nodes.passageaugmenter.base", false]], "autorag.nodes.passageaugmenter.pass_passage_augmenter": [[19, "module-autorag.nodes.passageaugmenter.pass_passage_augmenter", false]], "autorag.nodes.passageaugmenter.prev_next_augmenter": [[19, "module-autorag.nodes.passageaugmenter.prev_next_augmenter", false]], "autorag.nodes.passageaugmenter.run": [[19, "module-autorag.nodes.passageaugmenter.run", false]], "autorag.nodes.passagecompressor": [[20, "module-autorag.nodes.passagecompressor", false]], "autorag.nodes.passagecompressor.base": [[20, "module-autorag.nodes.passagecompressor.base", false]], "autorag.nodes.passagecompressor.longllmlingua": [[20, "module-autorag.nodes.passagecompressor.longllmlingua", false]], "autorag.nodes.passagecompressor.pass_compressor": [[20, "module-autorag.nodes.passagecompressor.pass_compressor", false]], "autorag.nodes.passagecompressor.refine": [[20, "module-autorag.nodes.passagecompressor.refine", false]], "autorag.nodes.passagecompressor.run": [[20, "module-autorag.nodes.passagecompressor.run", false]], "autorag.nodes.passagecompressor.tree_summarize": [[20, "module-autorag.nodes.passagecompressor.tree_summarize", false]], "autorag.nodes.passagefilter": [[21, "module-autorag.nodes.passagefilter", false]], "autorag.nodes.passagefilter.base": [[21, "module-autorag.nodes.passagefilter.base", false]], "autorag.nodes.passagefilter.pass_passage_filter": [[21, "module-autorag.nodes.passagefilter.pass_passage_filter", false]], "autorag.nodes.passagefilter.percentile_cutoff": [[21, "module-autorag.nodes.passagefilter.percentile_cutoff", false]], "autorag.nodes.passagefilter.recency": [[21, "module-autorag.nodes.passagefilter.recency", false]], "autorag.nodes.passagefilter.run": [[21, "module-autorag.nodes.passagefilter.run", false]], "autorag.nodes.passagefilter.similarity_percentile_cutoff": [[21, "module-autorag.nodes.passagefilter.similarity_percentile_cutoff", false]], "autorag.nodes.passagefilter.similarity_threshold_cutoff": [[21, "module-autorag.nodes.passagefilter.similarity_threshold_cutoff", false]], "autorag.nodes.passagefilter.threshold_cutoff": [[21, "module-autorag.nodes.passagefilter.threshold_cutoff", false]], "autorag.nodes.passagereranker": [[22, "module-autorag.nodes.passagereranker", false]], "autorag.nodes.passagereranker.base": [[22, "module-autorag.nodes.passagereranker.base", false]], "autorag.nodes.passagereranker.cohere": [[22, "module-autorag.nodes.passagereranker.cohere", false]], "autorag.nodes.passagereranker.colbert": [[22, "module-autorag.nodes.passagereranker.colbert", false]], "autorag.nodes.passagereranker.flag_embedding": [[22, "module-autorag.nodes.passagereranker.flag_embedding", false]], "autorag.nodes.passagereranker.flag_embedding_llm": [[22, "module-autorag.nodes.passagereranker.flag_embedding_llm", false]], "autorag.nodes.passagereranker.jina": [[22, "module-autorag.nodes.passagereranker.jina", false]], "autorag.nodes.passagereranker.koreranker": [[22, "module-autorag.nodes.passagereranker.koreranker", false]], "autorag.nodes.passagereranker.monot5": [[22, "module-autorag.nodes.passagereranker.monot5", false]], "autorag.nodes.passagereranker.openvino": [[22, "module-autorag.nodes.passagereranker.openvino", false]], "autorag.nodes.passagereranker.pass_reranker": [[22, "module-autorag.nodes.passagereranker.pass_reranker", false]], "autorag.nodes.passagereranker.rankgpt": [[22, "module-autorag.nodes.passagereranker.rankgpt", false]], "autorag.nodes.passagereranker.run": [[22, "module-autorag.nodes.passagereranker.run", false]], "autorag.nodes.passagereranker.sentence_transformer": [[22, "module-autorag.nodes.passagereranker.sentence_transformer", false]], "autorag.nodes.passagereranker.tart": [[23, "module-autorag.nodes.passagereranker.tart", false]], "autorag.nodes.passagereranker.tart.modeling_enc_t5": [[23, "module-autorag.nodes.passagereranker.tart.modeling_enc_t5", false]], "autorag.nodes.passagereranker.tart.tart": [[23, "module-autorag.nodes.passagereranker.tart.tart", false]], "autorag.nodes.passagereranker.tart.tokenization_enc_t5": [[23, "module-autorag.nodes.passagereranker.tart.tokenization_enc_t5", false]], "autorag.nodes.passagereranker.time_reranker": [[22, "module-autorag.nodes.passagereranker.time_reranker", false]], "autorag.nodes.passagereranker.upr": [[22, "module-autorag.nodes.passagereranker.upr", false]], "autorag.nodes.passagereranker.voyageai": [[22, "module-autorag.nodes.passagereranker.voyageai", false]], "autorag.nodes.promptmaker": [[24, "module-autorag.nodes.promptmaker", false]], "autorag.nodes.promptmaker.base": [[24, "module-autorag.nodes.promptmaker.base", false]], "autorag.nodes.promptmaker.fstring": [[24, "module-autorag.nodes.promptmaker.fstring", false]], "autorag.nodes.promptmaker.long_context_reorder": [[24, "module-autorag.nodes.promptmaker.long_context_reorder", false]], "autorag.nodes.promptmaker.run": [[24, "module-autorag.nodes.promptmaker.run", false]], "autorag.nodes.promptmaker.window_replacement": [[24, "module-autorag.nodes.promptmaker.window_replacement", false]], "autorag.nodes.queryexpansion": [[25, "module-autorag.nodes.queryexpansion", false]], "autorag.nodes.queryexpansion.base": [[25, "module-autorag.nodes.queryexpansion.base", false]], "autorag.nodes.queryexpansion.hyde": [[25, "module-autorag.nodes.queryexpansion.hyde", false]], "autorag.nodes.queryexpansion.multi_query_expansion": [[25, "module-autorag.nodes.queryexpansion.multi_query_expansion", false]], "autorag.nodes.queryexpansion.pass_query_expansion": [[25, "module-autorag.nodes.queryexpansion.pass_query_expansion", false]], "autorag.nodes.queryexpansion.query_decompose": [[25, "module-autorag.nodes.queryexpansion.query_decompose", false]], "autorag.nodes.queryexpansion.run": [[25, "module-autorag.nodes.queryexpansion.run", false]], "autorag.nodes.retrieval": [[26, "module-autorag.nodes.retrieval", false]], "autorag.nodes.retrieval.base": [[26, "module-autorag.nodes.retrieval.base", false]], "autorag.nodes.retrieval.bm25": [[26, "module-autorag.nodes.retrieval.bm25", false]], "autorag.nodes.retrieval.hybrid_cc": [[26, "module-autorag.nodes.retrieval.hybrid_cc", false]], "autorag.nodes.retrieval.hybrid_rrf": [[26, "module-autorag.nodes.retrieval.hybrid_rrf", false]], "autorag.nodes.retrieval.run": [[26, "module-autorag.nodes.retrieval.run", false]], "autorag.nodes.retrieval.vectordb": [[26, "module-autorag.nodes.retrieval.vectordb", false]], "autorag.nodes.util": [[17, "module-autorag.nodes.util", false]], "autorag.parser": [[0, "module-autorag.parser", false]], "autorag.schema": [[27, "module-autorag.schema", false]], "autorag.schema.base": [[27, "module-autorag.schema.base", false]], "autorag.schema.metricinput": [[27, "module-autorag.schema.metricinput", false]], "autorag.schema.module": [[27, "module-autorag.schema.module", false]], "autorag.schema.node": [[27, "module-autorag.schema.node", false]], "autorag.strategy": [[0, "module-autorag.strategy", false]], "autorag.support": [[0, "module-autorag.support", false]], "autorag.utils": [[28, "module-autorag.utils", false]], "autorag.utils.preprocess": [[28, "module-autorag.utils.preprocess", false]], "autorag.utils.util": [[28, "module-autorag.utils.util", false]], "autorag.validator": [[0, "module-autorag.validator", false]], "autorag.web": [[0, "module-autorag.web", false]], "autorag_metric() (in module autorag.evaluation.metric.util)": [[16, "autorag.evaluation.metric.util.autorag_metric", false]], "autorag_metric_loop() (in module autorag.evaluation.metric.util)": [[16, "autorag.evaluation.metric.util.autorag_metric_loop", false]], "avoid_empty_result() (in module autorag.strategy)": [[0, "autorag.strategy.avoid_empty_result", false]], "basegenerator (class in autorag.nodes.generator.base)": [[18, "autorag.nodes.generator.base.BaseGenerator", false]], "basemodule (class in autorag.schema.base)": [[27, "autorag.schema.base.BaseModule", false]], "basepassageaugmenter (class in autorag.nodes.passageaugmenter.base)": [[19, "autorag.nodes.passageaugmenter.base.BasePassageAugmenter", false]], "basepassagecompressor (class in autorag.nodes.passagecompressor.base)": [[20, "autorag.nodes.passagecompressor.base.BasePassageCompressor", false]], "basepassagefilter (class in autorag.nodes.passagefilter.base)": [[21, "autorag.nodes.passagefilter.base.BasePassageFilter", false]], "basepassagereranker (class in autorag.nodes.passagereranker.base)": [[22, "autorag.nodes.passagereranker.base.BasePassageReranker", false]], "basepromptmaker (class in autorag.nodes.promptmaker.base)": [[24, "autorag.nodes.promptmaker.base.BasePromptMaker", false]], "basequeryexpansion (class in autorag.nodes.queryexpansion.base)": [[25, "autorag.nodes.queryexpansion.base.BaseQueryExpansion", false]], "baseretrieval (class in autorag.nodes.retrieval.base)": [[26, "autorag.nodes.retrieval.base.BaseRetrieval", false]], "batch_apply() (autorag.data.qa.schema.corpus method)": [[8, "autorag.data.qa.schema.Corpus.batch_apply", false]], "batch_apply() (autorag.data.qa.schema.qa method)": [[8, "autorag.data.qa.schema.QA.batch_apply", false]], "batch_apply() (autorag.data.qa.schema.raw method)": [[8, "autorag.data.qa.schema.Raw.batch_apply", false]], "batch_filter() (autorag.data.qa.schema.qa method)": [[8, "autorag.data.qa.schema.QA.batch_filter", false]], "bert_score() (in module autorag.evaluation.metric.generation)": [[16, "autorag.evaluation.metric.generation.bert_score", false]], "bleu() (in module autorag.evaluation.metric.generation)": [[16, "autorag.evaluation.metric.generation.bleu", false]], "bm25 (class in autorag.nodes.retrieval.bm25)": [[26, "autorag.nodes.retrieval.bm25.BM25", false]], "bm25_ingest() (in module autorag.nodes.retrieval.bm25)": [[26, "autorag.nodes.retrieval.bm25.bm25_ingest", false]], "bm25_pure() (in module autorag.nodes.retrieval.bm25)": [[26, "autorag.nodes.retrieval.bm25.bm25_pure", false]], "build_inputs_with_special_tokens() (autorag.nodes.passagereranker.tart.tokenization_enc_t5.enct5tokenizer method)": [[23, "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer.build_inputs_with_special_tokens", false]], "calculate_cosine_similarity() (in module autorag.evaluation.metric.util)": [[16, "autorag.evaluation.metric.util.calculate_cosine_similarity", false]], "cast_corpus_dataset() (in module autorag.utils.preprocess)": [[28, "autorag.utils.preprocess.cast_corpus_dataset", false]], "cast_embedding_model() (in module autorag.evaluation.util)": [[15, "autorag.evaluation.util.cast_embedding_model", false]], "cast_metrics() (in module autorag.evaluation.util)": [[15, "autorag.evaluation.util.cast_metrics", false]], "cast_qa_dataset() (in module autorag.utils.preprocess)": [[28, "autorag.utils.preprocess.cast_qa_dataset", false]], "cast_queries() (in module autorag.nodes.retrieval.base)": [[26, "autorag.nodes.retrieval.base.cast_queries", false]], "cast_to_run() (autorag.nodes.generator.base.basegenerator method)": [[18, "autorag.nodes.generator.base.BaseGenerator.cast_to_run", false]], "cast_to_run() (autorag.nodes.passageaugmenter.base.basepassageaugmenter method)": [[19, "autorag.nodes.passageaugmenter.base.BasePassageAugmenter.cast_to_run", false]], "cast_to_run() (autorag.nodes.passagecompressor.base.basepassagecompressor method)": [[20, "autorag.nodes.passagecompressor.base.BasePassageCompressor.cast_to_run", false]], "cast_to_run() (autorag.nodes.passagefilter.base.basepassagefilter method)": [[21, "autorag.nodes.passagefilter.base.BasePassageFilter.cast_to_run", false]], "cast_to_run() (autorag.nodes.passagereranker.base.basepassagereranker method)": [[22, "autorag.nodes.passagereranker.base.BasePassageReranker.cast_to_run", false]], "cast_to_run() (autorag.nodes.promptmaker.base.basepromptmaker method)": [[24, "autorag.nodes.promptmaker.base.BasePromptMaker.cast_to_run", false]], "cast_to_run() (autorag.nodes.queryexpansion.base.basequeryexpansion method)": [[25, "autorag.nodes.queryexpansion.base.BaseQueryExpansion.cast_to_run", false]], "cast_to_run() (autorag.nodes.retrieval.base.baseretrieval method)": [[26, "autorag.nodes.retrieval.base.BaseRetrieval.cast_to_run", false]], "cast_to_run() (autorag.schema.base.basemodule method)": [[27, "autorag.schema.base.BaseModule.cast_to_run", false]], "chat_box() (in module autorag.web)": [[0, "autorag.web.chat_box", false]], "check_expanded_query() (in module autorag.nodes.queryexpansion.base)": [[25, "autorag.nodes.queryexpansion.base.check_expanded_query", false]], "chunk() (autorag.data.qa.schema.raw method)": [[8, "autorag.data.qa.schema.Raw.chunk", false]], "chunker (class in autorag.chunker)": [[0, "autorag.chunker.Chunker", false]], "chunker_node() (in module autorag.data.chunk.base)": [[2, "autorag.data.chunk.base.chunker_node", false]], "cohere_rerank_pure() (in module autorag.nodes.passagereranker.cohere)": [[22, "autorag.nodes.passagereranker.cohere.cohere_rerank_pure", false]], "coherereranker (class in autorag.nodes.passagereranker.cohere)": [[22, "autorag.nodes.passagereranker.cohere.CohereReranker", false]], "colbertreranker (class in autorag.nodes.passagereranker.colbert)": [[22, "autorag.nodes.passagereranker.colbert.ColbertReranker", false]], "compress_ragas() (in module autorag.data.qa.evolve.llama_index_query_evolve)": [[9, "autorag.data.qa.evolve.llama_index_query_evolve.compress_ragas", false]], "compress_ragas() (in module autorag.data.qa.evolve.openai_query_evolve)": [[9, "autorag.data.qa.evolve.openai_query_evolve.compress_ragas", false]], "compute() (autorag.nodes.passagereranker.upr.uprscorer method)": [[22, "autorag.nodes.passagereranker.upr.UPRScorer.compute", false]], "concept_completion_query_gen() (in module autorag.data.qa.query.llama_gen_query)": [[12, "autorag.data.qa.query.llama_gen_query.concept_completion_query_gen", false]], "concept_completion_query_gen() (in module autorag.data.qa.query.openai_gen_query)": [[12, "autorag.data.qa.query.openai_gen_query.concept_completion_query_gen", false]], "conditional_evolve_ragas() (in module autorag.data.qa.evolve.llama_index_query_evolve)": [[9, "autorag.data.qa.evolve.llama_index_query_evolve.conditional_evolve_ragas", false]], "conditional_evolve_ragas() (in module autorag.data.qa.evolve.openai_query_evolve)": [[9, "autorag.data.qa.evolve.openai_query_evolve.conditional_evolve_ragas", false]], "convert_datetime_string() (in module autorag.utils.util)": [[28, "autorag.utils.util.convert_datetime_string", false]], "convert_env_in_dict() (in module autorag.utils.util)": [[28, "autorag.utils.util.convert_env_in_dict", false]], "convert_inputs_to_list() (in module autorag.utils.util)": [[28, "autorag.utils.util.convert_inputs_to_list", false]], "convert_string_to_tuple_in_dict() (in module autorag.utils.util)": [[28, "autorag.utils.util.convert_string_to_tuple_in_dict", false]], "corpus (class in autorag.data.qa.schema)": [[8, "autorag.data.qa.schema.Corpus", false]], "corpus_df_to_langchain_documents() (in module autorag.data.utils.util)": [[14, "autorag.data.utils.util.corpus_df_to_langchain_documents", false]], "create_token_type_ids_from_sequences() (autorag.nodes.passagereranker.tart.tokenization_enc_t5.enct5tokenizer method)": [[23, "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer.create_token_type_ids_from_sequences", false]], "deepeval_faithfulness() (in module autorag.evaluation.metric.generation)": [[16, "autorag.evaluation.metric.generation.deepeval_faithfulness", false]], "deparallelize() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[23, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.deparallelize", false]], "dict_to_markdown() (in module autorag.utils.util)": [[28, "autorag.utils.util.dict_to_markdown", false]], "dict_to_markdown_table() (in module autorag.utils.util)": [[28, "autorag.utils.util.dict_to_markdown_table", false]], "distribute_list_by_ratio() (in module autorag.data.legacy.qacreation.llama_index)": [[6, "autorag.data.legacy.qacreation.llama_index.distribute_list_by_ratio", false]], "dontknow_filter_llama_index() (in module autorag.data.qa.filter.dontknow)": [[10, "autorag.data.qa.filter.dontknow.dontknow_filter_llama_index", false]], "dontknow_filter_openai() (in module autorag.data.qa.filter.dontknow)": [[10, "autorag.data.qa.filter.dontknow.dontknow_filter_openai", false]], "dontknow_filter_rule_based() (in module autorag.data.qa.filter.dontknow)": [[10, "autorag.data.qa.filter.dontknow.dontknow_filter_rule_based", false]], "dynamically_find_function() (in module autorag.support)": [[0, "autorag.support.dynamically_find_function", false]], "edit_summary_df_params() (in module autorag.nodes.retrieval.run)": [[26, "autorag.nodes.retrieval.run.edit_summary_df_params", false]], "embed_dim (autorag.mockembeddingrandom attribute)": [[0, "autorag.MockEmbeddingRandom.embed_dim", false]], "embedding_query_content() (in module autorag.utils.util)": [[28, "autorag.utils.util.embedding_query_content", false]], "enct5forsequenceclassification (class in autorag.nodes.passagereranker.tart.modeling_enc_t5)": [[23, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification", false]], "enct5tokenizer (class in autorag.nodes.passagereranker.tart.tokenization_enc_t5)": [[23, "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer", false]], "evaluate_generation() (in module autorag.evaluation.generation)": [[15, "autorag.evaluation.generation.evaluate_generation", false]], "evaluate_generator_node() (in module autorag.nodes.generator.run)": [[18, "autorag.nodes.generator.run.evaluate_generator_node", false]], "evaluate_generator_result() (in module autorag.nodes.promptmaker.run)": [[24, "autorag.nodes.promptmaker.run.evaluate_generator_result", false]], "evaluate_one_prompt_maker_node() (in module autorag.nodes.promptmaker.run)": [[24, "autorag.nodes.promptmaker.run.evaluate_one_prompt_maker_node", false]], "evaluate_one_query_expansion_node() (in module autorag.nodes.queryexpansion.run)": [[25, "autorag.nodes.queryexpansion.run.evaluate_one_query_expansion_node", false]], "evaluate_passage_compressor_node() (in module autorag.nodes.passagecompressor.run)": [[20, "autorag.nodes.passagecompressor.run.evaluate_passage_compressor_node", false]], "evaluate_retrieval() (in module autorag.evaluation.retrieval)": [[15, "autorag.evaluation.retrieval.evaluate_retrieval", false]], "evaluate_retrieval_contents() (in module autorag.evaluation.retrieval_contents)": [[15, "autorag.evaluation.retrieval_contents.evaluate_retrieval_contents", false]], "evaluate_retrieval_node() (in module autorag.nodes.retrieval.run)": [[26, "autorag.nodes.retrieval.run.evaluate_retrieval_node", false]], "evaluator (class in autorag.evaluator)": [[0, "autorag.evaluator.Evaluator", false]], "evenly_distribute_passages() (in module autorag.nodes.retrieval.base)": [[26, "autorag.nodes.retrieval.base.evenly_distribute_passages", false]], "evolved_query (autorag.data.qa.evolve.openai_query_evolve.response attribute)": [[9, "autorag.data.qa.evolve.openai_query_evolve.Response.evolved_query", false]], "exp_normalize() (in module autorag.nodes.passagereranker.koreranker)": [[22, "autorag.nodes.passagereranker.koreranker.exp_normalize", false]], "explode() (in module autorag.utils.util)": [[28, "autorag.utils.util.explode", false]], "extract_values() (in module autorag.schema.node)": [[27, "autorag.schema.node.extract_values", false]], "extract_values_from_nodes() (in module autorag.schema.node)": [[27, "autorag.schema.node.extract_values_from_nodes", false]], "extract_values_from_nodes_strategy() (in module autorag.schema.node)": [[27, "autorag.schema.node.extract_values_from_nodes_strategy", false]], "factoid_query_gen() (in module autorag.data.qa.query.llama_gen_query)": [[12, "autorag.data.qa.query.llama_gen_query.factoid_query_gen", false]], "factoid_query_gen() (in module autorag.data.qa.query.openai_gen_query)": [[12, "autorag.data.qa.query.openai_gen_query.factoid_query_gen", false]], "faithfulnesstemplate (class in autorag.evaluation.metric.deepeval_prompt)": [[16, "autorag.evaluation.metric.deepeval_prompt.FaithfulnessTemplate", false]], "fetch_contents() (in module autorag.utils.util)": [[28, "autorag.utils.util.fetch_contents", false]], "fetch_one_content() (in module autorag.utils.util)": [[28, "autorag.utils.util.fetch_one_content", false]], "filter() (autorag.data.qa.schema.qa method)": [[8, "autorag.data.qa.schema.QA.filter", false]], "filter_by_threshold() (in module autorag.strategy)": [[0, "autorag.strategy.filter_by_threshold", false]], "filter_dict_keys() (in module autorag.utils.util)": [[28, "autorag.utils.util.filter_dict_keys", false]], "find_key_values() (in module autorag.utils.util)": [[28, "autorag.utils.util.find_key_values", false]], "find_node_dir() (in module autorag.dashboard)": [[0, "autorag.dashboard.find_node_dir", false]], "find_node_summary_files() (in module autorag.utils.util)": [[28, "autorag.utils.util.find_node_summary_files", false]], "find_trial_dir() (in module autorag.utils.util)": [[28, "autorag.utils.util.find_trial_dir", false]], "find_unique_elems() (in module autorag.nodes.retrieval.run)": [[26, "autorag.nodes.retrieval.run.find_unique_elems", false]], "flag_embedding_run_model() (in module autorag.nodes.passagereranker.flag_embedding)": [[22, "autorag.nodes.passagereranker.flag_embedding.flag_embedding_run_model", false]], "flagembeddingllmreranker (class in autorag.nodes.passagereranker.flag_embedding_llm)": [[22, "autorag.nodes.passagereranker.flag_embedding_llm.FlagEmbeddingLLMReranker", false]], "flagembeddingreranker (class in autorag.nodes.passagereranker.flag_embedding)": [[22, "autorag.nodes.passagereranker.flag_embedding.FlagEmbeddingReranker", false]], "flatmap() (autorag.data.qa.schema.raw method)": [[8, "autorag.data.qa.schema.Raw.flatmap", false]], "flatten_apply() (in module autorag.utils.util)": [[28, "autorag.utils.util.flatten_apply", false]], "forward() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[23, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.forward", false]], "from_dataframe() (autorag.schema.metricinput.metricinput class method)": [[27, "autorag.schema.metricinput.MetricInput.from_dataframe", false]], "from_dict() (autorag.schema.module.module class method)": [[27, "autorag.schema.module.Module.from_dict", false]], "from_dict() (autorag.schema.node.node class method)": [[27, "autorag.schema.node.Node.from_dict", false]], "from_parquet() (autorag.chunker.chunker class method)": [[0, "autorag.chunker.Chunker.from_parquet", false]], "fstring (class in autorag.nodes.promptmaker.fstring)": [[24, "autorag.nodes.promptmaker.fstring.Fstring", false]], "fuse_per_query() (in module autorag.nodes.retrieval.hybrid_cc)": [[26, "autorag.nodes.retrieval.hybrid_cc.fuse_per_query", false]], "g_eval() (in module autorag.evaluation.metric.generation)": [[16, "autorag.evaluation.metric.generation.g_eval", false]], "generate_answers() (in module autorag.data.legacy.qacreation.llama_index)": [[6, "autorag.data.legacy.qacreation.llama_index.generate_answers", false]], "generate_basic_answer() (in module autorag.data.legacy.qacreation.llama_index)": [[6, "autorag.data.legacy.qacreation.llama_index.generate_basic_answer", false]], "generate_claims() (autorag.evaluation.metric.deepeval_prompt.faithfulnesstemplate static method)": [[16, "autorag.evaluation.metric.deepeval_prompt.FaithfulnessTemplate.generate_claims", false]], "generate_qa_llama_index() (in module autorag.data.legacy.qacreation.llama_index)": [[6, "autorag.data.legacy.qacreation.llama_index.generate_qa_llama_index", false]], "generate_qa_llama_index_by_ratio() (in module autorag.data.legacy.qacreation.llama_index)": [[6, "autorag.data.legacy.qacreation.llama_index.generate_qa_llama_index_by_ratio", false]], "generate_qa_ragas() (in module autorag.data.legacy.qacreation.ragas)": [[6, "autorag.data.legacy.qacreation.ragas.generate_qa_ragas", false]], "generate_qa_row() (in module autorag.data.legacy.qacreation.simple)": [[6, "autorag.data.legacy.qacreation.simple.generate_qa_row", false]], "generate_simple_qa_dataset() (in module autorag.data.legacy.qacreation.simple)": [[6, "autorag.data.legacy.qacreation.simple.generate_simple_qa_dataset", false]], "generate_truths() (autorag.evaluation.metric.deepeval_prompt.faithfulnesstemplate static method)": [[16, "autorag.evaluation.metric.deepeval_prompt.FaithfulnessTemplate.generate_truths", false]], "generate_verdicts() (autorag.evaluation.metric.deepeval_prompt.faithfulnesstemplate static method)": [[16, "autorag.evaluation.metric.deepeval_prompt.FaithfulnessTemplate.generate_verdicts", false]], "generated_log_probs (autorag.schema.metricinput.metricinput attribute)": [[27, "autorag.schema.metricinput.MetricInput.generated_log_probs", false]], "generated_texts (autorag.schema.metricinput.metricinput attribute)": [[27, "autorag.schema.metricinput.MetricInput.generated_texts", false]], "generation_gt (autorag.schema.metricinput.metricinput attribute)": [[27, "autorag.schema.metricinput.MetricInput.generation_gt", false]], "generator_node() (in module autorag.nodes.generator.base)": [[18, "autorag.nodes.generator.base.generator_node", false]], "get_best_row() (in module autorag.utils.util)": [[28, "autorag.utils.util.get_best_row", false]], "get_bm25_pkl_name() (in module autorag.nodes.retrieval.base)": [[26, "autorag.nodes.retrieval.base.get_bm25_pkl_name", false]], "get_bm25_scores() (in module autorag.nodes.retrieval.bm25)": [[26, "autorag.nodes.retrieval.bm25.get_bm25_scores", false]], "get_colbert_embedding_batch() (in module autorag.nodes.passagereranker.colbert)": [[22, "autorag.nodes.passagereranker.colbert.get_colbert_embedding_batch", false]], "get_colbert_score() (in module autorag.nodes.passagereranker.colbert)": [[22, "autorag.nodes.passagereranker.colbert.get_colbert_score", false]], "get_encoder() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[23, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.get_encoder", false]], "get_event_loop() (in module autorag.utils.util)": [[28, "autorag.utils.util.get_event_loop", false]], "get_file_metadata() (in module autorag.data.utils.util)": [[14, "autorag.data.utils.util.get_file_metadata", false]], "get_hybrid_execution_times() (in module autorag.nodes.retrieval.run)": [[26, "autorag.nodes.retrieval.run.get_hybrid_execution_times", false]], "get_id_scores() (in module autorag.nodes.retrieval.vectordb)": [[26, "autorag.nodes.retrieval.vectordb.get_id_scores", false]], "get_ids_and_scores() (in module autorag.nodes.retrieval.run)": [[26, "autorag.nodes.retrieval.run.get_ids_and_scores", false]], "get_input_embeddings() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[23, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.get_input_embeddings", false]], "get_metric_values() (in module autorag.dashboard)": [[0, "autorag.dashboard.get_metric_values", false]], "get_multi_query_expansion() (in module autorag.nodes.queryexpansion.multi_query_expansion)": [[25, "autorag.nodes.queryexpansion.multi_query_expansion.get_multi_query_expansion", false]], "get_param_combinations() (autorag.schema.node.node method)": [[27, "autorag.schema.node.Node.get_param_combinations", false]], "get_param_combinations() (in module autorag.data.utils.util)": [[14, "autorag.data.utils.util.get_param_combinations", false]], "get_query_decompose() (in module autorag.nodes.queryexpansion.query_decompose)": [[25, "autorag.nodes.queryexpansion.query_decompose.get_query_decompose", false]], "get_result() (autorag.nodes.generator.openai_llm.openaillm method)": [[18, "autorag.nodes.generator.openai_llm.OpenAILLM.get_result", false]], "get_result_o1() (autorag.nodes.generator.openai_llm.openaillm method)": [[18, "autorag.nodes.generator.openai_llm.OpenAILLM.get_result_o1", false]], "get_runner() (in module autorag.web)": [[0, "autorag.web.get_runner", false]], "get_scores_by_ids() (in module autorag.nodes.retrieval.run)": [[26, "autorag.nodes.retrieval.run.get_scores_by_ids", false]], "get_special_tokens_mask() (autorag.nodes.passagereranker.tart.tokenization_enc_t5.enct5tokenizer method)": [[23, "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer.get_special_tokens_mask", false]], "get_start_end_idx() (in module autorag.data.utils.util)": [[14, "autorag.data.utils.util.get_start_end_idx", false]], "get_structured_result() (autorag.nodes.generator.openai_llm.openaillm method)": [[18, "autorag.nodes.generator.openai_llm.OpenAILLM.get_structured_result", false]], "get_support_modules() (in module autorag.support)": [[0, "autorag.support.get_support_modules", false]], "get_support_nodes() (in module autorag.support)": [[0, "autorag.support.get_support_nodes", false]], "handle_exception() (in module autorag)": [[0, "autorag.handle_exception", false]], "huggingface_evaluate() (in module autorag.evaluation.metric.generation)": [[16, "autorag.evaluation.metric.generation.huggingface_evaluate", false]], "hybrid_cc() (in module autorag.nodes.retrieval.hybrid_cc)": [[26, "autorag.nodes.retrieval.hybrid_cc.hybrid_cc", false]], "hybrid_rrf() (in module autorag.nodes.retrieval.hybrid_rrf)": [[26, "autorag.nodes.retrieval.hybrid_rrf.hybrid_rrf", false]], "hybridcc (class in autorag.nodes.retrieval.hybrid_cc)": [[26, "autorag.nodes.retrieval.hybrid_cc.HybridCC", false]], "hybridretrieval (class in autorag.nodes.retrieval.base)": [[26, "autorag.nodes.retrieval.base.HybridRetrieval", false]], "hybridrrf (class in autorag.nodes.retrieval.hybrid_rrf)": [[26, "autorag.nodes.retrieval.hybrid_rrf.HybridRRF", false]], "hyde (class in autorag.nodes.queryexpansion.hyde)": [[25, "autorag.nodes.queryexpansion.hyde.HyDE", false]], "is_dont_know (autorag.data.qa.filter.dontknow.response attribute)": [[10, "autorag.data.qa.filter.dontknow.Response.is_dont_know", false]], "is_fields_notnone() (autorag.schema.metricinput.metricinput method)": [[27, "autorag.schema.metricinput.MetricInput.is_fields_notnone", false]], "is_passage_dependent (autorag.data.qa.filter.passage_dependency.response attribute)": [[10, "autorag.data.qa.filter.passage_dependency.Response.is_passage_dependent", false]], "jina_reranker_pure() (in module autorag.nodes.passagereranker.jina)": [[22, "autorag.nodes.passagereranker.jina.jina_reranker_pure", false]], "jinareranker (class in autorag.nodes.passagereranker.jina)": [[22, "autorag.nodes.passagereranker.jina.JinaReranker", false]], "koreranker (class in autorag.nodes.passagereranker.koreranker)": [[22, "autorag.nodes.passagereranker.koreranker.KoReranker", false]], "koreranker_run_model() (in module autorag.nodes.passagereranker.koreranker)": [[22, "autorag.nodes.passagereranker.koreranker.koreranker_run_model", false]], "langchain_chunk() (in module autorag.data.chunk.langchain_chunk)": [[2, "autorag.data.chunk.langchain_chunk.langchain_chunk", false]], "langchain_chunk_pure() (in module autorag.data.chunk.langchain_chunk)": [[2, "autorag.data.chunk.langchain_chunk.langchain_chunk_pure", false]], "langchain_documents_to_parquet() (in module autorag.data.legacy.corpus.langchain)": [[5, "autorag.data.legacy.corpus.langchain.langchain_documents_to_parquet", false]], "langchain_parse() (in module autorag.data.parse.langchain_parse)": [[7, "autorag.data.parse.langchain_parse.langchain_parse", false]], "langchain_parse_pure() (in module autorag.data.parse.langchain_parse)": [[7, "autorag.data.parse.langchain_parse.langchain_parse_pure", false]], "lazyinit (class in autorag)": [[0, "autorag.LazyInit", false]], "linked_corpus (autorag.data.qa.schema.qa property)": [[8, "autorag.data.qa.schema.QA.linked_corpus", false]], "linked_raw (autorag.data.qa.schema.corpus property)": [[8, "autorag.data.qa.schema.Corpus.linked_raw", false]], "llama_documents_to_parquet() (in module autorag.data.legacy.corpus.llama_index)": [[5, "autorag.data.legacy.corpus.llama_index.llama_documents_to_parquet", false]], "llama_index_chunk() (in module autorag.data.chunk.llama_index_chunk)": [[2, "autorag.data.chunk.llama_index_chunk.llama_index_chunk", false]], "llama_index_chunk_pure() (in module autorag.data.chunk.llama_index_chunk)": [[2, "autorag.data.chunk.llama_index_chunk.llama_index_chunk_pure", false]], "llama_index_generate_base() (in module autorag.data.qa.evolve.llama_index_query_evolve)": [[9, "autorag.data.qa.evolve.llama_index_query_evolve.llama_index_generate_base", false]], "llama_index_generate_base() (in module autorag.data.qa.query.llama_gen_query)": [[12, "autorag.data.qa.query.llama_gen_query.llama_index_generate_base", false]], "llama_parse() (in module autorag.data.parse.llamaparse)": [[7, "autorag.data.parse.llamaparse.llama_parse", false]], "llama_parse_pure() (in module autorag.data.parse.llamaparse)": [[7, "autorag.data.parse.llamaparse.llama_parse_pure", false]], "llama_text_node_to_parquet() (in module autorag.data.legacy.corpus.llama_index)": [[5, "autorag.data.legacy.corpus.llama_index.llama_text_node_to_parquet", false]], "llamaindexcompressor (class in autorag.nodes.passagecompressor.base)": [[20, "autorag.nodes.passagecompressor.base.LlamaIndexCompressor", false]], "llamaindexllm (class in autorag.nodes.generator.llama_index_llm)": [[18, "autorag.nodes.generator.llama_index_llm.LlamaIndexLLM", false]], "llm (autorag.nodes.passagecompressor.refine.refine attribute)": [[20, "autorag.nodes.passagecompressor.refine.Refine.llm", false]], "llm (autorag.nodes.passagecompressor.tree_summarize.treesummarize attribute)": [[20, "autorag.nodes.passagecompressor.tree_summarize.TreeSummarize.llm", false]], "llm (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[22, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.llm", false]], "llmlingua_pure() (in module autorag.nodes.passagecompressor.longllmlingua)": [[20, "autorag.nodes.passagecompressor.longllmlingua.llmlingua_pure", false]], "load_bm25_corpus() (in module autorag.nodes.retrieval.bm25)": [[26, "autorag.nodes.retrieval.bm25.load_bm25_corpus", false]], "load_chroma_collection() (in module autorag.nodes.retrieval.vectordb)": [[26, "autorag.nodes.retrieval.vectordb.load_chroma_collection", false]], "load_summary_file() (in module autorag.utils.util)": [[28, "autorag.utils.util.load_summary_file", false]], "load_yaml() (in module autorag.data.utils.util)": [[14, "autorag.data.utils.util.load_yaml", false]], "longcontextreorder (class in autorag.nodes.promptmaker.long_context_reorder)": [[24, "autorag.nodes.promptmaker.long_context_reorder.LongContextReorder", false]], "longllmlingua (class in autorag.nodes.passagecompressor.longllmlingua)": [[20, "autorag.nodes.passagecompressor.longllmlingua.LongLLMLingua", false]], "make_basic_gen_gt() (in module autorag.data.qa.generation_gt.llama_index_gen_gt)": [[11, "autorag.data.qa.generation_gt.llama_index_gen_gt.make_basic_gen_gt", false]], "make_basic_gen_gt() (in module autorag.data.qa.generation_gt.openai_gen_gt)": [[11, "autorag.data.qa.generation_gt.openai_gen_gt.make_basic_gen_gt", false]], "make_batch() (in module autorag.utils.util)": [[28, "autorag.utils.util.make_batch", false]], "make_combinations() (in module autorag.utils.util)": [[28, "autorag.utils.util.make_combinations", false]], "make_concise_gen_gt() (in module autorag.data.qa.generation_gt.llama_index_gen_gt)": [[11, "autorag.data.qa.generation_gt.llama_index_gen_gt.make_concise_gen_gt", false]], "make_concise_gen_gt() (in module autorag.data.qa.generation_gt.openai_gen_gt)": [[11, "autorag.data.qa.generation_gt.openai_gen_gt.make_concise_gen_gt", false]], "make_gen_gt_llama_index() (in module autorag.data.qa.generation_gt.llama_index_gen_gt)": [[11, "autorag.data.qa.generation_gt.llama_index_gen_gt.make_gen_gt_llama_index", false]], "make_gen_gt_openai() (in module autorag.data.qa.generation_gt.openai_gen_gt)": [[11, "autorag.data.qa.generation_gt.openai_gen_gt.make_gen_gt_openai", false]], "make_generator_callable_param() (in module autorag.nodes.util)": [[17, "autorag.nodes.util.make_generator_callable_param", false]], "make_generator_callable_params() (in module autorag.nodes.promptmaker.run)": [[24, "autorag.nodes.promptmaker.run.make_generator_callable_params", false]], "make_generator_instance() (in module autorag.evaluation.metric.generation)": [[16, "autorag.evaluation.metric.generation.make_generator_instance", false]], "make_llm() (in module autorag.nodes.passagecompressor.base)": [[20, "autorag.nodes.passagecompressor.base.make_llm", false]], "make_metadata_list() (in module autorag.data.chunk.base)": [[2, "autorag.data.chunk.base.make_metadata_list", false]], "make_node_lines() (in module autorag.node_line)": [[0, "autorag.node_line.make_node_lines", false]], "make_qa_with_existing_qa() (in module autorag.data.legacy.qacreation.base)": [[6, "autorag.data.legacy.qacreation.base.make_qa_with_existing_qa", false]], "make_retrieval_callable_params() (in module autorag.nodes.queryexpansion.run)": [[25, "autorag.nodes.queryexpansion.run.make_retrieval_callable_params", false]], "make_retrieval_gt_contents() (autorag.data.qa.schema.qa method)": [[8, "autorag.data.qa.schema.QA.make_retrieval_gt_contents", false]], "make_single_content_qa() (in module autorag.data.legacy.qacreation.base)": [[6, "autorag.data.legacy.qacreation.base.make_single_content_qa", false]], "make_trial_summary_md() (in module autorag.dashboard)": [[0, "autorag.dashboard.make_trial_summary_md", false]], "map() (autorag.data.qa.schema.corpus method)": [[8, "autorag.data.qa.schema.Corpus.map", false]], "map() (autorag.data.qa.schema.qa method)": [[8, "autorag.data.qa.schema.QA.map", false]], "map() (autorag.data.qa.schema.raw method)": [[8, "autorag.data.qa.schema.Raw.map", false]], "measure_speed() (in module autorag.strategy)": [[0, "autorag.strategy.measure_speed", false]], "meteor() (in module autorag.evaluation.metric.generation)": [[16, "autorag.evaluation.metric.generation.meteor", false]], "metricinput (class in autorag.schema.metricinput)": [[27, "autorag.schema.metricinput.MetricInput", false]], "mockembeddingrandom (class in autorag)": [[0, "autorag.MockEmbeddingRandom", false]], "model_computed_fields (autorag.data.qa.evolve.openai_query_evolve.response attribute)": [[9, "autorag.data.qa.evolve.openai_query_evolve.Response.model_computed_fields", false]], "model_computed_fields (autorag.data.qa.filter.dontknow.response attribute)": [[10, "autorag.data.qa.filter.dontknow.Response.model_computed_fields", false]], "model_computed_fields (autorag.data.qa.filter.passage_dependency.response attribute)": [[10, "autorag.data.qa.filter.passage_dependency.Response.model_computed_fields", false]], "model_computed_fields (autorag.data.qa.generation_gt.openai_gen_gt.response attribute)": [[11, "autorag.data.qa.generation_gt.openai_gen_gt.Response.model_computed_fields", false]], "model_computed_fields (autorag.data.qa.query.openai_gen_query.response attribute)": [[12, "autorag.data.qa.query.openai_gen_query.Response.model_computed_fields", false]], "model_computed_fields (autorag.data.qa.query.openai_gen_query.twohopincrementalresponse attribute)": [[12, "autorag.data.qa.query.openai_gen_query.TwoHopIncrementalResponse.model_computed_fields", false]], "model_computed_fields (autorag.mockembeddingrandom attribute)": [[0, "autorag.MockEmbeddingRandom.model_computed_fields", false]], "model_computed_fields (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[22, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.model_computed_fields", false]], "model_config (autorag.data.qa.evolve.openai_query_evolve.response attribute)": [[9, "autorag.data.qa.evolve.openai_query_evolve.Response.model_config", false]], "model_config (autorag.data.qa.filter.dontknow.response attribute)": [[10, "autorag.data.qa.filter.dontknow.Response.model_config", false]], "model_config (autorag.data.qa.filter.passage_dependency.response attribute)": [[10, "autorag.data.qa.filter.passage_dependency.Response.model_config", false]], "model_config (autorag.data.qa.generation_gt.openai_gen_gt.response attribute)": [[11, "autorag.data.qa.generation_gt.openai_gen_gt.Response.model_config", false]], "model_config (autorag.data.qa.query.openai_gen_query.response attribute)": [[12, "autorag.data.qa.query.openai_gen_query.Response.model_config", false]], "model_config (autorag.data.qa.query.openai_gen_query.twohopincrementalresponse attribute)": [[12, "autorag.data.qa.query.openai_gen_query.TwoHopIncrementalResponse.model_config", false]], "model_config (autorag.mockembeddingrandom attribute)": [[0, "autorag.MockEmbeddingRandom.model_config", false]], "model_config (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[22, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.model_config", false]], "model_fields (autorag.data.qa.evolve.openai_query_evolve.response attribute)": [[9, "autorag.data.qa.evolve.openai_query_evolve.Response.model_fields", false]], "model_fields (autorag.data.qa.filter.dontknow.response attribute)": [[10, "autorag.data.qa.filter.dontknow.Response.model_fields", false]], "model_fields (autorag.data.qa.filter.passage_dependency.response attribute)": [[10, "autorag.data.qa.filter.passage_dependency.Response.model_fields", false]], "model_fields (autorag.data.qa.generation_gt.openai_gen_gt.response attribute)": [[11, "autorag.data.qa.generation_gt.openai_gen_gt.Response.model_fields", false]], "model_fields (autorag.data.qa.query.openai_gen_query.response attribute)": [[12, "autorag.data.qa.query.openai_gen_query.Response.model_fields", false]], "model_fields (autorag.data.qa.query.openai_gen_query.twohopincrementalresponse attribute)": [[12, "autorag.data.qa.query.openai_gen_query.TwoHopIncrementalResponse.model_fields", false]], "model_fields (autorag.mockembeddingrandom attribute)": [[0, "autorag.MockEmbeddingRandom.model_fields", false]], "model_fields (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[22, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.model_fields", false]], "module": [[0, "module-autorag", false], [0, "module-autorag.chunker", false], [0, "module-autorag.cli", false], [0, "module-autorag.dashboard", false], [0, "module-autorag.deploy", false], [0, "module-autorag.evaluator", false], [0, "module-autorag.node_line", false], [0, "module-autorag.parser", false], [0, "module-autorag.strategy", false], [0, "module-autorag.support", false], [0, "module-autorag.validator", false], [0, "module-autorag.web", false], [1, "module-autorag.data", false], [2, "module-autorag.data.chunk", false], [2, "module-autorag.data.chunk.base", false], [2, "module-autorag.data.chunk.langchain_chunk", false], [2, "module-autorag.data.chunk.llama_index_chunk", false], [2, "module-autorag.data.chunk.run", false], [4, "module-autorag.data.legacy", false], [5, "module-autorag.data.legacy.corpus", false], [5, "module-autorag.data.legacy.corpus.langchain", false], [5, "module-autorag.data.legacy.corpus.llama_index", false], [6, "module-autorag.data.legacy.qacreation", false], [6, "module-autorag.data.legacy.qacreation.base", false], [6, "module-autorag.data.legacy.qacreation.llama_index", false], [6, "module-autorag.data.legacy.qacreation.ragas", false], [6, "module-autorag.data.legacy.qacreation.simple", false], [7, "module-autorag.data.parse", false], [7, "module-autorag.data.parse.base", false], [7, "module-autorag.data.parse.langchain_parse", false], [7, "module-autorag.data.parse.llamaparse", false], [7, "module-autorag.data.parse.run", false], [8, "module-autorag.data.qa", false], [8, "module-autorag.data.qa.extract_evidence", false], [8, "module-autorag.data.qa.sample", false], [8, "module-autorag.data.qa.schema", false], [9, "module-autorag.data.qa.evolve", false], [9, "module-autorag.data.qa.evolve.llama_index_query_evolve", false], [9, "module-autorag.data.qa.evolve.openai_query_evolve", false], [9, "module-autorag.data.qa.evolve.prompt", false], [10, "module-autorag.data.qa.filter", false], [10, "module-autorag.data.qa.filter.dontknow", false], [10, "module-autorag.data.qa.filter.passage_dependency", false], [10, "module-autorag.data.qa.filter.prompt", false], [11, "module-autorag.data.qa.generation_gt", false], [11, "module-autorag.data.qa.generation_gt.base", false], [11, "module-autorag.data.qa.generation_gt.llama_index_gen_gt", false], [11, "module-autorag.data.qa.generation_gt.openai_gen_gt", false], [11, "module-autorag.data.qa.generation_gt.prompt", false], [12, "module-autorag.data.qa.query", false], [12, "module-autorag.data.qa.query.llama_gen_query", false], [12, "module-autorag.data.qa.query.openai_gen_query", false], [12, "module-autorag.data.qa.query.prompt", false], [14, "module-autorag.data.utils", false], [14, "module-autorag.data.utils.util", false], [15, "module-autorag.evaluation", false], [15, "module-autorag.evaluation.generation", false], [15, "module-autorag.evaluation.retrieval", false], [15, "module-autorag.evaluation.retrieval_contents", false], [15, "module-autorag.evaluation.util", false], [16, "module-autorag.evaluation.metric", false], [16, "module-autorag.evaluation.metric.deepeval_prompt", false], [16, "module-autorag.evaluation.metric.generation", false], [16, "module-autorag.evaluation.metric.retrieval", false], [16, "module-autorag.evaluation.metric.retrieval_contents", false], [16, "module-autorag.evaluation.metric.util", false], [17, "module-autorag.nodes", false], [17, "module-autorag.nodes.util", false], [18, "module-autorag.nodes.generator", false], [18, "module-autorag.nodes.generator.base", false], [18, "module-autorag.nodes.generator.llama_index_llm", false], [18, "module-autorag.nodes.generator.openai_llm", false], [18, "module-autorag.nodes.generator.run", false], [18, "module-autorag.nodes.generator.vllm", false], [19, "module-autorag.nodes.passageaugmenter", false], [19, "module-autorag.nodes.passageaugmenter.base", false], [19, "module-autorag.nodes.passageaugmenter.pass_passage_augmenter", false], [19, "module-autorag.nodes.passageaugmenter.prev_next_augmenter", false], [19, "module-autorag.nodes.passageaugmenter.run", false], [20, "module-autorag.nodes.passagecompressor", false], [20, "module-autorag.nodes.passagecompressor.base", false], [20, "module-autorag.nodes.passagecompressor.longllmlingua", false], [20, "module-autorag.nodes.passagecompressor.pass_compressor", false], [20, "module-autorag.nodes.passagecompressor.refine", false], [20, "module-autorag.nodes.passagecompressor.run", false], [20, "module-autorag.nodes.passagecompressor.tree_summarize", false], [21, "module-autorag.nodes.passagefilter", false], [21, "module-autorag.nodes.passagefilter.base", false], [21, "module-autorag.nodes.passagefilter.pass_passage_filter", false], [21, "module-autorag.nodes.passagefilter.percentile_cutoff", false], [21, "module-autorag.nodes.passagefilter.recency", false], [21, "module-autorag.nodes.passagefilter.run", false], [21, "module-autorag.nodes.passagefilter.similarity_percentile_cutoff", false], [21, "module-autorag.nodes.passagefilter.similarity_threshold_cutoff", false], [21, "module-autorag.nodes.passagefilter.threshold_cutoff", false], [22, "module-autorag.nodes.passagereranker", false], [22, "module-autorag.nodes.passagereranker.base", false], [22, "module-autorag.nodes.passagereranker.cohere", false], [22, "module-autorag.nodes.passagereranker.colbert", false], [22, "module-autorag.nodes.passagereranker.flag_embedding", false], [22, "module-autorag.nodes.passagereranker.flag_embedding_llm", false], [22, "module-autorag.nodes.passagereranker.jina", false], [22, "module-autorag.nodes.passagereranker.koreranker", false], [22, "module-autorag.nodes.passagereranker.monot5", false], [22, "module-autorag.nodes.passagereranker.openvino", false], [22, "module-autorag.nodes.passagereranker.pass_reranker", false], [22, "module-autorag.nodes.passagereranker.rankgpt", false], [22, "module-autorag.nodes.passagereranker.run", false], [22, "module-autorag.nodes.passagereranker.sentence_transformer", false], [22, "module-autorag.nodes.passagereranker.time_reranker", false], [22, "module-autorag.nodes.passagereranker.upr", false], [22, "module-autorag.nodes.passagereranker.voyageai", false], [23, "module-autorag.nodes.passagereranker.tart", false], [23, "module-autorag.nodes.passagereranker.tart.modeling_enc_t5", false], [23, "module-autorag.nodes.passagereranker.tart.tart", false], [23, "module-autorag.nodes.passagereranker.tart.tokenization_enc_t5", false], [24, "module-autorag.nodes.promptmaker", false], [24, "module-autorag.nodes.promptmaker.base", false], [24, "module-autorag.nodes.promptmaker.fstring", false], [24, "module-autorag.nodes.promptmaker.long_context_reorder", false], [24, "module-autorag.nodes.promptmaker.run", false], [24, "module-autorag.nodes.promptmaker.window_replacement", false], [25, "module-autorag.nodes.queryexpansion", false], [25, "module-autorag.nodes.queryexpansion.base", false], [25, "module-autorag.nodes.queryexpansion.hyde", false], [25, "module-autorag.nodes.queryexpansion.multi_query_expansion", false], [25, "module-autorag.nodes.queryexpansion.pass_query_expansion", false], [25, "module-autorag.nodes.queryexpansion.query_decompose", false], [25, "module-autorag.nodes.queryexpansion.run", false], [26, "module-autorag.nodes.retrieval", false], [26, "module-autorag.nodes.retrieval.base", false], [26, "module-autorag.nodes.retrieval.bm25", false], [26, "module-autorag.nodes.retrieval.hybrid_cc", false], [26, "module-autorag.nodes.retrieval.hybrid_rrf", false], [26, "module-autorag.nodes.retrieval.run", false], [26, "module-autorag.nodes.retrieval.vectordb", false], [27, "module-autorag.schema", false], [27, "module-autorag.schema.base", false], [27, "module-autorag.schema.metricinput", false], [27, "module-autorag.schema.module", false], [27, "module-autorag.schema.node", false], [28, "module-autorag.utils", false], [28, "module-autorag.utils.preprocess", false], [28, "module-autorag.utils.util", false]], "module (autorag.schema.module.module attribute)": [[27, "autorag.schema.module.Module.module", false]], "module (class in autorag.schema.module)": [[27, "autorag.schema.module.Module", false]], "module_param (autorag.schema.module.module attribute)": [[27, "autorag.schema.module.Module.module_param", false]], "module_type (autorag.schema.module.module attribute)": [[27, "autorag.schema.module.Module.module_type", false]], "module_type_exists() (in module autorag.schema.node)": [[27, "autorag.schema.node.module_type_exists", false]], "modules (autorag.schema.node.node attribute)": [[27, "autorag.schema.node.Node.modules", false]], "monot5 (class in autorag.nodes.passagereranker.monot5)": [[22, "autorag.nodes.passagereranker.monot5.MonoT5", false]], "monot5_run_model() (in module autorag.nodes.passagereranker.monot5)": [[22, "autorag.nodes.passagereranker.monot5.monot5_run_model", false]], "multiqueryexpansion (class in autorag.nodes.queryexpansion.multi_query_expansion)": [[25, "autorag.nodes.queryexpansion.multi_query_expansion.MultiQueryExpansion", false]], "node (class in autorag.schema.node)": [[27, "autorag.schema.node.Node", false]], "node_params (autorag.schema.node.node attribute)": [[27, "autorag.schema.node.Node.node_params", false]], "node_type (autorag.schema.node.node attribute)": [[27, "autorag.schema.node.Node.node_type", false]], "node_view() (in module autorag.dashboard)": [[0, "autorag.dashboard.node_view", false]], "normalize_dbsf() (in module autorag.nodes.retrieval.hybrid_cc)": [[26, "autorag.nodes.retrieval.hybrid_cc.normalize_dbsf", false]], "normalize_mm() (in module autorag.nodes.retrieval.hybrid_cc)": [[26, "autorag.nodes.retrieval.hybrid_cc.normalize_mm", false]], "normalize_string() (in module autorag.utils.util)": [[28, "autorag.utils.util.normalize_string", false]], "normalize_tmm() (in module autorag.nodes.retrieval.hybrid_cc)": [[26, "autorag.nodes.retrieval.hybrid_cc.normalize_tmm", false]], "normalize_unicode() (in module autorag.utils.util)": [[28, "autorag.utils.util.normalize_unicode", false]], "normalize_z() (in module autorag.nodes.retrieval.hybrid_cc)": [[26, "autorag.nodes.retrieval.hybrid_cc.normalize_z", false]], "one_hop_question (autorag.data.qa.query.openai_gen_query.twohopincrementalresponse attribute)": [[12, "autorag.data.qa.query.openai_gen_query.TwoHopIncrementalResponse.one_hop_question", false]], "openai_truncate_by_token() (in module autorag.utils.util)": [[28, "autorag.utils.util.openai_truncate_by_token", false]], "openaillm (class in autorag.nodes.generator.openai_llm)": [[18, "autorag.nodes.generator.openai_llm.OpenAILLM", false]], "openvino_run_model() (in module autorag.nodes.passagereranker.openvino)": [[22, "autorag.nodes.passagereranker.openvino.openvino_run_model", false]], "openvinoreranker (class in autorag.nodes.passagereranker.openvino)": [[22, "autorag.nodes.passagereranker.openvino.OpenVINOReranker", false]], "optimize_hybrid() (in module autorag.nodes.retrieval.run)": [[26, "autorag.nodes.retrieval.run.optimize_hybrid", false]], "parallelize() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[23, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.parallelize", false]], "param_list (autorag.nodes.passagecompressor.base.llamaindexcompressor attribute)": [[20, "autorag.nodes.passagecompressor.base.LlamaIndexCompressor.param_list", false]], "parse_all_files() (in module autorag.data.parse.langchain_parse)": [[7, "autorag.data.parse.langchain_parse.parse_all_files", false]], "parse_output() (in module autorag.data.legacy.qacreation.llama_index)": [[6, "autorag.data.legacy.qacreation.llama_index.parse_output", false]], "parser (class in autorag.parser)": [[0, "autorag.parser.Parser", false]], "parser_node() (in module autorag.data.parse.base)": [[7, "autorag.data.parse.base.parser_node", false]], "passage_dependency_filter_llama_index() (in module autorag.data.qa.filter.passage_dependency)": [[10, "autorag.data.qa.filter.passage_dependency.passage_dependency_filter_llama_index", false]], "passage_dependency_filter_openai() (in module autorag.data.qa.filter.passage_dependency)": [[10, "autorag.data.qa.filter.passage_dependency.passage_dependency_filter_openai", false]], "passage_filter_node() (in module autorag.nodes.passagefilter.base)": [[21, "autorag.nodes.passagefilter.base.passage_filter_node", false]], "passcompressor (class in autorag.nodes.passagecompressor.pass_compressor)": [[20, "autorag.nodes.passagecompressor.pass_compressor.PassCompressor", false]], "passpassageaugmenter (class in autorag.nodes.passageaugmenter.pass_passage_augmenter)": [[19, "autorag.nodes.passageaugmenter.pass_passage_augmenter.PassPassageAugmenter", false]], "passpassagefilter (class in autorag.nodes.passagefilter.pass_passage_filter)": [[21, "autorag.nodes.passagefilter.pass_passage_filter.PassPassageFilter", false]], "passqueryexpansion (class in autorag.nodes.queryexpansion.pass_query_expansion)": [[25, "autorag.nodes.queryexpansion.pass_query_expansion.PassQueryExpansion", false]], "passreranker (class in autorag.nodes.passagereranker.pass_reranker)": [[22, "autorag.nodes.passagereranker.pass_reranker.PassReranker", false]], "percentilecutoff (class in autorag.nodes.passagefilter.percentile_cutoff)": [[21, "autorag.nodes.passagefilter.percentile_cutoff.PercentileCutoff", false]], "pop_params() (in module autorag.utils.util)": [[28, "autorag.utils.util.pop_params", false]], "prev_next_augmenter_pure() (in module autorag.nodes.passageaugmenter.prev_next_augmenter)": [[19, "autorag.nodes.passageaugmenter.prev_next_augmenter.prev_next_augmenter_pure", false]], "prevnextpassageaugmenter (class in autorag.nodes.passageaugmenter.prev_next_augmenter)": [[19, "autorag.nodes.passageaugmenter.prev_next_augmenter.PrevNextPassageAugmenter", false]], "process_batch() (in module autorag.utils.util)": [[28, "autorag.utils.util.process_batch", false]], "prompt (autorag.schema.metricinput.metricinput attribute)": [[27, "autorag.schema.metricinput.MetricInput.prompt", false]], "pure() (autorag.nodes.generator.llama_index_llm.llamaindexllm method)": [[18, "autorag.nodes.generator.llama_index_llm.LlamaIndexLLM.pure", false]], "pure() (autorag.nodes.generator.openai_llm.openaillm method)": [[18, "autorag.nodes.generator.openai_llm.OpenAILLM.pure", false]], "pure() (autorag.nodes.generator.vllm.vllm method)": [[18, "autorag.nodes.generator.vllm.Vllm.pure", false]], "pure() (autorag.nodes.passageaugmenter.pass_passage_augmenter.passpassageaugmenter method)": [[19, "autorag.nodes.passageaugmenter.pass_passage_augmenter.PassPassageAugmenter.pure", false]], "pure() (autorag.nodes.passageaugmenter.prev_next_augmenter.prevnextpassageaugmenter method)": [[19, "autorag.nodes.passageaugmenter.prev_next_augmenter.PrevNextPassageAugmenter.pure", false]], "pure() (autorag.nodes.passagecompressor.base.llamaindexcompressor method)": [[20, "autorag.nodes.passagecompressor.base.LlamaIndexCompressor.pure", false]], "pure() (autorag.nodes.passagecompressor.longllmlingua.longllmlingua method)": [[20, "autorag.nodes.passagecompressor.longllmlingua.LongLLMLingua.pure", false]], "pure() (autorag.nodes.passagecompressor.pass_compressor.passcompressor method)": [[20, "autorag.nodes.passagecompressor.pass_compressor.PassCompressor.pure", false]], "pure() (autorag.nodes.passagefilter.pass_passage_filter.passpassagefilter method)": [[21, "autorag.nodes.passagefilter.pass_passage_filter.PassPassageFilter.pure", false]], "pure() (autorag.nodes.passagefilter.percentile_cutoff.percentilecutoff method)": [[21, "autorag.nodes.passagefilter.percentile_cutoff.PercentileCutoff.pure", false]], "pure() (autorag.nodes.passagefilter.recency.recencyfilter method)": [[21, "autorag.nodes.passagefilter.recency.RecencyFilter.pure", false]], "pure() (autorag.nodes.passagefilter.similarity_percentile_cutoff.similaritypercentilecutoff method)": [[21, "autorag.nodes.passagefilter.similarity_percentile_cutoff.SimilarityPercentileCutoff.pure", false]], "pure() (autorag.nodes.passagefilter.similarity_threshold_cutoff.similaritythresholdcutoff method)": [[21, "autorag.nodes.passagefilter.similarity_threshold_cutoff.SimilarityThresholdCutoff.pure", false]], "pure() (autorag.nodes.passagefilter.threshold_cutoff.thresholdcutoff method)": [[21, "autorag.nodes.passagefilter.threshold_cutoff.ThresholdCutoff.pure", false]], "pure() (autorag.nodes.passagereranker.cohere.coherereranker method)": [[22, "autorag.nodes.passagereranker.cohere.CohereReranker.pure", false]], "pure() (autorag.nodes.passagereranker.colbert.colbertreranker method)": [[22, "autorag.nodes.passagereranker.colbert.ColbertReranker.pure", false]], "pure() (autorag.nodes.passagereranker.flag_embedding.flagembeddingreranker method)": [[22, "autorag.nodes.passagereranker.flag_embedding.FlagEmbeddingReranker.pure", false]], "pure() (autorag.nodes.passagereranker.flag_embedding_llm.flagembeddingllmreranker method)": [[22, "autorag.nodes.passagereranker.flag_embedding_llm.FlagEmbeddingLLMReranker.pure", false]], "pure() (autorag.nodes.passagereranker.jina.jinareranker method)": [[22, "autorag.nodes.passagereranker.jina.JinaReranker.pure", false]], "pure() (autorag.nodes.passagereranker.koreranker.koreranker method)": [[22, "autorag.nodes.passagereranker.koreranker.KoReranker.pure", false]], "pure() (autorag.nodes.passagereranker.monot5.monot5 method)": [[22, "autorag.nodes.passagereranker.monot5.MonoT5.pure", false]], "pure() (autorag.nodes.passagereranker.openvino.openvinoreranker method)": [[22, "autorag.nodes.passagereranker.openvino.OpenVINOReranker.pure", false]], "pure() (autorag.nodes.passagereranker.pass_reranker.passreranker method)": [[22, "autorag.nodes.passagereranker.pass_reranker.PassReranker.pure", false]], "pure() (autorag.nodes.passagereranker.rankgpt.rankgpt method)": [[22, "autorag.nodes.passagereranker.rankgpt.RankGPT.pure", false]], "pure() (autorag.nodes.passagereranker.sentence_transformer.sentencetransformerreranker method)": [[22, "autorag.nodes.passagereranker.sentence_transformer.SentenceTransformerReranker.pure", false]], "pure() (autorag.nodes.passagereranker.tart.tart.tart method)": [[23, "autorag.nodes.passagereranker.tart.tart.Tart.pure", false]], "pure() (autorag.nodes.passagereranker.time_reranker.timereranker method)": [[22, "autorag.nodes.passagereranker.time_reranker.TimeReranker.pure", false]], "pure() (autorag.nodes.passagereranker.upr.upr method)": [[22, "autorag.nodes.passagereranker.upr.Upr.pure", false]], "pure() (autorag.nodes.passagereranker.voyageai.voyageaireranker method)": [[22, "autorag.nodes.passagereranker.voyageai.VoyageAIReranker.pure", false]], "pure() (autorag.nodes.promptmaker.fstring.fstring method)": [[24, "autorag.nodes.promptmaker.fstring.Fstring.pure", false]], "pure() (autorag.nodes.promptmaker.long_context_reorder.longcontextreorder method)": [[24, "autorag.nodes.promptmaker.long_context_reorder.LongContextReorder.pure", false]], "pure() (autorag.nodes.promptmaker.window_replacement.windowreplacement method)": [[24, "autorag.nodes.promptmaker.window_replacement.WindowReplacement.pure", false]], "pure() (autorag.nodes.queryexpansion.hyde.hyde method)": [[25, "autorag.nodes.queryexpansion.hyde.HyDE.pure", false]], "pure() (autorag.nodes.queryexpansion.multi_query_expansion.multiqueryexpansion method)": [[25, "autorag.nodes.queryexpansion.multi_query_expansion.MultiQueryExpansion.pure", false]], "pure() (autorag.nodes.queryexpansion.pass_query_expansion.passqueryexpansion method)": [[25, "autorag.nodes.queryexpansion.pass_query_expansion.PassQueryExpansion.pure", false]], "pure() (autorag.nodes.queryexpansion.query_decompose.querydecompose method)": [[25, "autorag.nodes.queryexpansion.query_decompose.QueryDecompose.pure", false]], "pure() (autorag.nodes.retrieval.base.hybridretrieval method)": [[26, "autorag.nodes.retrieval.base.HybridRetrieval.pure", false]], "pure() (autorag.nodes.retrieval.bm25.bm25 method)": [[26, "autorag.nodes.retrieval.bm25.BM25.pure", false]], "pure() (autorag.nodes.retrieval.vectordb.vectordb method)": [[26, "autorag.nodes.retrieval.vectordb.VectorDB.pure", false]], "pure() (autorag.schema.base.basemodule method)": [[27, "autorag.schema.base.BaseModule.pure", false]], "qa (class in autorag.data.qa.schema)": [[8, "autorag.data.qa.schema.QA", false]], "queries (autorag.schema.metricinput.metricinput attribute)": [[27, "autorag.schema.metricinput.MetricInput.queries", false]], "query (autorag.data.qa.query.openai_gen_query.response attribute)": [[12, "autorag.data.qa.query.openai_gen_query.Response.query", false]], "query (autorag.schema.metricinput.metricinput attribute)": [[27, "autorag.schema.metricinput.MetricInput.query", false]], "query_evolve_openai_base() (in module autorag.data.qa.evolve.openai_query_evolve)": [[9, "autorag.data.qa.evolve.openai_query_evolve.query_evolve_openai_base", false]], "query_gen_openai_base() (in module autorag.data.qa.query.openai_gen_query)": [[12, "autorag.data.qa.query.openai_gen_query.query_gen_openai_base", false]], "querydecompose (class in autorag.nodes.queryexpansion.query_decompose)": [[25, "autorag.nodes.queryexpansion.query_decompose.QueryDecompose", false]], "random() (in module autorag)": [[0, "autorag.random", false]], "random_single_hop() (in module autorag.data.qa.sample)": [[8, "autorag.data.qa.sample.random_single_hop", false]], "range_single_hop() (in module autorag.data.qa.sample)": [[8, "autorag.data.qa.sample.range_single_hop", false]], "rankgpt (class in autorag.nodes.passagereranker.rankgpt)": [[22, "autorag.nodes.passagereranker.rankgpt.RankGPT", false]], "rankgpt_rerank_prompt (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[22, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.rankgpt_rerank_prompt", false]], "raw (class in autorag.data.qa.schema)": [[8, "autorag.data.qa.schema.Raw", false]], "reasoning_evolve_ragas() (in module autorag.data.qa.evolve.llama_index_query_evolve)": [[9, "autorag.data.qa.evolve.llama_index_query_evolve.reasoning_evolve_ragas", false]], "reasoning_evolve_ragas() (in module autorag.data.qa.evolve.openai_query_evolve)": [[9, "autorag.data.qa.evolve.openai_query_evolve.reasoning_evolve_ragas", false]], "recencyfilter (class in autorag.nodes.passagefilter.recency)": [[21, "autorag.nodes.passagefilter.recency.RecencyFilter", false]], "reconstruct_list() (in module autorag.utils.util)": [[28, "autorag.utils.util.reconstruct_list", false]], "refine (class in autorag.nodes.passagecompressor.refine)": [[20, "autorag.nodes.passagecompressor.refine.Refine", false]], "replace_value_in_dict() (in module autorag.utils.util)": [[28, "autorag.utils.util.replace_value_in_dict", false]], "response (class in autorag.data.qa.evolve.openai_query_evolve)": [[9, "autorag.data.qa.evolve.openai_query_evolve.Response", false]], "response (class in autorag.data.qa.filter.dontknow)": [[10, "autorag.data.qa.filter.dontknow.Response", false]], "response (class in autorag.data.qa.filter.passage_dependency)": [[10, "autorag.data.qa.filter.passage_dependency.Response", false]], "response (class in autorag.data.qa.generation_gt.openai_gen_gt)": [[11, "autorag.data.qa.generation_gt.openai_gen_gt.Response", false]], "response (class in autorag.data.qa.query.openai_gen_query)": [[12, "autorag.data.qa.query.openai_gen_query.Response", false]], "restart_trial() (autorag.evaluator.evaluator method)": [[0, "autorag.evaluator.Evaluator.restart_trial", false]], "result_to_dataframe() (in module autorag.utils.util)": [[28, "autorag.utils.util.result_to_dataframe", false]], "retrieval_f1() (in module autorag.evaluation.metric.retrieval)": [[16, "autorag.evaluation.metric.retrieval.retrieval_f1", false]], "retrieval_gt (autorag.schema.metricinput.metricinput attribute)": [[27, "autorag.schema.metricinput.MetricInput.retrieval_gt", false]], "retrieval_gt_contents (autorag.schema.metricinput.metricinput attribute)": [[27, "autorag.schema.metricinput.MetricInput.retrieval_gt_contents", false]], "retrieval_map() (in module autorag.evaluation.metric.retrieval)": [[16, "autorag.evaluation.metric.retrieval.retrieval_map", false]], "retrieval_mrr() (in module autorag.evaluation.metric.retrieval)": [[16, "autorag.evaluation.metric.retrieval.retrieval_mrr", false]], "retrieval_ndcg() (in module autorag.evaluation.metric.retrieval)": [[16, "autorag.evaluation.metric.retrieval.retrieval_ndcg", false]], "retrieval_precision() (in module autorag.evaluation.metric.retrieval)": [[16, "autorag.evaluation.metric.retrieval.retrieval_precision", false]], "retrieval_recall() (in module autorag.evaluation.metric.retrieval)": [[16, "autorag.evaluation.metric.retrieval.retrieval_recall", false]], "retrieval_token_f1() (in module autorag.evaluation.metric.retrieval_contents)": [[16, "autorag.evaluation.metric.retrieval_contents.retrieval_token_f1", false]], "retrieval_token_precision() (in module autorag.evaluation.metric.retrieval_contents)": [[16, "autorag.evaluation.metric.retrieval_contents.retrieval_token_precision", false]], "retrieval_token_recall() (in module autorag.evaluation.metric.retrieval_contents)": [[16, "autorag.evaluation.metric.retrieval_contents.retrieval_token_recall", false]], "retrieved_contents (autorag.schema.metricinput.metricinput attribute)": [[27, "autorag.schema.metricinput.MetricInput.retrieved_contents", false]], "retrieved_ids (autorag.schema.metricinput.metricinput attribute)": [[27, "autorag.schema.metricinput.MetricInput.retrieved_ids", false]], "rouge() (in module autorag.evaluation.metric.generation)": [[16, "autorag.evaluation.metric.generation.rouge", false]], "rrf_calculate() (in module autorag.nodes.retrieval.hybrid_rrf)": [[26, "autorag.nodes.retrieval.hybrid_rrf.rrf_calculate", false]], "rrf_pure() (in module autorag.nodes.retrieval.hybrid_rrf)": [[26, "autorag.nodes.retrieval.hybrid_rrf.rrf_pure", false]], "run() (autorag.schema.node.node method)": [[27, "autorag.schema.node.Node.run", false]], "run() (in module autorag.dashboard)": [[0, "autorag.dashboard.run", false]], "run_chunker() (in module autorag.data.chunk.run)": [[2, "autorag.data.chunk.run.run_chunker", false]], "run_evaluator() (autorag.nodes.retrieval.hybrid_cc.hybridcc class method)": [[26, "autorag.nodes.retrieval.hybrid_cc.HybridCC.run_evaluator", false]], "run_evaluator() (autorag.nodes.retrieval.hybrid_rrf.hybridrrf class method)": [[26, "autorag.nodes.retrieval.hybrid_rrf.HybridRRF.run_evaluator", false]], "run_evaluator() (autorag.schema.base.basemodule class method)": [[27, "autorag.schema.base.BaseModule.run_evaluator", false]], "run_generator_node() (in module autorag.nodes.generator.run)": [[18, "autorag.nodes.generator.run.run_generator_node", false]], "run_node (autorag.schema.node.node attribute)": [[27, "autorag.schema.node.Node.run_node", false]], "run_node_line() (in module autorag.node_line)": [[0, "autorag.node_line.run_node_line", false]], "run_parser() (in module autorag.data.parse.run)": [[7, "autorag.data.parse.run.run_parser", false]], "run_passage_augmenter_node() (in module autorag.nodes.passageaugmenter.run)": [[19, "autorag.nodes.passageaugmenter.run.run_passage_augmenter_node", false]], "run_passage_compressor_node() (in module autorag.nodes.passagecompressor.run)": [[20, "autorag.nodes.passagecompressor.run.run_passage_compressor_node", false]], "run_passage_filter_node() (in module autorag.nodes.passagefilter.run)": [[21, "autorag.nodes.passagefilter.run.run_passage_filter_node", false]], "run_passage_reranker_node() (in module autorag.nodes.passagereranker.run)": [[22, "autorag.nodes.passagereranker.run.run_passage_reranker_node", false]], "run_prompt_maker_node() (in module autorag.nodes.promptmaker.run)": [[24, "autorag.nodes.promptmaker.run.run_prompt_maker_node", false]], "run_query_embedding_batch() (in module autorag.nodes.retrieval.vectordb)": [[26, "autorag.nodes.retrieval.vectordb.run_query_embedding_batch", false]], "run_query_expansion_node() (in module autorag.nodes.queryexpansion.run)": [[25, "autorag.nodes.queryexpansion.run.run_query_expansion_node", false]], "run_retrieval_node() (in module autorag.nodes.retrieval.run)": [[26, "autorag.nodes.retrieval.run.run_retrieval_node", false]], "sample() (autorag.data.qa.schema.corpus method)": [[8, "autorag.data.qa.schema.Corpus.sample", false]], "save_parquet_safe() (in module autorag.utils.util)": [[28, "autorag.utils.util.save_parquet_safe", false]], "select_best() (in module autorag.strategy)": [[0, "autorag.strategy.select_best", false]], "select_best_average() (in module autorag.strategy)": [[0, "autorag.strategy.select_best_average", false]], "select_best_rr() (in module autorag.strategy)": [[0, "autorag.strategy.select_best_rr", false]], "select_bm25_tokenizer() (in module autorag.nodes.retrieval.bm25)": [[26, "autorag.nodes.retrieval.bm25.select_bm25_tokenizer", false]], "select_normalize_mean() (in module autorag.strategy)": [[0, "autorag.strategy.select_normalize_mean", false]], "select_top_k() (in module autorag.utils.util)": [[28, "autorag.utils.util.select_top_k", false]], "sem_score() (in module autorag.evaluation.metric.generation)": [[16, "autorag.evaluation.metric.generation.sem_score", false]], "sentence_transformer_run_model() (in module autorag.nodes.passagereranker.sentence_transformer)": [[22, "autorag.nodes.passagereranker.sentence_transformer.sentence_transformer_run_model", false]], "sentencetransformerreranker (class in autorag.nodes.passagereranker.sentence_transformer)": [[22, "autorag.nodes.passagereranker.sentence_transformer.SentenceTransformerReranker", false]], "set_initial_state() (in module autorag.web)": [[0, "autorag.web.set_initial_state", false]], "set_input_embeddings() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[23, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.set_input_embeddings", false]], "set_page_config() (in module autorag.web)": [[0, "autorag.web.set_page_config", false]], "set_page_header() (in module autorag.web)": [[0, "autorag.web.set_page_header", false]], "similaritypercentilecutoff (class in autorag.nodes.passagefilter.similarity_percentile_cutoff)": [[21, "autorag.nodes.passagefilter.similarity_percentile_cutoff.SimilarityPercentileCutoff", false]], "similaritythresholdcutoff (class in autorag.nodes.passagefilter.similarity_threshold_cutoff)": [[21, "autorag.nodes.passagefilter.similarity_threshold_cutoff.SimilarityThresholdCutoff", false]], "single_token_f1() (in module autorag.evaluation.metric.retrieval_contents)": [[16, "autorag.evaluation.metric.retrieval_contents.single_token_f1", false]], "slice_tensor() (in module autorag.nodes.passagereranker.colbert)": [[22, "autorag.nodes.passagereranker.colbert.slice_tensor", false]], "slice_tokenizer_result() (in module autorag.nodes.passagereranker.colbert)": [[22, "autorag.nodes.passagereranker.colbert.slice_tokenizer_result", false]], "sort_by_scores() (autorag.nodes.passageaugmenter.base.basepassageaugmenter static method)": [[19, "autorag.nodes.passageaugmenter.base.BasePassageAugmenter.sort_by_scores", false]], "sort_by_scores() (in module autorag.utils.util)": [[28, "autorag.utils.util.sort_by_scores", false]], "split_by_sentence_kiwi() (in module autorag.data)": [[1, "autorag.data.split_by_sentence_kiwi", false]], "split_dataframe() (in module autorag.utils.util)": [[28, "autorag.utils.util.split_dataframe", false]], "start_chunking() (autorag.chunker.chunker method)": [[0, "autorag.chunker.Chunker.start_chunking", false]], "start_parsing() (autorag.parser.parser method)": [[0, "autorag.parser.Parser.start_parsing", false]], "start_trial() (autorag.evaluator.evaluator method)": [[0, "autorag.evaluator.Evaluator.start_trial", false]], "strategy (autorag.schema.node.node attribute)": [[27, "autorag.schema.node.Node.strategy", false]], "stream() (autorag.nodes.generator.base.basegenerator method)": [[18, "autorag.nodes.generator.base.BaseGenerator.stream", false]], "stream() (autorag.nodes.generator.llama_index_llm.llamaindexllm method)": [[18, "autorag.nodes.generator.llama_index_llm.LlamaIndexLLM.stream", false]], "stream() (autorag.nodes.generator.openai_llm.openaillm method)": [[18, "autorag.nodes.generator.openai_llm.OpenAILLM.stream", false]], "stream() (autorag.nodes.generator.vllm.vllm method)": [[18, "autorag.nodes.generator.vllm.Vllm.stream", false]], "structured_output() (autorag.nodes.generator.base.basegenerator method)": [[18, "autorag.nodes.generator.base.BaseGenerator.structured_output", false]], "structured_output() (autorag.nodes.generator.openai_llm.openaillm method)": [[18, "autorag.nodes.generator.openai_llm.OpenAILLM.structured_output", false]], "tart (class in autorag.nodes.passagereranker.tart.tart)": [[23, "autorag.nodes.passagereranker.tart.tart.Tart", false]], "tart_run_model() (in module autorag.nodes.passagereranker.tart.tart)": [[23, "autorag.nodes.passagereranker.tart.tart.tart_run_model", false]], "thresholdcutoff (class in autorag.nodes.passagefilter.threshold_cutoff)": [[21, "autorag.nodes.passagefilter.threshold_cutoff.ThresholdCutoff", false]], "timereranker (class in autorag.nodes.passagereranker.time_reranker)": [[22, "autorag.nodes.passagereranker.time_reranker.TimeReranker", false]], "to_list() (in module autorag.utils.util)": [[28, "autorag.utils.util.to_list", false]], "to_parquet() (autorag.data.qa.schema.corpus method)": [[8, "autorag.data.qa.schema.Corpus.to_parquet", false]], "to_parquet() (autorag.data.qa.schema.qa method)": [[8, "autorag.data.qa.schema.QA.to_parquet", false]], "tokenize() (in module autorag.nodes.retrieval.bm25)": [[26, "autorag.nodes.retrieval.bm25.tokenize", false]], "tokenize_ja_sudachipy() (in module autorag.nodes.retrieval.bm25)": [[26, "autorag.nodes.retrieval.bm25.tokenize_ja_sudachipy", false]], "tokenize_ko_kiwi() (in module autorag.nodes.retrieval.bm25)": [[26, "autorag.nodes.retrieval.bm25.tokenize_ko_kiwi", false]], "tokenize_ko_kkma() (in module autorag.nodes.retrieval.bm25)": [[26, "autorag.nodes.retrieval.bm25.tokenize_ko_kkma", false]], "tokenize_ko_okt() (in module autorag.nodes.retrieval.bm25)": [[26, "autorag.nodes.retrieval.bm25.tokenize_ko_okt", false]], "tokenize_porter_stemmer() (in module autorag.nodes.retrieval.bm25)": [[26, "autorag.nodes.retrieval.bm25.tokenize_porter_stemmer", false]], "tokenize_space() (in module autorag.nodes.retrieval.bm25)": [[26, "autorag.nodes.retrieval.bm25.tokenize_space", false]], "top_n (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[22, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.top_n", false]], "treesummarize (class in autorag.nodes.passagecompressor.tree_summarize)": [[20, "autorag.nodes.passagecompressor.tree_summarize.TreeSummarize", false]], "truncate_by_token() (in module autorag.nodes.generator.openai_llm)": [[18, "autorag.nodes.generator.openai_llm.truncate_by_token", false]], "two_hop_incremental() (in module autorag.data.qa.query.llama_gen_query)": [[12, "autorag.data.qa.query.llama_gen_query.two_hop_incremental", false]], "two_hop_incremental() (in module autorag.data.qa.query.openai_gen_query)": [[12, "autorag.data.qa.query.openai_gen_query.two_hop_incremental", false]], "two_hop_question (autorag.data.qa.query.openai_gen_query.twohopincrementalresponse attribute)": [[12, "autorag.data.qa.query.openai_gen_query.TwoHopIncrementalResponse.two_hop_question", false]], "twohopincrementalresponse (class in autorag.data.qa.query.openai_gen_query)": [[12, "autorag.data.qa.query.openai_gen_query.TwoHopIncrementalResponse", false]], "update_corpus() (autorag.data.qa.schema.qa method)": [[8, "autorag.data.qa.schema.QA.update_corpus", false]], "upr (class in autorag.nodes.passagereranker.upr)": [[22, "autorag.nodes.passagereranker.upr.Upr", false]], "uprscorer (class in autorag.nodes.passagereranker.upr)": [[22, "autorag.nodes.passagereranker.upr.UPRScorer", false]], "validate() (autorag.validator.validator method)": [[0, "autorag.validator.Validator.validate", false]], "validate_corpus_dataset() (in module autorag.utils.preprocess)": [[28, "autorag.utils.preprocess.validate_corpus_dataset", false]], "validate_llama_index_prompt() (in module autorag.data.legacy.qacreation.llama_index)": [[6, "autorag.data.legacy.qacreation.llama_index.validate_llama_index_prompt", false]], "validate_qa_dataset() (in module autorag.utils.preprocess)": [[28, "autorag.utils.preprocess.validate_qa_dataset", false]], "validate_qa_from_corpus_dataset() (in module autorag.utils.preprocess)": [[28, "autorag.utils.preprocess.validate_qa_from_corpus_dataset", false]], "validate_strategy_inputs() (in module autorag.strategy)": [[0, "autorag.strategy.validate_strategy_inputs", false]], "validator (class in autorag.validator)": [[0, "autorag.validator.Validator", false]], "vectordb (class in autorag.nodes.retrieval.vectordb)": [[26, "autorag.nodes.retrieval.vectordb.VectorDB", false]], "vectordb_ingest() (in module autorag.nodes.retrieval.vectordb)": [[26, "autorag.nodes.retrieval.vectordb.vectordb_ingest", false]], "vectordb_pure() (in module autorag.nodes.retrieval.vectordb)": [[26, "autorag.nodes.retrieval.vectordb.vectordb_pure", false]], "verbose (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[22, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.verbose", false]], "vllm (class in autorag.nodes.generator.vllm)": [[18, "autorag.nodes.generator.vllm.Vllm", false]], "voyageai_rerank_pure() (in module autorag.nodes.passagereranker.voyageai)": [[22, "autorag.nodes.passagereranker.voyageai.voyageai_rerank_pure", false]], "voyageaireranker (class in autorag.nodes.passagereranker.voyageai)": [[22, "autorag.nodes.passagereranker.voyageai.VoyageAIReranker", false]], "windowreplacement (class in autorag.nodes.promptmaker.window_replacement)": [[24, "autorag.nodes.promptmaker.window_replacement.WindowReplacement", false]], "yaml_to_markdown() (in module autorag.dashboard)": [[0, "autorag.dashboard.yaml_to_markdown", false]]}, "objects": {"": [[0, 0, 0, "-", "autorag"]], "autorag": [[0, 1, 1, "", "LazyInit"], [0, 1, 1, "", "MockEmbeddingRandom"], [0, 0, 0, "-", "chunker"], [0, 0, 0, "-", "cli"], [0, 0, 0, "-", "dashboard"], [1, 0, 0, "-", "data"], [0, 0, 0, "-", "deploy"], [15, 0, 0, "-", "evaluation"], [0, 0, 0, "-", "evaluator"], [0, 4, 1, "", "handle_exception"], [0, 0, 0, "-", "node_line"], [17, 0, 0, "-", "nodes"], [0, 0, 0, "-", "parser"], [0, 4, 1, "", "random"], [27, 0, 0, "-", "schema"], [0, 0, 0, "-", "strategy"], [0, 0, 0, "-", "support"], [28, 0, 0, "-", "utils"], [0, 0, 0, "-", "validator"], [0, 0, 0, "-", "web"]], "autorag.MockEmbeddingRandom": [[0, 2, 1, "", "embed_dim"], [0, 2, 1, "", "model_computed_fields"], [0, 2, 1, "", "model_config"], [0, 2, 1, "", "model_fields"]], "autorag.chunker": [[0, 1, 1, "", "Chunker"]], "autorag.chunker.Chunker": [[0, 3, 1, "", "from_parquet"], [0, 3, 1, "", "start_chunking"]], "autorag.dashboard": [[0, 4, 1, "", "find_node_dir"], [0, 4, 1, "", "get_metric_values"], [0, 4, 1, "", "make_trial_summary_md"], [0, 4, 1, "", "node_view"], [0, 4, 1, "", "run"], [0, 4, 1, "", "yaml_to_markdown"]], "autorag.data": [[2, 0, 0, "-", "chunk"], [4, 0, 0, "-", "legacy"], [7, 0, 0, "-", "parse"], [8, 0, 0, "-", "qa"], [1, 4, 1, "", "split_by_sentence_kiwi"], [14, 0, 0, "-", "utils"]], "autorag.data.chunk": [[2, 0, 0, "-", "base"], [2, 0, 0, "-", "langchain_chunk"], [2, 0, 0, "-", "llama_index_chunk"], [2, 0, 0, "-", "run"]], "autorag.data.chunk.base": [[2, 4, 1, "", "add_file_name"], [2, 4, 1, "", "chunker_node"], [2, 4, 1, "", "make_metadata_list"]], "autorag.data.chunk.langchain_chunk": [[2, 4, 1, "", "langchain_chunk"], [2, 4, 1, "", "langchain_chunk_pure"]], "autorag.data.chunk.llama_index_chunk": [[2, 4, 1, "", "llama_index_chunk"], [2, 4, 1, "", "llama_index_chunk_pure"]], "autorag.data.chunk.run": [[2, 4, 1, "", "run_chunker"]], "autorag.data.legacy": [[5, 0, 0, "-", "corpus"], [6, 0, 0, "-", "qacreation"]], "autorag.data.legacy.corpus": [[5, 0, 0, "-", "langchain"], [5, 0, 0, "-", "llama_index"]], "autorag.data.legacy.corpus.langchain": [[5, 4, 1, "", "langchain_documents_to_parquet"]], "autorag.data.legacy.corpus.llama_index": [[5, 4, 1, "", "llama_documents_to_parquet"], [5, 4, 1, "", "llama_text_node_to_parquet"]], "autorag.data.legacy.qacreation": [[6, 0, 0, "-", "base"], [6, 0, 0, "-", "llama_index"], [6, 0, 0, "-", "ragas"], [6, 0, 0, "-", "simple"]], "autorag.data.legacy.qacreation.base": [[6, 4, 1, "", "make_qa_with_existing_qa"], [6, 4, 1, "", "make_single_content_qa"]], "autorag.data.legacy.qacreation.llama_index": [[6, 4, 1, "", "async_qa_gen_llama_index"], [6, 4, 1, "", "distribute_list_by_ratio"], [6, 4, 1, "", "generate_answers"], [6, 4, 1, "", "generate_basic_answer"], [6, 4, 1, "", "generate_qa_llama_index"], [6, 4, 1, "", "generate_qa_llama_index_by_ratio"], [6, 4, 1, "", "parse_output"], [6, 4, 1, "", "validate_llama_index_prompt"]], "autorag.data.legacy.qacreation.ragas": [[6, 4, 1, "", "generate_qa_ragas"]], "autorag.data.legacy.qacreation.simple": [[6, 4, 1, "", "generate_qa_row"], [6, 4, 1, "", "generate_simple_qa_dataset"]], "autorag.data.parse": [[7, 0, 0, "-", "base"], [7, 0, 0, "-", "langchain_parse"], [7, 0, 0, "-", "llamaparse"], [7, 0, 0, "-", "run"]], "autorag.data.parse.base": [[7, 4, 1, "", "parser_node"]], "autorag.data.parse.langchain_parse": [[7, 4, 1, "", "langchain_parse"], [7, 4, 1, "", "langchain_parse_pure"], [7, 4, 1, "", "parse_all_files"]], "autorag.data.parse.llamaparse": [[7, 4, 1, "", "llama_parse"], [7, 4, 1, "", "llama_parse_pure"]], "autorag.data.parse.run": [[7, 4, 1, "", "run_parser"]], "autorag.data.qa": [[9, 0, 0, "-", "evolve"], [8, 0, 0, "-", "extract_evidence"], [10, 0, 0, "-", "filter"], [11, 0, 0, "-", "generation_gt"], [12, 0, 0, "-", "query"], [8, 0, 0, "-", "sample"], [8, 0, 0, "-", "schema"]], "autorag.data.qa.evolve": [[9, 0, 0, "-", "llama_index_query_evolve"], [9, 0, 0, "-", "openai_query_evolve"], [9, 0, 0, "-", "prompt"]], "autorag.data.qa.evolve.llama_index_query_evolve": [[9, 4, 1, "", "compress_ragas"], [9, 4, 1, "", "conditional_evolve_ragas"], [9, 4, 1, "", "llama_index_generate_base"], [9, 4, 1, "", "reasoning_evolve_ragas"]], "autorag.data.qa.evolve.openai_query_evolve": [[9, 1, 1, "", "Response"], [9, 4, 1, "", "compress_ragas"], [9, 4, 1, "", "conditional_evolve_ragas"], [9, 4, 1, "", "query_evolve_openai_base"], [9, 4, 1, "", "reasoning_evolve_ragas"]], "autorag.data.qa.evolve.openai_query_evolve.Response": [[9, 2, 1, "", "evolved_query"], [9, 2, 1, "", "model_computed_fields"], [9, 2, 1, "", "model_config"], [9, 2, 1, "", "model_fields"]], "autorag.data.qa.filter": [[10, 0, 0, "-", "dontknow"], [10, 0, 0, "-", "passage_dependency"], [10, 0, 0, "-", "prompt"]], "autorag.data.qa.filter.dontknow": [[10, 1, 1, "", "Response"], [10, 4, 1, "", "dontknow_filter_llama_index"], [10, 4, 1, "", "dontknow_filter_openai"], [10, 4, 1, "", "dontknow_filter_rule_based"]], "autorag.data.qa.filter.dontknow.Response": [[10, 2, 1, "", "is_dont_know"], [10, 2, 1, "", "model_computed_fields"], [10, 2, 1, "", "model_config"], [10, 2, 1, "", "model_fields"]], "autorag.data.qa.filter.passage_dependency": [[10, 1, 1, "", "Response"], [10, 4, 1, "", "passage_dependency_filter_llama_index"], [10, 4, 1, "", "passage_dependency_filter_openai"]], "autorag.data.qa.filter.passage_dependency.Response": [[10, 2, 1, "", "is_passage_dependent"], [10, 2, 1, "", "model_computed_fields"], [10, 2, 1, "", "model_config"], [10, 2, 1, "", "model_fields"]], "autorag.data.qa.generation_gt": [[11, 0, 0, "-", "base"], [11, 0, 0, "-", "llama_index_gen_gt"], [11, 0, 0, "-", "openai_gen_gt"], [11, 0, 0, "-", "prompt"]], "autorag.data.qa.generation_gt.base": [[11, 4, 1, "", "add_gen_gt"]], "autorag.data.qa.generation_gt.llama_index_gen_gt": [[11, 4, 1, "", "make_basic_gen_gt"], [11, 4, 1, "", "make_concise_gen_gt"], [11, 4, 1, "", "make_gen_gt_llama_index"]], "autorag.data.qa.generation_gt.openai_gen_gt": [[11, 1, 1, "", "Response"], [11, 4, 1, "", "make_basic_gen_gt"], [11, 4, 1, "", "make_concise_gen_gt"], [11, 4, 1, "", "make_gen_gt_openai"]], "autorag.data.qa.generation_gt.openai_gen_gt.Response": [[11, 2, 1, "", "answer"], [11, 2, 1, "", "model_computed_fields"], [11, 2, 1, "", "model_config"], [11, 2, 1, "", "model_fields"]], "autorag.data.qa.query": [[12, 0, 0, "-", "llama_gen_query"], [12, 0, 0, "-", "openai_gen_query"], [12, 0, 0, "-", "prompt"]], "autorag.data.qa.query.llama_gen_query": [[12, 4, 1, "", "concept_completion_query_gen"], [12, 4, 1, "", "factoid_query_gen"], [12, 4, 1, "", "llama_index_generate_base"], [12, 4, 1, "", "two_hop_incremental"]], "autorag.data.qa.query.openai_gen_query": [[12, 1, 1, "", "Response"], [12, 1, 1, "", "TwoHopIncrementalResponse"], [12, 4, 1, "", "concept_completion_query_gen"], [12, 4, 1, "", "factoid_query_gen"], [12, 4, 1, "", "query_gen_openai_base"], [12, 4, 1, "", "two_hop_incremental"]], "autorag.data.qa.query.openai_gen_query.Response": [[12, 2, 1, "", "model_computed_fields"], [12, 2, 1, "", "model_config"], [12, 2, 1, "", "model_fields"], [12, 2, 1, "", "query"]], "autorag.data.qa.query.openai_gen_query.TwoHopIncrementalResponse": [[12, 2, 1, "", "answer"], [12, 2, 1, "", "model_computed_fields"], [12, 2, 1, "", "model_config"], [12, 2, 1, "", "model_fields"], [12, 2, 1, "", "one_hop_question"], [12, 2, 1, "", "two_hop_question"]], "autorag.data.qa.sample": [[8, 4, 1, "", "random_single_hop"], [8, 4, 1, "", "range_single_hop"]], "autorag.data.qa.schema": [[8, 1, 1, "", "Corpus"], [8, 1, 1, "", "QA"], [8, 1, 1, "", "Raw"]], "autorag.data.qa.schema.Corpus": [[8, 3, 1, "", "batch_apply"], [8, 5, 1, "", "linked_raw"], [8, 3, 1, "", "map"], [8, 3, 1, "", "sample"], [8, 3, 1, "", "to_parquet"]], "autorag.data.qa.schema.QA": [[8, 3, 1, "", "batch_apply"], [8, 3, 1, "", "batch_filter"], [8, 3, 1, "", "filter"], [8, 5, 1, "", "linked_corpus"], [8, 3, 1, "", "make_retrieval_gt_contents"], [8, 3, 1, "", "map"], [8, 3, 1, "", "to_parquet"], [8, 3, 1, "", "update_corpus"]], "autorag.data.qa.schema.Raw": [[8, 3, 1, "", "batch_apply"], [8, 3, 1, "", "chunk"], [8, 3, 1, "", "flatmap"], [8, 3, 1, "", "map"]], "autorag.data.utils": [[14, 0, 0, "-", "util"]], "autorag.data.utils.util": [[14, 4, 1, "", "add_essential_metadata"], [14, 4, 1, "", "add_essential_metadata_llama_text_node"], [14, 4, 1, "", "corpus_df_to_langchain_documents"], [14, 4, 1, "", "get_file_metadata"], [14, 4, 1, "", "get_param_combinations"], [14, 4, 1, "", "get_start_end_idx"], [14, 4, 1, "", "load_yaml"]], "autorag.evaluation": [[15, 0, 0, "-", "generation"], [16, 0, 0, "-", "metric"], [15, 0, 0, "-", "retrieval"], [15, 0, 0, "-", "retrieval_contents"], [15, 0, 0, "-", "util"]], "autorag.evaluation.generation": [[15, 4, 1, "", "evaluate_generation"]], "autorag.evaluation.metric": [[16, 0, 0, "-", "deepeval_prompt"], [16, 0, 0, "-", "generation"], [16, 0, 0, "-", "retrieval"], [16, 0, 0, "-", "retrieval_contents"], [16, 0, 0, "-", "util"]], "autorag.evaluation.metric.deepeval_prompt": [[16, 1, 1, "", "FaithfulnessTemplate"]], "autorag.evaluation.metric.deepeval_prompt.FaithfulnessTemplate": [[16, 3, 1, "", "generate_claims"], [16, 3, 1, "", "generate_truths"], [16, 3, 1, "", "generate_verdicts"]], "autorag.evaluation.metric.generation": [[16, 4, 1, "", "async_g_eval"], [16, 4, 1, "", "bert_score"], [16, 4, 1, "", "bleu"], [16, 4, 1, "", "deepeval_faithfulness"], [16, 4, 1, "", "g_eval"], [16, 4, 1, "", "huggingface_evaluate"], [16, 4, 1, "", "make_generator_instance"], [16, 4, 1, "", "meteor"], [16, 4, 1, "", "rouge"], [16, 4, 1, "", "sem_score"]], "autorag.evaluation.metric.retrieval": [[16, 4, 1, "", "retrieval_f1"], [16, 4, 1, "", "retrieval_map"], [16, 4, 1, "", "retrieval_mrr"], [16, 4, 1, "", "retrieval_ndcg"], [16, 4, 1, "", "retrieval_precision"], [16, 4, 1, "", "retrieval_recall"]], "autorag.evaluation.metric.retrieval_contents": [[16, 4, 1, "", "retrieval_token_f1"], [16, 4, 1, "", "retrieval_token_precision"], [16, 4, 1, "", "retrieval_token_recall"], [16, 4, 1, "", "single_token_f1"]], "autorag.evaluation.metric.util": [[16, 4, 1, "", "autorag_metric"], [16, 4, 1, "", "autorag_metric_loop"], [16, 4, 1, "", "calculate_cosine_similarity"]], "autorag.evaluation.retrieval": [[15, 4, 1, "", "evaluate_retrieval"]], "autorag.evaluation.retrieval_contents": [[15, 4, 1, "", "evaluate_retrieval_contents"]], "autorag.evaluation.util": [[15, 4, 1, "", "cast_embedding_model"], [15, 4, 1, "", "cast_metrics"]], "autorag.evaluator": [[0, 1, 1, "", "Evaluator"]], "autorag.evaluator.Evaluator": [[0, 3, 1, "", "restart_trial"], [0, 3, 1, "", "start_trial"]], "autorag.node_line": [[0, 4, 1, "", "make_node_lines"], [0, 4, 1, "", "run_node_line"]], "autorag.nodes": [[18, 0, 0, "-", "generator"], [19, 0, 0, "-", "passageaugmenter"], [20, 0, 0, "-", "passagecompressor"], [21, 0, 0, "-", "passagefilter"], [22, 0, 0, "-", "passagereranker"], [24, 0, 0, "-", "promptmaker"], [25, 0, 0, "-", "queryexpansion"], [26, 0, 0, "-", "retrieval"], [17, 0, 0, "-", "util"]], "autorag.nodes.generator": [[18, 0, 0, "-", "base"], [18, 0, 0, "-", "llama_index_llm"], [18, 0, 0, "-", "openai_llm"], [18, 0, 0, "-", "run"], [18, 0, 0, "-", "vllm"]], "autorag.nodes.generator.base": [[18, 1, 1, "", "BaseGenerator"], [18, 4, 1, "", "generator_node"]], "autorag.nodes.generator.base.BaseGenerator": [[18, 3, 1, "", "cast_to_run"], [18, 3, 1, "", "stream"], [18, 3, 1, "", "structured_output"]], "autorag.nodes.generator.llama_index_llm": [[18, 1, 1, "", "LlamaIndexLLM"]], "autorag.nodes.generator.llama_index_llm.LlamaIndexLLM": [[18, 3, 1, "", "pure"], [18, 3, 1, "", "stream"]], "autorag.nodes.generator.openai_llm": [[18, 1, 1, "", "OpenAILLM"], [18, 4, 1, "", "truncate_by_token"]], "autorag.nodes.generator.openai_llm.OpenAILLM": [[18, 3, 1, "", "get_result"], [18, 3, 1, "", "get_result_o1"], [18, 3, 1, "", "get_structured_result"], [18, 3, 1, "", "pure"], [18, 3, 1, "", "stream"], [18, 3, 1, "", "structured_output"]], "autorag.nodes.generator.run": [[18, 4, 1, "", "evaluate_generator_node"], [18, 4, 1, "", "run_generator_node"]], "autorag.nodes.generator.vllm": [[18, 1, 1, "", "Vllm"]], "autorag.nodes.generator.vllm.Vllm": [[18, 3, 1, "", "pure"], [18, 3, 1, "", "stream"]], "autorag.nodes.passageaugmenter": [[19, 0, 0, "-", "base"], [19, 0, 0, "-", "pass_passage_augmenter"], [19, 0, 0, "-", "prev_next_augmenter"], [19, 0, 0, "-", "run"]], "autorag.nodes.passageaugmenter.base": [[19, 1, 1, "", "BasePassageAugmenter"]], "autorag.nodes.passageaugmenter.base.BasePassageAugmenter": [[19, 3, 1, "", "cast_to_run"], [19, 3, 1, "", "sort_by_scores"]], "autorag.nodes.passageaugmenter.pass_passage_augmenter": [[19, 1, 1, "", "PassPassageAugmenter"]], "autorag.nodes.passageaugmenter.pass_passage_augmenter.PassPassageAugmenter": [[19, 3, 1, "", "pure"]], "autorag.nodes.passageaugmenter.prev_next_augmenter": [[19, 1, 1, "", "PrevNextPassageAugmenter"], [19, 4, 1, "", "prev_next_augmenter_pure"]], "autorag.nodes.passageaugmenter.prev_next_augmenter.PrevNextPassageAugmenter": [[19, 3, 1, "", "pure"]], "autorag.nodes.passageaugmenter.run": [[19, 4, 1, "", "run_passage_augmenter_node"]], "autorag.nodes.passagecompressor": [[20, 0, 0, "-", "base"], [20, 0, 0, "-", "longllmlingua"], [20, 0, 0, "-", "pass_compressor"], [20, 0, 0, "-", "refine"], [20, 0, 0, "-", "run"], [20, 0, 0, "-", "tree_summarize"]], "autorag.nodes.passagecompressor.base": [[20, 1, 1, "", "BasePassageCompressor"], [20, 1, 1, "", "LlamaIndexCompressor"], [20, 4, 1, "", "make_llm"]], "autorag.nodes.passagecompressor.base.BasePassageCompressor": [[20, 3, 1, "", "cast_to_run"]], "autorag.nodes.passagecompressor.base.LlamaIndexCompressor": [[20, 2, 1, "", "param_list"], [20, 3, 1, "", "pure"]], "autorag.nodes.passagecompressor.longllmlingua": [[20, 1, 1, "", "LongLLMLingua"], [20, 4, 1, "", "llmlingua_pure"]], "autorag.nodes.passagecompressor.longllmlingua.LongLLMLingua": [[20, 3, 1, "", "pure"]], "autorag.nodes.passagecompressor.pass_compressor": [[20, 1, 1, "", "PassCompressor"]], "autorag.nodes.passagecompressor.pass_compressor.PassCompressor": [[20, 3, 1, "", "pure"]], "autorag.nodes.passagecompressor.refine": [[20, 1, 1, "", "Refine"]], "autorag.nodes.passagecompressor.refine.Refine": [[20, 2, 1, "", "llm"]], "autorag.nodes.passagecompressor.run": [[20, 4, 1, "", "evaluate_passage_compressor_node"], [20, 4, 1, "", "run_passage_compressor_node"]], "autorag.nodes.passagecompressor.tree_summarize": [[20, 1, 1, "", "TreeSummarize"]], "autorag.nodes.passagecompressor.tree_summarize.TreeSummarize": [[20, 2, 1, "", "llm"]], "autorag.nodes.passagefilter": [[21, 0, 0, "-", "base"], [21, 0, 0, "-", "pass_passage_filter"], [21, 0, 0, "-", "percentile_cutoff"], [21, 0, 0, "-", "recency"], [21, 0, 0, "-", "run"], [21, 0, 0, "-", "similarity_percentile_cutoff"], [21, 0, 0, "-", "similarity_threshold_cutoff"], [21, 0, 0, "-", "threshold_cutoff"]], "autorag.nodes.passagefilter.base": [[21, 1, 1, "", "BasePassageFilter"], [21, 4, 1, "", "passage_filter_node"]], "autorag.nodes.passagefilter.base.BasePassageFilter": [[21, 3, 1, "", "cast_to_run"]], "autorag.nodes.passagefilter.pass_passage_filter": [[21, 1, 1, "", "PassPassageFilter"]], "autorag.nodes.passagefilter.pass_passage_filter.PassPassageFilter": [[21, 3, 1, "", "pure"]], "autorag.nodes.passagefilter.percentile_cutoff": [[21, 1, 1, "", "PercentileCutoff"]], "autorag.nodes.passagefilter.percentile_cutoff.PercentileCutoff": [[21, 3, 1, "", "pure"]], "autorag.nodes.passagefilter.recency": [[21, 1, 1, "", "RecencyFilter"]], "autorag.nodes.passagefilter.recency.RecencyFilter": [[21, 3, 1, "", "pure"]], "autorag.nodes.passagefilter.run": [[21, 4, 1, "", "run_passage_filter_node"]], "autorag.nodes.passagefilter.similarity_percentile_cutoff": [[21, 1, 1, "", "SimilarityPercentileCutoff"]], "autorag.nodes.passagefilter.similarity_percentile_cutoff.SimilarityPercentileCutoff": [[21, 3, 1, "", "pure"]], "autorag.nodes.passagefilter.similarity_threshold_cutoff": [[21, 1, 1, "", "SimilarityThresholdCutoff"]], "autorag.nodes.passagefilter.similarity_threshold_cutoff.SimilarityThresholdCutoff": [[21, 3, 1, "", "pure"]], "autorag.nodes.passagefilter.threshold_cutoff": [[21, 1, 1, "", "ThresholdCutoff"]], "autorag.nodes.passagefilter.threshold_cutoff.ThresholdCutoff": [[21, 3, 1, "", "pure"]], "autorag.nodes.passagereranker": [[22, 0, 0, "-", "base"], [22, 0, 0, "-", "cohere"], [22, 0, 0, "-", "colbert"], [22, 0, 0, "-", "flag_embedding"], [22, 0, 0, "-", "flag_embedding_llm"], [22, 0, 0, "-", "jina"], [22, 0, 0, "-", "koreranker"], [22, 0, 0, "-", "monot5"], [22, 0, 0, "-", "openvino"], [22, 0, 0, "-", "pass_reranker"], [22, 0, 0, "-", "rankgpt"], [22, 0, 0, "-", "run"], [22, 0, 0, "-", "sentence_transformer"], [23, 0, 0, "-", "tart"], [22, 0, 0, "-", "time_reranker"], [22, 0, 0, "-", "upr"], [22, 0, 0, "-", "voyageai"]], "autorag.nodes.passagereranker.base": [[22, 1, 1, "", "BasePassageReranker"]], "autorag.nodes.passagereranker.base.BasePassageReranker": [[22, 3, 1, "", "cast_to_run"]], "autorag.nodes.passagereranker.cohere": [[22, 1, 1, "", "CohereReranker"], [22, 4, 1, "", "cohere_rerank_pure"]], "autorag.nodes.passagereranker.cohere.CohereReranker": [[22, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.colbert": [[22, 1, 1, "", "ColbertReranker"], [22, 4, 1, "", "get_colbert_embedding_batch"], [22, 4, 1, "", "get_colbert_score"], [22, 4, 1, "", "slice_tensor"], [22, 4, 1, "", "slice_tokenizer_result"]], "autorag.nodes.passagereranker.colbert.ColbertReranker": [[22, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.flag_embedding": [[22, 1, 1, "", "FlagEmbeddingReranker"], [22, 4, 1, "", "flag_embedding_run_model"]], "autorag.nodes.passagereranker.flag_embedding.FlagEmbeddingReranker": [[22, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.flag_embedding_llm": [[22, 1, 1, "", "FlagEmbeddingLLMReranker"]], "autorag.nodes.passagereranker.flag_embedding_llm.FlagEmbeddingLLMReranker": [[22, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.jina": [[22, 1, 1, "", "JinaReranker"], [22, 4, 1, "", "jina_reranker_pure"]], "autorag.nodes.passagereranker.jina.JinaReranker": [[22, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.koreranker": [[22, 1, 1, "", "KoReranker"], [22, 4, 1, "", "exp_normalize"], [22, 4, 1, "", "koreranker_run_model"]], "autorag.nodes.passagereranker.koreranker.KoReranker": [[22, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.monot5": [[22, 1, 1, "", "MonoT5"], [22, 4, 1, "", "monot5_run_model"]], "autorag.nodes.passagereranker.monot5.MonoT5": [[22, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.openvino": [[22, 1, 1, "", "OpenVINOReranker"], [22, 4, 1, "", "openvino_run_model"]], "autorag.nodes.passagereranker.openvino.OpenVINOReranker": [[22, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.pass_reranker": [[22, 1, 1, "", "PassReranker"]], "autorag.nodes.passagereranker.pass_reranker.PassReranker": [[22, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.rankgpt": [[22, 1, 1, "", "AsyncRankGPTRerank"], [22, 1, 1, "", "RankGPT"]], "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank": [[22, 3, 1, "", "async_postprocess_nodes"], [22, 3, 1, "", "async_run_llm"], [22, 2, 1, "", "llm"], [22, 2, 1, "", "model_computed_fields"], [22, 2, 1, "", "model_config"], [22, 2, 1, "", "model_fields"], [22, 2, 1, "", "rankgpt_rerank_prompt"], [22, 2, 1, "", "top_n"], [22, 2, 1, "", "verbose"]], "autorag.nodes.passagereranker.rankgpt.RankGPT": [[22, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.run": [[22, 4, 1, "", "run_passage_reranker_node"]], "autorag.nodes.passagereranker.sentence_transformer": [[22, 1, 1, "", "SentenceTransformerReranker"], [22, 4, 1, "", "sentence_transformer_run_model"]], "autorag.nodes.passagereranker.sentence_transformer.SentenceTransformerReranker": [[22, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.tart": [[23, 0, 0, "-", "modeling_enc_t5"], [23, 0, 0, "-", "tart"], [23, 0, 0, "-", "tokenization_enc_t5"]], "autorag.nodes.passagereranker.tart.modeling_enc_t5": [[23, 1, 1, "", "EncT5ForSequenceClassification"]], "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification": [[23, 3, 1, "", "deparallelize"], [23, 3, 1, "", "forward"], [23, 3, 1, "", "get_encoder"], [23, 3, 1, "", "get_input_embeddings"], [23, 3, 1, "", "parallelize"], [23, 3, 1, "", "set_input_embeddings"]], "autorag.nodes.passagereranker.tart.tart": [[23, 1, 1, "", "Tart"], [23, 4, 1, "", "tart_run_model"]], "autorag.nodes.passagereranker.tart.tart.Tart": [[23, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.tart.tokenization_enc_t5": [[23, 1, 1, "", "EncT5Tokenizer"]], "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer": [[23, 3, 1, "", "build_inputs_with_special_tokens"], [23, 3, 1, "", "create_token_type_ids_from_sequences"], [23, 3, 1, "", "get_special_tokens_mask"]], "autorag.nodes.passagereranker.time_reranker": [[22, 1, 1, "", "TimeReranker"]], "autorag.nodes.passagereranker.time_reranker.TimeReranker": [[22, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.upr": [[22, 1, 1, "", "UPRScorer"], [22, 1, 1, "", "Upr"]], "autorag.nodes.passagereranker.upr.UPRScorer": [[22, 3, 1, "", "compute"]], "autorag.nodes.passagereranker.upr.Upr": [[22, 3, 1, "", "pure"]], "autorag.nodes.passagereranker.voyageai": [[22, 1, 1, "", "VoyageAIReranker"], [22, 4, 1, "", "voyageai_rerank_pure"]], "autorag.nodes.passagereranker.voyageai.VoyageAIReranker": [[22, 3, 1, "", "pure"]], "autorag.nodes.promptmaker": [[24, 0, 0, "-", "base"], [24, 0, 0, "-", "fstring"], [24, 0, 0, "-", "long_context_reorder"], [24, 0, 0, "-", "run"], [24, 0, 0, "-", "window_replacement"]], "autorag.nodes.promptmaker.base": [[24, 1, 1, "", "BasePromptMaker"]], "autorag.nodes.promptmaker.base.BasePromptMaker": [[24, 3, 1, "", "cast_to_run"]], "autorag.nodes.promptmaker.fstring": [[24, 1, 1, "", "Fstring"]], "autorag.nodes.promptmaker.fstring.Fstring": [[24, 3, 1, "", "pure"]], "autorag.nodes.promptmaker.long_context_reorder": [[24, 1, 1, "", "LongContextReorder"]], "autorag.nodes.promptmaker.long_context_reorder.LongContextReorder": [[24, 3, 1, "", "pure"]], "autorag.nodes.promptmaker.run": [[24, 4, 1, "", "evaluate_generator_result"], [24, 4, 1, "", "evaluate_one_prompt_maker_node"], [24, 4, 1, "", "make_generator_callable_params"], [24, 4, 1, "", "run_prompt_maker_node"]], "autorag.nodes.promptmaker.window_replacement": [[24, 1, 1, "", "WindowReplacement"]], "autorag.nodes.promptmaker.window_replacement.WindowReplacement": [[24, 3, 1, "", "pure"]], "autorag.nodes.queryexpansion": [[25, 0, 0, "-", "base"], [25, 0, 0, "-", "hyde"], [25, 0, 0, "-", "multi_query_expansion"], [25, 0, 0, "-", "pass_query_expansion"], [25, 0, 0, "-", "query_decompose"], [25, 0, 0, "-", "run"]], "autorag.nodes.queryexpansion.base": [[25, 1, 1, "", "BaseQueryExpansion"], [25, 4, 1, "", "check_expanded_query"]], "autorag.nodes.queryexpansion.base.BaseQueryExpansion": [[25, 3, 1, "", "cast_to_run"]], "autorag.nodes.queryexpansion.hyde": [[25, 1, 1, "", "HyDE"]], "autorag.nodes.queryexpansion.hyde.HyDE": [[25, 3, 1, "", "pure"]], "autorag.nodes.queryexpansion.multi_query_expansion": [[25, 1, 1, "", "MultiQueryExpansion"], [25, 4, 1, "", "get_multi_query_expansion"]], "autorag.nodes.queryexpansion.multi_query_expansion.MultiQueryExpansion": [[25, 3, 1, "", "pure"]], "autorag.nodes.queryexpansion.pass_query_expansion": [[25, 1, 1, "", "PassQueryExpansion"]], "autorag.nodes.queryexpansion.pass_query_expansion.PassQueryExpansion": [[25, 3, 1, "", "pure"]], "autorag.nodes.queryexpansion.query_decompose": [[25, 1, 1, "", "QueryDecompose"], [25, 4, 1, "", "get_query_decompose"]], "autorag.nodes.queryexpansion.query_decompose.QueryDecompose": [[25, 3, 1, "", "pure"]], "autorag.nodes.queryexpansion.run": [[25, 4, 1, "", "evaluate_one_query_expansion_node"], [25, 4, 1, "", "make_retrieval_callable_params"], [25, 4, 1, "", "run_query_expansion_node"]], "autorag.nodes.retrieval": [[26, 0, 0, "-", "base"], [26, 0, 0, "-", "bm25"], [26, 0, 0, "-", "hybrid_cc"], [26, 0, 0, "-", "hybrid_rrf"], [26, 0, 0, "-", "run"], [26, 0, 0, "-", "vectordb"]], "autorag.nodes.retrieval.base": [[26, 1, 1, "", "BaseRetrieval"], [26, 1, 1, "", "HybridRetrieval"], [26, 4, 1, "", "cast_queries"], [26, 4, 1, "", "evenly_distribute_passages"], [26, 4, 1, "", "get_bm25_pkl_name"]], "autorag.nodes.retrieval.base.BaseRetrieval": [[26, 3, 1, "", "cast_to_run"]], "autorag.nodes.retrieval.base.HybridRetrieval": [[26, 3, 1, "", "pure"]], "autorag.nodes.retrieval.bm25": [[26, 1, 1, "", "BM25"], [26, 4, 1, "", "bm25_ingest"], [26, 4, 1, "", "bm25_pure"], [26, 4, 1, "", "get_bm25_scores"], [26, 4, 1, "", "load_bm25_corpus"], [26, 4, 1, "", "select_bm25_tokenizer"], [26, 4, 1, "", "tokenize"], [26, 4, 1, "", "tokenize_ja_sudachipy"], [26, 4, 1, "", "tokenize_ko_kiwi"], [26, 4, 1, "", "tokenize_ko_kkma"], [26, 4, 1, "", "tokenize_ko_okt"], [26, 4, 1, "", "tokenize_porter_stemmer"], [26, 4, 1, "", "tokenize_space"]], "autorag.nodes.retrieval.bm25.BM25": [[26, 3, 1, "", "pure"]], "autorag.nodes.retrieval.hybrid_cc": [[26, 1, 1, "", "HybridCC"], [26, 4, 1, "", "fuse_per_query"], [26, 4, 1, "", "hybrid_cc"], [26, 4, 1, "", "normalize_dbsf"], [26, 4, 1, "", "normalize_mm"], [26, 4, 1, "", "normalize_tmm"], [26, 4, 1, "", "normalize_z"]], "autorag.nodes.retrieval.hybrid_cc.HybridCC": [[26, 3, 1, "", "run_evaluator"]], "autorag.nodes.retrieval.hybrid_rrf": [[26, 1, 1, "", "HybridRRF"], [26, 4, 1, "", "hybrid_rrf"], [26, 4, 1, "", "rrf_calculate"], [26, 4, 1, "", "rrf_pure"]], "autorag.nodes.retrieval.hybrid_rrf.HybridRRF": [[26, 3, 1, "", "run_evaluator"]], "autorag.nodes.retrieval.run": [[26, 4, 1, "", "edit_summary_df_params"], [26, 4, 1, "", "evaluate_retrieval_node"], [26, 4, 1, "", "find_unique_elems"], [26, 4, 1, "", "get_hybrid_execution_times"], [26, 4, 1, "", "get_ids_and_scores"], [26, 4, 1, "", "get_scores_by_ids"], [26, 4, 1, "", "optimize_hybrid"], [26, 4, 1, "", "run_retrieval_node"]], "autorag.nodes.retrieval.vectordb": [[26, 1, 1, "", "VectorDB"], [26, 4, 1, "", "get_id_scores"], [26, 4, 1, "", "load_chroma_collection"], [26, 4, 1, "", "run_query_embedding_batch"], [26, 4, 1, "", "vectordb_ingest"], [26, 4, 1, "", "vectordb_pure"]], "autorag.nodes.retrieval.vectordb.VectorDB": [[26, 3, 1, "", "pure"]], "autorag.nodes.util": [[17, 4, 1, "", "make_generator_callable_param"]], "autorag.parser": [[0, 1, 1, "", "Parser"]], "autorag.parser.Parser": [[0, 3, 1, "", "start_parsing"]], "autorag.schema": [[27, 0, 0, "-", "base"], [27, 0, 0, "-", "metricinput"], [27, 0, 0, "-", "module"], [27, 0, 0, "-", "node"]], "autorag.schema.base": [[27, 1, 1, "", "BaseModule"]], "autorag.schema.base.BaseModule": [[27, 3, 1, "", "cast_to_run"], [27, 3, 1, "", "pure"], [27, 3, 1, "", "run_evaluator"]], "autorag.schema.metricinput": [[27, 1, 1, "", "MetricInput"]], "autorag.schema.metricinput.MetricInput": [[27, 3, 1, "", "from_dataframe"], [27, 2, 1, "", "generated_log_probs"], [27, 2, 1, "", "generated_texts"], [27, 2, 1, "", "generation_gt"], [27, 3, 1, "", "is_fields_notnone"], [27, 2, 1, "", "prompt"], [27, 2, 1, "", "queries"], [27, 2, 1, "", "query"], [27, 2, 1, "", "retrieval_gt"], [27, 2, 1, "", "retrieval_gt_contents"], [27, 2, 1, "", "retrieved_contents"], [27, 2, 1, "", "retrieved_ids"]], "autorag.schema.module": [[27, 1, 1, "", "Module"]], "autorag.schema.module.Module": [[27, 3, 1, "", "from_dict"], [27, 2, 1, "", "module"], [27, 2, 1, "", "module_param"], [27, 2, 1, "", "module_type"]], "autorag.schema.node": [[27, 1, 1, "", "Node"], [27, 4, 1, "", "extract_values"], [27, 4, 1, "", "extract_values_from_nodes"], [27, 4, 1, "", "extract_values_from_nodes_strategy"], [27, 4, 1, "", "module_type_exists"]], "autorag.schema.node.Node": [[27, 3, 1, "", "from_dict"], [27, 3, 1, "", "get_param_combinations"], [27, 2, 1, "", "modules"], [27, 2, 1, "", "node_params"], [27, 2, 1, "", "node_type"], [27, 3, 1, "", "run"], [27, 2, 1, "", "run_node"], [27, 2, 1, "", "strategy"]], "autorag.strategy": [[0, 4, 1, "", "avoid_empty_result"], [0, 4, 1, "", "filter_by_threshold"], [0, 4, 1, "", "measure_speed"], [0, 4, 1, "", "select_best"], [0, 4, 1, "", "select_best_average"], [0, 4, 1, "", "select_best_rr"], [0, 4, 1, "", "select_normalize_mean"], [0, 4, 1, "", "validate_strategy_inputs"]], "autorag.support": [[0, 4, 1, "", "dynamically_find_function"], [0, 4, 1, "", "get_support_modules"], [0, 4, 1, "", "get_support_nodes"]], "autorag.utils": [[28, 0, 0, "-", "preprocess"], [28, 0, 0, "-", "util"]], "autorag.utils.preprocess": [[28, 4, 1, "", "cast_corpus_dataset"], [28, 4, 1, "", "cast_qa_dataset"], [28, 4, 1, "", "validate_corpus_dataset"], [28, 4, 1, "", "validate_qa_dataset"], [28, 4, 1, "", "validate_qa_from_corpus_dataset"]], "autorag.utils.util": [[28, 4, 1, "", "apply_recursive"], [28, 4, 1, "", "convert_datetime_string"], [28, 4, 1, "", "convert_env_in_dict"], [28, 4, 1, "", "convert_inputs_to_list"], [28, 4, 1, "", "convert_string_to_tuple_in_dict"], [28, 4, 1, "", "dict_to_markdown"], [28, 4, 1, "", "dict_to_markdown_table"], [28, 4, 1, "", "embedding_query_content"], [28, 4, 1, "", "explode"], [28, 4, 1, "", "fetch_contents"], [28, 4, 1, "", "fetch_one_content"], [28, 4, 1, "", "filter_dict_keys"], [28, 4, 1, "", "find_key_values"], [28, 4, 1, "", "find_node_summary_files"], [28, 4, 1, "", "find_trial_dir"], [28, 4, 1, "", "flatten_apply"], [28, 4, 1, "", "get_best_row"], [28, 4, 1, "", "get_event_loop"], [28, 4, 1, "", "load_summary_file"], [28, 4, 1, "", "make_batch"], [28, 4, 1, "", "make_combinations"], [28, 4, 1, "", "normalize_string"], [28, 4, 1, "", "normalize_unicode"], [28, 4, 1, "", "openai_truncate_by_token"], [28, 4, 1, "", "pop_params"], [28, 4, 1, "", "process_batch"], [28, 4, 1, "", "reconstruct_list"], [28, 4, 1, "", "replace_value_in_dict"], [28, 4, 1, "", "result_to_dataframe"], [28, 4, 1, "", "save_parquet_safe"], [28, 4, 1, "", "select_top_k"], [28, 4, 1, "", "sort_by_scores"], [28, 4, 1, "", "split_dataframe"], [28, 4, 1, "", "to_list"]], "autorag.validator": [[0, 1, 1, "", "Validator"]], "autorag.validator.Validator": [[0, 3, 1, "", "validate"]], "autorag.web": [[0, 4, 1, "", "chat_box"], [0, 4, 1, "", "get_runner"], [0, 4, 1, "", "set_initial_state"], [0, 4, 1, "", "set_page_config"], [0, 4, 1, "", "set_page_header"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:property"}, "terms": {"": [0, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 34, 37, 44, 49, 51, 53, 54, 55, 56, 58, 59, 60, 66, 68, 70, 72, 73, 74, 88, 90, 91, 92, 93, 94, 95, 96, 101, 105, 106, 107, 110], "0": [0, 6, 16, 22, 23, 26, 30, 35, 36, 37, 41, 45, 50, 51, 56, 58, 59, 60, 61, 69, 70, 72, 73, 74, 75, 76, 84, 97, 99, 101, 104, 105, 106, 109, 110], "002": 56, "01": 71, "0125": 16, "04": 60, "06": [9, 10, 11, 12, 16, 47], "07": [10, 11, 47], "08": [9, 10, 11, 12, 16, 47], "09": 60, "1": [0, 6, 16, 23, 26, 28, 34, 37, 58, 59, 61, 64, 69, 96, 99, 101, 104, 105], "10": [0, 56, 58, 66, 83, 92, 97, 100, 101, 103, 106, 107], "100": [23, 109], "1000": 92, "100k": 81, "101": 99, "1024": [30, 32, 48], "10k": [22, 81], "10x": 61, "11": 109, "1106": [58, 59, 92, 95, 96, 105, 109], "125m": 61, "128": [16, 26, 28, 37, 46, 48], "13a": 16, "13b": 81, "16": [16, 18, 59, 61, 67, 68, 79, 84], "16k": [58, 59, 60, 66, 67, 68, 84, 92, 95, 96, 105, 109], "17": 55, "18": [10, 11, 47], "1d": 34, "2": [6, 16, 20, 22, 25, 34, 37, 56, 57, 61, 65, 85, 89, 96, 97, 98, 99, 106], "200": 49, "2015": 71, "2022": 47, "2024": [9, 10, 11, 12, 16, 47, 60], "2048": 0, "24": [30, 32, 48], "25": 36, "2d": [26, 34], "3": [6, 16, 24, 26, 35, 36, 37, 40, 56, 58, 59, 66, 67, 68, 84, 92, 95, 96, 99, 103, 105, 107], "300": [20, 65], "32": [6, 8, 37, 77, 78, 82, 85], "3b": [22, 81], "4": [6, 16, 36, 53, 58, 60, 84, 96, 99, 100, 101], "4000": 58, "42": [0, 6, 8], "4o": [9, 10, 11, 12, 16, 45, 47], "5": [0, 6, 16, 22, 24, 36, 37, 48, 53, 56, 58, 59, 60, 63, 66, 67, 68, 83, 84, 92, 95, 96, 99, 103, 105, 106], "50": [25, 36, 37], "51": 101, "512": [30, 32, 37, 48, 60, 61, 85], "514": 51, "6": [37, 53, 58, 70, 72, 96, 99], "60": [26, 100], "64": [28, 37, 55, 58, 72, 73, 75, 76, 77, 78, 80, 81, 82, 85, 86, 94, 97, 102], "666": 53, "7": 99, "7039180890341347": 52, "72": 50, "7680": 50, "777": 53, "797979": 53, "7b": [20, 56, 61, 65, 98], "8": [2, 7, 16, 49, 53, 79, 84, 99], "80": [100, 101], "8000": [26, 49, 110], "822": 53, "85": [69, 73, 74], "9": [16, 37], "A": [0, 2, 7, 9, 10, 11, 12, 16, 22, 23, 26, 28, 30, 34, 37, 41, 47, 51, 58, 87, 91, 97, 105, 107, 108], "And": [10, 18, 26, 28, 37, 44, 46, 54, 55, 60, 61, 92, 98, 103, 105, 107, 110], "As": [6, 24, 34, 49, 50, 52, 56, 63, 102, 103], "At": [45, 46, 56, 75, 79, 89, 103, 105, 107], "But": [34, 37, 44, 45, 46, 54, 103, 105, 107], "By": [51, 59, 66, 67, 68, 97, 99, 108], "For": [10, 26, 30, 31, 34, 37, 41, 47, 48, 52, 55, 56, 57, 60, 61, 105, 106, 107, 109, 110], "If": [0, 5, 6, 8, 16, 24, 25, 26, 28, 30, 31, 32, 34, 36, 38, 39, 40, 41, 42, 45, 47, 48, 50, 52, 54, 55, 61, 70, 71, 73, 74, 75, 76, 77, 78, 79, 82, 85, 98, 99, 102, 103, 104, 105, 107, 108, 109, 110], "In": [20, 21, 22, 25, 30, 33, 34, 41, 46, 47, 52, 54, 60, 69, 103, 104, 105, 107, 109], "It": [0, 6, 8, 10, 11, 16, 18, 20, 21, 22, 24, 26, 27, 28, 30, 34, 37, 38, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 56, 58, 59, 60, 64, 68, 69, 71, 75, 79, 82, 83, 86, 87, 88, 89, 91, 92, 94, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110], "Its": [16, 26, 28, 34, 61, 63, 66, 69, 83, 97], "No": 105, "Not": [8, 19, 87, 97], "Of": 54, "On": [34, 69], "Or": [16, 34, 55, 75, 79, 89, 110], "TO": 55, "That": [54, 107], "The": [0, 2, 6, 7, 8, 10, 11, 12, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 37, 39, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 55, 56, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110], "Then": [34, 47, 48, 55, 56, 105], "There": [26, 34, 37, 44, 54, 55, 57, 60, 69, 87, 97, 99, 104, 107, 110], "These": [34, 44, 58, 59, 66, 67, 68, 83, 94, 95, 96, 101, 108, 110], "To": [26, 33, 34, 37, 42, 46, 49, 55, 56, 60, 105, 106, 107, 110], "Will": 26, "With": [24, 34, 48, 60, 107, 110], "__fields__": [0, 9, 10, 11, 12, 22], "__main__": 49, "__name__": 49, "_metadata": 2, "abil": 86, "abl": 97, "about": [0, 9, 10, 11, 12, 22, 30, 31, 32, 34, 36, 39, 40, 41, 44, 47, 48, 59, 61, 67, 68, 72, 73, 90, 91, 92, 93, 98, 102, 103, 104, 105, 108, 110], "abov": [52, 56, 103, 104, 107, 110], "absolut": [6, 52], "abstract": [18, 27], "abstracteventloop": 28, "accept": 52, "access": [36, 50, 83], "accomplish": 42, "accord": [10, 30, 41], "accumul": 66, "accur": [33, 37, 104], "accuraci": [16, 88, 97, 101], "achat": 44, "achiev": [46, 51, 105, 108], "across": [67, 92, 97, 101, 106, 108], "act": 108, "action": [103, 107], "actual": [28, 34, 49, 52, 100], "ad": [11, 23, 37, 108, 109], "ada": 56, "add": [2, 6, 16, 37, 42, 58, 63, 64, 72, 73, 102, 105, 107, 110], "add_essential_metadata": [1, 14], "add_essential_metadata_llama_text_nod": [1, 14], "add_file_nam": [1, 2, 30, 31, 32, 48], "add_gen_gt": [8, 11], "addit": [6, 7, 16, 20, 56, 59, 63, 64, 65, 67, 68, 92, 94, 95, 96, 109, 110], "addition": 91, "additional_special_token": 23, "address": [66, 108], "adjust": [37, 109], "advanc": [36, 107], "advanced rag": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 107], "advantag": 60, "advent": [37, 48], "aespa": [34, 47], "aespa1": 34, "aespa2": 34, "aespa3": 34, "affect": [19, 34, 105, 108], "afraid": 37, "after": [5, 28, 30, 33, 37, 44, 45, 46, 47, 48, 50, 54, 55, 64, 83, 103, 105, 107, 110], "afterward": 23, "ag": 96, "again": [48, 107, 110], "ai": [7, 79, 82], "aim": [37, 99, 101, 108], "album": 47, "algorithm": [98, 99, 100], "all": [0, 6, 16, 23, 25, 28, 30, 34, 37, 41, 42, 44, 48, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 69, 71, 73, 74, 92, 96, 97, 101, 103, 104, 106, 107, 108, 109, 110], "alloc": 96, "allow": [55, 58, 59, 63, 64, 67, 68, 81, 94, 95, 96, 99, 108], "almost": 45, "alon": [92, 97, 107], "along": 51, "alpha": [16, 105], "alreadi": [6, 23, 26, 48, 49, 105], "already_has_special_token": 23, "also": [27, 30, 34, 36, 37, 51, 52, 54, 60, 61, 75, 99, 107], "altern": 55, "although": 23, "alwai": [31, 32, 37, 39, 50, 105], "among": [0, 18, 20, 21, 22, 24, 25, 26, 100, 105], "amount": 66, "an": [0, 6, 16, 26, 30, 33, 34, 37, 39, 41, 44, 50, 51, 52, 54, 55, 56, 66, 82, 83, 93, 94, 95, 102, 103, 104, 105, 107, 109], "analysi": 66, "ani": [0, 2, 6, 8, 10, 15, 23, 27, 28, 34, 44, 52, 54, 55, 61, 63, 65, 66, 69, 83, 92, 97, 101, 107, 108, 109], "annot": [0, 9, 10, 11, 12, 22], "anoth": [47, 84, 108, 110], "answer": [6, 8, 10, 11, 12, 25, 33, 34, 37, 44, 45, 47, 51, 52, 53, 60, 65, 69, 86, 90, 91, 92, 93, 107], "answer_creation_func": [6, 37], "answer_gt": 53, "anywher": 50, "ap": [16, 52], "api": [7, 26, 60, 75, 79, 89, 102, 103], "api_bas": [56, 109], "api_kei": [22, 56, 60, 75, 79, 89, 103, 109], "apirunn": [49, 110], "app": 55, "appear": 109, "appli": [28, 49, 58, 83, 92, 97, 101, 108, 110], "applic": [49, 66, 87, 97], "apply_recurs": [0, 28], "approach": [66, 99], "appropri": 23, "apt": 109, "ar": [10, 16, 25, 26, 28, 30, 34, 37, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 66, 67, 68, 69, 70, 71, 72, 73, 74, 87, 92, 94, 95, 96, 97, 101, 103, 104, 105, 106, 107, 108, 109, 110], "arbitrari": [58, 63, 66, 69, 83, 92, 97], "arbitrary_types_allow": [0, 22], "arg": [0, 6, 7, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "argument": [6, 7, 16, 20, 28, 59, 67, 68, 94, 95, 96], "aris": 91, "arm": 82, "arrai": [22, 49], "arrang": 108, "articl": 28, "asap": 107, "ask": [10, 34, 47, 51, 54, 107], "aspect": 108, "assess": [51, 83], "assign": 16, "associ": [28, 66], "ast": 103, "async": [0, 2, 6, 7, 9, 10, 11, 12, 16, 18, 22, 26, 28, 44], "async_g_ev": [15, 16], "async_postprocess_nod": [17, 22], "async_qa_gen_llama_index": [4, 6], "async_run_llm": [17, 22], "asynccli": 22, "asynchron": [6, 28], "asyncio": 28, "asyncopenai": [9, 10, 11, 12, 43, 45, 47, 92], "asyncrankgptrerank": [17, 22], "atom": 96, "attempt": 104, "attention_mask": 23, "augment": [19, 108], "augmented_cont": 19, "augmented_id": 19, "augmented_scor": 19, "auto": [6, 55, 99], "auto rag": 54, "autom": 95, "automat": [27, 28, 34, 37, 54, 58, 63, 66, 69, 82, 83, 92, 97, 102, 105, 110], "automl": 54, "autorag": [30, 31, 32, 33, 34, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 51, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109], "autorag config": 103, "autorag doc": 54, "autorag fold": 104, "autorag instal": 55, "autorag multi gpu": 61, "autorag system": 108, "autorag tutori": 110, "autorag yaml": 103, "autorag_metr": [15, 16], "autorag_metric_loop": [15, 16], "autoraghq": 55, "autotoken": 92, "avail": [37, 93, 109], "averag": [0, 16, 53, 58, 92, 97, 101], "averaged_perceptron_tagger_eng": 55, "avoid": 0, "avoid_empty_result": [0, 29], "awai": 110, "await": [8, 44], "awar": 16, "b": [16, 23, 105], "baai": [22, 56, 77, 78, 82], "back": 16, "backbon": 51, "backward": 64, "bad": [45, 46, 107], "badminton": 96, "band": 47, "base": [0, 1, 4, 8, 9, 10, 12, 16, 17, 23, 29, 30, 37, 44, 49, 51, 56, 59, 65, 67, 68, 74, 77, 79, 80, 81, 83, 84, 86, 88, 90, 93, 99, 100, 101, 106, 107, 108], "base_url": 49, "basechatmodel": 6, "baseembed": [16, 26], "basegener": [17, 18], "basellm": [9, 10, 11, 12, 44], "basemodel": [9, 10, 11, 12], "basemodul": [0, 18, 19, 20, 21, 22, 24, 25, 26, 27], "basepassageaugment": [17, 19], "basepassagecompressor": [17, 20], "basepassagefilt": [17, 21], "basepassagererank": [17, 22, 23], "basepromptmak": [17, 24], "baseprompttempl": 22, "basequeryexpans": [17, 25], "baseretriev": [17, 26], "bash": 55, "basi": [41, 53, 108], "basic": [6, 11, 46], "batch": [0, 2, 6, 7, 16, 18, 20, 22, 28, 37, 55, 58, 59, 60, 67, 68, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 102, 109], "batch_appli": [1, 8, 43, 44, 46, 47, 48], "batch_filt": [1, 8, 10, 45], "batch_siz": [8, 16, 22, 23, 26, 28], "becaus": [10, 24, 26, 30, 33, 34, 41, 42, 44, 45, 46, 47, 61, 63, 66, 69, 83, 88, 97, 102, 107, 109, 110], "becom": [37, 48, 103], "been": [106, 110], "befor": [26, 30, 47, 48, 56, 64, 66, 103, 107, 109, 110], "behavior": [34, 59, 67, 68, 88, 94, 95, 96, 108], "being": [59, 67, 68], "belong": 104, "below": [8, 30, 43, 45, 46, 48, 49, 50, 52, 55, 58, 70, 71, 72, 73, 74, 107, 109, 110], "benz": 96, "bert_scor": [15, 16, 58], "best": [0, 18, 20, 21, 22, 24, 25, 26, 28, 48, 54, 91, 99, 104, 106, 107, 110], "best_": 104, "best_0": 104, "best_column_nam": 28, "beta": [16, 57], "better": [44, 46, 63, 66, 69, 70, 74, 83, 97, 105, 110], "between": [16, 42, 51, 52, 58, 63, 98, 99, 106], "bfloat16": 88, "bge": [22, 56, 77, 78, 82], "bigram": 16, "bilingu": 51, "bin": 55, "bird": 96, "bit": 44, "bleu": [15, 16, 58, 92, 103, 106, 107, 109], "blob": 16, "blue": 107, "bm": 56, "bm25": [0, 17, 25, 97, 101, 103, 104, 107], "bm25_api": 26, "bm25_corpu": 26, "bm25_ingest": [17, 26], "bm25_path": 26, "bm25_pure": [17, 26], "bm25_token": [26, 98], "bm25okapi": [26, 98], "bodi": 49, "bool": [5, 6, 8, 10, 16, 19, 22, 23, 27, 28], "boolean": [6, 88], "boost": [60, 82], "bos_token": 23, "both": [49, 52, 64, 109], "bottom": 68, "bowl": 47, "branch": 107, "break": [42, 49, 53], "brew": 109, "brief": 47, "broader": 108, "bshtml": 39, "buffer": 49, "bui": 53, "build": [23, 34, 48, 104, 105, 107], "build_inputs_with_special_token": [22, 23], "bulb": 47, "c": [55, 109], "cach": 6, "cache_batch": [6, 37], "calcul": [16, 52, 63, 66, 72, 73, 88, 99, 100, 106], "calculate_cosine_similar": [15, 16], "call": [0, 23, 44, 56, 59, 60, 67, 68, 88, 98, 99], "callabl": [0, 1, 2, 6, 7, 8, 14, 26, 27, 28, 30], "callback_manag": [0, 22], "callbackmanag": [0, 22], "can": [5, 6, 7, 8, 10, 16, 20, 21, 22, 24, 26, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 71, 72, 73, 75, 77, 78, 79, 80, 82, 83, 84, 87, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110], "cannot": [55, 92, 97], "capit": 47, "care": 23, "case": [25, 34, 37, 48, 52, 54, 105, 107, 109], "cast": [18, 19, 20, 21, 22, 24, 25, 26, 27], "cast_corpus_dataset": [0, 28], "cast_embedding_model": [0, 15], "cast_metr": [0, 15], "cast_qa_dataset": [0, 28], "cast_queri": [17, 26], "cast_to_run": [0, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27], "castorini": [22, 81], "caus": [75, 79, 105, 109, 110], "cc": [26, 101], "cd": 55, "certain": [28, 44], "certainli": 49, "cg": 52, "chain": [51, 105], "chang": [10, 28, 37, 46, 56, 75, 79, 89, 98, 107, 108, 109], "channel": [54, 109, 110], "charact": 41, "chat": [6, 60, 109], "chat_box": [0, 29], "chat_prompt": 20, "chatmessag": [9, 12, 22, 44], "chatmodel": 36, "chatopenai": 36, "chatrespons": [22, 44], "check": [0, 16, 27, 33, 34, 46, 48, 54, 55, 56, 58, 61, 62, 77, 78, 98, 103, 104, 107, 109, 110], "check_expanded_queri": [17, 25], "child": 96, "choic": [98, 105], "choos": [10, 16, 25, 34, 84, 98, 102, 105, 106], "chroma": [26, 104], "chromadb": [6, 26, 37, 102], "chunk": [0, 1, 5, 8, 26, 33, 34, 37, 46, 49, 67, 93, 107], "chunk_config": 30, "chunk_method": [30, 32, 46, 48], "chunk_modul": [31, 32], "chunk_overlap": [30, 32, 37, 46, 48], "chunk_project_dir": 48, "chunk_siz": [28, 30, 32, 37, 46, 48, 49], "chunk_text": 2, "chunked_cont": [2, 30], "chunked_str": 30, "chunker": [2, 29, 41, 48], "chunker_nod": [1, 2], "ci": 55, "circl": 107, "ciudad": 47, "cl": 28, "claim": 16, "clarifi": 37, "class": [0, 8, 9, 10, 11, 12, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 34, 36, 56, 82, 84, 86, 102], "classif": [23, 46], "classifi": [45, 52], "classmethod": [0, 26, 27], "classvar": [0, 9, 10, 11, 12, 22], "clear": 43, "cli": [29, 110], "client": [9, 10, 11, 12, 22, 26, 37, 43, 45, 47], "clone": 55, "close": 88, "cloud": 7, "clova": [0, 1, 41, 42], "co": 56, "code": [6, 8, 11, 16, 30, 31, 32, 38, 39, 48, 55, 56, 103], "coher": [0, 16, 17, 58, 75, 79], "cohere_api_kei": 75, "cohere_cli": 22, "cohere_rerank": 83, "cohere_rerank_pur": [17, 22], "coherererank": [17, 22], "cointegr": 56, "colber": 76, "colbert": [0, 17, 79, 83], "colbert_rerank": 76, "colbertrerank": [17, 22], "colbertv2": [22, 76], "collect": [6, 26, 28, 34, 37, 103, 107, 108], "collection_nam": [26, 104], "column": [0, 6, 8, 18, 19, 20, 21, 22, 24, 25, 26, 28, 34, 37, 44, 47, 49, 110], "column_nam": 28, "com": [6, 16, 49, 54, 55, 107], "combin": [25, 26, 27, 28, 42, 92, 99, 100, 103, 105, 108], "come": [34, 47, 52, 54, 94, 95, 96, 105, 107], "comedi": 96, "command": [50, 55, 109], "commit": 109, "common": [16, 26, 44, 55, 82, 96, 106, 108, 109, 110], "compar": [53, 58, 106], "comparison": 53, "compat": [8, 61], "compatibilti": 61, "complet": [30, 41, 60], "complex": [38, 44, 107], "complic": 44, "compon": 108, "compress": [20, 53, 65, 66, 69, 107], "compress_raga": [8, 9, 44], "compressor": [20, 53, 65, 66, 67, 68], "comput": [0, 9, 10, 11, 12, 16, 17, 22, 23, 66, 82], "computedfieldinfo": [0, 9, 10, 11, 12, 22], "concaten": 23, "concept": 51, "concept_completion_query_gen": [8, 12, 47], "concis": [11, 46], "conclud": 88, "conclus": 91, "condit": [34, 36], "conditional_evolve_raga": [8, 9, 44], "config": [0, 9, 10, 11, 12, 22, 23, 55, 56, 106, 107, 109], "configdict": [0, 9, 10, 11, 12, 22], "configur": [0, 9, 10, 11, 12, 22, 54, 55, 58, 59, 66, 67, 68, 83, 88, 92, 97, 101, 105, 108, 110], "conflict": 51, "conform": [0, 9, 10, 11, 12, 22], "confus": 69, "connect": [51, 102], "consid": [6, 52, 55, 61, 97], "consist": [16, 58], "constraint": [43, 55], "consum": 54, "contain": [2, 6, 7, 8, 16, 18, 20, 21, 22, 24, 26, 27, 28, 34, 37, 41, 42, 44, 52, 90, 91, 93, 96, 104, 105, 108, 109, 110], "content": [29, 30, 37, 39, 44, 49, 66, 70, 71, 72, 73, 74, 83, 92, 101, 102], "content_embed": 22, "content_s": [6, 37], "contents_list": [23, 28], "context": [22, 43, 45, 51, 52, 65, 88, 89, 92, 108], "contextu": 51, "contradict": 51, "contributor": 55, "control": [16, 61], "conveni": [37, 50], "convert": [27, 28, 37, 38, 40, 103], "convert_datetime_str": [0, 28], "convert_env_in_dict": [0, 28], "convert_inputs_to_list": [0, 28], "convert_string_to_tuple_in_dict": [0, 28], "convex": [26, 99], "cool": 107, "core": [32, 37, 44, 51, 56], "coroutin": 28, "corpu": [1, 4, 6, 8, 26, 33, 45, 46, 47, 51, 55, 57, 63, 71, 87, 93, 101, 104, 110], "corpus_data": [6, 26, 28], "corpus_data_path": [0, 55, 110], "corpus_data_row": 6, "corpus_df": [6, 8, 14, 19, 28, 36, 37], "corpus_df_to_langchain_docu": [1, 14], "corpus_path": 26, "corpus_save_path": 8, "corpus_test": 110, "correct": 52, "correl": 51, "correspond": [0, 9, 10, 11, 12, 22, 27], "cosin": [16, 51, 63], "cost": [16, 42, 66, 110], "cot": 51, "could": [18, 20, 21, 22, 24, 26], "couldn": 50, "count": [16, 65, 98], "cours": 54, "cover": [30, 33, 37, 41, 44, 46, 47, 48], "cpu": [16, 82], "creat": [5, 6, 7, 8, 12, 23, 27, 28, 30, 33, 34, 35, 38, 41, 46, 48, 50, 54, 90, 93, 99, 104, 107], "create_token_type_ids_from_sequ": [22, 23], "creation": [6, 8, 47, 54, 110], "criterion": 108, "critic": 6, "critic_llm": [6, 36], "cross": [22, 85], "crucial": [30, 33, 34, 41, 46, 66, 83, 91, 108], "csv": [30, 41, 105, 110], "cucumb": 96, "cuda": [76, 77, 78, 82, 85], "cue": 88, "cumul": 61, "current": [28, 30, 41, 49, 53, 108, 110], "curs": 44, "custom": [50, 59, 67, 68, 72, 73, 84, 88, 94, 95, 96, 102, 106, 108, 109], "cutoff": 69, "cycl": 107, "czech": 30, "d": [6, 25, 28, 34, 49], "dag": 107, "dai": 107, "danish": 30, "dashboard": 29, "data": [0, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 41, 43, 44, 45, 47, 49, 51, 54, 55, 58, 66, 83, 91, 97, 102, 108, 110], "data_path": 7, "data_path_glob": [0, 7], "data_path_list": 7, "databas": 102, "dataformat": 30, "datafram": [0, 2, 5, 6, 8, 11, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 44], "dataset": [6, 8, 10, 28, 30, 33, 37, 45, 47, 52, 54, 55, 99, 104, 109], "date": [47, 71], "datetim": [34, 41, 71, 87], "db": [6, 107], "db_path": 26, "dbsf": [26, 99, 101], "dcg": 52, "dd": 71, "de": 47, "deal": 66, "debug": 34, "decid": [61, 107, 108], "decis": 108, "decod": 49, "decompos": [25, 97], "decomposit": 96, "decor": [0, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28], "decreas": [45, 60, 76, 77, 78, 82, 85], "deep": 82, "deepev": 16, "deepeval_faith": [15, 16], "deepeval_prompt": [0, 15], "def": [30, 44, 49], "default": [0, 2, 5, 6, 7, 11, 16, 20, 22, 23, 24, 25, 26, 28, 30, 34, 37, 49, 55, 56, 59, 60, 64, 65, 67, 68, 70, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 92, 94, 95, 98, 99, 100, 103, 106, 108], "default_config": 110, "default_factori": [0, 22], "defaulttoken": 16, "defin": [0, 9, 10, 11, 12, 22, 23, 55, 63, 81, 83, 101, 102, 106], "delet": [28, 69], "deliv": 107, "dens": [26, 94, 98, 102], "deparallel": [22, 23], "depend": [10, 30, 55, 98, 104, 110], "deploi": [29, 49, 50, 54, 82], "deploy": [54, 99], "deportiva": 47, "deprec": [26, 35], "describ": 49, "descript": [0, 22, 46, 49, 58, 63, 83, 101], "design": [6, 37, 51, 58, 86, 91, 99, 100], "detail": [38, 44, 47, 48, 51, 58, 61, 80, 84, 92, 93, 97, 108, 110], "detect": 99, "determin": [58, 104, 106], "develop": [16, 61, 105, 108], "devic": [22, 23, 82], "device_map": 23, "df": [28, 45, 46, 48, 109], "diagram": [105, 107], "dict": [0, 2, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 42, 44], "dict_": 28, "dict_column": 28, "dict_to_markdown": [0, 28], "dict_to_markdown_t": [0, 28], "dictionari": [0, 6, 9, 10, 11, 12, 15, 22, 26, 28, 30, 34, 36, 37, 58, 81], "did": 0, "didn": 36, "differ": [6, 10, 28, 30, 34, 37, 44, 46, 48, 51, 56, 58, 81, 95, 97, 98, 100, 104, 108], "difficulti": [44, 109], "dimens": [25, 28], "dir": [49, 110], "direct": [44, 87, 97], "directli": [8, 36, 47, 51, 52, 66, 75, 79, 89, 103, 105, 109], "directori": [0, 5, 6, 18, 20, 21, 22, 24, 25, 26, 30, 39, 41, 48, 49, 50, 110], "directoryload": 37, "discord": [54, 107, 109, 110], "discrimin": 45, "displai": 34, "distinct": 66, "distinguish": [42, 99], "distribut": [6, 36, 37], "distribute_list_by_ratio": [4, 6], "divid": [38, 52, 98], "dl": 81, "do": [5, 6, 8, 25, 34, 42, 44, 52, 53, 54, 55, 103, 104, 107, 110], "doc": [6, 34, 35, 52, 55, 56, 61, 106], "doc_id": [2, 26, 28, 30, 49], "dockerfil": 55, "document": [2, 5, 6, 7, 8, 14, 22, 26, 30, 33, 34, 38, 39, 40, 41, 42, 47, 55, 58, 66, 83, 89, 92, 93, 97, 98, 101, 103, 105, 106, 107, 108, 110], "document_load": [7, 37, 39], "doe": [23, 26, 43, 51, 55, 58, 59, 60, 61, 66, 69, 83, 92, 103, 105], "doesn": [6, 52, 96, 107, 109], "domain": 98, "don": [10, 24, 28, 34, 37, 41, 46, 52, 54, 92, 99, 107, 109, 110], "done": 110, "dontknow": [1, 8, 45, 46, 48], "dontknow_filter_llama_index": [8, 10, 45], "dontknow_filter_openai": [8, 10, 45], "dontknow_filter_rule_bas": [8, 10, 45, 46, 48], "dotenv": [55, 109], "doubl": 34, "down": [49, 52], "download": [34, 55, 110], "drive": 96, "drop": [10, 45, 46, 48, 91, 109], "dropout": 23, "due": 55, "duplic": [27, 34, 103], "dure": [97, 109], "dutch": 30, "dynam": [55, 108], "dynamically_find_funct": [0, 29], "e": [55, 59, 67, 68], "each": [0, 6, 8, 25, 26, 27, 28, 34, 36, 37, 49, 51, 72, 73, 96, 99, 100, 103, 104, 105, 106, 107, 108], "earli": 34, "easier": 103, "easili": [30, 41, 47, 102, 107, 110], "echo": 109, "edit": 55, "edit_summary_df_param": [17, 26], "editor": 103, "effect": [12, 42, 44, 58, 83, 100, 101, 108, 110], "effective_ord": 16, "effici": 66, "effort": 108, "either": 52, "elem": 28, "element": [26, 27, 28], "els": 49, "emb": [26, 102, 107], "embed": [0, 6, 16, 23, 26, 37, 51, 54, 55, 58, 63, 72, 73, 83, 98, 102, 104, 110], "embed_batch_s": 0, "embed_dim": [0, 29], "embedding model": 56, "embedding_batch": [26, 102], "embedding_model": [6, 16, 19, 25, 26, 28, 36, 37, 56, 58, 63, 72, 73, 97, 101, 102, 103], "embedding_query_cont": [0, 28], "emploi": 96, "empti": [0, 26, 34, 103], "en": [9, 10, 11, 12, 16, 22, 30, 40, 45, 46, 47, 48, 56, 58, 79, 81], "en_qa": 45, "en_qa_df": 45, "encod": [18, 22, 85], "encount": 109, "enct5forsequenceclassif": [22, 23], "enct5token": [22, 23], "end": [28, 34, 49, 88], "end_idx": [2, 49], "endpoint": 110, "engin": 109, "enginearg": 61, "english": [2, 30, 32, 48, 75, 98], "enhanc": [83, 88, 106, 108], "enough": [34, 69], "ensur": [49, 55, 58, 66, 83, 92, 97, 101], "entri": 66, "entrypoint": 55, "enumer": 49, "env": [55, 60], "environ": [7, 28, 39, 50, 55, 61, 75, 79, 89, 109, 110], "eos_token": 23, "equal": [6, 52], "equival": 49, "error": [11, 60, 75, 79, 84, 96, 102], "essenc": 47, "essenti": [70, 71, 72, 73, 74, 92, 99, 100, 105, 108, 109], "estonian": 30, "etc": [34, 37, 103], "eval": 16, "evalu": [10, 18, 20, 21, 22, 24, 25, 26, 28, 29, 30, 33, 34, 35, 41, 45, 51, 54, 55, 58, 66, 83, 92, 97, 99, 101, 103, 104, 106, 108], "evaluate_gener": [0, 15], "evaluate_generator_nod": [17, 18], "evaluate_generator_result": [17, 24], "evaluate_one_prompt_maker_nod": [17, 24], "evaluate_one_query_expansion_nod": [17, 25], "evaluate_passage_compressor_nod": [17, 20], "evaluate_retriev": [0, 15], "evaluate_retrieval_cont": [0, 15], "evaluate_retrieval_nod": [17, 26], "even": [0, 45, 91, 99], "evenly_distribute_passag": [17, 26], "event": [28, 47, 49], "ever": 107, "everi": [18, 23, 60, 108], "evolut": [6, 36], "evolv": [1, 8, 46, 47], "evolve_to_rud": 44, "evolved_queri": [8, 9], "exact": [45, 51], "exactli": 52, "exampl": [6, 10, 34, 37, 41, 44, 46, 48, 51, 56, 57, 103, 105, 107, 109, 110], "example_node_line_1": 106, "example_node_line_2": 106, "exc_traceback": 0, "exc_typ": 0, "exc_valu": 0, "exce": [58, 60, 66, 83, 92, 96], "exceed": [92, 97, 101], "except": 53, "exclud": [0, 22], "exclus": 102, "execut": [0, 26, 28, 48, 55, 56, 97, 110], "exist": [5, 6, 26, 27, 34, 104], "exist_gen_gt": [6, 37], "existing_qa": 37, "existing_qa_df": 37, "existing_query_df": 6, "exp": 16, "exp_norm": [17, 22], "expand": [97, 105], "expanded_queri": 25, "expanded_query_list": 25, "expans": [24, 25, 26, 34, 66, 94, 96, 107], "expect": [34, 88], "expens": [16, 42, 45], "experi": [54, 104, 107, 109, 110], "experiment": 58, "expir": 50, "explain": [104, 106, 107], "explan": 47, "explicit": 51, "explod": [0, 28], "explode_valu": 28, "explor": [55, 99, 100], "export": [55, 75, 79, 89, 109], "extens": [5, 6, 41, 103], "extent": 51, "extra": [7, 16, 28, 98], "extra_id": 23, "extract": [27, 39, 71, 87, 98, 99], "extract_best_config": 110, "extract_evid": [0, 1], "extract_valu": [0, 27], "extract_values_from_nod": [0, 27], "extract_values_from_nodes_strategi": [0, 27], "f": [44, 49, 92], "f1": [16, 66], "face": [54, 55, 82], "facebook": 61, "facilit": 58, "fact": 107, "factoid": 46, "factoid_query_gen": [8, 12, 46, 47, 48, 57], "factori": 0, "factual": 47, "faith": 16, "faithfulnesstempl": [15, 16], "fall": 16, "fallback": 16, "fals": [0, 5, 6, 10, 16, 22, 23, 28, 70, 74, 77, 78, 84, 88], "familiar": 107, "fashion": 68, "fast": [45, 61, 75, 79, 89], "faster": [61, 66], "fate": 107, "favorit": 103, "featur": [2, 34, 38, 51, 55, 58, 107, 110], "fee": 102, "feedback": [105, 107], "feel": [44, 54, 107, 110], "fetch": [63, 64, 101], "fetch_cont": [0, 28], "fetch_one_cont": [0, 28], "few": [96, 107, 110], "field": [0, 9, 10, 11, 12, 16, 22, 52, 71, 87], "fieldinfo": [0, 9, 10, 11, 12, 22], "fields_to_check": [16, 27], "file": [0, 5, 6, 7, 8, 14, 16, 28, 34, 37, 48, 49, 50, 51, 54, 55, 56, 61, 75, 79, 84, 89, 99, 104, 105, 106, 107, 108, 109], "file_dir": [5, 6], "file_nam": [2, 30], "file_name_languag": 2, "file_pag": 49, "file_path": 14, "filenam": [5, 6, 26], "filepath": [5, 6, 28, 48, 49], "filesystem": [14, 55], "fill": [28, 34, 51], "filter": [0, 1, 8, 21, 48, 60, 63, 70, 72, 73, 74], "filter_by_threshold": [0, 29], "filter_dict_kei": [0, 28], "filtered_qa": 45, "final": [0, 30, 41, 42, 65, 100, 105, 107], "find": [10, 28, 31, 32, 37, 38, 39, 40, 45, 47, 48, 51, 52, 54, 56, 65, 86, 92, 99, 100, 101, 104, 105, 108], "find_key_valu": [0, 28], "find_node_dir": [0, 29], "find_node_summary_fil": [0, 28], "find_trial_dir": [0, 28], "find_unique_elem": [17, 26], "fine": 93, "finnish": 30, "first": [8, 16, 26, 28, 30, 37, 41, 44, 46, 47, 48, 49, 52, 53, 54, 55, 61, 75, 79, 83, 89, 102, 103, 104, 105, 107], "fit": [51, 108], "five": 34, "fix": [51, 109], "fixed_min_valu": 26, "flag": 83, "flag_embed": [0, 17], "flag_embedding_llm": [0, 17], "flag_embedding_llm_rerank": 77, "flag_embedding_rerank": 78, "flag_embedding_run_model": [17, 22], "flagembed": [55, 77, 78], "flagembeddingllm": 78, "flagembeddingllmrerank": [17, 22], "flagembeddingrerank": [17, 22], "flask": [49, 54], "flat_list": 28, "flatmap": [1, 8], "flatten": 28, "flatten_appli": [0, 28], "flexibl": [81, 99, 108], "float": [16, 22, 26, 27, 61], "floor": 16, "flow": 51, "fluenci": [16, 58], "fn": 8, "focu": [66, 110], "focus": 108, "folder": [55, 107], "follow": [6, 23, 26, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 48, 49, 50, 52, 55, 56, 71, 88, 99, 104, 107, 109], "forget": 110, "form": [2, 6, 30, 33, 37, 38, 48, 51], "format": [23, 28, 30, 37, 38, 41, 49, 52, 71, 88, 104], "former": 23, "forward": [22, 23, 64], "found": [37, 47, 51, 59, 67, 68, 72, 73, 80, 84, 102, 110], "four": 53, "fp16": [77, 78], "fragment": 16, "framework": [36, 51, 107], "franc": 47, "free": [54, 107, 110], "french": 30, "frequent": 56, "friendli": 50, "from": [0, 2, 6, 7, 8, 9, 10, 11, 12, 14, 16, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 59, 60, 61, 63, 66, 71, 75, 79, 83, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110], "from_datafram": [0, 27], "from_dict": [0, 27], "from_parquet": [0, 29, 30, 48], "from_trial_fold": [49, 50, 110], "from_yaml": [49, 50, 110], "fstring": [0, 17, 90, 92, 93, 107], "full": [34, 55, 61, 104, 108], "fulli": 55, "func": [0, 2, 6, 7, 18, 21, 28], "function": [0, 5, 6, 8, 10, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 37, 38, 41, 46, 47, 86, 108, 110], "fundament": 101, "further": [26, 52, 59, 67, 68, 94, 95, 96], "fuse": [26, 99], "fuse_per_queri": [17, 26], "fusion": [26, 100], "futur": [34, 60, 105, 107, 108], "g": [16, 59, 67, 68], "g_eval": [15, 16, 51, 58], "gamma": 16, "gcc": 109, "gemma": [22, 77], "gener": [0, 6, 8, 11, 17, 24, 28, 29, 33, 34, 35, 37, 44, 45, 49, 56, 59, 60, 61, 66, 88, 92, 94, 95, 96, 97, 105, 107, 108, 109], "generate_answ": [4, 6, 37], "generate_basic_answ": [4, 6], "generate_claim": [15, 16], "generate_qa_llama_index": [4, 6, 37, 57], "generate_qa_llama_index_by_ratio": [4, 6, 37], "generate_qa_raga": [4, 6, 36], "generate_qa_row": [4, 6], "generate_row_funct": 6, "generate_simple_qa_dataset": [4, 6], "generate_truth": [15, 16], "generate_verdict": [15, 16], "generate_with_langchain_doc": 6, "generated_log_prob": [0, 27], "generated_text": [0, 16, 27, 49], "generation_gt": [0, 1, 6, 8, 10, 16, 27, 43, 45, 46, 48], "generator_class": 24, "generator_dict": 17, "generator_llm": [6, 36], "generator_model": 56, "generator_modul": [24, 92], "generator_module_typ": [16, 94, 95, 96], "generator_nod": [17, 18], "generator_param": 24, "german": 30, "get": [0, 7, 14, 19, 28, 36, 37, 44, 45, 47, 48, 51, 55, 59, 60, 69, 75, 79, 89, 102, 103, 105, 107, 109, 110], "get_best_row": [0, 28], "get_bm25_pkl_nam": [17, 26], "get_bm25_scor": [17, 26], "get_colbert_embedding_batch": [17, 22], "get_colbert_scor": [17, 22], "get_default_llm": 22, "get_encod": [22, 23], "get_event_loop": [0, 28], "get_file_metadata": [1, 14], "get_hybrid_execution_tim": [17, 26], "get_id_scor": [17, 26], "get_ids_and_scor": [17, 26], "get_input_embed": [22, 23], "get_metric_valu": [0, 29], "get_multi_query_expans": [17, 25], "get_nodes_from_docu": 37, "get_or_create_collect": 37, "get_param_combin": [0, 1, 14, 27], "get_query_decompos": [17, 25], "get_result": [17, 18], "get_result_o1": [17, 18], "get_runn": [0, 29], "get_scores_by_id": [17, 26], "get_special_tokens_mask": [22, 23], "get_start_end_idx": [1, 14], "get_structured_result": [17, 18], "get_support_modul": [0, 29], "get_support_nod": [0, 29], "get_vers": 49, "gg": [54, 107], "girl": [34, 96], "gist": 51, "git": 55, "github": [16, 34, 54, 55, 107, 109, 110], "give": [0, 44, 52], "given": [0, 5, 6, 16, 26, 28, 37, 43, 45, 65, 81, 84, 86, 94, 95, 105], "glob": [37, 41], "glossari": 23, "go": [34, 52, 54, 98, 106, 110], "goal": [97, 105], "goe": [57, 107], "gone": 60, "good": [10, 34, 37, 45, 46, 48, 51, 107, 110], "got": 60, "gpt": [9, 10, 11, 12, 16, 24, 36, 37, 45, 47, 51, 58, 59, 60, 66, 67, 68, 84, 92, 95, 96, 105, 109], "gpt-3.5": 60, "gpt-4": 60, "gpt2": [58, 60, 92, 98], "gpu": [82, 110], "gradio": 110, "gradiorunn": 110, "grain": 93, "gram": [16, 51], "great": [33, 37, 45, 54, 98, 105], "greatest": 45, "greek": 30, "ground": [6, 16, 34, 43, 45, 51, 52, 58, 105], "ground_truth": 16, "group": [34, 47], "gt": [0, 16, 34, 43, 51, 52, 53, 105], "guarante": [69, 105], "guess": 44, "guid": [33, 37, 48, 54, 58, 66, 83, 92, 97, 98, 101, 107, 108, 110], "guidanc": 6, "h": 49, "ha": [6, 8, 11, 12, 23, 34, 37, 45, 47, 48, 51, 53, 66, 106, 107, 110], "had": 110, "halftim": 47, "hallucin": [2, 30, 107], "hamlet": 96, "hand": [34, 69], "handi": 14, "handle_except": [0, 29], "happen": 107, "hard": [37, 44, 54, 105, 107], "hardwar": 82, "harmon": [51, 52, 53], "have": [0, 6, 8, 10, 26, 28, 30, 33, 34, 38, 40, 43, 44, 45, 46, 47, 48, 49, 55, 56, 70, 71, 72, 73, 74, 76, 77, 78, 79, 82, 85, 87, 96, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110], "haven": 49, "head": 28, "head_mask": 23, "help": [34, 66, 82, 93, 99], "here": [6, 30, 31, 32, 33, 34, 36, 39, 40, 41, 44, 48, 49, 51, 54, 55, 56, 60, 61, 62, 65, 72, 73, 77, 78, 80, 89, 98, 102, 103, 104, 105, 107, 109, 110], "hf": [20, 65], "hh": 71, "hidden": 23, "high": [16, 83], "higher": [51, 52, 61, 66, 79, 108], "highest": 10, "highli": [44, 48, 51, 98, 110], "hit": 52, "home": 47, "hood": 105, "hook": 23, "hop": [6, 8, 12, 37, 46, 96], "hope": 104, "hopefulli": 52, "host": [49, 55, 110], "hour": 50, "how": [6, 30, 33, 37, 41, 43, 46, 47, 48, 49, 52, 59, 67, 68, 72, 73, 88, 96, 98, 102, 103, 104, 106, 107, 110], "howev": [37, 48, 52, 99, 105, 107], "html": [6, 32], "htmlnodepars": 32, "http": [6, 7, 16, 49, 54, 55, 56, 107], "hug": [55, 82], "huggingfac": [16, 25, 34, 55, 56, 61, 92, 110], "huggingface_all_mpnet_base_v2": 56, "huggingface_baai_bge_smal": 56, "huggingface_bge_m3": 56, "huggingface_cointegrated_rubert_tiny2": 56, "huggingface_evalu": [15, 16], "huggingfaceembed": 56, "huggingfacellm": [56, 59, 67, 68], "human": 51, "hybrid": [26, 41, 101, 103], "hybrid cc": 99, "hybrid rrf": 100, "hybrid_cc": [0, 17, 97, 99, 101], "hybrid_module_func": 26, "hybrid_module_param": 26, "hybrid_rrf": [0, 17, 97, 100, 101, 103], "hybridcc": [17, 26], "hybridretriev": [17, 26], "hybridrrf": [17, 26], "hyde": [0, 17, 56, 97], "hydrogen": 96, "hyperparamet": [26, 103], "hypothet": 94, "i": [0, 2, 5, 6, 7, 8, 10, 11, 12, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 35, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 104, 108, 110], "id": [19, 22, 23, 26, 28, 30, 34, 46, 49, 74, 82, 101], "id_": 28, "id_column_nam": 28, "idcg": 52, "ideal": 52, "ident": 47, "identifi": [34, 83, 101], "idf": [51, 98], "idx_rang": 8, "ignor": [23, 26], "imag": [34, 104, 110], "imagin": 34, "imdb": 96, "immedi": 97, "impact": [52, 66, 92, 97, 102], "implement": 107, "import": [30, 31, 32, 34, 36, 37, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 55, 56, 57, 69, 96, 98, 100, 107, 110], "importerror": 109, "imposs": [45, 107], "improv": [16, 66, 83, 88, 97], "inc": [54, 55, 107], "includ": [6, 12, 16, 18, 34, 51, 52, 56, 59, 67, 68, 82, 92, 97, 99, 106, 108], "incorrect": [52, 71], "increas": [44, 52, 79, 97, 108, 109], "increment": [12, 49], "index": [0, 2, 5, 6, 10, 26, 28, 30, 34, 45, 49, 59, 60, 93, 109], "index_valu": 28, "indic": [16, 28, 34, 52], "individu": 108, "infer": 82, "influenc": 52, "info": 55, "inform": [26, 30, 31, 32, 34, 39, 40, 41, 44, 47, 51, 52, 56, 59, 67, 68, 71, 72, 73, 83, 87, 98, 99, 100, 101, 102, 104, 106, 107, 108, 110], "ingest": [6, 26, 102], "ini": 55, "initi": [16, 25, 46, 48, 56, 61, 83, 88, 109], "initial_corpu": [46, 48], "initial_corpus_df": 48, "initial_qa": [46, 48], "initial_qa_df": 48, "initial_raw": [46, 48], "initial_raw_df": 48, "input": [0, 6, 11, 12, 19, 22, 23, 25, 26, 28, 34, 36, 37, 50, 59, 60, 66, 85, 89, 90, 91, 93, 95, 99, 100, 105, 107], "input_id": 23, "input_list": 6, "input_metr": 26, "input_str": 22, "input_tensor": 22, "input_text": [22, 23], "inputs_emb": 23, "inquir": 47, "insert": 34, "insid": [0, 55, 109, 110], "inspect": 55, "inspir": [64, 70, 71, 72, 73, 74, 94], "instal": [49, 54, 56, 98, 110], "instanc": [2, 7, 8, 10, 16, 20, 23, 26, 27, 28, 34, 44, 47, 48, 56, 59], "instead": [23, 47, 57, 110], "instruct": [20, 34, 55, 56, 61, 65, 86, 88, 98], "int": [0, 2, 6, 7, 8, 14, 16, 18, 19, 20, 22, 23, 26, 28, 34], "integ": [23, 49], "integr": [56, 81, 108], "intel": 82, "intend": 108, "interact": 50, "interchang": 108, "interest": 107, "interfac": 56, "intermedi": 22, "internet": 102, "interv": 0, "introduc": [44, 51, 57, 106], "invent": 47, "involv": [83, 101], "ir": [22, 76], "irrelev": 69, "is_async": 6, "is_best": 28, "is_dont_know": [8, 10], "is_fields_notnon": [0, 27], "is_passage_depend": [8, 10], "issu": [54, 58, 107, 109, 110], "italian": 30, "item": [16, 28, 52, 73, 74], "iter": [0, 8], "iter_cont": 49, "its": [6, 11, 20, 24, 26, 27, 28, 34, 37, 49, 50, 86, 92, 97, 102, 105, 106, 107], "itself": [56, 99, 105], "ja": [10, 16, 30, 45, 47, 98], "japanes": 30, "java_hom": 55, "jdk": 55, "jean": [34, 47], "jina": [0, 17, 79], "jina_rerank": 83, "jina_reranker_pur": [17, 22], "jinaai": 79, "jinaai_api_kei": 79, "jinarerank": [17, 22], "job": 105, "jq_schema": 39, "json": [38, 40, 49, 110], "json_to_html_t": 38, "judgment": 51, "just": [8, 11, 26, 34, 37, 43, 45, 60, 98, 107, 110], "k": [16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 34, 56, 63, 83, 101], "keep": [0, 28, 48, 60, 71, 73, 74, 103, 110], "kei": [0, 7, 15, 16, 27, 28, 30, 31, 32, 34, 37, 39, 56, 60, 75, 79, 89, 102, 103, 109, 110], "key_column_nam": 28, "keyword": [6, 7, 20, 51, 56, 59, 67, 68, 94, 95, 96], "kf1_polici": 107, "kind": [34, 107, 109], "kiwi": [30, 48, 98], "kiwi_result": 30, "kiwipiepi": 30, "kkma": 98, "know": [10, 34, 44, 46, 54, 92, 103, 104, 105, 108, 110], "knowledg": 34, "known": [37, 52], "ko": [10, 16, 30, 45, 47, 55, 83], "ko-rerank": 80, "konlpi": [31, 55, 98], "korea": [54, 55, 107], "korean": [2, 16, 30, 31, 56, 80], "korerank": [0, 17, 80], "koreranker_run_model": [17, 22], "kosimcs": 56, "kwarg": [0, 6, 7, 8, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 59, 67, 68, 94, 95, 96], "l": [22, 85], "label": [23, 52, 94], "lama_index": 37, "lambda": [0, 30, 45, 46, 48], "lang": [9, 10, 11, 12, 16, 45, 46, 47, 48, 58], "langchain": [1, 2, 4, 6, 7, 30, 36, 37, 41, 95, 107], "langchain_chunk": [0, 1, 31], "langchain_chunk_pur": [1, 2], "langchain_commun": [37, 39], "langchain_docu": 5, "langchain_document_to_parquet": 37, "langchain_documents_to_parquet": [4, 5, 37, 57], "langchain_openai": 36, "langchain_pars": [0, 1, 39, 41, 42, 48], "langchain_parse_pur": [1, 7], "langchain_text_splitt": 37, "languag": [2, 6, 10, 11, 16, 30, 45, 47, 51, 55, 58, 59, 66, 67, 68, 75, 82, 88, 98, 108], "laredo": 47, "larg": [22, 51, 56, 58, 59, 66, 67, 68, 75, 78, 79, 81, 82, 93, 108], "last": 41, "last_modified_datetim": [30, 34, 41, 71, 87], "lastli": [102, 103], "later": [52, 71, 110], "latest": [61, 71, 87], "latter": 23, "launch": [50, 110], "lazyinit": [0, 29, 30, 56], "le": 0, "lead": 66, "learn": [36, 54, 72, 73, 82, 102, 103, 105, 107, 110], "least": [6, 52, 73, 74, 105, 109], "legaci": [0, 1, 33, 36, 37, 57], "legal": 96, "length": [0, 20, 22, 26, 28, 52, 53, 58, 60, 70, 72, 85, 89, 92], "lengthen": 91, "less": [37, 52, 63, 66], "let": [52, 53, 105, 107, 110], "level": [16, 28, 51, 63, 66, 83, 101, 108], "lexcial": 99, "lexic": [26, 99], "lexical_id": 26, "lexical_scor": 26, "lexical_summari": 26, "lexical_summary_df": 26, "lexical_theoretical_min_valu": [26, 99], "li": 86, "libmag": 55, "librari": [49, 55, 57, 61, 110], "licens": 96, "life": 34, "light": 47, "like": [6, 16, 25, 26, 28, 30, 34, 41, 43, 46, 48, 52, 55, 59, 60, 66, 67, 68, 88, 92, 98, 99, 100, 103, 105, 107, 109, 110], "likelihood": 88, "limit": [22, 60, 76, 77, 78, 79, 82, 84, 85, 89, 107, 108, 109], "line": [0, 18, 20, 21, 22, 24, 25, 26, 49, 58, 63, 66, 69, 83, 92, 97], "linear": 107, "lingua": 66, "link": [8, 50, 51], "linked_corpu": [1, 8], "linked_raw": [1, 8], "linux": 109, "list": [0, 1, 2, 5, 6, 7, 9, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 34, 36, 37, 49, 52, 59, 67, 68, 77, 78, 86, 96, 99, 103], "list1": 26, "list2": 26, "lite": 89, "liter": 52, "literal_ev": 103, "littl": [25, 37, 44, 48, 107], "ll": [49, 50, 52, 97, 109], "llama": [2, 5, 6, 10, 20, 30, 37, 41, 45, 59, 60, 65], "llama3": [45, 109], "llama_cloud_api_kei": 7, "llama_docu": 5, "llama_document_to_parquet": 37, "llama_documents_to_parquet": [4, 5], "llama_gen_queri": [1, 8, 46, 47, 48, 57], "llama_index": [1, 4, 32, 37, 43, 44, 45, 46, 47, 48, 56, 58, 67, 68, 93, 109], "llama_index_chunk": [0, 1, 30, 32, 46, 48], "llama_index_chunk_pur": [1, 2], "llama_index_gen_gt": [1, 8, 43, 46, 48], "llama_index_generate_bas": [8, 9, 12], "llama_index_llm": [0, 16, 17, 24, 56, 58, 59, 60, 61, 84, 92, 94, 95, 96, 105, 107, 109], "llama_index_query_evolv": [1, 8, 44], "llama_pars": [1, 7, 40, 41, 42], "llama_parse_pur": [1, 7], "llama_text_node_to_parquet": [4, 5, 37], "llamaindex": [7, 37, 44, 45, 47, 56, 59, 61, 64, 71, 72, 73, 84, 107], "llamaindexcompressor": [17, 20], "llamaindexllm": [17, 18], "llamapars": [0, 1], "llm": [6, 9, 10, 11, 12, 16, 17, 18, 20, 22, 33, 34, 37, 38, 43, 44, 46, 47, 48, 51, 54, 55, 58, 61, 66, 67, 68, 69, 83, 84, 90, 91, 92, 93, 94, 95, 96, 97, 105, 107, 110], "llm evalu": 58, "llm infer": 61, "llm metric": [51, 106, 109], "llm_lingua": [20, 65], "llm_name": 20, "llmlingua": 65, "llmlingua_pur": [17, 20], "load": [0, 5, 28, 34, 37, 49, 55], "load_bm25_corpu": [17, 26], "load_chroma_collect": [17, 26], "load_data": 37, "load_dotenv": 55, "load_summary_fil": [0, 28], "load_yaml": [1, 14], "loader": [37, 39, 41], "local": [37, 54, 55, 56, 84, 102, 110], "local model": 56, "local_model": 6, "locat": [55, 107], "log": [55, 59], "log2": 52, "log_cli": 55, "log_cli_level": 55, "logarithm": 52, "logarithmic": 52, "logic": 51, "logprob": 60, "long": [66, 92, 104, 107], "long context reord": 91, "long_context_reord": [0, 17, 91], "longcontextreord": [17, 24], "longer": [6, 57], "longest": 16, "longllmlingua": [0, 17, 65], "look": [25, 26, 30, 34, 41, 46, 48, 52, 53, 98, 99, 100, 103, 107], "loop": [28, 108], "lost in the middl": 91, "lot": [34, 45, 105, 110], "low": 10, "lower": [28, 45, 52, 66, 70, 74, 102, 109], "lowercas": [31, 32, 39], "m": [22, 55, 85], "m3": 56, "mac": [55, 109], "made": [44, 45, 53, 107, 110], "magic": 107, "mai": [52, 108, 109], "main": [33, 107], "major": 56, "make": [0, 6, 8, 23, 26, 28, 33, 34, 36, 47, 48, 54, 55, 59, 61, 66, 67, 68, 90, 91, 92, 93, 105, 107, 110], "make_basic_gen_gt": [8, 11, 43, 46, 48], "make_batch": [0, 28], "make_combin": [0, 28], "make_concise_gen_gt": [8, 11, 43, 46, 48], "make_gen_gt_llama_index": [8, 11], "make_gen_gt_openai": [8, 11], "make_generator_callable_param": [0, 17, 24], "make_generator_inst": [15, 16], "make_llm": [17, 20], "make_metadata_list": [1, 2], "make_node_lin": [0, 29], "make_qa_with_existing_qa": [4, 6, 37], "make_retrieval_callable_param": [17, 25], "make_retrieval_gt_cont": [1, 8, 46, 48], "make_single_content_qa": [4, 6, 37, 57], "make_trial_summary_md": [0, 29], "maker": [18, 24, 90, 93, 105, 107], "malayalam": 30, "malfunct": 110, "manag": [55, 103], "mani": [44, 52, 59, 61, 67, 68, 96, 105], "manual": 110, "map": [0, 1, 8, 9, 10, 11, 12, 16, 22, 23, 30, 45, 46], "marco": [22, 85], "margin": 51, "markdown": [28, 40, 42, 49], "marker": [54, 55, 107], "markov": 105, "mask": 23, "master": 16, "match": [16, 34, 51], "matter": 107, "max": [10, 26, 60, 99], "max_length": 85, "max_ngram_ord": 16, "max_retri": 6, "max_token": [56, 59, 60, 61, 67, 68, 94, 95, 96, 97], "max_token_s": 18, "maximum": [6, 16, 61, 85], "md": 37, "me": [90, 91, 92, 93, 105, 107], "mean": [0, 6, 10, 16, 20, 21, 22, 26, 28, 34, 37, 43, 44, 51, 53, 61, 69, 98, 99, 104, 105, 108, 109], "measur": [0, 51, 53, 92, 97, 101], "measure_spe": [0, 29], "mechan": 108, "med": 81, "meet": 51, "meger": 107, "member": [34, 47], "memori": [76, 77, 78, 82, 85, 109], "mention": [49, 50], "merced": 96, "merg": [42, 68, 107, 108], "messag": [9, 12, 22, 39, 44], "messagerol": 44, "metad": 14, "metadata": [0, 2, 9, 10, 11, 12, 14, 22, 30, 71, 87], "metadata_list": 2, "meteor": [15, 16, 58, 92, 103, 106, 107, 109], "method": [0, 2, 5, 6, 7, 16, 23, 26, 27, 30, 36, 41, 42, 43, 44, 45, 46, 47, 48, 51, 55, 58, 92, 93, 97, 98, 99, 101, 103, 105, 106, 109], "metric": [0, 15, 18, 20, 24, 25, 26, 27, 34, 58, 63, 66, 69, 83, 92, 97, 101, 103, 104, 106, 107, 108, 109], "metric_input": [15, 16, 18, 20, 24, 25, 26], "metric_nam": [51, 58], "metricinput": [0, 15, 16, 18, 20, 24, 25, 26, 29], "mexican": 47, "might": [16, 36, 55, 60, 105, 110], "min": [26, 99], "mind": [103, 110], "mini": [10, 11, 45, 47], "minilm": [22, 85], "minimum": [26, 96, 99, 110], "mip": 102, "miss": 109, "mistak": [45, 109, 110], "mistral": [56, 61, 98], "mistralai": [56, 61, 98], "mix": 108, "mjpost": 16, "mm": [26, 71, 99, 101], "mmarco": 81, "mock": [0, 56], "mockembed": 0, "mockembeddingrandom": [0, 29], "mockllm": 56, "modal": 34, "mode": [19, 63, 64], "model": [0, 6, 9, 10, 11, 12, 16, 22, 23, 24, 26, 34, 37, 42, 45, 46, 47, 50, 51, 52, 54, 55, 58, 59, 60, 61, 63, 66, 67, 68, 72, 73, 75, 76, 77, 78, 79, 80, 82, 84, 85, 86, 88, 91, 92, 94, 95, 96, 98, 102, 104, 105, 107, 108, 109, 110], "model_computed_field": [0, 8, 9, 10, 11, 12, 17, 22, 29], "model_config": [0, 8, 9, 10, 11, 12, 17, 22, 29], "model_field": [0, 8, 9, 10, 11, 12, 17, 22, 29], "model_nam": [0, 9, 10, 11, 12, 20, 22, 28, 56, 65, 76, 77, 78, 81, 85], "modeling_enc_t5": [17, 22], "modest": 52, "modifi": [34, 41, 110], "modul": [29, 31, 32, 38, 39, 40, 48, 54, 62, 63, 69, 104, 106, 107, 109, 110], "modular": [104, 108], "modular rag": 107, "module_dict": 27, "module_nam": [0, 8], "module_param": [0, 2, 7, 8, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28], "module_summary_df": 26, "module_typ": [0, 25, 27, 30, 31, 32, 38, 39, 40, 41, 42, 48, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 109], "module_type_exist": [0, 27], "monot5": [0, 17, 55, 83], "monot5_run_model": [17, 22], "more": [6, 12, 26, 31, 32, 34, 36, 39, 40, 44, 46, 47, 48, 51, 52, 58, 61, 66, 80, 83, 84, 92, 93, 96, 97, 98, 104, 106, 108, 110], "most": [6, 37, 48, 52, 56, 58, 83, 93, 98, 101, 102, 103, 105, 110], "mount": 55, "mpnet": [16, 56], "mrr": 16, "msmarco": [22, 81], "mt5": 81, "much": [44, 45, 107, 109], "multi": [8, 12, 34, 47, 96, 97], "multi query expans": 95, "multi_context": [6, 36], "multi_query_expans": [0, 17, 56, 95], "multilingu": [75, 98], "multipl": [8, 24, 25, 26, 41, 95, 96, 99, 100, 103, 104, 105, 107, 108], "multiqueryexpans": [17, 25], "multiqueryretriev": 95, "multitask": 56, "must": [0, 5, 6, 8, 19, 20, 21, 22, 24, 26, 28, 31, 32, 34, 37, 47, 48, 52, 56, 61, 63, 71, 81, 87, 90, 91, 93, 96, 99, 103, 107, 108, 109, 110], "n": [8, 16, 22, 30, 38, 46, 48, 51, 55, 60, 87, 90, 91, 92, 93, 97, 107], "n_thread": 16, "naiv": [44, 107], "name": [0, 8, 9, 10, 11, 12, 15, 16, 22, 25, 26, 28, 47, 49, 58, 60, 61, 63, 65, 66, 69, 72, 73, 83, 84, 92, 97, 98, 99, 100, 104, 110], "natur": [46, 51, 82], "naver": 38, "ndarrai": 28, "necessari": [37, 55, 97], "need": [2, 6, 23, 30, 33, 34, 36, 37, 42, 44, 48, 49, 50, 52, 55, 66, 75, 79, 89, 92, 96, 98, 102, 103, 104, 107, 109, 110], "nest": 28, "nest_asyncio": [49, 110], "nested_list": 28, "never": 54, "new": [8, 9, 33, 34, 44, 47, 48, 50, 55, 56, 61, 103, 106, 107, 110], "new_corpu": 8, "new_corpus_df": 48, "new_embed": 23, "new_gen_gt": 11, "new_qa": 48, "newjeans1": 34, "newjeans2": 34, "newlin": 16, "next": [53, 63, 75, 79, 89, 92, 107], "next_id": 34, "nlg": 51, "nltk": 55, "nn": 23, "node": [0, 5, 29, 34, 37, 53, 56, 59, 62, 94, 95, 96, 99, 106], "node_dict": 27, "node_dir": [0, 26], "node_lin": [29, 63, 66, 69, 83, 92, 97, 103, 104, 106, 107], "node_line_1": [56, 103, 107], "node_line_2": [103, 107], "node_line_3": 103, "node_line_dict": 0, "node_line_dir": [0, 18, 19, 20, 21, 22, 24, 25, 26, 27], "node_line_nam": [56, 58, 63, 66, 69, 83, 92, 97, 101, 103, 104, 106, 107], "node_nam": 0, "node_param": [0, 27], "node_pars": [32, 37], "node_summary_df": 0, "node_typ": [0, 27, 56, 58, 63, 66, 69, 83, 92, 97, 101, 103, 106, 107, 109], "node_view": [0, 29], "nodepars": 2, "nodewithscor": 22, "non": 42, "none": [0, 2, 5, 6, 8, 16, 17, 22, 23, 27, 28, 49, 58, 66, 92], "nonetyp": 0, "normal": [26, 78, 99], "normalize_dbsf": [17, 26], "normalize_mean": 106, "normalize_method": [26, 99, 101], "normalize_mm": [17, 26], "normalize_str": [0, 28], "normalize_tmm": [17, 26], "normalize_unicod": [0, 28], "normalize_z": [17, 26], "norwegian": 30, "notabl": 91, "note": 63, "nousresearch": [20, 65], "now": [34, 36, 37, 46, 48, 61, 102, 103, 105, 106, 107, 109, 110], "np": 28, "ntabl": 38, "nuevo": 47, "nullabl": 49, "num_passag": [19, 64], "num_quest": [6, 37], "num_work": 0, "number": [0, 6, 22, 26, 28, 37, 41, 49, 52, 53, 61, 63, 64, 66, 69, 96, 97, 104, 108, 110], "numer": 54, "o": 55, "object": [0, 8, 9, 10, 11, 12, 16, 22, 27, 37, 49, 59, 67, 68, 71, 87, 94, 95, 96], "observ": [50, 91], "obtain": 83, "occur": [34, 60, 103, 107, 109], "ocr": [38, 42], "offer": 99, "offici": [16, 28], "often": [37, 47, 98, 109], "ok": 49, "okai": [34, 44], "okt": 98, "ollama": [45, 56], "onc": [34, 44, 59, 61, 67, 68, 75, 79, 99, 104, 107, 110], "one": [0, 2, 6, 8, 12, 20, 21, 22, 23, 24, 28, 30, 34, 37, 46, 47, 48, 52, 71, 73, 74, 92, 103, 104, 105, 108, 109], "one_hop_quest": [8, 12], "onli": [6, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 30, 34, 41, 46, 47, 53, 55, 59, 67, 68, 71, 92, 93, 104, 105, 107, 110], "oom": [84, 109], "open": [82, 102, 105, 109], "openai": [6, 9, 10, 11, 12, 16, 19, 24, 25, 37, 44, 45, 46, 47, 48, 56, 58, 59, 63, 66, 67, 68, 72, 73, 84, 92, 94, 95, 96, 97, 101, 102, 103, 105, 107], "openai_api_kei": [55, 60, 103, 109], "openai_embed_3_larg": [6, 37, 56], "openai_embed_3_smal": 56, "openai_gen_gt": [1, 8, 43], "openai_gen_queri": [1, 8, 47], "openai_llm": [0, 16, 17, 92], "openai_query_evolv": [1, 8, 44], "openai_truncate_by_token": [0, 28], "openaiembed": [26, 36], "openailik": [56, 109], "openaillm": [17, 18], "openapi": 49, "openvino": [0, 17, 83], "openvino rerank": 82, "openvino_rerank": 82, "openvino_run_model": [17, 22], "openvinorerank": [17, 22, 82], "oper": [34, 66, 101, 108], "oppos": 63, "opt": 61, "optim": [30, 33, 34, 36, 41, 45, 46, 54, 60, 61, 66, 72, 73, 82, 98, 99, 100, 103, 104, 106, 107, 108], "optimize_hybrid": [17, 26], "option": [5, 6, 16, 23, 30, 41, 49, 50, 55, 58, 63, 65, 66, 69, 80, 81, 83, 86, 88, 92, 97, 99, 100, 103, 105, 106, 108, 110], "order": [16, 51, 52], "org": 54, "organ": 104, "orient": 51, "origin": [0, 9, 26, 28, 34, 44, 71, 88], "original_queri": 44, "original_str": 30, "original_text": 14, "other": [16, 26, 28, 34, 44, 51, 52, 55, 59, 66, 67, 68, 69, 82, 84, 94, 95, 96, 99, 103, 104, 105, 107, 110], "otherwis": 41, "our": [26, 30, 34, 37, 38, 41, 54, 55, 62, 70, 74, 94, 95, 96, 105, 107, 109, 110], "out": [34, 48, 52, 54, 55, 56, 58, 61, 69, 70, 71, 72, 73, 74, 103, 104, 107, 109, 110], "outcom": [92, 97], "outperform": 51, "output": [6, 9, 11, 36, 47, 51, 58, 65, 88, 92, 97, 109], "output_attent": 23, "output_cl": 18, "output_filepath": [5, 6, 37], "output_hidden_st": 23, "output_path": 110, "over": [61, 108], "overal": [51, 83, 105], "overfit": 110, "overlap": 53, "overrid": 16, "overridden": 23, "overwrit": [5, 6], "own": [6, 34, 35, 38, 44, 54, 69, 94, 95, 96, 105, 108, 110], "p4dyxfmsa": [54, 107], "packag": [29, 55, 56, 57, 109], "pad": 23, "pad_token": 23, "page": [7, 30, 34, 38, 41, 42, 46, 49, 55, 84], "paid": 42, "pair": [6, 23, 28, 33, 37, 51], "panda": [27, 28, 36, 37], "paper": [16, 47, 51, 88, 94, 96, 107], "paradigm": [51, 107], "parallel": [22, 23, 26, 61], "param": [0, 2, 10, 16, 24, 25, 61, 104], "param_list": [17, 20], "paramet": [0, 5, 6, 7, 8, 10, 11, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 30, 37, 40, 44, 49, 50, 51, 56, 103, 104, 105, 108, 109, 110], "parquet": [0, 5, 6, 8, 30, 34, 36, 37, 41, 46, 48, 55, 104, 109, 110], "pars": [0, 1, 2, 8, 30, 31, 32, 33, 34, 38, 103], "parse_all_fil": [1, 7], "parse_config": [30, 41], "parse_inst": 7, "parse_method": [7, 31, 39, 41, 42, 48], "parse_modul": 39, "parse_output": [4, 6], "parse_project_dir": 48, "parsed_data_path": [0, 30], "parsed_result": 2, "parser": [29, 30, 48], "parser_nod": [1, 7], "part": [33, 52, 108], "pass": [6, 23, 24, 36, 59, 67, 68, 94, 95, 96, 107], "pass_compressor": [0, 17], "pass_passage_augment": [0, 17], "pass_passage_filt": [0, 17], "pass_query_expans": [0, 17], "pass_rerank": [0, 17], "pass_valu": 107, "passag": [8, 10, 12, 19, 20, 21, 22, 26, 30, 34, 44, 49, 52, 53, 55, 64, 66, 75, 76, 77, 78, 79, 81, 83, 84, 85, 86, 87, 88, 89, 94, 98, 99, 100, 102, 107], "passage augment": [63, 64], "passage compressor": [66, 67, 68], "passage compressor metr": 53, "passage filt": [69, 70, 71, 72, 73, 74], "passage_augment": 63, "passage_depend": [1, 8, 45], "passage_dependency_filter_llama_index": [8, 10, 45], "passage_dependency_filter_openai": [8, 10, 45], "passage_filt": 69, "passage_filter_nod": [17, 21], "passage_id": 26, "passage_rerank": 107, "passage_str": 6, "passageaugment": [0, 17], "passagecompressor": [0, 17], "passagefilt": [0, 17], "passagererank": [0, 17], "passcompressor": [17, 20], "passpassageaugment": [17, 19], "passpassagefilt": [17, 21], "passqueryexpans": [17, 25], "passrerank": [17, 22], "path": [2, 6, 7, 8, 14, 21, 22, 24, 25, 26, 27, 28, 30, 36, 37, 41, 49, 55, 82, 98, 110], "pattern": 41, "payload": 49, "pd": [0, 5, 6, 22, 27, 28, 36, 37], "pdf": [41, 48], "pdfminer": [39, 41, 48], "pdfplumber": [39, 41, 42, 48], "penalti": 16, "peopl": 44, "per": [37, 41, 53, 73, 74, 106], "percentag": 52, "percentil": 69, "percentile cutoff": 70, "percentile_cutoff": [0, 17, 70], "percentilecutoff": [17, 21], "perfect": [45, 107], "perform": [8, 16, 23, 25, 30, 34, 41, 42, 45, 47, 48, 50, 52, 53, 54, 58, 60, 63, 66, 69, 82, 83, 91, 92, 97, 105, 107], "persistentcli": 37, "perspect": 95, "pertin": 83, "phase": [83, 97], "phrase": 11, "piec": 25, "pip": [49, 54, 55, 98, 109], "pipelin": [33, 46, 48, 49, 50, 54, 55, 99, 104, 105, 107], "pipeline_dict": 110, "pkl": 104, "place": 47, "placehold": [6, 37], "plan": [34, 58, 107], "pleas": [6, 16, 22, 26, 34, 48, 52, 55, 56, 58, 61, 65, 88, 92, 97, 98, 103, 107, 108, 109, 110], "plu": [6, 26, 34, 36, 55, 56, 61, 71, 72, 73, 87, 92, 96, 98, 102, 103], "point": 55, "polish": 30, "pop": [28, 34], "pop_param": [0, 28], "poppler": 55, "popular": [51, 98], "port": [49, 110], "porter": 16, "porter_stemm": 26, "portugues": 30, "posit": [52, 91], "possibl": [105, 107, 109], "post": 107, "post_retrieve_node_lin": [58, 92], "potenti": [16, 66], "power": [45, 75, 79, 89, 107], "ppv": 52, "pre": [44, 45, 55, 107, 110], "pre_retrieve_node_lin": 97, "precis": [16, 51, 66, 94, 101], "pred": [16, 52], "predefin": [58, 66, 83], "predict": [16, 52], "prefix": 88, "prefix_prompt": [22, 88], "prepare_for_model": 23, "preprocess": [0, 29], "present": [51, 55], "pretti": 107, "prev": 63, "prev next augment": 64, "prev_id": 34, "prev_next_augment": [0, 17, 34, 63, 64], "prev_next_augmenter_pur": [17, 19], "prevent": [2, 11, 30, 60, 84, 107], "preview": 16, "previou": [0, 18, 19, 20, 21, 22, 24, 25, 26, 51, 57, 74, 105, 107], "previous_result": [0, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "prevnextpassageaugment": [17, 19], "primari": [63, 69, 83, 86], "primarili": 42, "primit": 37, "print": [22, 49], "prior": [37, 66], "priorit": 83, "prob": 59, "probabl": [60, 61, 105], "problem": [37, 48, 51, 107, 109], "process": [6, 16, 22, 26, 28, 33, 37, 50, 54, 58, 61, 66, 82, 83, 86, 92, 95, 97, 101, 102, 104, 105, 108, 110], "process_batch": [0, 28], "processed_data": [5, 6], "prod": 55, "produc": 51, "product": [55, 110], "project": [49, 54, 55], "project_dir": [0, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 41, 49, 50, 55, 110], "project_directori": 110, "prompt": [0, 1, 6, 8, 16, 18, 20, 22, 24, 27, 44, 59, 61, 84, 88, 90, 91, 93, 94, 95, 105, 107], "prompt1": [6, 37], "prompt2": [6, 37], "prompt3": 37, "prompt_mak": [92, 105, 107], "promptcompressor": 20, "promptmak": [0, 17], "prompts_ratio": [6, 37], "promt": 44, "proper": [6, 60], "properli": [28, 55, 98], "properti": [8, 49], "propos": 107, "protected_namespac": 0, "provid": [37, 38, 49, 50, 51, 59, 67, 68, 81, 88, 110], "pseudo": 60, "pt": 81, "ptt5": 81, "punctuat": 28, "punkt_tab": 55, "punktsentencetoken": 30, "pure": [0, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "purpos": [49, 63, 69, 83, 97, 108], "push": 109, "put": [34, 37, 65, 109], "pwd": 55, "py": 16, "pyarrow": 109, "pydant": [0, 9, 10, 11, 12, 22], "pydantic_model_": 0, "pymupdf": 39, "pyopenssl": 55, "pypdf": 39, "pypdfdirectori": 39, "pypdfdirectoryload": 39, "pypdfium2": 39, "pypi": 54, "pytest": 55, "python": [28, 31, 34, 37, 55, 90, 103, 109], "python3": 55, "pythoncodetextsplitt": 31, "q": 37, "qa": [0, 1, 6, 24, 25, 26, 30, 33, 43, 44, 45, 47, 55, 57, 104, 110], "qa_cnt": 0, "qa_creation_func": [6, 37], "qa_data": 27, "qa_data_path": [0, 55, 110], "qa_dataset": 6, "qa_df": [8, 28, 36, 37, 43, 45, 47], "qa_save_path": 8, "qa_test": 110, "qa_valid": 55, "qacreat": [1, 4, 36, 37, 57], "qid": [8, 47], "qualiti": [51, 83, 110], "quantit": 108, "quantiz": 109, "queri": [0, 1, 6, 8, 9, 16, 20, 21, 22, 24, 25, 26, 27, 28, 39, 48, 49, 50, 57, 63, 66, 67, 69, 72, 73, 74, 80, 81, 83, 84, 86, 89, 90, 91, 92, 93, 94, 101, 102, 105, 107], "query decompos": 96, "query expans": [94, 95, 96, 97], "query_bundl": 22, "query_decompos": [0, 17, 56, 96, 97], "query_embed": [22, 26], "query_evolve_openai_bas": [8, 9], "query_expans": [25, 92, 97, 105], "query_gen_openai_bas": [8, 12], "querybundl": 22, "querydecompos": [17, 25], "queryexpans": [0, 17], "question": [6, 8, 10, 12, 22, 25, 33, 34, 37, 43, 44, 51, 54, 65, 86, 88, 90, 91, 92, 93, 96, 107, 110], "question_num": 6, "question_num_per_cont": [6, 37], "quickli": 66, "quit": [51, 58], "r": 55, "rag": [6, 10, 30, 33, 34, 36, 37, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109], "rag api": 49, "rag dataset": [34, 36, 37], "rag deploi": [49, 50], "rag evalu": [34, 36, 37, 51, 52, 53, 58, 106, 109], "rag llm": 56, "rag metr": [51, 52, 53, 106, 109], "rag model": 56, "rag optim": [54, 103, 105, 108], "rag perform": 105, "rag structur": 108, "rag tutori": 110, "rag web": 50, "raga": [1, 4, 35, 44, 52], "rais": 16, "raise_except": 6, "raise_for_statu": 49, "ran": 104, "random": [0, 6, 29, 61], "random_single_hop": [1, 8, 46, 48, 57], "random_st": [0, 6, 8], "randomli": [6, 37, 46], "rang": [23, 46, 99, 100], "range_single_hop": [1, 8, 46], "rank": [16, 26, 98, 100], "rankgpt": [0, 17, 83], "rankgpt_rerank_prompt": [17, 22, 84], "rankgptrerank": 22, "rate": [52, 109], "ratio": [6, 37], "ratio_dict": 37, "raw": [1, 8, 33, 34, 38, 39, 40, 41, 42, 46, 48, 54, 57], "raw_df": [0, 8], "raw_end_idx": 8, "raw_id": 8, "raw_start_idx": 8, "re": [72, 73, 107], "read": [54, 90, 91, 92, 93, 103, 107, 109], "read_parquet": [36, 37], "readi": [37, 55, 105, 110], "real": [34, 37, 50, 60, 107], "realist": 44, "realli": [26, 34, 44, 61, 105, 107], "reason": [6, 36], "reasoning_evolve_raga": [8, 9, 44], "reassess": 83, "recal": [16, 51, 66, 101], "receiv": 50, "recenc": [0, 17, 69], "recency_filt": 71, "recencyfilt": [17, 21], "recip": 23, "reciproc": [16, 26, 100, 106], "recogn": 109, "recognit": 82, "recommend": [16, 24, 44, 47, 48, 55, 60, 92, 98, 104, 107, 109, 110], "reconstruct": 28, "reconstruct_list": [0, 28], "record": 104, "recurs": [28, 68], "recursivecharact": 31, "recursivecharactertextsplitt": 37, "reduc": [52, 66], "reduct": 66, "refer": [6, 48, 51, 52, 58, 92, 97, 108, 110], "refin": [0, 17, 66, 83], "reflect": 98, "regist": 23, "rel": 16, "relat": [34, 51, 52, 59, 67, 68, 69, 88, 94, 95, 96], "relationship": 14, "releas": [35, 47], "relev": [16, 22, 34, 37, 52, 58, 66, 81, 83, 84, 94, 97, 101], "remain": 108, "remeb": 37, "rememb": [52, 55, 105], "remind": 110, "remov": [26, 27, 28, 37, 45], "reorder": [83, 92], "repeat": 6, "replac": [0, 8, 9, 10, 11, 12, 20, 22, 28, 44, 49, 50, 92], "replace_valu": 28, "replace_value_in_dict": [0, 28], "repo": [34, 54, 98, 110], "repositori": 55, "repres": [102, 105], "request": [49, 107], "request_timeout": 109, "requir": [0, 6, 9, 10, 11, 12, 16, 22, 41, 47, 49, 51, 55, 59, 66, 67, 68, 81, 94, 95, 96, 99, 100, 108], "rerank": [20, 21, 22, 34, 55, 66, 71, 75, 79, 81, 83, 84, 86, 88, 89, 107], "reranker_recal": 107, "reset": [34, 45, 109], "reset_index": [45, 46, 48, 109], "resid": 108, "resolv": 109, "resourc": 105, "respect": 53, "respond": 97, "respons": [8, 9, 10, 11, 12, 44, 49, 50, 66, 67, 97], "rest": 84, "restart_evalu": 110, "restart_tri": [0, 29, 110], "result": [0, 2, 6, 8, 16, 18, 19, 20, 21, 22, 24, 25, 26, 28, 31, 32, 37, 40, 42, 45, 47, 48, 49, 51, 52, 53, 54, 60, 63, 74, 83, 92, 97, 99, 101, 104, 106, 107, 109], "result_column": 49, "result_df": [18, 20, 24, 26], "result_en_qa": 45, "result_qa": [43, 47], "result_to_datafram": [0, 28], "result_typ": [40, 42], "retreived_cont": [90, 91, 93], "retri": [6, 105], "retriev": [0, 2, 6, 10, 17, 20, 21, 22, 23, 25, 29, 30, 34, 43, 45, 49, 56, 63, 64, 65, 66, 68, 75, 79, 83, 88, 89, 92, 93, 94, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108], "retrieval metr": 52, "retrieval_cont": [0, 29], "retrieval_context": 16, "retrieval_f1": [15, 16, 21, 22, 25, 63, 69, 83, 97, 101], "retrieval_func": 25, "retrieval_gt": [0, 8, 12, 27, 30, 37, 47, 48], "retrieval_gt_cont": [0, 8, 27], "retrieval_map": [15, 16], "retrieval_modul": [25, 97], "retrieval_mrr": [15, 16], "retrieval_ndcg": [15, 16], "retrieval_param": 25, "retrieval_precis": [15, 16, 21, 22, 63, 69, 83, 97, 101, 106], "retrieval_recal": [15, 16, 21, 22, 25, 63, 69, 83, 97, 101, 106, 107], "retrieval_result": 52, "retrieval_token_f1": [15, 16, 66], "retrieval_token_precis": [15, 16, 66], "retrieval_token_recal": [15, 16, 66], "retrieve metr": 52, "retrieve_node_lin": [63, 66, 69, 83, 101], "retrieve_scor": [19, 20, 21, 22, 26], "retrieved_cont": [0, 19, 20, 21, 22, 26, 27, 90, 91, 92, 93, 107], "retrieved_id": [0, 19, 20, 21, 22, 26, 27], "retrieved_passag": 49, "return": [0, 2, 5, 6, 7, 8, 10, 11, 12, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 42, 44, 49, 59, 60, 69, 71, 96, 102, 103], "return_dict": 23, "return_index": 0, "revers": [19, 28, 70, 74], "right": [10, 37, 56, 107, 110], "rl_polici": 107, "rm": 55, "roadmap": 104, "roberta": 56, "robust": 47, "role": 44, "root": 55, "roug": [15, 16, 58, 92, 103, 106, 107, 109], "rouge1": 16, "rouge2": 16, "rouge_typ": 16, "rougel": 16, "rougelsum": 16, "row": [9, 10, 11, 12, 26, 27, 28, 34, 44, 104], "rpm": 79, "rr": [16, 52], "rrf": [26, 99, 101], "rrf_calcul": [17, 26], "rrf_k": [26, 97, 100, 103], "rrf_pure": [17, 26], "rubert": 56, "rude": 44, "run": [0, 1, 8, 17, 23, 27, 29, 46, 54, 66, 70, 71, 72, 73, 74, 103, 104, 105], "run_api": [49, 110], "run_api_serv": [49, 110], "run_chunk": [1, 2], "run_config": 6, "run_evalu": [0, 17, 26, 27], "run_generator_nod": [17, 18], "run_nod": [0, 27], "run_node_lin": [0, 29], "run_pars": [1, 7], "run_passage_augmenter_nod": [17, 19], "run_passage_compressor_nod": [17, 20], "run_passage_filter_nod": [17, 21], "run_passage_reranker_nod": [17, 22], "run_prompt_maker_nod": [17, 24], "run_queri": 49, "run_query_embedding_batch": [17, 26], "run_query_expansion_nod": [17, 25], "run_retrieval_nod": [17, 26], "run_web": [50, 110], "runner": [0, 49, 110], "runtim": 82, "russian": 30, "sacrebleu": 16, "safe": 28, "said": 51, "same": [0, 25, 26, 28, 30, 41, 44, 50, 52, 63, 84, 96, 104, 105, 108, 110], "sampl": [0, 1, 6, 30, 37, 41, 47, 48, 52, 57, 61, 109, 110], "sample_config": [55, 110], "samplingparam": 61, "satisfactori": [37, 48], "satisfi": [22, 89], "save": [5, 6, 8, 10, 18, 30, 34, 38, 40, 41, 103, 110], "save_parquet_saf": [0, 28], "save_path": 8, "scalabl": 37, "scale": [26, 66, 99, 106], "schema": [0, 1, 16, 26, 29, 33, 39, 43, 45, 47, 48, 49, 57], "score": [10, 16, 22, 26, 28, 53, 66, 70, 73, 74, 98, 99, 100, 101], "script": [28, 34], "search": [28, 97, 98, 102], "search_str": 14, "second": [23, 47, 53, 104, 107], "secret": 103, "section": [30, 41, 46, 103, 106, 108, 110], "secur": 109, "see": [30, 33, 41, 48, 52, 53, 56, 89, 103, 104, 105, 107, 109], "seed": 6, "seek": [47, 51], "segment": 51, "select": [0, 6, 8, 18, 20, 21, 22, 24, 25, 26, 37, 45, 47, 48, 98, 104, 105, 106, 107, 108], "select_best": [0, 29], "select_best_averag": [0, 29], "select_best_rr": [0, 29], "select_bm25_token": [17, 26], "select_normalize_mean": [0, 29], "select_top_k": [0, 28], "self": [28, 96], "sem": 16, "sem_scor": [15, 16, 92, 103], "semant": [26, 51, 58, 98, 99], "semantic_id": 26, "semantic_llama_index": [30, 32], "semantic_scor": 26, "semantic_summari": 26, "semantic_summary_df": 26, "semantic_theoretical_min_valu": [26, 99], "semanticdoubl": 30, "semanticdoublemerg": 32, "semscor": 51, "send": [75, 79], "sensit": 52, "sent": 49, "sentenc": [16, 22, 45, 48, 51, 56, 72, 73, 83, 93, 98], "sentence transform": 85, "sentence_splitt": [30, 48], "sentence_splitter_modul": 30, "sentence_transform": [0, 17], "sentence_transformer_rerank": 85, "sentence_transformer_run_model": [17, 22], "sentencetransformerrerank": [17, 22], "sentencetransformerstoken": 31, "sentencewindow": [30, 32, 48], "sequenc": [22, 23, 108], "seri": 28, "serializeasani": 22, "seriou": [109, 110], "serv": [58, 66, 83, 88, 92, 97, 101, 108], "server": [54, 60, 102, 109], "server_nam": 50, "server_port": 50, "session": 22, "set": [2, 6, 7, 8, 10, 23, 24, 26, 28, 37, 38, 39, 40, 54, 55, 56, 58, 59, 60, 61, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 83, 84, 88, 89, 92, 94, 95, 96, 97, 99, 102, 103, 104, 105, 107, 108, 109], "set_initial_st": [0, 29], "set_input_embed": [22, 23], "set_page_config": [0, 29], "set_page_head": [0, 29], "setup": 105, "sever": [51, 55, 60, 110], "shape": [16, 28], "share": [50, 110], "shell": 55, "short": [43, 107], "shot": [88, 94, 96], "should": [0, 6, 7, 9, 10, 11, 12, 16, 22, 23, 30, 39, 51, 56, 60, 71, 109], "show": [47, 104, 105, 107], "shown": 48, "side": 60, "sigma": [26, 99], "signal": 88, "significantli": [66, 97, 108], "silent": 23, "similar": [16, 51, 58, 63, 69, 70, 74, 98, 99, 100, 102, 105], "similarity percentile cutoff": 72, "similarity_percentile_cutoff": [0, 17, 72], "similarity_threshold_cutoff": [0, 17, 69, 73], "similaritypercentilecutoff": [17, 21], "similaritythresholdcutoff": [17, 21], "simpl": [1, 4, 11, 36, 45, 51, 55, 58, 98, 107], "simple_openai": 55, "simpledirectoryread": 37, "simpler": 44, "simpli": [56, 87, 110], "simul": 108, "sinc": [16, 23, 35, 37, 45, 48, 50, 52, 58, 60, 84, 90, 92, 93], "singl": [6, 7, 8, 23, 28, 34, 37, 46, 54, 96, 103, 104, 107, 108], "single_token_f1": [15, 16], "situat": 99, "six": 53, "size": [0, 2, 6, 7, 16, 48, 60, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 99, 102, 109], "sk": 55, "skip": [20, 21, 22, 24, 92], "slice_tensor": [17, 22], "slice_tokenizer_result": [17, 22], "slovenian": 30, "slow": 61, "slower": [45, 66], "small": [6, 56], "smaller": 52, "smooth": 16, "smooth_method": 16, "smooth_valu": 16, "so": [0, 11, 20, 26, 30, 34, 37, 38, 44, 45, 46, 48, 50, 51, 52, 53, 55, 56, 61, 63, 66, 69, 70, 71, 72, 73, 74, 83, 92, 96, 97, 100, 103, 104, 105, 107, 110], "softwar": 102, "solut": [37, 48, 107], "some": [14, 26, 34, 44, 45, 46, 51, 53, 55, 56, 60, 75, 79, 99, 105, 109], "someon": [10, 96], "someth": [37, 90, 91, 92, 93, 109], "sometim": [44, 45, 60, 109], "soon": 107, "sort": [28, 87], "sort_by_scor": [0, 17, 19, 28], "sound": 52, "sourc": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 82, 99, 100, 102], "sp_model_kwarg": 23, "spanish": 30, "spars": [26, 98], "spearman": 51, "special": [23, 28, 66], "specif": [16, 28, 41, 43, 44, 47, 49, 58, 66, 81, 86, 98, 108, 110], "specifi": [7, 34, 55, 56, 58, 59, 67, 68, 80, 81, 86, 87, 92, 97, 99, 100, 105, 106, 108], "speech": 82, "speed": [0, 58, 61, 66, 83, 92, 97, 101, 103, 108], "speed_threshold": [58, 63, 66, 69, 83, 92, 97, 101, 103, 106, 108], "spice": 96, "split": [16, 30, 42, 104, 108, 110], "split_by_sentence_kiwi": [0, 1, 30], "split_datafram": [0, 28], "split_docu": 37, "split_into_s": 30, "split_summari": 16, "splitter": [31, 32], "squad": 28, "squar": 96, "src": 55, "ss": 71, "stabl": 47, "stage": [55, 88], "standalon": 61, "standard": [0, 51], "start": [28, 34, 35, 49, 55, 91, 110], "start_chunk": [0, 29, 30, 48], "start_end_idx": 30, "start_idx": [2, 49], "start_pars": [0, 29, 41, 48], "start_trial": [0, 29, 110], "starter": [54, 110], "state": [6, 23, 47, 105], "static": [16, 19], "statist": 52, "status_cod": 49, "stem": [51, 98], "stemmer": [16, 98], "step": [8, 22, 30, 41, 42, 46, 55, 83, 107], "still": [105, 107, 109], "stop": 16, "storag": 38, "store": [8, 30, 102], "str": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 37, 42], "straight": 107, "strateg": 108, "strategi": [18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 34, 63, 69, 103, 107, 109], "strategy_dict": [24, 25], "strategy_nam": [0, 24, 25], "strategyqa": 96, "stream": [17, 18, 60], "stream_queri": 49, "streamlit": 110, "string": [6, 15, 26, 27, 28, 30, 34, 37, 49, 88, 92, 103], "strip": 16, "structur": [6, 9, 11, 26, 47, 49, 103, 107, 110], "structured_output": [17, 18], "studi": [91, 98], "sub": 96, "subclass": 23, "submodul": [1, 4, 29], "subpackag": 29, "subsequ": 16, "subset": 8, "successfulli": [30, 41, 110], "sudo": 109, "suffix": [16, 88], "suffix_prompt": [22, 88], "suggest": [34, 105, 107, 109], "sum": [6, 52], "summar": [51, 66], "summari": [18, 28, 30, 41, 43, 49, 52, 105, 110], "summary_df": [26, 28], "summary_path": 28, "super": [44, 47], "support": [10, 11, 16, 26, 29, 34, 36, 37, 45, 46, 47, 52, 54, 55, 59, 60, 62, 67, 68, 72, 73, 75, 79, 82, 99, 103, 107, 108], "sure": [55, 110], "survei": 107, "swap": 108, "swedish": 30, "synonym": 51, "synthet": [37, 48], "system": [10, 34, 44, 45, 55, 58, 59, 66, 67, 68, 83, 92, 101, 108], "system_prompt": [11, 44], "t": [6, 10, 24, 28, 34, 36, 37, 41, 44, 46, 49, 50, 52, 54, 55, 92, 96, 99, 107, 109], "t5": 23, "t5config": 23, "t5pretrainedmodel": 23, "t5token": 23, "tabl": [10, 41], "table_detect": [38, 42], "table_hybrid_pars": [0, 1, 41, 42], "table_param": 42, "table_parse_modul": 42, "tailor": [66, 100, 108], "take": [23, 56, 107], "taken": 28, "target": [6, 20, 28, 55, 65, 107], "target_dict": [0, 28], "target_kei": 28, "target_modul": [26, 97, 99, 103], "target_module_param": [26, 99], "target_node_lin": 107, "target_token": [20, 65], "tart": [17, 22, 55, 81, 83], "tart_run_model": [22, 23], "task": [23, 28, 51, 58, 82], "team": 38, "techniqu": 108, "tecolot": 47, "tell": [90, 91, 92, 93], "temp_client": 26, "temperatur": [36, 37, 45, 56, 58, 59, 60, 61, 67, 68, 84, 94, 95, 96, 97, 105, 109], "temporari": [6, 108], "temporarili": 108, "tensor_parallel_s": 61, "term": [52, 97], "tesseract": 55, "test": [50, 52, 55, 56, 58, 63, 66, 69, 83, 97, 99, 103, 104, 105], "test01": 55, "test_siz": [6, 36], "test_weight_s": [99, 101], "testset": 36, "text": [2, 5, 6, 7, 16, 20, 26, 28, 30, 31, 32, 33, 34, 37, 40, 41, 42, 49, 56, 58, 59, 61, 65, 67, 68, 85, 88], "text_nod": 5, "text_param": 42, "text_parse_modul": 42, "text_splitt": 31, "textnod": [5, 37], "textsplitt": 2, "textur": 96, "tf": 98, "than": [6, 12, 26, 34, 45, 51, 61, 63, 71, 96, 98, 104, 105, 107, 109], "thei": [37, 47, 51, 66, 103, 107, 108], "them": [23, 24, 25, 26, 28, 34, 40, 52, 68, 105], "theoret": [26, 99], "therefor": [23, 37, 42, 52, 53, 92, 97], "thi": [0, 2, 5, 6, 9, 10, 11, 12, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 55, 56, 58, 59, 60, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 81, 83, 84, 86, 87, 88, 90, 91, 92, 93, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110], "thing": [103, 110], "think": [34, 103, 105, 107], "third": [26, 52, 53], "those": [45, 47, 99], "thought": 51, "three": [30, 33, 41, 53, 71, 104, 107], "threshold": [0, 58, 66, 69, 71, 83, 92, 97, 101, 103, 108], "threshold cutoff": 74, "threshold_cutoff": [0, 17, 74], "thresholdcutoff": [17, 21], "through": [54, 82, 92, 97], "thu": 52, "tier": 109, "time": [6, 34, 44, 48, 50, 54, 58, 66, 69, 70, 71, 72, 83, 92, 97, 101, 104, 105, 108, 110], "time_rerank": [0, 17, 87], "timeout": 109, "timererank": [17, 22, 87], "tiny2": 56, "tmm": [26, 99, 101], "to_list": [0, 28], "to_parquet": [1, 8, 46, 48], "token": [10, 16, 17, 18, 20, 22, 23, 26, 30, 46, 48, 51, 58, 61, 65, 66, 84, 92], "token_false_id": 22, "token_ids_0": 23, "token_ids_1": 23, "token_limit": 28, "token_threshold": [58, 92], "token_true_id": 22, "tokenization_enc_t5": [17, 22], "tokenize_ja_sudachipi": [17, 26], "tokenize_ko_kiwi": [17, 26], "tokenize_ko_kkma": [17, 26], "tokenize_ko_okt": [17, 26], "tokenize_porter_stemm": [17, 26], "tokenize_spac": [17, 26], "tokenizer_output": 22, "tokentextsplitt": 37, "too": [6, 44, 75, 79, 104, 105], "took": 104, "tool": 54, "toolkit": 82, "top": [19, 22, 61, 63, 83, 97, 101, 104], "top_k": [6, 19, 22, 25, 26, 28, 37, 63, 69, 83, 97, 99, 100, 101, 103, 106, 107], "top_logprob": 60, "top_n": [17, 22], "top_p": 61, "topic": 51, "topn": 52, "torch": 23, "total": 53, "tpm": 79, "track": 34, "trail": [104, 110], "train": [104, 110], "transform": [22, 56, 61, 83], "translat": [16, 51], "treat": [34, 103], "tree": 66, "tree summar": 68, "tree_summar": [0, 17, 56, 66, 68], "treesummar": [17, 20], "trg_lang": 16, "trial": 49, "trial_dir": [0, 28, 49, 110], "trial_fold": [30, 41, 50, 110], "trial_path": [0, 2, 7, 50], "troubl": [54, 109], "troubleshoot": [54, 55], "true": [0, 5, 6, 9, 10, 11, 12, 16, 19, 22, 27, 28, 37, 38, 42, 45, 46, 48, 49, 50, 52, 55, 60, 70, 74, 89, 109], "truncat": [22, 26, 89], "truncate_by_token": [17, 18], "truth": [6, 16, 34, 43, 45, 51, 52, 58, 105], "try": [55, 102, 107, 109], "tune": 95, "tupl": [0, 2, 7, 14, 15, 22, 26, 27, 28, 34, 99, 100], "turbo": [24, 36, 37, 58, 59, 60, 66, 67, 68, 84, 92, 95, 96, 105, 109], "turkish": 30, "turn": 15, "tutori": [33, 36, 49, 50, 54, 107], "two": [8, 12, 23, 26, 34, 37, 51, 52, 61, 79, 106, 107, 110], "two_hop_increment": [8, 12, 47], "two_hop_quest": [8, 12], "twohopincrementalrespons": [8, 12], "txt": [6, 37, 55], "type": [0, 6, 16, 23, 26, 27, 28, 30, 34, 37, 40, 41, 44, 49, 52, 56, 58, 60, 61, 75, 76, 77, 78, 79, 82, 85, 89, 94, 95, 96, 97, 98, 101, 107, 110], "typic": [47, 91], "tyre": 107, "u": 96, "ultim": 54, "unanswer": 10, "under": [105, 109], "underscor": 66, "understand": [104, 105], "understudi": 51, "unexpect": [34, 110], "unicamp": 81, "uniform": 36, "unigram": [16, 51], "unintend": [45, 103], "union": 0, "uniqu": [26, 34, 66, 108], "unit": 37, "unk": 23, "unk_token": 23, "unknown": 0, "unless": 28, "unstructur": 39, "unstructured_api_kei": 39, "unstructuredmarkdown": 39, "unstructuredpdf": 39, "unstructuredxml": 39, "until": 108, "up": [34, 53, 55, 66, 68, 108, 110], "updat": [8, 34, 48, 56], "update_corpu": [1, 8, 48], "upgrad": [55, 61, 109], "upon": 55, "upr": [0, 17, 55, 83, 107], "uprscor": [17, 22], "upsert": [5, 6, 28], "upstage_api_kei": 39, "upstagelayoutanalysi": [39, 42], "url": 49, "us": [0, 2, 5, 6, 7, 8, 9, 10, 11, 12, 16, 18, 20, 21, 22, 23, 24, 25, 26, 28, 33, 34, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 57, 58, 59, 63, 65, 66, 67, 68, 69, 71, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 107, 109], "usag": [26, 66, 84, 102], "use_bf16": [22, 88], "use_fp16": [77, 78], "use_stemm": 16, "user": [0, 34, 37, 44, 50, 63, 64, 88, 92, 95, 101, 104, 106, 107, 110], "user_prompt": 44, "usr": 55, "usual": [43, 44], "utf": 49, "util": [0, 1, 29, 83], "v": 55, "v0": [35, 37, 55, 56, 58, 61, 98], "v1": [0, 9, 10, 11, 12, 22, 28, 56, 75, 79, 81], "v2": [16, 22, 56, 75, 77, 81, 85], "vagu": 45, "valid": [6, 8, 29, 105], "validate_corpus_dataset": [0, 28], "validate_llama_index_prompt": [4, 6], "validate_qa_dataset": [0, 28], "validate_qa_from_corpus_dataset": [0, 28], "validate_strategy_input": [0, 29], "valu": [0, 6, 15, 16, 19, 23, 26, 27, 28, 31, 32, 34, 37, 39, 44, 51, 52, 56, 70, 71, 72, 73, 74, 87, 99, 100, 103, 105, 106, 109], "valuabl": 37, "value_column_nam": 28, "vari": [45, 97, 99, 108], "variabl": [7, 28, 39, 55, 60, 75, 79, 89, 109], "variant": 81, "variat": [34, 97], "variou": [30, 41, 48, 54, 58, 66, 82, 83, 92, 101], "vector": [0, 6, 102, 107], "vector db": 102, "vector_db": 26, "vectordb": [0, 17, 25, 37, 56, 97, 98, 101, 103, 104], "vectordb_ingest": [17, 26], "vectordb_pur": [17, 26], "verbos": [17, 22, 84], "veri": 54, "verifi": 47, "version": [26, 34, 47, 57, 61, 98, 105, 106, 109, 110], "video": 34, "viscond": 96, "vision": 82, "visit": 26, "vllm": [0, 16, 17, 58, 92, 109], "vocab_fil": 23, "vocabulari": 23, "voil\u00e0": 107, "voyag": 22, "voyage_api_kei": 89, "voyage_cli": 22, "voyageai": [0, 17, 89], "voyageai_rerank": 83, "voyageai_rerank_pur": [17, 22], "voyageairerank": [17, 22], "vram": 109, "wa": [26, 30, 38, 41, 47, 51, 52, 56, 105, 109], "wai": [25, 30, 41, 44, 45, 50, 103, 105, 107, 109], "wait": [55, 61], "want": [6, 8, 16, 24, 26, 27, 28, 31, 32, 34, 37, 39, 42, 45, 47, 53, 54, 55, 56, 71, 75, 76, 77, 78, 79, 82, 85, 87, 89, 98, 99, 100, 103, 105, 108], "warn": 16, "water": 53, "we": [16, 20, 21, 22, 30, 33, 34, 37, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 58, 61, 92, 97, 98, 102, 103, 104, 105, 107, 109, 110], "web": 29, "weight": [16, 26, 51, 97, 99, 100], "weight_rang": [99, 100, 101], "welcom": 107, "well": [30, 37, 41, 46, 51, 52, 54], "were": 50, "what": [10, 30, 34, 41, 47, 52, 54, 56, 88, 90, 91, 92, 93, 96, 104, 108], "when": [0, 6, 10, 16, 20, 21, 22, 23, 24, 26, 34, 38, 44, 47, 53, 55, 56, 58, 60, 61, 69, 71, 79, 87, 91, 92, 96, 102, 103, 104, 108, 109, 110], "where": [45, 54, 66, 101, 104], "whether": [5, 16, 22, 23, 51, 60, 77, 78, 88, 89], "which": [6, 16, 18, 23, 24, 26, 28, 34, 37, 44, 47, 50, 51, 52, 53, 54, 56, 59, 66, 67, 68, 69, 79, 92, 98, 99, 100, 103, 105, 107, 109, 110], "whichev": 52, "while": [23, 37, 45, 55, 108], "whitespac": [26, 28], "who": [47, 110], "whole": [0, 8, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 105, 110], "why": [34, 105, 107], "wikipedia": 47, "wildcard": 41, "window": [92, 109], "window_replac": [0, 17, 93], "window_s": [30, 48], "windowreplac": [17, 24], "wise": 84, "with_debugging_log": 6, "within": [23, 58, 66, 83, 92, 101, 108], "without": [42, 54, 57, 59, 60, 63, 66, 67, 68, 69, 83, 94, 97, 99, 107, 110], "wonder": 105, "word": [11, 16, 43, 51, 98], "work": [37, 55, 99, 103, 109, 110], "workaround": 109, "worker": 0, "would": [25, 52, 104], "write": [22, 33, 44, 55, 84, 88, 96, 99, 103, 105, 107], "written": [31, 32, 39], "wrong": [2, 30, 37, 107], "wsl": 109, "x": [0, 22, 23, 30, 49], "x86": 82, "yaml": [0, 48, 49, 51, 54, 55, 56, 105, 106, 107, 108, 109], "yaml_filepath": 0, "yaml_path": [0, 14, 50, 110], "yaml_to_markdown": [0, 29], "ye": 47, "yet": [36, 55, 107], "yml": 103, "you": [0, 2, 5, 6, 7, 8, 10, 16, 19, 20, 21, 22, 24, 26, 27, 28, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 87, 89, 92, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110], "your": [6, 16, 30, 33, 34, 35, 38, 40, 41, 44, 49, 50, 54, 55, 60, 61, 69, 75, 79, 89, 90, 91, 92, 93, 94, 95, 96, 100, 103, 105, 106, 107, 109], "your_api_bas": 56, "your_api_kei": [56, 109], "your_cohere_api_kei": 75, "your_dir_path": 37, "your_jina_api_kei": 79, "your_voyageai_api_kei": 89, "yourself": [26, 98, 99], "yyyi": 71, "z": [26, 99, 101], "zero": [23, 88, 94]}, "titles": ["autorag package", "autorag.data package", "autorag.data.chunk package", "autorag.data.corpus package", "autorag.data.legacy package", "autorag.data.legacy.corpus package", "autorag.data.legacy.qacreation package", "autorag.data.parse package", "autorag.data.qa package", "autorag.data.qa.evolve package", "autorag.data.qa.filter package", "autorag.data.qa.generation_gt package", "autorag.data.qa.query package", "autorag.data.qacreation package", "autorag.data.utils package", "autorag.evaluation package", "autorag.evaluation.metric package", "autorag.nodes package", "autorag.nodes.generator package", "autorag.nodes.passageaugmenter package", "autorag.nodes.passagecompressor package", "autorag.nodes.passagefilter package", "autorag.nodes.passagereranker package", "autorag.nodes.passagereranker.tart package", "autorag.nodes.promptmaker package", "autorag.nodes.queryexpansion package", "autorag.nodes.retrieval package", "autorag.schema package", "autorag.utils package", "autorag", "Chunk", "Langchain Chunk", "Llama Index Chunk", "Data Creation", "Dataset Format", "Legacy", "RAGAS evaluation data generation", "Start creating your own evaluation data", "Clova", "Langchain Parse", "Llama Parse", "Parse", "Table Hybrid Parse", "Answer Generation", "Query Evolving", "Filtering", "QA creation", "Query Generation", "Evaluation data creation tutorial", "API endpoint", "Web Interface", "Generation Metrics", "Retrieval Metrics", "Retrieval Token Metrics", "AutoRAG documentation", "Installation and Setup", "Configure LLM &amp; Embedding models", "Migration Guide", "8. Generator", "llama_index LLM", "OpenAI LLM", "vllm", "Available List", "3. Passage Augmenter", "Prev Next Augmenter", "Long LLM Lingua", "6. Passage_Compressor", "Refine", "Tree Summarize", "5. Passage Filter", "Percentile Cutoff", "Recency Filter", "Similarity Percentile Cutoff", "Similarity Threshold Cutoff", "Threshold Cutoff", "cohere_reranker", "Colbert Reranker", "Flag Embedding LLM Reranker", "Flag Embedding Reranker", "jina_reranker", "Ko-reranker", "MonoT5", "OpenVINO Reranker", "4. Passage_Reranker", "RankGPT", "Sentence Transformer Reranker", "TART", "Time Reranker", "UPR", "voyageai_reranker", "F-String", "Long Context Reorder", "7. Prompt Maker", "Window Replacement", "HyDE", "Multi Query Expansion", "Query Decompose", "<strong>1. Query Expansion</strong>", "BM25", "Hybrid - cc", "Hybrid - rrf", "2. Retrieval", "Vectordb", "Make a custom config YAML file", "Folder Structure", "How optimization works", "Strategy", "Road to Modular RAG", "Structure", "TroubleShooting", "Tutorial"], "titleterms": {"": 52, "0": [49, 52, 53], "1": [30, 31, 32, 38, 39, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 60, 97, 109, 110], "2": [30, 31, 32, 38, 39, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 60, 101, 109, 110], "3": [30, 31, 32, 39, 41, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 60, 63, 109, 110], "4": [30, 32, 39, 41, 46, 48, 51, 52, 83, 109], "5": [32, 39, 46, 51, 52, 55, 69, 109], "6": [39, 46, 51, 52, 66, 109], "7": [39, 92], "8": 58, "For": 98, "If": 37, "The": [38, 109], "about": 107, "access": 55, "accur": 60, "add": [30, 56], "addit": [55, 99, 100], "all": [39, 105], "also": 110, "an": 110, "ani": 98, "answer": [43, 46], "api": [39, 49, 55, 109, 110], "appli": [52, 53], "augment": [63, 64], "auto": [37, 60], "autorag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 50, 52, 53, 54, 55, 107, 110], "autotoken": 98, "avail": [30, 31, 32, 39, 42, 62], "averag": 52, "backend": 102, "base": [2, 6, 7, 11, 13, 18, 19, 20, 21, 22, 24, 25, 26, 27, 45], "basic": [33, 43, 52, 53], "befor": [75, 79, 89], "benefit": [63, 66, 69, 83, 97], "bert": 51, "best": 105, "between": 69, "bleu": 51, "bm25": [26, 98], "both": 37, "build": [55, 109], "cach": 55, "can": [54, 105], "cc": 99, "charact": 31, "check": [30, 41], "chunk": [2, 30, 31, 32, 48], "chunker": [0, 30], "cli": [0, 50], "client": 49, "clova": [7, 38], "code": [49, 110], "coher": [22, 51], "cohere_rerank": 75, "colab": 110, "colbert": [22, 76], "column": [30, 41], "come": 38, "command": [49, 110], "complet": 47, "compress": 44, "concept": [33, 47, 108], "concis": 43, "condit": 44, "config": [58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 110], "configur": [56, 106], "consist": 51, "contact": 107, "contain": 55, "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 46], "context": 91, "corpu": [3, 5, 34, 36, 37, 48], "could": 109, "creat": [37, 110], "creation": [33, 46, 48, 57], "csv": [39, 104], "cumul": 52, "curl": 49, "custom": [36, 37, 44, 55, 103, 110], "cutoff": [70, 72, 73, 74], "dashboard": [0, 110], "data": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 33, 36, 37, 46, 48, 57, 104, 109], "data_path_glob": 41, "dataset": [34, 110], "debug": 55, "decompos": 96, "deepeval_prompt": 16, "default": 96, "definit": [51, 52, 53, 58, 63, 66, 69, 83, 92, 97, 101], "depend": 45, "deploi": [0, 110], "detect": [38, 42], "didn": 110, "differ": [69, 109], "directori": 55, "discount": 52, "do": 105, "doc_id": 34, "docker": 55, "document": [37, 49, 54], "don": 45, "dontknow": 10, "dure": 110, "earli": 107, "ecosystem": 54, "embed": [56, 77, 78], "endpoint": 49, "environ": 103, "error": [109, 110], "eval": 51, "evalu": [0, 15, 16, 36, 37, 48, 105, 110], "evolv": [9, 44], "exampl": [30, 31, 32, 38, 39, 40, 42, 47, 49, 50, 52, 53, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 106, 108], "exist": 37, "expans": [95, 97], "explan": [55, 99, 100, 108], "extract": [40, 110], "extract_evid": 8, "f": 90, "f1": [52, 53], "face": 109, "factoid": 47, "featur": [30, 37], "file": [30, 39, 41, 58, 63, 66, 69, 83, 92, 97, 101, 103, 110], "filter": [10, 45, 46, 69, 71], "find": 110, "first": 110, "flag": [77, 78], "flag_embed": 22, "flag_embedding_llm": 22, "fluenci": 51, "folder": [30, 41, 50, 104, 110], "format": [34, 110], "from": [36, 37, 38, 55, 109], "fstring": 24, "function": 44, "g": 51, "gain": 52, "gener": [15, 16, 18, 36, 43, 46, 47, 51, 58], "generation_gt": [11, 34, 37], "get": [46, 49, 54], "gpu": [61, 109], "gradio": 50, "gt": 46, "guid": 57, "have": [37, 39], "help": 54, "hf_home": 55, "hop": 47, "how": [31, 32, 39, 51, 54, 105], "html": [38, 39], "huggingfac": 98, "hybrid": [42, 99, 100], "hybrid_cc": 26, "hybrid_rrf": 26, "hyde": [25, 94], "i": [30, 31, 32, 37, 39, 63, 66, 69, 83, 97, 103, 105, 107, 109], "imag": 55, "import": 109, "increment": 47, "index": [32, 37, 56, 104], "inform": 38, "instal": [55, 109], "instanc": [30, 41], "instead": 50, "interfac": [50, 110], "japanes": 98, "jina": 22, "jina_rerank": 79, "json": [39, 104], "kei": 55, "know": [45, 107], "ko": 80, "ko_kiwi": 98, "ko_kkma": 98, "ko_okt": 98, "korean": [55, 98], "korerank": 22, "langchain": [3, 5, 31, 39], "langchain_chunk": 2, "langchain_pars": 7, "languag": 40, "legaci": [4, 5, 6, 35], "length": 109, "line": [103, 104, 107, 108, 110], "lingua": 65, "list": 62, "llama": [32, 40], "llama_gen_queri": 12, "llama_index": [3, 5, 6, 13, 59], "llama_index_chunk": 2, "llama_index_gen_gt": 11, "llama_index_llm": 18, "llama_index_query_evolv": 9, "llamaindex": [43, 109], "llamapars": 7, "llm": [45, 56, 59, 60, 65, 77, 109], "log": 60, "long": [34, 65, 91], "long_context_reord": 24, "longllmlingua": 20, "make": [37, 44, 103], "maker": 92, "manual": 55, "map": [48, 52], "markdown": 39, "mean": [52, 106], "merger": 107, "metadata": 34, "meteor": 51, "method": [31, 32, 39], "metric": [16, 51, 52, 53], "metricinput": 27, "migrat": 57, "model": [36, 56, 81, 89], "modeling_enc_t5": 23, "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 41, 42, 56, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 108], "modular": 107, "monot5": [22, 81], "more": [56, 105, 107], "mrr": 52, "multi": [61, 95], "multi_query_expans": 25, "multipl": 37, "must": 39, "name": [30, 81, 89], "ndcg": 52, "need": [39, 105], "next": [64, 105, 110], "node": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 58, 63, 66, 69, 83, 92, 97, 100, 101, 103, 104, 105, 107, 108, 110], "node_lin": 0, "normal": [52, 106], "note": [55, 110], "occur": 110, "ollama": 109, "onli": 37, "openai": [43, 55, 60, 109], "openai_gen_gt": 11, "openai_gen_queri": 12, "openai_llm": [18, 60], "openai_query_evolv": 9, "openvino": [22, 82], "optim": [48, 105, 109, 110], "option": 34, "origin": 109, "output": [30, 41, 60], "overview": [30, 37, 41, 46, 47, 48, 58, 66, 83, 92, 97, 101, 106], "own": 37, "packag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "paramet": [39, 41, 42, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 106], "pars": [7, 39, 40, 41, 42, 48, 55], "parser": [0, 38, 41], "pass": 105, "pass_compressor": [20, 66], "pass_passage_augment": [19, 63], "pass_passage_filt": [21, 69], "pass_query_expans": [25, 97], "pass_rerank": [22, 83], "passag": [37, 45, 63, 69], "passage_compressor": 66, "passage_depend": 10, "passage_rerank": 83, "passageaugment": 19, "passagecompressor": 20, "passagefilt": 21, "passagererank": [22, 23], "path": [34, 50], "pdf": 39, "percentil": [70, 72], "percentile_cutoff": 21, "pipelin": [30, 41, 110], "point": 38, "polici": 107, "porter_stemm": 98, "post": 49, "pre_retrieve_node_lin": 104, "precis": [52, 53], "prepar": 110, "preprocess": 28, "prev": 64, "prev_next_augment": 19, "prob": 60, "project": [30, 41, 50, 104, 110], "prompt": [9, 10, 11, 12, 37, 60, 92, 96], "promptmak": 24, "provid": 44, "purpos": [58, 66, 101], "python": [49, 110], "qa": [8, 9, 10, 11, 12, 34, 36, 37, 46, 48], "qacreat": [6, 13], "qid": 34, "queri": [12, 34, 37, 44, 46, 47, 95, 96, 97], "query_decompos": 25, "query_expans": 104, "queryexpans": 25, "question": [36, 45, 46, 47], "rag": [107, 110], "raga": [6, 13, 36], "rank": [52, 106], "rankgpt": [22, 84], "raw": 37, "reason": 44, "recal": [52, 53], "recenc": [21, 71], "reciproc": 52, "recommend": 34, "refin": [20, 67], "relat": 109, "relev": 51, "reorder": 91, "replac": 93, "requesttimeout": 109, "rerank": [69, 76, 77, 78, 80, 82, 85, 87], "resourc": 104, "restart": 110, "result": [30, 41, 105, 110], "retriev": [15, 16, 26, 46, 52, 53, 101], "retrieval_cont": [15, 16], "retrieval_gt": [34, 52], "retrieve_node_lin": 104, "road": 107, "roug": 51, "row": 109, "rrf": 100, "rule": 45, "run": [2, 7, 18, 19, 20, 21, 22, 24, 25, 26, 30, 41, 49, 50, 55, 109, 110], "runner": 50, "sampl": [8, 34, 46, 49, 104], "save": [37, 46], "schema": [8, 27], "score": [51, 52], "see": 110, "sem": 51, "sem_scor": 58, "semant": 32, "sentenc": [30, 31, 32, 85], "sentence_transform": 22, "separ": 38, "server": [49, 110], "set": [30, 36, 41], "setup": 55, "short": 34, "similar": [72, 73], "similarity_percentile_cutoff": 21, "similarity_threshold_cutoff": 21, "simpl": [6, 13, 32], "sourc": 55, "space": 98, "specif": 51, "specifi": [30, 41, 50, 103, 110], "splitter": 30, "start": [30, 37, 41, 54], "start_end_idx": 34, "step": 110, "stori": 34, "strategi": [0, 58, 66, 83, 92, 97, 101, 105, 106, 108], "stream": 49, "streamlit": 50, "string": 90, "structur": [104, 108], "submodul": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "subpackag": [0, 1, 4, 8, 15, 17, 22], "sudachipi": 98, "summar": [68, 108], "summari": 104, "support": [0, 30, 40, 41, 56, 58, 66, 81, 83, 89, 92, 97, 101, 102], "swap": 105, "system": 110, "t": [45, 105, 110], "tabl": [38, 40, 42], "table_hybrid_pars": 7, "tart": [23, 86], "test": 110, "text": 38, "threshold": [73, 74], "threshold_cutoff": 21, "time": 87, "time_rerank": 22, "token": [31, 32, 53, 60, 98], "tokenization_enc_t5": 23, "transform": 85, "tree": 68, "tree_summar": 20, "trial": [50, 104, 110], "trial_path": 110, "troubl": [55, 98], "troubleshoot": 109, "truncat": 60, "tupl": 103, "tutori": [48, 110], "two": 47, "type": [36, 39, 47], "u": 107, "unanswer": 45, "understand": 52, "unicodedecodeerror": 109, "upr": [22, 88], "us": [30, 31, 32, 36, 37, 39, 50, 51, 55, 56, 60, 61, 98, 103, 105, 106, 110], "usag": [47, 49, 75, 79, 89], "user": 55, "util": [14, 15, 16, 17, 28], "v0": 57, "v1": 49, "valid": [0, 110], "variabl": 103, "vectordb": [26, 102], "version": [49, 107], "vllm": [18, 56, 61], "voyageai": 22, "voyageai_rerank": 89, "want": [30, 41, 50, 107, 110], "web": [0, 50, 110], "what": [37, 63, 66, 69, 83, 97, 103, 107, 110], "wheel": 109, "when": 37, "while": 109, "why": [50, 54, 60, 61, 110], "window": [32, 55, 93], "window_replac": 24, "work": 105, "write": 110, "xml": 39, "yaml": [30, 31, 32, 38, 39, 40, 41, 42, 50, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 110], "you": 37, "your": [37, 56, 110]}})
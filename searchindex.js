Search.setIndex({"docnames": ["api_spec/autorag", "api_spec/autorag.data", "api_spec/autorag.data.corpus", "api_spec/autorag.data.qacreation", "api_spec/autorag.data.utils", "api_spec/autorag.evaluate", "api_spec/autorag.evaluate.metric", "api_spec/autorag.nodes", "api_spec/autorag.nodes.generator", "api_spec/autorag.nodes.passagecompressor", "api_spec/autorag.nodes.passagereranker", "api_spec/autorag.nodes.passagereranker.tart", "api_spec/autorag.nodes.promptmaker", "api_spec/autorag.nodes.queryexpansion", "api_spec/autorag.nodes.retrieval", "api_spec/autorag.schema", "api_spec/autorag.utils", "api_spec/modules", "data_creation/data_format", "data_creation/tutorial", "deploy/api_endpoint", "deploy/web", "index", "install", "local_model", "nodes/generator/generator", "nodes/generator/llama_index_llm", "nodes/generator/vllm", "nodes/index", "nodes/passage_compressor/passage_compressor", "nodes/passage_compressor/tree_summarize", "nodes/passage_reranker/cohere", "nodes/passage_reranker/jina_reranker", "nodes/passage_reranker/koreranker", "nodes/passage_reranker/monot5", "nodes/passage_reranker/passage_reranker", "nodes/passage_reranker/rankgpt", "nodes/passage_reranker/sentence_transformer_reranker", "nodes/passage_reranker/tart", "nodes/passage_reranker/upr", "nodes/prompt_maker/fstring", "nodes/prompt_maker/prompt_maker", "nodes/query_expansion/hyde", "nodes/query_expansion/query_decompose", "nodes/query_expansion/query_expansion", "nodes/retrieval/bm25", "nodes/retrieval/hybrid_cc", "nodes/retrieval/hybrid_rrf", "nodes/retrieval/retrieval", "nodes/retrieval/vectordb", "optimization/custom_config", "optimization/folder_structure", "optimization/optimization", "roadmap/modular_rag", "structure", "troubleshooting", "tutorial"], "filenames": ["api_spec/autorag.rst", "api_spec/autorag.data.rst", "api_spec/autorag.data.corpus.rst", "api_spec/autorag.data.qacreation.rst", "api_spec/autorag.data.utils.rst", "api_spec/autorag.evaluate.rst", "api_spec/autorag.evaluate.metric.rst", "api_spec/autorag.nodes.rst", "api_spec/autorag.nodes.generator.rst", "api_spec/autorag.nodes.passagecompressor.rst", "api_spec/autorag.nodes.passagereranker.rst", "api_spec/autorag.nodes.passagereranker.tart.rst", "api_spec/autorag.nodes.promptmaker.rst", "api_spec/autorag.nodes.queryexpansion.rst", "api_spec/autorag.nodes.retrieval.rst", "api_spec/autorag.schema.rst", "api_spec/autorag.utils.rst", "api_spec/modules.rst", "data_creation/data_format.md", "data_creation/tutorial.md", "deploy/api_endpoint.md", "deploy/web.md", "index.rst", "install.md", "local_model.md", "nodes/generator/generator.md", "nodes/generator/llama_index_llm.md", "nodes/generator/vllm.md", "nodes/index.md", "nodes/passage_compressor/passage_compressor.md", "nodes/passage_compressor/tree_summarize.md", "nodes/passage_reranker/cohere.md", "nodes/passage_reranker/jina_reranker.md", "nodes/passage_reranker/koreranker.md", "nodes/passage_reranker/monot5.md", "nodes/passage_reranker/passage_reranker.md", "nodes/passage_reranker/rankgpt.md", "nodes/passage_reranker/sentence_transformer_reranker.md", "nodes/passage_reranker/tart.md", "nodes/passage_reranker/upr.md", "nodes/prompt_maker/fstring.md", "nodes/prompt_maker/prompt_maker.md", "nodes/query_expansion/hyde.md", "nodes/query_expansion/query_decompose.md", "nodes/query_expansion/query_expansion.md", "nodes/retrieval/bm25.md", "nodes/retrieval/hybrid_cc.md", "nodes/retrieval/hybrid_rrf.md", "nodes/retrieval/retrieval.md", "nodes/retrieval/vectordb.md", "optimization/custom_config.md", "optimization/folder_structure.md", "optimization/optimization.md", "roadmap/modular_rag.md", "structure.md", "troubleshooting.md", "tutorial.md"], "titles": ["autorag package", "autorag.data package", "autorag.data.corpus package", "autorag.data.qacreation package", "autorag.data.utils package", "autorag.evaluate package", "autorag.evaluate.metric package", "autorag.nodes package", "autorag.nodes.generator package", "autorag.nodes.passagecompressor package", "autorag.nodes.passagereranker package", "autorag.nodes.passagereranker.tart package", "autorag.nodes.promptmaker package", "autorag.nodes.queryexpansion package", "autorag.nodes.retrieval package", "autorag.schema package", "autorag.utils package", "autorag", "Dataset Format", "Start creating your own evaluation data", "API endpoint", "Web Interface", "AutoRAG documentation", "Installation and Setup", "Configure LLM &amp; Embedding models", "6. Generator", "llama_index LLM", "vllm", "Available List", "4. Passage_Compressor", "Tree Summarize", "cohere_reranker", "jina_reranker", "Ko-reranker", "MonoT5", "3. Passage_Reranker", "RankGPT", "Sentence Transformer Reranker", "TART", "UPR", "F-String", "5. Prompt Maker", "HyDE", "Query Decompose", "<strong>1. Query Expansion</strong>", "BM25", "Hybrid - cc", "Hybrid - rrf", "2. Retrieval", "Vectordb", "Make custom config yaml file", "Folder Structure", "How optimization works", "Road to Modular RAG", "Structure", "TroubleShooting", "Tutorial"], "terms": {"data": [0, 12, 13, 14, 17, 18, 20, 22, 25, 29, 35, 44, 49, 54, 56], "corpu": [0, 1, 3, 14, 48, 51, 56], "langchain": [0, 1, 19, 53], "llama_index": [0, 1, 9, 19, 24, 25, 28, 30, 42, 43], "qacreat": [0, 1, 19], "base": [0, 1, 6, 7, 11, 15, 19, 24, 26, 30, 32, 33, 34, 35, 36, 38, 39, 40, 46, 47, 48, 53, 54], "simpl": [0, 1, 25, 53], "util": [0, 1, 17, 35, 41, 44, 47, 48], "metric": [0, 5, 8, 9, 12, 13, 14, 18, 25, 29, 35, 41, 44, 48, 50, 51, 53, 54, 55], "gener": [0, 3, 7, 10, 12, 13, 16, 17, 18, 19, 24, 26, 27, 28, 29, 39, 41, 42, 44, 46, 47, 52, 53, 54, 55], "retriev": [0, 3, 7, 9, 10, 11, 12, 13, 17, 18, 24, 28, 29, 30, 31, 32, 35, 39, 41, 42, 44, 45, 46, 47, 49, 50, 52, 53, 54], "retrieval_cont": [0, 17], "evaluate_gener": [0, 5], "evaluate_retriev": [0, 5], "evaluate_retrieval_cont": [0, 5], "cast_embedding_model": [0, 5], "cast_metr": [0, 5], "node": [0, 2, 17, 18, 19, 24, 26, 28, 42, 43], "llama_index_llm": [0, 7, 12, 24, 25, 26, 27, 36, 41, 52, 53, 55], "run": [0, 7, 11, 15, 17, 22, 23, 29, 46, 47, 50, 51, 52], "vllm": [0, 7, 24, 25, 28, 55], "passagecompressor": [0, 7], "pass_compressor": [0, 7, 28], "tree_summar": [0, 7, 24, 29, 30], "passagererank": [0, 7], "coher": [0, 6, 7, 25, 28, 31, 32], "jina": [0, 7, 28, 32], "korerank": [0, 7, 33], "monot5": [0, 7, 28, 35], "pass_rerank": [0, 7, 28], "rankgpt": [0, 7, 28, 35], "sentence_transform": [0, 7], "upr": [0, 7, 28, 35, 53], "promptmak": [0, 7], "fstring": [0, 7, 28, 40, 41, 53], "queryexpans": [0, 7], "hyde": [0, 7, 24, 28, 44], "pass_query_expans": [0, 7, 28], "query_decompos": [0, 7, 24, 28, 43, 44], "bm25": [0, 7, 13, 28, 44, 46, 47, 48, 50, 51, 53], "hybrid_cc": [0, 7, 28, 44, 46, 47, 48], "hybrid_rrf": [0, 7, 28, 44, 46, 47, 48, 50], "vectordb": [0, 7, 13, 24, 28, 44, 45, 46, 47, 48, 50, 51], "schema": [0, 17], "from_dict": [0, 15], "module_param": [0, 8, 9, 10, 12, 13, 14, 15, 16], "module_typ": [0, 12, 13, 15, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55], "get_param_combin": [0, 15], "node_param": [0, 15], "node_typ": [0, 12, 15, 24, 25, 29, 35, 41, 44, 48, 50, 53, 55], "run_nod": [0, 15], "extract_valu": [0, 15], "extract_values_from_nod": [0, 15], "module_type_exist": [0, 15], "preprocess": [0, 17], "cast_corpus_dataset": [0, 16], "cast_qa_dataset": [0, 16], "validate_corpus_dataset": [0, 16], "validate_qa_dataset": [0, 16], "convert_env_in_dict": [0, 16], "convert_string_to_tuple_in_dict": [0, 16], "explod": [0, 16], "fetch_cont": [0, 16], "load_summary_fil": [0, 16], "make_combin": [0, 16], "normalize_str": [0, 16], "openai_truncate_by_token": [0, 16], "process_batch": [0, 16], "replace_value_in_dict": [0, 16], "result_to_datafram": [0, 16], "save_parquet_saf": [0, 16], "class": [0, 10, 11, 15, 18, 24, 36, 38, 49], "runner": [0, 17, 20, 56], "config": [0, 10, 11, 12, 24, 53, 55], "dict": [0, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16], "project_dir": [0, 12, 13, 14, 21, 56], "str": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16], "none": [0, 2, 3, 6, 9, 10, 11, 16, 25, 29, 41, 45], "sourc": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 46, 47, 49], "object": [0, 15, 19, 26, 30, 42, 43], "classmethod": [0, 15], "from_trial_fold": [0, 17, 20], "trial_path": [0, 21], "load": [0, 2, 14, 16, 18, 19, 23], "from": [0, 3, 4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 24, 26, 27, 29, 31, 32, 35, 40, 41, 43, 44, 46, 47, 48, 51, 52, 53, 54, 56], "trial": [0, 20], "folder": [0, 20, 23, 53], "must": [0, 2, 3, 6, 9, 10, 12, 14, 16, 18, 19, 20, 24, 27, 34, 40, 46, 47, 50, 53, 54, 55, 56], "alreadi": [0, 11, 14, 52], "us": [0, 2, 3, 6, 8, 9, 10, 11, 12, 13, 14, 18, 20, 22, 23, 25, 26, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56], "It": [0, 3, 6, 8, 9, 10, 12, 14, 15, 16, 18, 19, 20, 24, 25, 26, 30, 31, 32, 35, 38, 39, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56], "set": [0, 3, 8, 9, 10, 11, 12, 14, 19, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 39, 41, 42, 43, 44, 50, 51, 52, 53, 54, 55], "parent": 0, "directori": [0, 2, 3, 8, 9, 10, 12, 13, 14, 21, 56], "paramet": [0, 2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21, 24, 50, 51, 52, 54, 55, 56], "The": [0, 3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56], "path": [0, 3, 4, 10, 16, 19, 20, 56], "return": [0, 2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 26, 49, 50], "initi": [0, 10, 11, 13, 24, 27, 35, 39, 55], "from_yaml": [0, 17, 20, 56], "yaml_path": [0, 21, 56], "yaml": [0, 10, 12, 20, 22, 24, 52, 53, 54, 55], "file": [0, 2, 3, 4, 6, 10, 12, 14, 16, 18, 19, 20, 22, 23, 24, 31, 32, 36, 46, 47, 51, 52, 53, 54, 55], "extract": [0, 15, 20, 46, 47], "extract_best_config": [0, 17, 56], "method": [0, 2, 11, 14, 15, 25, 41, 44, 45, 48, 50, 52, 55], "project": [0, 22, 23], "default": [0, 2, 3, 6, 8, 9, 10, 11, 12, 13, 14, 16, 18, 20, 24, 26, 30, 31, 32, 34, 36, 37, 38, 39, 41, 42, 43, 46, 47, 50, 54], "i": [0, 2, 3, 6, 8, 9, 10, 11, 12, 13, 14, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 54, 56], "current": [0, 54, 56], "queri": [0, 3, 9, 10, 11, 12, 13, 14, 17, 20, 21, 29, 34, 35, 36, 38, 40, 41, 42, 48, 49, 52, 53], "result_column": [0, 17, 20], "generated_text": 0, "pipelin": [0, 20, 21, 22, 46, 47, 51, 52, 53], "start": [0, 16, 56], "singl": [0, 3, 11, 16, 18, 19, 22, 43, 50, 51, 53, 54], "so": [0, 9, 14, 18, 23, 24, 27, 29, 35, 41, 44, 46, 47, 50, 51, 52, 53, 56], "first": [0, 8, 14, 22, 23, 31, 32, 35, 49, 50, 51, 52, 53], "query_expans": [0, 13, 28, 41, 44, 52], "user": [0, 18, 20, 21, 39, 41, 48, 51, 53, 56], "result": [0, 3, 6, 8, 9, 10, 12, 13, 14, 16, 19, 20, 22, 35, 41, 44, 46, 47, 48, 51, 53, 55, 56], "column": [0, 3, 8, 9, 10, 12, 13, 14, 16, 18, 20, 56], "name": [0, 5, 6, 8, 10, 13, 14, 25, 27, 29, 35, 36, 41, 44, 48, 51, 56], "answer": [0, 11, 12, 13, 18, 19, 20, 38, 40, 41, 53], "which": [0, 3, 6, 8, 11, 12, 13, 14, 16, 18, 19, 22, 26, 29, 30, 32, 41, 42, 43, 45, 46, 47, 50, 52, 53, 55, 56], "output": [0, 3, 10, 20, 25, 39, 41, 44, 55], "run_api_serv": [0, 17, 20, 56], "host": [0, 20, 56], "0": [0, 3, 6, 10, 11, 14, 19, 20, 24, 25, 26, 27, 31, 36, 43, 44, 46, 48, 51, 52, 55, 56], "port": [0, 20, 56], "int": [0, 3, 6, 8, 9, 10, 11, 13, 14, 16], "8000": [0, 20, 56], "kwarg": [0, 3, 6, 8, 9, 10, 11, 26, 30, 42, 43], "api": [0, 10, 14, 31, 32, 49, 50], "server": [0, 22, 49, 55], "you": [0, 2, 3, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 31, 32, 35, 36, 37, 41, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56], "can": [0, 2, 3, 6, 8, 9, 10, 11, 12, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 56], "send": [0, 31, 32], "post": [0, 20, 53], "request": [0, 20, 53], "http": [0, 9, 10, 11, 13, 20, 22, 23, 24, 53], "json": [0, 20, 56], "bodi": [0, 20], "like": [0, 3, 12, 13, 14, 18, 20, 23, 24, 26, 29, 30, 39, 41, 42, 43, 46, 47, 50, 52, 53, 55, 56], "below": [0, 21, 23, 25, 53, 55, 56], "your": [0, 6, 18, 20, 21, 22, 23, 27, 31, 32, 40, 41, 50, 52, 53, 55], "And": [0, 8, 13, 14, 19, 20, 22, 23, 27, 50, 52, 53, 56], "respons": [0, 20, 21, 29, 44], "other": [0, 6, 8, 14, 16, 18, 23, 26, 29, 30, 36, 42, 43, 46, 47, 50, 51, 53, 56], "argument": [0, 3, 6, 16, 26, 30, 42, 43], "uvicorn": 0, "runnerinput": [0, 17], "basemodel": 0, "model_computed_field": [0, 17], "classvar": 0, "computedfieldinfo": 0, "A": [0, 6, 8, 11, 12, 14, 16, 18, 19, 25, 33, 44, 52, 53, 54], "dictionari": [0, 3, 5, 14, 16, 18, 19, 25, 34], "comput": [0, 6, 10, 11, 29, 39], "field": 0, "correspond": [0, 10, 15], "model_config": [0, 17], "configdict": 0, "configur": [0, 22, 25, 26, 29, 30, 35, 39, 41, 42, 43, 44, 47, 48, 52, 54, 56], "model": [0, 3, 6, 8, 10, 11, 12, 13, 14, 18, 19, 22, 23, 25, 26, 27, 29, 30, 31, 32, 36, 37, 39, 41, 42, 43, 45, 49, 51, 52, 53, 54, 55], "should": [0, 3, 6, 9, 11, 24, 55], "conform": 0, "pydant": 0, "model_field": [0, 17], "fieldinfo": 0, "annot": 0, "requir": [0, 3, 23, 26, 29, 30, 34, 42, 43, 54], "true": [0, 2, 3, 10, 15, 23, 55], "fals": [0, 2, 3, 6, 10, 11, 16, 36, 39], "metadata": [0, 4], "about": [0, 18, 26, 30, 40, 41, 42, 43, 49, 50, 51, 52, 54, 56], "defin": [0, 11, 34, 35, 48, 49], "map": [0, 11], "thi": [0, 2, 3, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 23, 24, 25, 26, 29, 30, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "replac": [0, 9, 16], "__fields__": 0, "v1": [0, 10, 16, 24, 31, 32, 34], "output_path": [0, 56], "optim": [0, 18, 22, 27, 29, 46, 47, 50, 51, 53, 54], "want": [0, 3, 9, 11, 12, 14, 15, 16, 18, 19, 22, 23, 24, 31, 32, 37, 50, 52, 54], "save": [0, 2, 3, 8, 18, 50, 56], "yml": [0, 50], "If": [0, 2, 3, 9, 10, 11, 12, 13, 16, 18, 19, 22, 23, 31, 32, 37, 45, 50, 51, 52, 53, 54, 55, 56], "doe": [0, 8, 11, 14, 25, 26, 27, 29, 35, 41, 50, 52, 53], "just": [0, 14, 18, 53, 56], "valu": [0, 3, 5, 11, 15, 16, 18, 19, 24, 50, 52], "extract_node_line_nam": [0, 17], "config_dict": 0, "list": [0, 2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 26, 30, 38, 42, 43, 46, 47, 50], "line": [0, 8, 9, 10, 12, 13, 14, 25, 29, 35, 41, 44, 48], "given": [0, 2, 3, 10, 11, 14, 19, 34, 36, 38, 42, 52], "order": 0, "access": [0, 35], "trail_fold": 0, "extract_node_strategi": [0, 17], "type": [0, 3, 6, 11, 12, 14, 15, 16, 18, 19, 20, 24, 25, 27, 31, 32, 37, 44, 48, 53, 56], "its": [0, 3, 9, 12, 14, 15, 18, 19, 21, 38, 41, 44, 49, 52, 53], "kei": [0, 5, 6, 10, 15, 16, 18, 19, 24, 31, 32, 49, 50, 55, 56], "summary_df_to_yaml": [0, 17], "summary_df": [0, 14], "datafram": [0, 2, 3, 8, 9, 10, 12, 13, 14, 15, 16], "convert": [0, 16, 19, 50], "summari": [0, 8, 14, 16, 52, 56], "qa_data_path": [0, 56], "corpus_data_path": [0, 56], "restart_tri": [0, 17, 56], "start_trial": [0, 17, 56], "make_node_lin": [0, 17], "node_line_dict": 0, "make": [0, 3, 10, 11, 12, 14, 16, 18, 22, 23, 26, 27, 29, 30, 40, 41, 42, 43, 52, 53, 56], "param": [0, 6, 12, 13, 27, 51], "get": [0, 4, 6, 8, 10, 14, 20, 23, 26, 31, 32, 50, 52, 53, 55, 56], "input": [0, 3, 8, 10, 11, 13, 14, 18, 19, 21, 26, 29, 37, 40, 52, 53], "insid": [0, 56], "run_node_lin": [0, 17], "node_line_dir": [0, 8, 9, 10, 12, 13, 14, 15], "previous_result": [0, 8, 9, 10, 12, 13, 14, 15], "whole": [0, 52, 56], "each": [0, 3, 13, 14, 15, 16, 18, 19, 46, 47, 50, 51, 52, 53, 54], "": [0, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 22, 24, 25, 26, 29, 30, 39, 40, 41, 42, 43, 48, 52, 53, 56], "previou": [0, 8, 9, 10, 12, 13, 14, 52, 53], "qa": [0, 3, 12, 13, 14, 51, 56], "parquet": [0, 2, 3, 14, 18, 19, 51, 56], "final": [0, 46, 47, 52, 53], "avoid_empty_result": [0, 17], "return_index": 0, "decor": [0, 16], "avoid": 0, "empti": [0, 9, 18, 50], "function": [0, 2, 3, 6, 9, 11, 12, 14, 15, 16, 19, 38, 47, 54, 56], "when": [0, 3, 9, 10, 11, 12, 13, 23, 24, 25, 32, 46, 47, 49, 50, 51, 54, 55, 56], "func": [0, 3, 6, 8, 9, 10, 12, 13, 14], "an": [0, 9, 14, 18, 22, 23, 29, 35, 40, 49, 52, 53, 55], "origin": [0, 39], "tupl": [0, 5, 8, 10, 11, 14, 15, 16, 46, 47], "check": [0, 15, 18, 22, 23, 24, 25, 50, 51, 53, 55, 56], "all": [0, 3, 6, 11, 13, 16, 18, 19, 22, 24, 25, 27, 41, 44, 48, 50, 51, 52, 53, 54, 55, 56], "keep": [0, 16, 50, 56], "index": [0, 2, 3, 8, 9, 16, 26, 55], "filter_by_threshold": [0, 17], "threshold": [0, 25, 29, 35, 41, 44, 48, 50, 54], "filter": 0, "have": [0, 3, 14, 16, 18, 19, 23, 32, 37, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56], "same": [0, 13, 14, 16, 20, 36, 51, 52, 54, 56], "length": [0, 9, 10, 14, 16, 25, 37, 41], "even": [0, 46, 47], "did": 0, "give": 0, "measure_spe": [0, 17], "arg": [0, 3, 4, 6, 11], "measur": [0, 41, 44, 48], "execut": [0, 14, 16, 24, 44, 56], "speed": [0, 10, 25, 27, 29, 35, 39, 41, 44, 48, 50, 54], "select_best_averag": [0, 17], "iter": 0, "ani": [0, 3, 5, 9, 11, 16, 18, 22, 23, 29, 35, 41, 44, 48, 53, 54, 55], "select": [0, 3, 8, 9, 10, 12, 13, 14, 19, 51, 52, 53, 54], "best": [0, 8, 9, 10, 12, 13, 14, 22, 46, 47, 51, 53, 56], "averag": [0, 25, 41, 44, 48], "among": [0, 8, 9, 10, 12, 13, 14, 52], "pd": [0, 2, 3, 16, 19], "standard": 0, "one": [0, 3, 9, 10, 11, 12, 16, 18, 19, 20, 50, 51, 52, 54, 55], "dynamically_find_funct": [0, 17], "target_dict": [0, 16], "callabl": [0, 3, 8, 9, 10, 12, 13, 14, 15], "get_support_modul": [0, 17], "module_nam": [0, 14], "get_support_nod": [0, 17], "node_nam": 0, "chat_box": [0, 17], "get_runn": [0, 17], "set_initial_st": [0, 17], "set_page_config": [0, 17], "set_page_head": [0, 17], "lazyinit": [0, 17], "factori": 0, "handle_except": [0, 17], "exc_typ": 0, "exc_valu": 0, "exc_traceback": 0, "submodul": [1, 7, 17], "langchain_documents_to_parquet": [1, 2, 19], "llama_documents_to_parquet": [1, 2], "llama_text_node_to_parquet": [1, 2, 19], "make_single_content_qa": [1, 3, 19], "async_qa_gen_llama_index": [1, 3], "distribute_list_by_ratio": [1, 3], "generate_qa_llama_index": [1, 3, 19], "generate_qa_llama_index_by_ratio": [1, 3, 19], "parse_output": [1, 3], "validate_llama_index_prompt": [1, 3], "generate_qa_row": [1, 3], "generate_simple_qa_dataset": [1, 3], "add_essential_metadata": [1, 4], "get_file_metadata": [1, 4], "langchain_docu": 2, "document": [2, 3, 10, 14, 18, 23, 25, 29, 35, 41, 44, 45, 48, 50, 52, 53, 54], "output_filepath": [2, 3, 19], "upsert": [2, 3, 16], "bool": [2, 3, 6, 10, 11, 15, 16], "filepath": [2, 3, 16], "file_dir": [2, 3], "filenam": [2, 3, 14], "whether": [2, 6, 10, 11, 39], "creat": [2, 3, 10, 11, 13, 18, 22, 40, 46, 47, 51, 53], "after": [2, 22, 23, 35, 50, 52, 53, 56], "chunk": [2, 18, 19, 53], "llama": [2, 3, 8, 9, 19, 26], "option": [2, 3, 11, 21, 25, 29, 34, 35, 38, 39, 44, 46, 47, 50, 54, 56], "processed_data": [2, 3], "do": [2, 3, 9, 10, 13, 18, 22, 23, 50, 51, 53, 56], "exist": [2, 3, 15, 51], "extens": [2, 3, 50], "overwrit": [2, 3], "llama_docu": 2, "text_nod": 2, "textnod": [2, 19], "text": [2, 3, 6, 8, 9, 10, 16, 18, 19, 20, 25, 26, 27, 30, 37, 39], "corpus_df": [3, 19], "content_s": [3, 19], "qa_creation_func": [3, 19], "random_st": 3, "42": 3, "hop": [3, 19, 43], "dataset": [3, 14, 16, 22, 46, 47, 51, 55], "mean": [3, 6, 9, 10, 16, 18, 19, 27, 51, 52, 54, 55], "ground": [3, 6, 14, 18, 25, 52], "truth": [3, 6, 14, 18, 25, 52], "onli": [3, 6, 9, 10, 12, 16, 18, 19, 26, 30, 42, 43, 51, 52, 53], "most": [3, 19, 24, 25, 35, 45, 48, 49, 50, 52, 56], "basic": 3, "form": [3, 19, 46, 47], "number": [3, 10, 11, 13, 14, 16, 19, 27, 29, 44, 51, 54, 56], "pair": [3, 11, 16, 19], "string": [3, 5, 6, 12, 14, 16, 18, 19, 39, 41, 50], "random": [3, 27], "state": [3, 11, 52], "sampl": [3, 19, 27, 55, 56], "keyword": [3, 26, 30, 42, 43], "async": [3, 10, 11, 13, 14, 16], "llm": [3, 6, 8, 9, 10, 13, 18, 19, 22, 23, 25, 27, 28, 29, 30, 36, 40, 41, 42, 43, 44, 52, 53], "llmpredictor": [3, 8, 9, 13], "prompt": [3, 8, 9, 10, 12, 13, 26, 27, 28, 36, 39, 40, 43, 52, 53], "question_num": 3, "1": [3, 6, 8, 11, 13, 14, 16, 18, 19, 25, 26, 27, 43, 51, 52, 55], "max_retri": 3, "3": [3, 6, 10, 12, 13, 19, 25, 26, 29, 30, 36, 41, 42, 43, 46, 47, 48, 50, 52, 53, 55], "question": [3, 10, 11, 12, 13, 18, 19, 20, 22, 38, 39, 40, 41, 43, 53, 56], "includ": [3, 8, 18, 26, 30, 41, 42, 43, 44, 46, 47, 54], "follow": [3, 10, 11, 18, 19, 20, 21, 24, 39, 51, 53], "placehold": [3, 19], "num_quest": [3, 19], "maximum": [3, 10, 27, 37], "retri": [3, 52], "equal": 3, "target": [3, 14, 16, 46, 47, 53], "contain": [3, 6, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 40, 51, 52, 54, 55, 56], "generation_gt": [3, 5, 6, 8, 12, 19], "input_list": 3, "ratio": [3, 19], "question_num_per_cont": [3, 19], "batch": [3, 6, 8, 9, 10, 13, 14, 16, 19, 25, 26, 30, 31, 32, 36, 37, 42, 43, 55], "4": [3, 6, 13, 25, 36, 55], "more": [3, 9, 10, 13, 14, 18, 25, 27, 29, 33, 35, 36, 39, 41, 44, 45, 51, 54, 56], "than": [3, 13, 14, 18, 27, 45, 51, 52, 53], "consid": [3, 27, 44], "As": [3, 12, 18, 20, 21, 24, 49, 50], "size": [3, 6, 8, 9, 10, 13, 31, 32, 35, 36, 37, 39, 55], "process": [3, 6, 10, 14, 16, 22, 25, 27, 29, 35, 38, 41, 44, 46, 47, 48, 51, 52, 54], "asynchron": [3, 16], "2": [3, 6, 10, 13, 14, 18, 19, 24, 27, 37, 43, 44], "d": [3, 6, 13, 14, 16, 18, 20], "prompts_ratio": [3, 19], "distribut": [3, 19], "randomli": [3, 19], "exampl": [3, 9, 13, 14, 18, 19, 24, 50, 52, 53, 55, 56], "prompt1": [3, 19], "txt": [3, 19, 23], "5": [3, 6, 10, 12, 13, 14, 19, 24, 25, 26, 29, 30, 35, 36, 42, 43, 46, 47, 48, 50, 52, 55], "prompt2": [3, 19], "sum": [3, 14], "doesn": [3, 53], "t": [3, 12, 18, 22, 24, 41, 46, 47, 53, 55], "absolut": 3, "plu": [3, 14, 18, 24, 49, 50], "ha": [3, 11, 14, 18, 19, 29, 53, 56], "proper": 3, "seed": 3, "valid": [3, 52], "corpus_data_row": 3, "code": [3, 23, 24, 50, 56], "rag": [3, 18, 19, 22, 44, 48, 51, 54], "openai": [3, 6, 10, 12, 13, 19, 24, 25, 26, 29, 30, 36, 41, 42, 43, 44, 48, 49, 50, 52, 53], "chat": [3, 9, 55], "guidanc": 3, "need": [3, 11, 13, 18, 19, 23, 29, 31, 32, 41, 49, 50, 51, 52, 53, 56], "least": [3, 52], "corpus_data": [3, 9, 14, 16], "generate_row_funct": 3, "qa_dataset": 3, "refer": [3, 25, 41, 44, 54], "structur": [3, 14, 50, 53, 56], "file_path": 4, "some": [4, 8, 9, 18, 23, 24, 31, 32, 52, 55], "handi": 4, "metad": 4, "filesystem": 4, "bert_scor": [5, 6, 25], "bleu": [5, 6, 25, 41, 50, 53, 55], "g_eval": [5, 6, 25], "generation_metr": [5, 6], "huggingface_evalu": [5, 6], "meteor": [5, 6, 25, 41, 50, 53, 55], "roug": [5, 6, 25, 41, 50, 53, 55], "sem_scor": [5, 6, 41, 50], "retrieval_f1": [5, 6, 13, 35, 44, 48], "retrieval_metr": [5, 6], "retrieval_precis": [5, 6, 35, 44, 48], "retrieval_recal": [5, 6, 13, 35, 44, 48, 53], "retrieval_contents_metr": [5, 6], "retrieval_token_f1": [5, 6, 29], "retrieval_token_precis": [5, 6, 29], "retrieval_token_recal": [5, 6, 29], "single_token_f1": [5, 6], "calculate_cosine_similar": [5, 6], "retrieval_gt": [5, 13, 14], "turn": 5, "lang": [6, 25], "en": [6, 9, 10, 24, 25, 32, 34], "128": [6, 14, 19], "n_thread": 6, "float": [6, 8, 10, 11, 14, 27], "gt": [6, 18, 52], "pred": 6, "score": [6, 9, 10, 11, 14, 29, 45, 46, 47, 48], "gpt": [6, 10, 12, 19, 25, 26, 29, 30, 36, 41, 42, 43, 52, 55], "0125": 6, "preview": 6, "calcul": [6, 29, 39, 46, 47], "g": [6, 26, 30, 42, 43], "eval": 6, "high": [6, 35], "perform": [6, 9, 10, 11, 13, 18, 21, 22, 25, 29, 35, 41, 44, 47, 53], "consist": [6, 25], "fluenci": [6, 25], "relev": [6, 10, 11, 13, 18, 25, 29, 34, 35, 36, 42, 44, 48], "we": [6, 9, 10, 18, 19, 22, 23, 24, 25, 27, 41, 44, 46, 47, 49, 50, 51, 52, 53, 55, 56], "recommend": [6, 12, 18, 51, 53, 55, 56], "accuraci": [6, 39, 44, 48], "instanc": [6, 8, 9, 11, 14, 18, 24, 26], "huggingfac": [6, 10, 13, 18, 24, 27, 41, 56], "addit": [6, 23, 26, 30, 41, 42, 43, 55], "alpha": [6, 52], "9": 6, "beta": 6, "gamma": 6, "becaus": [6, 10, 12, 14, 18, 24, 27, 29, 35, 39, 44, 46, 47, 49, 53, 55], "multipl": [6, 12, 13, 14, 43, 46, 47, 50, 51, 52, 53, 54], "control": [6, 27], "rel": 6, "weight": [6, 14, 44, 46, 48], "precis": [6, 13, 29, 42, 48], "recal": [6, 29, 48], "shape": 6, "penalti": 6, "fragment": 6, "assign": 6, "rouge_typ": 6, "rougel": 6, "use_stemm": 6, "split_summari": 6, "choos": [6, 10, 13, 18, 36, 49, 52], "between": [6, 10, 25, 46], "rouge1": 6, "rouge2": 6, "rougelsum": 6, "unigram": 6, "gram": 6, "bigram": 6, "longest": 6, "common": [6, 13, 14, 23, 54, 55, 56], "subsequ": [6, 35], "split": [6, 51, 54, 56], "indic": 6, "porter": 6, "stemmer": 6, "strip": 6, "word": [6, 45], "suffix": [6, 10, 39], "improv": [6, 29, 35, 39, 44], "match": 6, "defaulttoken": 6, "token": [6, 8, 10, 11, 14, 25, 27, 29, 36, 41], "might": [6, 52, 56], "add": [6, 25, 49, 53], "newlin": 6, "sentenc": [6, 10, 24, 28, 35], "cpu": [6, 10, 11], "count": [6, 45], "embedding_model": [6, 13, 14, 24, 25, 44, 48, 49, 50], "baseembed": [6, 14, 24], "sem": 6, "cosin": 6, "similar": [6, 25, 45, 46, 47, 49, 52], "max": 6, "embed": [6, 11, 14, 22, 23, 25, 45, 49, 51], "mpnet": [6, 24], "v2": [6, 10, 24, 31, 34, 37], "paper": [6, 11, 39, 42, 43, 53], "f1": [6, 29], "id": [6, 8, 9, 10, 11, 14, 16, 18, 48], "connect": [6, 49], "predict": [6, 10], "item": 6, "ground_truth": 6, "b": [6, 11, 52], "generator_nod": [7, 8], "evaluate_generator_nod": [7, 8], "run_generator_nod": [7, 8], "destroy_vllm_inst": [7, 8], "make_vllm_inst": [7, 8], "make_llm": [7, 9], "passage_compressor_nod": [7, 9], "evaluate_passage_compressor_nod": [7, 9], "make_contents_gt": [7, 9], "run_passage_compressor_nod": [7, 9], "tart": [7, 10, 28, 35], "modeling_enc_t5": [7, 10], "tokenization_enc_t5": [7, 10], "passage_reranker_nod": [7, 10], "cohere_rerank_pur": [7, 10], "cohere_rerank": [7, 10, 35], "jina_rerank": [7, 10, 35], "jina_reranker_pur": [7, 10], "exp_norm": [7, 10], "koreranker_pur": [7, 10], "mono_t5_pur": [7, 10], "asyncrankgptrerank": [7, 10], "async_postprocess_nod": [7, 10], "async_run_llm": [7, 10], "run_passage_reranker_nod": [7, 10], "sentence_transformer_rerank": [7, 10, 37], "sentence_transformer_reranker_pur": [7, 10], "calculate_likelihood": [7, 10], "upr_pur": [7, 10], "prompt_maker_nod": [7, 12], "evaluate_generator_result": [7, 12], "evaluate_one_prompt_maker_nod": [7, 12], "make_generator_callable_param": [7, 12], "run_prompt_maker_nod": [7, 12], "query_expansion_nod": [7, 13], "hyde_pur": [7, 13], "query_decompose_pur": [7, 13], "evaluate_one_query_expansion_nod": [7, 13], "make_retrieval_callable_param": [7, 13], "run_query_expansion_nod": [7, 13], "cast_queri": [7, 14], "evenly_distribute_passag": [7, 14], "load_bm25_corpu": [7, 14], "load_chroma_collect": [7, 14], "retrieval_nod": [7, 14], "run_retrieval_modul": [7, 14], "bm25_ingest": [7, 14], "bm25_pure": [7, 14], "bm25_token": [7, 14], "cc_pure": [7, 14], "rrf_calcul": [7, 14], "rrf_pure": [7, 14], "edit_summary_df_param": [7, 14], "evaluate_retrieval_nod": [7, 14], "get_hybrid_execution_tim": [7, 14], "get_ids_and_scor": [7, 14], "get_module_param": [7, 14], "run_retrieval_nod": [7, 14], "select_result_for_hybrid": [7, 14], "vectordb_ingest": [7, 14], "vectordb_pur": [7, 14], "16": [8, 9, 10, 13, 26, 30, 32, 36, 39, 42, 43], "right": [8, 24, 53, 56], "log": [8, 26], "prob": [8, 26], "pseudo": [8, 10], "meant": 8, "low": [8, 9], "face": [8, 9, 22], "error": [8, 9, 13, 14, 31, 32, 36], "three": [8, 51, 53], "element": [8, 14, 15], "second": [8, 11, 51, 53], "gpt2token": 8, "third": 8, "result_df": [8, 9, 12, 14], "strategi": [8, 9, 10, 12, 13, 14, 15, 17, 18, 50, 53, 55], "evalu": [8, 9, 10, 12, 13, 14, 16, 17, 18, 22, 25, 29, 35, 41, 44, 46, 47, 48, 50, 51, 54], "everi": [8, 11, 54], "could": [8, 9, 10, 12, 14], "maker": [8, 12, 28, 40, 53], "vllm_instanc": 8, "input_arg": 8, "logprob": 8, "extra": [8, 16], "llm_name": 9, "passag": [9, 10, 11, 12, 13, 14, 18, 29, 31, 32, 34, 35, 36, 37, 38, 39, 42, 45, 46, 47, 49, 53], "compress": [9, 29, 53], "retrieval_contents_gt": 9, "qa_data": 9, "compressor": [9, 29, 30], "rerank": [9, 10, 11, 18, 28, 29, 31, 32, 34, 35, 36, 38, 39, 53], "retrieved_cont": [9, 10, 12, 14, 40, 41, 53], "retrieved_id": [9, 10, 14], "retrieve_scor": [9, 10, 14], "In": [9, 10, 13, 18, 22, 46, 47, 50, 51, 52, 53, 55], "skip": [9, 10, 12], "chat_prompt": 9, "recurs": [9, 16, 30], "merg": [9, 30, 53, 54], "summar": [9, 28, 29], "them": [9, 11, 12, 13, 14, 18, 30, 46, 47, 52], "bottom": [9, 30], "up": [9, 18, 29, 30, 54], "fashion": [9, 30], "wrapper": 9, "response_synthes": 9, "treesummar": 9, "For": [9, 14, 18, 19, 23, 24, 27, 52, 53, 55, 56], "inform": [9, 14, 18, 26, 30, 35, 42, 43, 46, 47, 48, 49, 51, 53, 54, 56], "visit": [9, 14], "doc": [9, 18, 23, 43], "llamaindex": [9, 10, 19, 24, 27, 36, 43, 53, 55], "ai": [9, 10, 32], "latest": 9, "html": 9, "pass": [9, 11, 12, 24, 26, 30, 42, 43, 53], "templat": [9, 10], "instead": [9, 10, 11, 56], "At": [9, 24, 31, 32, 50, 52, 53], "specifi": [9, 18, 20, 24, 25, 26, 30, 33, 38, 41, 42, 43, 44, 46, 47, 52, 54], "where": [9, 22, 29, 48, 51], "put": [9, 18, 55], "context_str": 9, "query_str": 9, "normal": [9, 14], "enct5forsequenceclassif": [10, 11], "deparallel": [10, 11], "forward": [10, 11], "get_encod": [10, 11], "get_input_embed": [10, 11], "parallel": [10, 11, 14], "set_input_embed": [10, 11], "tart_pur": [10, 11], "enct5token": [10, 11], "build_inputs_with_special_token": [10, 11], "create_token_type_ids_from_sequ": [10, 11], "get_special_tokens_mask": [10, 11], "cohere_cli": 10, "asynccli": 10, "top_k": [10, 11, 13, 14, 35, 44, 48, 50, 53], "contents_list": [10, 11], "scores_list": [10, 11], "ids_list": [10, 11], "64": [10, 16, 25, 31, 37, 42, 44], "multilingu": [10, 31], "api_kei": [10, 31, 32, 50, 55], "com": [10, 11, 22, 23, 53], "environ": [10, 16, 21, 23, 31, 32, 55, 56], "variabl": [10, 16, 23, 31, 32, 55], "cohere_api_kei": [10, 31], "rank": [10, 11, 14, 45, 47], "english": [10, 31], "Or": [10, 18, 23, 31, 32, 56], "directli": [10, 29, 31, 32, 50, 52, 55], "env": [10, 23], "8": [10, 32, 36, 39], "jinaai_api_kei": [10, 32], "colbert": [10, 32], "x": [10, 11, 20], "ko": [10, 28, 35], "korean": [10, 24, 33], "co": [10, 24], "dongjin": 10, "kr": 10, "devic": [10, 11], "gpu": [10, 11], "avail": [10, 11], "otherwis": [10, 11], "token_false_id": 10, "token_true_id": 10, "repres": [10, 49, 52], "model_nam": [10, 16, 34, 37], "castorini": [10, 34], "3b": [10, 34], "msmarco": [10, 34], "10k": [10, 34], "note": [10, 11, 46, 47], "store": [10, 49], "twist": 10, "therefor": [10, 11, 19, 41, 44], "receiv": [10, 21], "_": 10, "top": [10, 27, 35, 44, 48, 51], "k": [10, 18, 24, 35, 47, 48], "top_n": 10, "verbos": [10, 36], "rankgpt_rerank_prompt": [10, 36], "baseprompttempl": 10, "rankgptrerank": 10, "nodewithscor": 10, "query_bundl": 10, "querybundl": 10, "messag": 10, "sequenc": [10, 11, 54], "chatmessag": 10, "chatrespons": 10, "context": [10, 39, 54], "paragraph": 10, "sinc": [10, 11, 19, 25, 36, 40, 41], "actual": [10, 16, 18], "ar": [10, 13, 16, 18, 19, 22, 23, 24, 25, 26, 29, 30, 33, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56], "turbo": [10, 12, 19, 25, 26, 29, 30, 36, 41, 42, 43, 52, 55], "16k": [10, 25, 26, 29, 30, 36, 41, 52, 55], "print": [10, 20], "intermedi": 10, "step": [10, 23, 35, 53], "sentence_transformer_max_length": [10, 37], "512": [10, 19, 27, 37], "cross": [10, 37], "encod": [10, 37], "m": [10, 23, 37], "marco": [10, 37], "minilm": [10, 37], "l": [10, 37], "transform": [10, 24, 27, 28, 35], "prefix_prompt": [10, 39], "suffix_prompt": [10, 39], "shard_siz": [10, 39], "use_bf16": [10, 39], "pleas": [10, 13, 14, 18, 23, 24, 25, 39, 41, 44, 50, 53, 54, 55, 56], "write": [10, 13, 23, 36, 39, 46, 47, 50, 52, 53], "github": [10, 11, 18, 22, 23, 53, 55, 56], "devsinghsachan": 10, "unsupervis": 10, "languag": [10, 13, 25, 26, 29, 30, 31, 39, 42, 43, 54], "likelihood": [10, 39], "t5": [10, 11], "larg": [10, 25, 26, 29, 30, 31, 32, 34, 42, 43, 54], "shard": [10, 39], "larger": [10, 39], "faster": [10, 27, 29, 39], "But": [10, 18, 22, 39, 50, 52, 53], "consum": [10, 22, 39], "memori": [10, 37, 39, 55], "power": [10, 31, 32, 39, 53], "bfloat16": [10, 39], "prefix": [10, 39], "serv": [10, 25, 29, 35, 39, 41, 44, 48, 54], "instruct": [10, 11, 18, 24, 27, 38, 39], "stage": [10, 39], "what": [10, 13, 18, 22, 24, 39, 40, 41, 51, 54], "expect": [10, 18, 39], "provid": [10, 19, 21, 26, 30, 34, 39, 42, 43, 56], "cue": [10, 39], "close": [10, 39], "signal": [10, 39], "how": [10, 13, 19, 26, 30, 39, 42, 43, 45, 49, 50, 51, 53, 56], "conclud": [10, 39], "format": [10, 11, 19, 39, 51], "end": [10, 16, 39], "t5config": 11, "dropout": 11, "t5pretrainedmodel": 11, "input_id": 11, "attention_mask": 11, "head_mask": 11, "inputs_emb": 11, "label": [11, 13, 42], "output_attent": 11, "output_hidden_st": 11, "return_dict": 11, "call": [11, 24, 26, 30, 39, 42, 43, 45, 46, 47], "overridden": 11, "subclass": 11, "although": 11, "recip": 11, "within": [11, 25, 29, 35, 41, 48, 54], "afterward": 11, "former": 11, "take": [11, 24, 47, 53], "care": 11, "regist": 11, "hook": 11, "while": [11, 23, 54], "latter": 11, "silent": 11, "ignor": 11, "nn": 11, "torch": 11, "vocabulari": 11, "hidden": 11, "device_map": 11, "new_embed": 11, "find": [11, 22, 24, 38, 41, 43, 46, 47, 48, 51, 52, 54], "facebookresearch": 11, "tartrerank": 11, "facebook": [11, 27], "full": [11, 18, 51, 54], "flan": 11, "xl": 11, "being": [11, 26, 30, 42, 43], "differ": [11, 16, 18, 19, 24, 25, 34, 44, 45, 46, 47, 51, 54], "chang": [11, 19, 24, 31, 32, 53, 54], "through": [11, 22, 41, 44], "vocab_fil": 11, "bos_token": 11, "eos_token": 11, "unk_token": 11, "unk": 11, "pad_token": 11, "pad": 11, "extra_id": 11, "100": 11, "additional_special_token": 11, "sp_model_kwarg": 11, "t5token": 11, "token_ids_0": 11, "token_ids_1": 11, "build": [11, 18, 51, 52, 53], "classif": 11, "task": [11, 16, 25], "concaten": 11, "ad": [11, 54, 55], "special": [11, 29], "glossari": 11, "appropri": 11, "mask": 11, "two": [11, 14, 18, 19, 32, 53, 56], "zero": [11, 13, 39, 42], "already_has_special_token": 11, "prepare_for_model": 11, "integ": [11, 39], "rang": 11, "f": [12, 41], "prompt_mak": [12, 41, 52, 53], "read": [12, 22, 40, 41, 50, 53], "carefulli": 12, "made": [12, 53, 56], "generator_func": 12, "generator_param": 12, "strategy_dict": [12, 13], "With": [12, 53, 56], "generator_modul": [12, 41], "don": [12, 18, 22, 41, 46, 47, 53, 55, 56], "expans": [12, 13, 14, 18, 29, 42, 43, 53], "inspir": [13, 42], "shot": [13, 39, 42, 43], "dens": [13, 14, 42, 45, 49], "without": [13, 22, 26, 29, 30, 35, 42, 43, 44, 46, 47, 53], "arxiv": 13, "org": [13, 22], "pdf": 13, "2212": 13, "10496": 13, "hypothet": [13, 42], "dimens": 13, "decompos": [13, 44], "self": 13, "sub": 13, "decomposit": [13, 43], "n": [13, 23, 33, 40, 41, 44, 53], "hamlet": 13, "imdb": 13, "comedi": 13, "mani": [13, 26, 27, 30, 42, 43, 52], "bird": 13, "import": [13, 18, 19, 20, 23, 24, 45, 53, 56], "badminton": 13, "legal": 13, "licens": 13, "child": 13, "drive": 13, "merced": 13, "benz": 13, "emploi": 13, "u": 13, "minimum": 13, "ag": 13, "someon": 13, "cucumb": 13, "textur": 13, "hydrogen": 13, "atom": 13, "squar": 13, "exce": [13, 25, 29, 35, 41], "spice": 13, "girl": [13, 18], "6": [13, 19], "littl": [13, 19, 53], "piec": 13, "llmpredictortyp": 13, "come": [13, 22, 52, 53], "viscond": [13, 43], "strategyqa": [13, 43], "few": [13, 43, 53, 56], "retrieval_func": 13, "retrieval_param": 13, "expanded_queri": 13, "look": [13, 14, 18, 20, 50, 53], "50": [13, 19], "retrieval_modul": [13, 44], "combin": [13, 14, 15, 16, 46, 47, 50, 52, 54], "wai": [13, 21, 50, 52, 53, 55], "case": [13, 18, 19, 22, 52, 53, 55], "would": [13, 51], "bm25_path": 14, "db_path": 14, "collection_nam": [14, 51], "collect": [14, 16, 18, 50, 53, 54], "resourc": [14, 52], "panda": [14, 19], "bm25_corpu": 14, "pickl": 14, "ingest": 14, "row": [14, 18, 51], "doc_id": 14, "Its": [14, 18, 27, 29, 35, 44], "2d": [14, 18], "passage_id": 14, "corpus_path": 14, "bm25_api": 14, "bm25okapi": [14, 45], "usag": [14, 29, 36, 49], "hybrid": [14, 48, 50], "cc": [14, 48], "convex": [14, 46], "fuse": 14, "To": [14, 18, 23, 24, 53, 56], "uniqu": [14, 18, 29, 54], "realli": [14, 18, 27, 52, 53], "befor": [14, 24, 29, 50, 53, 55, 56], "rrf_k": [14, 44, 47, 48, 50], "60": 14, "rrf": [14, 46, 48], "reciproc": [14, 47], "fusion": [14, 47], "spars": [14, 45], "hyperparamet": [14, 50], "our": [14, 18, 19, 22, 23, 52, 53, 55, 56], "target_modul": [14, 44, 46, 47, 48, 50], "target_module_param": [14, 46, 47], "node_dir": 14, "csv": [14, 52, 56], "chroma": [14, 51], "emb": [14, 49, 53], "prevent": [14, 36, 53], "vector_db": 14, "module_dict": 15, "node_dict": 15, "also": [15, 18, 19, 22, 31, 46, 47, 53], "remov": [15, 16], "duplic": [15, 18, 50], "automat": [15, 22, 25, 29, 35, 41, 44, 46, 47, 52, 56], "df": [16, 55], "index_valu": 16, "explode_valu": 16, "flatten": 16, "summary_path": 16, "dict_column": 16, "fill": 16, "properli": 16, "taken": 16, "offici": 16, "script": [16, 18], "squad": 16, "lower": [16, 29], "punctuat": 16, "articl": 16, "whitespac": 16, "token_limit": 16, "batch_siz": 16, "coroutin": 16, "replace_valu": 16, "certain": 16, "column_nam": 16, "packag": [17, 23, 24, 55], "subpackag": 17, "modul": [17, 22, 28, 51, 53, 55, 56], "content": [17, 19, 20, 29, 35, 41, 48, 49], "cli": 17, "deploi": [17, 20, 22], "node_lin": [17, 29, 35, 41, 44, 50, 51, 53], "support": [17, 18, 19, 22, 26, 30, 31, 32, 42, 43, 50, 53, 54], "web": 17, "There": [18, 19, 22, 33, 44, 51, 53, 56], "kind": [18, 53, 55], "know": [18, 22, 41, 50, 51, 52, 54, 56], "lot": [18, 52, 56], "variat": [18, 44], "good": [18, 19, 53, 56], "identifi": [18, 35, 48], "occur": [18, 50, 53, 55], "unexpect": 18, "behavior": [18, 26, 30, 39, 42, 43, 54], "imagin": 18, "system": [18, 25, 26, 29, 30, 35, 41, 42, 43, 48, 54], "ask": [18, 22, 53], "1d": 18, "why": [18, 52, 53, 56], "condit": 18, "think": [18, 50, 52, 53], "real": [18, 21, 53], "life": 18, "knowledg": 18, "pop": 18, "group": 18, "member": 18, "new": [18, 23, 24, 27, 50, 53, 56], "jean": 18, "aespa": 18, "oper": [18, 20, 29, 48, 54], "On": 18, "hand": 18, "five": 18, "Then": [18, 20, 23, 24, 52], "newjeans1": 18, "newjeans2": 18, "aespa1": 18, "aespa2": 18, "aespa3": 18, "enough": 18, "okai": 18, "treat": [18, 50], "crucial": [18, 29, 35, 54], "autorag": [18, 19, 20, 21, 23, 24, 25, 46, 47, 50, 52, 55, 56], "affect": [18, 52, 54], "huge": [18, 47], "own": [18, 22, 52, 54, 56], "onc": [18, 26, 27, 30, 31, 32, 42, 43, 46, 47, 51, 53, 56], "multi": [18, 43], "modal": 18, "imag": [18, 51, 56], "video": 18, "etc": [18, 19, 50], "futur": [18, 52, 53, 54], "earli": 18, "version": [18, 52, 55], "plan": [18, 25, 53], "last_modified_datetim": 18, "modifi": [18, 56], "datetim": 18, "now": [18, 19, 49, 50, 52, 53, 56], "time": [18, 21, 22, 25, 29, 35, 41, 44, 48, 51, 52, 54, 56], "relat": [18, 26, 30, 39, 42, 43], "featur": [18, 25, 53], "python": [18, 19, 23, 40, 46, 47, 50, 55, 56], "reset": [18, 55], "indici": 18, "out": [18, 22, 23, 25, 50, 51, 53, 55, 56], "download": [18, 56], "repo": [18, 22, 56], "go": [18, 22, 56], "here": [18, 22, 23, 24, 27, 33, 49, 50, 51, 52, 53, 55, 56], "satisfactori": 19, "howev": [19, 46, 52, 53], "advent": 19, "synthet": 19, "becom": [19, 50], "solut": [19, 53], "problem": [19, 53, 55], "guid": [19, 22, 25, 29, 35, 41, 44, 48, 53, 54, 56], "cover": 19, "aim": [19, 46, 48, 54], "work": [19, 46, 47, 50, 55, 56], "primit": 19, "scalabl": 19, "conveni": [19, 21], "loader": 19, "lama_index": 19, "llama_document_to_parquet": 19, "langchain_document_to_parquet": 19, "core": 19, "simpledirectoryread": 19, "node_pars": 19, "tokentextsplitt": 19, "your_dir_path": 19, "load_data": 19, "get_nodes_from_docu": 19, "chunk_siz": 19, "chunk_overlap": 19, "langchain_commun": 19, "document_load": 19, "directoryload": 19, "langchain_text_splitt": 19, "recursivecharactertextsplitt": 19, "glob": 19, "md": 19, "split_docu": 19, "found": [19, 26, 30, 33, 36, 42, 43, 49, 56], "read_parquet": 19, "temperatur": [19, 24, 25, 26, 27, 30, 36, 42, 43, 44, 52, 55], "qa_df": 19, "design": [19, 25, 38, 46, 47], "per": 19, "known": 19, "unit": 19, "q": 19, "ratio_dict": 19, "prompt3": 19, "remeb": 19, "mention": [20, 21], "tutori": [20, 21, 22, 53], "trial_fold": [20, 56], "run_api": [20, 56], "config_path": [20, 56], "last": 20, "curl": 20, "h": 20, "accept": 20, "applic": [20, 29, 33, 44], "your_result_column": 20, "url": 20, "payload": 20, "header": 20, "command": [21, 55], "run_web": [21, 56], "interact": 21, "friendli": 21, "test": [21, 23, 24, 25, 29, 35, 44, 46, 47, 50, 51, 52], "observ": 21, "automl": 22, "tool": 22, "numer": 22, "great": [22, 52], "veri": 22, "hard": [22, 52, 53], "never": 22, "That": [22, 53], "variou": [22, 25, 29, 35, 41, 48], "creation": [22, 56], "raw": 22, "experi": [22, 51, 53, 55, 56], "deploy": [22, 46, 47], "fastapi": 22, "well": 22, "pip": [22, 23, 55], "instal": [22, 24, 56], "starter": [22, 56], "learn": [22, 49, 50, 52, 53, 56], "ultim": 22, "Of": 22, "cours": 22, "local": [22, 24, 36, 49, 56], "troubl": [22, 55], "troubleshoot": [22, 23], "feel": [22, 53, 56], "free": [22, 53, 56], "issu": [22, 25, 53, 55, 56], "discord": [22, 53, 55, 56], "channel": [22, 55, 56], "marker": [22, 23, 53], "inc": [22, 23, 53], "korea": [22, 23, 53], "pypi": 22, "gg": [22, 53], "p4dyxfmsa": [22, 53], "page": [23, 36], "openai_api_kei": [23, 50, 55], "export": [23, 31, 32, 55], "sk": 23, "altern": 23, "dotenv": [23, 55], "root": 23, "try": [23, 46, 47, 53, 55], "load_dotenv": 23, "readi": [23, 52, 56], "clone": 23, "repositori": 23, "git": 23, "edit": 23, "cd": 23, "e": [23, 26, 30, 42, 43], "r": 23, "dev_requir": 23, "pytest": 23, "ini": 23, "log_cli": 23, "log_cli_level": 23, "info": 23, "auto": 23, "contributor": 23, "wait": 23, "huggingfacellm": [24, 26, 30, 42, 43], "openailik": [24, 55], "node_line_nam": [24, 25, 29, 35, 41, 44, 48, 50, 51, 53], "node_line_1": [24, 50, 53], "mistralai": [24, 27], "mistral": [24, 27], "7b": [24, 27], "v0": [24, 25, 27], "abov": [24, 50, 51, 53, 56], "see": [24, 50, 51, 52, 53, 55, 56], "frequent": 24, "max_token": [24, 26, 27, 30, 42, 43, 44], "simpli": [24, 56], "generator_model": 24, "mockllm": 24, "wa": [24, 52, 55], "major": 24, "updat": 24, "10": [24, 25, 29, 35, 41, 44, 47, 48, 50, 53], "integr": [24, 34, 54], "itself": [24, 46, 52], "interfac": 24, "babbag": 24, "openai_babbag": 24, "ada": 24, "openai_ada": 24, "davinci": 24, "openai_davinci": 24, "curi": 24, "openai_curi": 24, "baai": 24, "bge": 24, "small": 24, "huggingface_baai_bge_smal": 24, "cointegr": 24, "rubert": 24, "tiny2": 24, "huggingface_cointegrated_rubert_tiny2": 24, "huggingface_all_mpnet_base_v2": 24, "begin": 24, "program": 24, "kosimcs": 24, "bm": 24, "roberta": 24, "multitask": 24, "huggingfaceembed": 24, "allow": [25, 26, 30, 34, 42, 43, 46, 54], "experiment": 25, "facilit": 25, "determin": [25, 51], "effect": [25, 35, 47, 48, 54, 56], "specif": [25, 29, 34, 38, 45, 46, 47, 54, 56], "These": [25, 26, 29, 30, 35, 42, 43, 48, 54, 56], "compar": 25, "semant": [25, 45], "quit": 25, "descript": [25, 35, 48], "appli": [25, 35, 41, 44, 46, 48, 54], "ensur": [25, 29, 35, 41, 44, 48], "predefin": [25, 29, 35], "gpt2": [25, 41], "detail": [25, 33, 36, 41, 44, 54, 56], "post_retrieve_node_lin": [25, 41], "arbitrari": [25, 29, 35, 41, 44, 48], "metric_nam": 25, "speed_threshold": [25, 29, 35, 41, 44, 48, 50, 54], "token_threshold": [25, 41], "4000": 25, "1106": [25, 26, 41, 52, 55], "By": [26, 29, 30, 35, 42, 43, 44, 46, 47, 54], "further": [26, 30, 42, 43, 46], "custom": [26, 30, 36, 39, 42, 43, 46, 49, 54, 55], "fast": [27, 31, 32], "10x": 27, "librari": [27, 56], "slow": 27, "decid": [27, 53, 54], "standalon": 27, "opt": 27, "125m": 27, "higher": [27, 29, 32, 54], "top_p": 27, "cumul": 27, "probabl": [27, 52], "passage_rerank": [28, 53], "passage_compressor": 28, "tree": [28, 29], "thei": [29, 50, 53, 54], "reduc": 29, "amount": 29, "effici": 29, "prior": 29, "entri": 29, "significantli": [29, 44, 54], "scale": 29, "quickli": 29, "accumul": 29, "potenti": 29, "lead": 29, "cost": 29, "slower": 29, "reduct": 29, "impact": [29, 41, 44, 47, 49], "help": [29, 46, 47], "associ": 29, "analysi": 29, "deal": 29, "less": 29, "tailor": [29, 47, 54], "level": [29, 35, 48, 54], "address": [29, 54], "approach": [29, 46], "distinct": 29, "underscor": 29, "focu": [29, 56], "retrieve_node_lin": [29, 35, 48], "better": [29, 35, 44, 52, 56], "next": [31, 32, 41, 53], "your_cohere_api_kei": 31, "too": [31, 32, 51, 52], "caus": [31, 32, 52, 55, 56], "your_jina_api_kei": 32, "increas": [32, 44, 54], "rpm": 32, "tpm": 32, "limit": [32, 36, 37, 53, 54, 55], "Not": [33, 44], "direct": [33, 44], "flexibl": [34, 46, 54], "variant": 34, "med": 34, "unicamp": 34, "dl": 34, "mt5": 34, "ptt5": 34, "pt": 34, "100k": 34, "mmarco": 34, "13b": 34, "involv": [35, 48], "reassess": 35, "reorder": 35, "refin": 35, "obtain": 35, "phase": [35, 44], "primari": [35, 38], "enhanc": [35, 39, 54], "priorit": 35, "pertin": 35, "overal": [35, 52], "qualiti": [35, 56], "assess": 35, "purpos": [35, 44, 46, 54], "anoth": [36, 54, 56], "rest": 36, "wise": 36, "oom": [36, 55], "cuda": 37, "decreas": 37, "32": 37, "li": 38, "abil": 38, "boolean": 39, "retreived_cont": 40, "tell": [40, 41], "me": [40, 41, 52, 53], "someth": [40, 41, 46, 47], "cannot": [41, 44], "alon": [41, 44, 53], "outcom": [41, 44, 46], "across": [41, 44, 48, 54], "exceed": [41, 44, 48], "autotoken": 41, "1000": 41, "expand": [44, 52], "immedi": 44, "goal": [44, 52], "search": [44, 45, 49], "term": 44, "vari": [44, 46, 54], "ll": 44, "abl": 44, "respond": 44, "necessari": 44, "dure": [44, 55], "pre_retrieve_node_lin": 44, "popular": 45, "tf": 45, "idf": 45, "reflect": 45, "often": [45, 55], "domain": 45, "algorithm": [45, 46, 47], "distinguish": 46, "offer": 46, "those": [46, 47], "situat": [46, 47], "oppos": [46, 47], "ast": [46, 47, 50], "literal_ev": [46, 47, 50], "were": [46, 47], "quot": [46, 47], "adjust": [46, 55], "influenc": 46, "wrote": [46, 47], "7": [46, 48], "constant": 47, "fetch": 48, "fundament": 48, "easili": [49, 53, 56], "vector": [49, 53], "lastli": [49, 50], "exclus": 49, "chromadb": 49, "databas": 49, "internet": 49, "fee": 49, "open": [49, 52, 55], "softwar": 49, "favorit": 50, "editor": 50, "thing": [50, 56], "node_line_2": [50, 53], "node_line_3": 50, "section": [50, 54, 56], "mind": [50, 56], "pars": 50, "easier": 50, "manag": 50, "secret": 50, "unintend": 50, "action": [50, 53], "best_": 51, "trail": [51, 56], "ran": 51, "took": 51, "roadmap": 51, "modular": [51, 54], "belong": 51, "depend": 51, "show": [51, 52, 53], "best_0": 51, "attempt": 51, "record": 51, "organ": 51, "long": [51, 53], "explain": [51, 53], "hope": 51, "understand": [51, 52], "train": [51, 56], "accur": 51, "pkl": 51, "under": [52, 55], "hood": 52, "diagram": [52, 53], "rememb": 52, "achiev": [52, 54], "possibl": [52, 53], "let": [52, 53, 56], "markov": 52, "chain": 52, "alwai": 52, "guarante": 52, "choic": 52, "job": 52, "still": [52, 53, 55], "wonder": 52, "setup": 52, "develop": [52, 54], "suggest": [52, 53, 55], "feedback": [52, 53], "survei": 53, "propos": 53, "paradigm": 53, "naiv": 53, "db": 53, "easi": 53, "dai": 53, "framework": 53, "ever": 53, "bad": 53, "advanc": 53, "pre": [53, 56], "perfect": 53, "main": 53, "cycl": 53, "hallucin": 53, "fact": 53, "deliv": 53, "wrong": 53, "fate": 53, "re": 53, "again": [53, 56], "dag": 53, "imposs": 53, "asap": 53, "implement": 53, "circl": 53, "goe": 53, "yet": 53, "blue": 53, "short": 53, "meger": 53, "matter": 53, "pretti": 53, "locat": 53, "voil\u00e0": 53, "complex": 53, "familiar": 53, "much": 53, "straight": 53, "linear": 53, "branch": 53, "magic": 53, "happen": 53, "pass_valu": 53, "reranker_recal": 53, "target_node_lin": 53, "kf1_polici": 53, "rl_polici": 53, "cool": 53, "tyre": 53, "soon": 53, "interest": 53, "welcom": 53, "act": 54, "interchang": 54, "swap": 54, "mix": 54, "individu": 54, "compon": 54, "fit": 54, "over": 54, "remain": 54, "broader": 54, "resid": 54, "loop": 54, "essenti": [54, 55], "augment": 54, "mechan": 54, "dynam": 54, "temporari": 54, "arrang": 54, "temporarili": 54, "simul": 54, "intend": 54, "until": 54, "aspect": 54, "techniqu": 54, "part": 54, "quantit": 54, "basi": 54, "effort": 54, "strateg": 54, "decis": 54, "criterion": 54, "focus": 54, "mai": 54, "upgrad": 55, "gcc": 55, "c": 55, "sudo": 55, "apt": 55, "linux": 55, "brew": 55, "mac": 55, "mistak": [55, 56], "miss": 55, "echo": 55, "your_api_kei": 55, "recogn": 55, "difficulti": 55, "commit": 55, "push": 55, "seriou": [55, 56], "secur": 55, "api_bas": 55, "sometim": 55, "both": 55, "rate": 55, "tier": 55, "reset_index": 55, "drop": 55, "sure": 56, "who": 56, "manual": 56, "forget": 56, "overfit": 56, "highli": 56, "later": 56, "sample_config": 56, "default_config": 56, "done": 56, "sever": 56, "had": 56, "restart_evalu": 56, "tiral_path": 56, "been": 56, "remind": 56, "pipeline_dict": 56, "malfunct": 56, "qa_test": 56, "corpus_test": 56, "awai": 56, "endpoint": 56, "share": 56, "successfulli": 56, "launch": 56, "product": 56}, "objects": {"": [[0, 0, 0, "-", "autorag"]], "autorag": [[0, 1, 1, "", "LazyInit"], [0, 0, 0, "-", "cli"], [1, 0, 0, "-", "data"], [0, 0, 0, "-", "deploy"], [5, 0, 0, "-", "evaluate"], [0, 0, 0, "-", "evaluator"], [0, 2, 1, "", "handle_exception"], [0, 0, 0, "-", "node_line"], [7, 0, 0, "-", "nodes"], [15, 0, 0, "-", "schema"], [0, 0, 0, "-", "strategy"], [0, 0, 0, "-", "support"], [16, 0, 0, "-", "utils"], [0, 0, 0, "-", "web"]], "autorag.data": [[2, 0, 0, "-", "corpus"], [3, 0, 0, "-", "qacreation"], [4, 0, 0, "-", "utils"]], "autorag.data.corpus": [[2, 0, 0, "-", "langchain"], [2, 0, 0, "-", "llama_index"]], "autorag.data.corpus.langchain": [[2, 2, 1, "", "langchain_documents_to_parquet"]], "autorag.data.corpus.llama_index": [[2, 2, 1, "", "llama_documents_to_parquet"], [2, 2, 1, "", "llama_text_node_to_parquet"]], "autorag.data.qacreation": [[3, 0, 0, "-", "base"], [3, 0, 0, "-", "llama_index"], [3, 0, 0, "-", "simple"]], "autorag.data.qacreation.base": [[3, 2, 1, "", "make_single_content_qa"]], "autorag.data.qacreation.llama_index": [[3, 2, 1, "", "async_qa_gen_llama_index"], [3, 2, 1, "", "distribute_list_by_ratio"], [3, 2, 1, "", "generate_qa_llama_index"], [3, 2, 1, "", "generate_qa_llama_index_by_ratio"], [3, 2, 1, "", "parse_output"], [3, 2, 1, "", "validate_llama_index_prompt"]], "autorag.data.qacreation.simple": [[3, 2, 1, "", "generate_qa_row"], [3, 2, 1, "", "generate_simple_qa_dataset"]], "autorag.data.utils": [[4, 0, 0, "-", "util"]], "autorag.data.utils.util": [[4, 2, 1, "", "add_essential_metadata"], [4, 2, 1, "", "get_file_metadata"]], "autorag.deploy": [[0, 1, 1, "", "Runner"], [0, 1, 1, "", "RunnerInput"], [0, 2, 1, "", "extract_best_config"], [0, 2, 1, "", "extract_node_line_names"], [0, 2, 1, "", "extract_node_strategy"], [0, 2, 1, "", "summary_df_to_yaml"]], "autorag.deploy.Runner": [[0, 3, 1, "", "from_trial_folder"], [0, 3, 1, "", "from_yaml"], [0, 3, 1, "", "run"], [0, 3, 1, "", "run_api_server"]], "autorag.deploy.RunnerInput": [[0, 4, 1, "", "model_computed_fields"], [0, 4, 1, "", "model_config"], [0, 4, 1, "", "model_fields"], [0, 4, 1, "", "query"], [0, 4, 1, "", "result_column"]], "autorag.evaluate": [[5, 0, 0, "-", "generation"], [6, 0, 0, "-", "metric"], [5, 0, 0, "-", "retrieval"], [5, 0, 0, "-", "retrieval_contents"], [5, 0, 0, "-", "util"]], "autorag.evaluate.generation": [[5, 2, 1, "", "evaluate_generation"]], "autorag.evaluate.metric": [[6, 0, 0, "-", "generation"], [6, 0, 0, "-", "retrieval"], [6, 0, 0, "-", "retrieval_contents"], [6, 0, 0, "-", "util"]], "autorag.evaluate.metric.generation": [[6, 2, 1, "", "bert_score"], [6, 2, 1, "", "bleu"], [6, 2, 1, "", "g_eval"], [6, 2, 1, "", "generation_metric"], [6, 2, 1, "", "huggingface_evaluate"], [6, 2, 1, "", "meteor"], [6, 2, 1, "", "rouge"], [6, 2, 1, "", "sem_score"]], "autorag.evaluate.metric.retrieval": [[6, 2, 1, "", "retrieval_f1"], [6, 2, 1, "", "retrieval_metric"], [6, 2, 1, "", "retrieval_precision"], [6, 2, 1, "", "retrieval_recall"]], "autorag.evaluate.metric.retrieval_contents": [[6, 2, 1, "", "retrieval_contents_metric"], [6, 2, 1, "", "retrieval_token_f1"], [6, 2, 1, "", "retrieval_token_precision"], [6, 2, 1, "", "retrieval_token_recall"], [6, 2, 1, "", "single_token_f1"]], "autorag.evaluate.metric.util": [[6, 2, 1, "", "calculate_cosine_similarity"]], "autorag.evaluate.retrieval": [[5, 2, 1, "", "evaluate_retrieval"]], "autorag.evaluate.retrieval_contents": [[5, 2, 1, "", "evaluate_retrieval_contents"]], "autorag.evaluate.util": [[5, 2, 1, "", "cast_embedding_model"], [5, 2, 1, "", "cast_metrics"]], "autorag.evaluator": [[0, 1, 1, "", "Evaluator"]], "autorag.evaluator.Evaluator": [[0, 3, 1, "", "restart_trial"], [0, 3, 1, "", "start_trial"]], "autorag.node_line": [[0, 2, 1, "", "make_node_lines"], [0, 2, 1, "", "run_node_line"]], "autorag.nodes": [[8, 0, 0, "-", "generator"], [9, 0, 0, "-", "passagecompressor"], [10, 0, 0, "-", "passagereranker"], [12, 0, 0, "-", "promptmaker"], [13, 0, 0, "-", "queryexpansion"], [14, 0, 0, "-", "retrieval"]], "autorag.nodes.generator": [[8, 0, 0, "-", "base"], [8, 0, 0, "-", "llama_index_llm"], [8, 0, 0, "-", "run"], [8, 0, 0, "-", "vllm"]], "autorag.nodes.generator.base": [[8, 2, 1, "", "generator_node"]], "autorag.nodes.generator.llama_index_llm": [[8, 2, 1, "", "llama_index_llm"]], "autorag.nodes.generator.run": [[8, 2, 1, "", "evaluate_generator_node"], [8, 2, 1, "", "run_generator_node"]], "autorag.nodes.generator.vllm": [[8, 2, 1, "", "destroy_vllm_instance"], [8, 2, 1, "", "make_vllm_instance"], [8, 2, 1, "", "vllm"]], "autorag.nodes.passagecompressor": [[9, 0, 0, "-", "base"], [9, 0, 0, "-", "pass_compressor"], [9, 0, 0, "-", "run"], [9, 0, 0, "-", "tree_summarize"]], "autorag.nodes.passagecompressor.base": [[9, 2, 1, "", "make_llm"], [9, 2, 1, "", "passage_compressor_node"]], "autorag.nodes.passagecompressor.pass_compressor": [[9, 2, 1, "", "pass_compressor"]], "autorag.nodes.passagecompressor.run": [[9, 2, 1, "", "evaluate_passage_compressor_node"], [9, 2, 1, "", "make_contents_gt"], [9, 2, 1, "", "run_passage_compressor_node"]], "autorag.nodes.passagecompressor.tree_summarize": [[9, 2, 1, "", "tree_summarize"]], "autorag.nodes.passagereranker": [[10, 0, 0, "-", "base"], [10, 0, 0, "-", "cohere"], [10, 0, 0, "-", "jina"], [10, 0, 0, "-", "koreranker"], [10, 0, 0, "-", "monot5"], [10, 0, 0, "-", "pass_reranker"], [10, 0, 0, "-", "rankgpt"], [10, 0, 0, "-", "run"], [10, 0, 0, "-", "sentence_transformer"], [11, 0, 0, "-", "tart"], [10, 0, 0, "-", "upr"]], "autorag.nodes.passagereranker.base": [[10, 2, 1, "", "passage_reranker_node"]], "autorag.nodes.passagereranker.cohere": [[10, 2, 1, "", "cohere_rerank_pure"], [10, 2, 1, "", "cohere_reranker"]], "autorag.nodes.passagereranker.jina": [[10, 2, 1, "", "jina_reranker"], [10, 2, 1, "", "jina_reranker_pure"]], "autorag.nodes.passagereranker.koreranker": [[10, 2, 1, "", "exp_normalize"], [10, 2, 1, "", "koreranker"], [10, 2, 1, "", "koreranker_pure"]], "autorag.nodes.passagereranker.monot5": [[10, 2, 1, "", "mono_t5_pure"], [10, 2, 1, "", "monot5"]], "autorag.nodes.passagereranker.pass_reranker": [[10, 2, 1, "", "pass_reranker"]], "autorag.nodes.passagereranker.rankgpt": [[10, 1, 1, "", "AsyncRankGPTRerank"], [10, 2, 1, "", "rankgpt"]], "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank": [[10, 3, 1, "", "async_postprocess_nodes"], [10, 3, 1, "", "async_run_llm"]], "autorag.nodes.passagereranker.run": [[10, 2, 1, "", "run_passage_reranker_node"]], "autorag.nodes.passagereranker.sentence_transformer": [[10, 2, 1, "", "sentence_transformer_reranker"], [10, 2, 1, "", "sentence_transformer_reranker_pure"]], "autorag.nodes.passagereranker.tart": [[11, 0, 0, "-", "modeling_enc_t5"], [11, 0, 0, "-", "tart"], [11, 0, 0, "-", "tokenization_enc_t5"]], "autorag.nodes.passagereranker.tart.modeling_enc_t5": [[11, 1, 1, "", "EncT5ForSequenceClassification"]], "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification": [[11, 3, 1, "", "deparallelize"], [11, 3, 1, "", "forward"], [11, 3, 1, "", "get_encoder"], [11, 3, 1, "", "get_input_embeddings"], [11, 3, 1, "", "parallelize"], [11, 3, 1, "", "set_input_embeddings"]], "autorag.nodes.passagereranker.tart.tart": [[11, 2, 1, "", "tart"], [11, 2, 1, "", "tart_pure"]], "autorag.nodes.passagereranker.tart.tokenization_enc_t5": [[11, 1, 1, "", "EncT5Tokenizer"]], "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer": [[11, 3, 1, "", "build_inputs_with_special_tokens"], [11, 3, 1, "", "create_token_type_ids_from_sequences"], [11, 3, 1, "", "get_special_tokens_mask"]], "autorag.nodes.passagereranker.upr": [[10, 2, 1, "", "calculate_likelihood"], [10, 2, 1, "", "upr"], [10, 2, 1, "", "upr_pure"]], "autorag.nodes.promptmaker": [[12, 0, 0, "-", "base"], [12, 0, 0, "-", "fstring"], [12, 0, 0, "-", "run"]], "autorag.nodes.promptmaker.base": [[12, 2, 1, "", "prompt_maker_node"]], "autorag.nodes.promptmaker.fstring": [[12, 2, 1, "", "fstring"]], "autorag.nodes.promptmaker.run": [[12, 2, 1, "", "evaluate_generator_result"], [12, 2, 1, "", "evaluate_one_prompt_maker_node"], [12, 2, 1, "", "make_generator_callable_params"], [12, 2, 1, "", "run_prompt_maker_node"]], "autorag.nodes.queryexpansion": [[13, 0, 0, "-", "base"], [13, 0, 0, "-", "hyde"], [13, 0, 0, "-", "pass_query_expansion"], [13, 0, 0, "-", "query_decompose"], [13, 0, 0, "-", "run"]], "autorag.nodes.queryexpansion.base": [[13, 2, 1, "", "query_expansion_node"]], "autorag.nodes.queryexpansion.hyde": [[13, 2, 1, "", "hyde"], [13, 2, 1, "", "hyde_pure"]], "autorag.nodes.queryexpansion.pass_query_expansion": [[13, 2, 1, "", "pass_query_expansion"]], "autorag.nodes.queryexpansion.query_decompose": [[13, 2, 1, "", "query_decompose"], [13, 2, 1, "", "query_decompose_pure"]], "autorag.nodes.queryexpansion.run": [[13, 2, 1, "", "evaluate_one_query_expansion_node"], [13, 2, 1, "", "make_retrieval_callable_params"], [13, 2, 1, "", "run_query_expansion_node"]], "autorag.nodes.retrieval": [[14, 0, 0, "-", "base"], [14, 0, 0, "-", "bm25"], [14, 0, 0, "-", "hybrid_cc"], [14, 0, 0, "-", "hybrid_rrf"], [14, 0, 0, "-", "run"], [14, 0, 0, "-", "vectordb"]], "autorag.nodes.retrieval.base": [[14, 2, 1, "", "cast_queries"], [14, 2, 1, "", "evenly_distribute_passages"], [14, 2, 1, "", "load_bm25_corpus"], [14, 2, 1, "", "load_chroma_collection"], [14, 2, 1, "", "retrieval_node"], [14, 2, 1, "", "run_retrieval_modules"]], "autorag.nodes.retrieval.bm25": [[14, 2, 1, "", "bm25"], [14, 2, 1, "", "bm25_ingest"], [14, 2, 1, "", "bm25_pure"], [14, 2, 1, "", "bm25_tokenize"]], "autorag.nodes.retrieval.hybrid_cc": [[14, 2, 1, "", "cc_pure"], [14, 2, 1, "", "hybrid_cc"]], "autorag.nodes.retrieval.hybrid_rrf": [[14, 2, 1, "", "hybrid_rrf"], [14, 2, 1, "", "rrf_calculate"], [14, 2, 1, "", "rrf_pure"]], "autorag.nodes.retrieval.run": [[14, 2, 1, "", "edit_summary_df_params"], [14, 2, 1, "", "evaluate_retrieval_node"], [14, 2, 1, "", "get_hybrid_execution_times"], [14, 2, 1, "", "get_ids_and_scores"], [14, 2, 1, "", "get_module_params"], [14, 2, 1, "", "run_retrieval_node"], [14, 2, 1, "", "select_result_for_hybrid"]], "autorag.nodes.retrieval.vectordb": [[14, 2, 1, "", "vectordb"], [14, 2, 1, "", "vectordb_ingest"], [14, 2, 1, "", "vectordb_pure"]], "autorag.schema": [[15, 0, 0, "-", "module"], [15, 0, 0, "-", "node"]], "autorag.schema.module": [[15, 1, 1, "", "Module"]], "autorag.schema.module.Module": [[15, 3, 1, "", "from_dict"], [15, 4, 1, "", "module"], [15, 4, 1, "", "module_param"], [15, 4, 1, "", "module_type"]], "autorag.schema.node": [[15, 1, 1, "", "Node"], [15, 2, 1, "", "extract_values"], [15, 2, 1, "", "extract_values_from_nodes"], [15, 2, 1, "", "module_type_exists"]], "autorag.schema.node.Node": [[15, 3, 1, "", "from_dict"], [15, 3, 1, "", "get_param_combinations"], [15, 4, 1, "", "modules"], [15, 4, 1, "", "node_params"], [15, 4, 1, "", "node_type"], [15, 3, 1, "", "run"], [15, 4, 1, "", "run_node"], [15, 4, 1, "", "strategy"]], "autorag.strategy": [[0, 2, 1, "", "avoid_empty_result"], [0, 2, 1, "", "filter_by_threshold"], [0, 2, 1, "", "measure_speed"], [0, 2, 1, "", "select_best_average"]], "autorag.support": [[0, 2, 1, "", "dynamically_find_function"], [0, 2, 1, "", "get_support_modules"], [0, 2, 1, "", "get_support_nodes"]], "autorag.utils": [[16, 0, 0, "-", "preprocess"], [16, 0, 0, "-", "util"]], "autorag.utils.preprocess": [[16, 2, 1, "", "cast_corpus_dataset"], [16, 2, 1, "", "cast_qa_dataset"], [16, 2, 1, "", "validate_corpus_dataset"], [16, 2, 1, "", "validate_qa_dataset"]], "autorag.utils.util": [[16, 2, 1, "", "convert_env_in_dict"], [16, 2, 1, "", "convert_string_to_tuple_in_dict"], [16, 2, 1, "", "explode"], [16, 2, 1, "", "fetch_contents"], [16, 2, 1, "", "load_summary_file"], [16, 2, 1, "", "make_combinations"], [16, 2, 1, "", "normalize_string"], [16, 2, 1, "", "openai_truncate_by_token"], [16, 2, 1, "", "process_batch"], [16, 2, 1, "", "replace_value_in_dict"], [16, 2, 1, "", "result_to_dataframe"], [16, 2, 1, "", "save_parquet_safe"]], "autorag.web": [[0, 2, 1, "", "chat_box"], [0, 2, 1, "", "get_runner"], [0, 2, 1, "", "set_initial_state"], [0, 2, 1, "", "set_page_config"], [0, 2, 1, "", "set_page_header"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function", "3": "py:method", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"autorag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 22, 53], "packag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "subpackag": [0, 1, 5, 7, 10], "submodul": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16], "cli": [0, 56], "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54], "deploi": [0, 56], "evalu": [0, 5, 6, 19, 52, 56], "node_lin": 0, "strategi": [0, 25, 29, 35, 41, 44, 48, 52, 54], "support": [0, 24, 25, 29, 34, 35, 41, 44, 48, 49], "web": [0, 21, 56], "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18], "data": [1, 2, 3, 4, 19, 51, 55], "corpu": [2, 18, 19], "langchain": 2, "llama_index": [2, 3, 26], "qacreat": 3, "base": [3, 8, 9, 10, 12, 13, 14], "simpl": 3, "util": [4, 5, 6, 16], "gener": [5, 6, 8, 25], "retriev": [5, 6, 14, 48], "retrieval_cont": [5, 6], "metric": 6, "node": [7, 8, 9, 10, 11, 12, 13, 14, 15, 25, 29, 35, 41, 44, 48, 50, 51, 52, 53, 54, 56], "llama_index_llm": 8, "run": [8, 9, 10, 12, 13, 14, 20, 21, 55, 56], "vllm": [8, 27], "passagecompressor": 9, "pass_compressor": [9, 29], "tree_summar": 9, "passagererank": [10, 11], "coher": 10, "jina": 10, "korerank": 10, "monot5": [10, 34], "pass_rerank": [10, 35], "rankgpt": [10, 36], "sentence_transform": 10, "upr": [10, 39], "tart": [11, 38], "modeling_enc_t5": 11, "tokenization_enc_t5": 11, "promptmak": 12, "fstring": 12, "queryexpans": 13, "hyde": [13, 42], "pass_query_expans": [13, 44], "query_decompos": 13, "bm25": [14, 45], "hybrid_cc": 14, "hybrid_rrf": 14, "vectordb": [14, 49], "schema": 15, "preprocess": 16, "dataset": [18, 56], "format": [18, 56], "qa": [18, 19], "long": 18, "stori": 18, "short": 18, "qid": 18, "queri": [18, 43, 44], "retrieval_gt": 18, "generation_gt": 18, "doc_id": 18, "metadata": 18, "sampl": [18, 51], "start": [19, 22], "creat": [19, 56], "your": [19, 24, 56], "own": 19, "index": [19, 24, 51], "overview": [19, 25, 29, 35, 41, 44, 48], "make": [19, 50], "from": [19, 23, 55], "raw": 19, "document": [19, 22], "what": [19, 29, 35, 44, 50, 53, 56], "i": [19, 29, 35, 44, 50, 53, 55], "passag": 19, "us": [19, 21, 24, 27, 50], "custom": [19, 50, 56], "prompt": [19, 41], "multipl": 19, "api": [20, 23, 55, 56], "endpoint": 20, "server": [20, 56], "interfac": [21, 56], "1": [21, 44, 56], "yaml": [21, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56], "path": 21, "want": [21, 53, 56], "specifi": [21, 50, 56], "project": [21, 51, 56], "folder": [21, 51, 56], "2": [21, 48, 56], "trial": [21, 51, 56], "exampl": [21, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54], "why": [22, 27], "how": [22, 52], "can": [22, 52], "help": 22, "get": 22, "ecosystem": 22, "instal": [23, 55], "setup": 23, "troubl": 23, "openai": [23, 55], "kei": 23, "build": [23, 55], "sourc": 23, "configur": 24, "llm": [24, 26, 55], "embed": 24, "model": [24, 34], "add": 24, "more": [24, 52, 53], "6": 25, "definit": [25, 29, 35, 41, 44, 48], "paramet": [25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49], "purpos": [25, 29, 48], "sem_scor": 25, "config": [25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56], "file": [25, 29, 35, 41, 44, 48, 50, 56], "avail": 28, "list": 28, "4": 29, "passage_compressor": 29, "benefit": [29, 35, 44], "tree": 30, "summar": [30, 54], "cohere_rerank": 31, "befor": [31, 32], "usag": [31, 32], "jina_rerank": 32, "ko": 33, "rerank": [33, 37], "name": 34, "3": [35, 56], "passage_rerank": 35, "sentenc": 37, "transform": 37, "f": 40, "string": 40, "5": 41, "maker": 41, "decompos": 43, "expans": 44, "hybrid": [46, 47], "cc": 46, "hybird": [46, 47], "addit": [46, 47], "explan": [46, 47, 54], "rrf": 47, "backend": 49, "line": [50, 51, 53, 54, 56], "tupl": 50, "environ": 50, "variabl": 50, "structur": [51, 54], "summari": 51, "csv": 51, "pre_retrieve_node_lin": 51, "query_expans": 51, "retrieve_node_lin": 51, "resourc": 51, "json": 51, "optim": [52, 55, 56], "work": 52, "swap": 52, "pass": 52, "best": 52, "result": 52, "next": [52, 56], "t": [52, 56], "road": 53, "modular": 53, "rag": [53, 56], "know": 53, "about": 53, "earli": 53, "version": 53, "polici": 53, "merger": 53, "contact": 53, "u": 53, "concept": 54, "troubleshoot": 55, "could": 55, "wheel": 55, "face": 55, "error": [55, 56], "while": 55, "The": 55, "length": 55, "row": 55, "differ": 55, "origin": 55, "tutori": 56, "colab": 56, "prepar": 56, "note": 56, "find": 56, "pipelin": 56, "write": 56, "restart": 56, "an": 56, "occur": 56, "dure": 56, "trial_path": 56, "didn": 56, "also": 56, "first": 56, "extract": 56, "test": 56, "step": 56}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"autorag package": [[0, "autorag-package"]], "Subpackages": [[0, "subpackages"], [1, "subpackages"], [5, "subpackages"], [7, "subpackages"], [10, "subpackages"]], "Submodules": [[0, "submodules"], [2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"], [12, "submodules"], [13, "submodules"], [14, "submodules"], [15, "submodules"], [16, "submodules"]], "autorag.cli module": [[0, "module-autorag.cli"]], "autorag.deploy module": [[0, "module-autorag.deploy"]], "autorag.evaluator module": [[0, "module-autorag.evaluator"]], "autorag.node_line module": [[0, "module-autorag.node_line"]], "autorag.strategy module": [[0, "module-autorag.strategy"]], "autorag.support module": [[0, "module-autorag.support"]], "autorag.web module": [[0, "module-autorag.web"]], "Module contents": [[0, "module-autorag"], [1, "module-autorag.data"], [2, "module-autorag.data.corpus"], [3, "module-autorag.data.qacreation"], [4, "module-autorag.data.utils"], [5, "module-autorag.evaluate"], [6, "module-autorag.evaluate.metric"], [7, "module-autorag.nodes"], [8, "module-autorag.nodes.generator"], [9, "module-autorag.nodes.passagecompressor"], [10, "module-autorag.nodes.passagereranker"], [11, "module-autorag.nodes.passagereranker.tart"], [12, "module-autorag.nodes.promptmaker"], [13, "module-autorag.nodes.queryexpansion"], [14, "module-autorag.nodes.retrieval"], [15, "module-autorag.schema"], [16, "module-autorag.utils"]], "autorag.data package": [[1, "autorag-data-package"]], "autorag.data.corpus package": [[2, "autorag-data-corpus-package"]], "autorag.data.corpus.langchain module": [[2, "module-autorag.data.corpus.langchain"]], "autorag.data.corpus.llama_index module": [[2, "module-autorag.data.corpus.llama_index"]], "autorag.data.qacreation package": [[3, "autorag-data-qacreation-package"]], "autorag.data.qacreation.base module": [[3, "module-autorag.data.qacreation.base"]], "autorag.data.qacreation.llama_index module": [[3, "module-autorag.data.qacreation.llama_index"]], "autorag.data.qacreation.simple module": [[3, "module-autorag.data.qacreation.simple"]], "autorag.data.utils package": [[4, "autorag-data-utils-package"]], "autorag.data.utils.util module": [[4, "module-autorag.data.utils.util"]], "autorag.evaluate package": [[5, "autorag-evaluate-package"]], "autorag.evaluate.generation module": [[5, "module-autorag.evaluate.generation"]], "autorag.evaluate.retrieval module": [[5, "module-autorag.evaluate.retrieval"]], "autorag.evaluate.retrieval_contents module": [[5, "module-autorag.evaluate.retrieval_contents"]], "autorag.evaluate.util module": [[5, "module-autorag.evaluate.util"]], "autorag.evaluate.metric package": [[6, "autorag-evaluate-metric-package"]], "autorag.evaluate.metric.generation module": [[6, "module-autorag.evaluate.metric.generation"]], "autorag.evaluate.metric.retrieval module": [[6, "module-autorag.evaluate.metric.retrieval"]], "autorag.evaluate.metric.retrieval_contents module": [[6, "module-autorag.evaluate.metric.retrieval_contents"]], "autorag.evaluate.metric.util module": [[6, "module-autorag.evaluate.metric.util"]], "autorag.nodes package": [[7, "autorag-nodes-package"]], "autorag.nodes.generator package": [[8, "autorag-nodes-generator-package"]], "autorag.nodes.generator.base module": [[8, "module-autorag.nodes.generator.base"]], "autorag.nodes.generator.llama_index_llm module": [[8, "module-autorag.nodes.generator.llama_index_llm"]], "autorag.nodes.generator.run module": [[8, "module-autorag.nodes.generator.run"]], "autorag.nodes.generator.vllm module": [[8, "module-autorag.nodes.generator.vllm"]], "autorag.nodes.passagecompressor package": [[9, "autorag-nodes-passagecompressor-package"]], "autorag.nodes.passagecompressor.base module": [[9, "module-autorag.nodes.passagecompressor.base"]], "autorag.nodes.passagecompressor.pass_compressor module": [[9, "module-autorag.nodes.passagecompressor.pass_compressor"]], "autorag.nodes.passagecompressor.run module": [[9, "module-autorag.nodes.passagecompressor.run"]], "autorag.nodes.passagecompressor.tree_summarize module": [[9, "module-autorag.nodes.passagecompressor.tree_summarize"]], "autorag.nodes.passagereranker package": [[10, "autorag-nodes-passagereranker-package"]], "autorag.nodes.passagereranker.base module": [[10, "module-autorag.nodes.passagereranker.base"]], "autorag.nodes.passagereranker.cohere module": [[10, "module-autorag.nodes.passagereranker.cohere"]], "autorag.nodes.passagereranker.jina module": [[10, "module-autorag.nodes.passagereranker.jina"]], "autorag.nodes.passagereranker.koreranker module": [[10, "module-autorag.nodes.passagereranker.koreranker"]], "autorag.nodes.passagereranker.monot5 module": [[10, "module-autorag.nodes.passagereranker.monot5"]], "autorag.nodes.passagereranker.pass_reranker module": [[10, "module-autorag.nodes.passagereranker.pass_reranker"]], "autorag.nodes.passagereranker.rankgpt module": [[10, "module-autorag.nodes.passagereranker.rankgpt"]], "autorag.nodes.passagereranker.run module": [[10, "module-autorag.nodes.passagereranker.run"]], "autorag.nodes.passagereranker.sentence_transformer module": [[10, "module-autorag.nodes.passagereranker.sentence_transformer"]], "autorag.nodes.passagereranker.upr module": [[10, "module-autorag.nodes.passagereranker.upr"]], "autorag.nodes.passagereranker.tart package": [[11, "autorag-nodes-passagereranker-tart-package"]], "autorag.nodes.passagereranker.tart.modeling_enc_t5 module": [[11, "module-autorag.nodes.passagereranker.tart.modeling_enc_t5"]], "autorag.nodes.passagereranker.tart.tart module": [[11, "module-autorag.nodes.passagereranker.tart.tart"]], "autorag.nodes.passagereranker.tart.tokenization_enc_t5 module": [[11, "module-autorag.nodes.passagereranker.tart.tokenization_enc_t5"]], "autorag.nodes.promptmaker package": [[12, "autorag-nodes-promptmaker-package"]], "autorag.nodes.promptmaker.base module": [[12, "module-autorag.nodes.promptmaker.base"]], "autorag.nodes.promptmaker.fstring module": [[12, "module-autorag.nodes.promptmaker.fstring"]], "autorag.nodes.promptmaker.run module": [[12, "module-autorag.nodes.promptmaker.run"]], "autorag.nodes.queryexpansion package": [[13, "autorag-nodes-queryexpansion-package"]], "autorag.nodes.queryexpansion.base module": [[13, "module-autorag.nodes.queryexpansion.base"]], "autorag.nodes.queryexpansion.hyde module": [[13, "module-autorag.nodes.queryexpansion.hyde"]], "autorag.nodes.queryexpansion.pass_query_expansion module": [[13, "module-autorag.nodes.queryexpansion.pass_query_expansion"]], "autorag.nodes.queryexpansion.query_decompose module": [[13, "module-autorag.nodes.queryexpansion.query_decompose"]], "autorag.nodes.queryexpansion.run module": [[13, "module-autorag.nodes.queryexpansion.run"]], "autorag.nodes.retrieval package": [[14, "autorag-nodes-retrieval-package"]], "autorag.nodes.retrieval.base module": [[14, "module-autorag.nodes.retrieval.base"]], "autorag.nodes.retrieval.bm25 module": [[14, "module-autorag.nodes.retrieval.bm25"]], "autorag.nodes.retrieval.hybrid_cc module": [[14, "module-autorag.nodes.retrieval.hybrid_cc"]], "autorag.nodes.retrieval.hybrid_rrf module": [[14, "module-autorag.nodes.retrieval.hybrid_rrf"]], "autorag.nodes.retrieval.run module": [[14, "module-autorag.nodes.retrieval.run"]], "autorag.nodes.retrieval.vectordb module": [[14, "module-autorag.nodes.retrieval.vectordb"]], "autorag.schema package": [[15, "autorag-schema-package"]], "autorag.schema.module module": [[15, "module-autorag.schema.module"]], "autorag.schema.node module": [[15, "module-autorag.schema.node"]], "autorag.utils package": [[16, "autorag-utils-package"]], "autorag.utils.preprocess module": [[16, "module-autorag.utils.preprocess"]], "autorag.utils.util module": [[16, "module-autorag.utils.util"]], "autorag": [[17, "autorag"]], "Dataset Format": [[18, "dataset-format"]], "QA Dataset": [[18, "qa-dataset"]], "Long story short": [[18, null], [18, null], [18, null], [18, null]], "qid": [[18, "qid"]], "query": [[18, "query"]], "retrieval_gt": [[18, "retrieval-gt"]], "generation_gt": [[18, "generation-gt"]], "Corpus Dataset": [[18, "corpus-dataset"]], "doc_id": [[18, "doc-id"]], "contents": [[18, "contents"]], "metadata": [[18, "metadata"]], "Samples": [[18, "samples"]], "Start creating your own evaluation data": [[19, "start-creating-your-own-evaluation-data"]], "Index": [[19, "index"], [24, "index"]], "Overview": [[19, "overview"], [25, "overview"], [48, "overview"]], "Make corpus data from raw documents": [[19, "make-corpus-data-from-raw-documents"]], "Make qa data from corpus data": [[19, "make-qa-data-from-corpus-data"]], "What is passage?": [[19, null]], "Use custom prompt": [[19, "use-custom-prompt"]], "Use multiple prompts": [[19, "use-multiple-prompts"]], "API endpoint": [[20, "api-endpoint"]], "Running API server": [[20, "running-api-server"]], "API Endpoint": [[20, "id1"]], "Web Interface": [[21, "web-interface"]], "Running the Web Interface": [[21, "running-the-web-interface"]], "1. Use yaml path": [[21, "use-yaml-path"]], "Want to specify project folder?": [[21, null], [56, null], [56, null], [56, null]], "2. Use trial path": [[21, "use-trial-path"]], "Web Interface example": [[21, "web-interface-example"]], "AutoRAG documentation": [[22, "autorag-documentation"]], "\ud83e\udd37\u200d\u2642\ufe0f Why AutoRAG?": [[22, "why-autorag"]], "\ud83e\udd38\u200d\u2642\ufe0f How can AutoRAG helps?": [[22, "how-can-autorag-helps"]], "\ud83c\udfc3\u200d\u2642\ufe0f Getting Started": [[22, "getting-started"]], "\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc66 Ecosystem": [[22, "ecosystem"]], "Installation and Setup": [[23, "installation-and-setup"]], "Trouble with installation?": [[23, null]], "Setup OPENAI API KEY": [[23, "setup-openai-api-key"]], "Build from source": [[23, "build-from-source"]], "Configure LLM & Embedding models": [[24, "configure-llm-embedding-models"]], "Configure the LLM model": [[24, "configure-the-llm-model"]], "Modules that use LLM model": [[24, "modules-that-use-llm-model"]], "Supporting LLM models": [[24, "supporting-llm-models"]], "Add more LLM models": [[24, "add-more-llm-models"]], "Configure the Embedding model": [[24, "configure-the-embedding-model"]], "Modules that use Embedding model": [[24, "modules-that-use-embedding-model"]], "Supporting Embedding models": [[24, "supporting-embedding-models"]], "Add your embedding models": [[24, "add-your-embedding-models"]], "6. Generator": [[25, "generator"]], "\ud83d\udd0e Definition": [[25, "definition"], [29, "definition"], [35, "definition"], [41, "definition"], [44, "definition"], [48, "definition"]], "\ud83d\udd22 Parameters": [[25, "parameters"], [29, "parameters"], [35, "parameters"], [41, "parameters"], [44, "parameters"], [48, "parameters"]], "Node Parameters": [[25, "node-parameters"], [29, "node-parameters"], [35, "node-parameters"], [41, "node-parameters"], [44, "node-parameters"], [48, "node-parameters"]], "Strategy Parameters": [[25, "strategy-parameters"], [29, "strategy-parameters"], [35, "strategy-parameters"], [48, "strategy-parameters"]], "Purpose": [[25, null], [29, null], [48, null]], "sem_score": [[25, null]], "Example config.yaml file": [[25, "example-config-yaml-file"], [29, "example-config-yaml-file"], [35, "example-config-yaml-file"], [41, "example-config-yaml-file"], [44, "example-config-yaml-file"], [48, "example-config-yaml-file"]], "Supported Modules": [[25, "supported-modules"], [29, "supported-modules"], [35, "supported-modules"], [41, "supported-modules"], [44, "supported-modules"], [48, "supported-modules"]], "llama_index LLM": [[26, "llama-index-llm"]], "Module Parameters": [[26, "module-parameters"], [27, "module-parameters"], [30, "module-parameters"], [31, "module-parameters"], [32, "module-parameters"], [33, "module-parameters"], [34, "module-parameters"], [36, "module-parameters"], [37, "module-parameters"], [38, "module-parameters"], [39, "module-parameters"], [40, "module-parameters"], [42, "module-parameters"], [43, "module-parameters"], [45, "module-parameters"], [46, "module-parameters"], [47, "module-parameters"], [49, "module-parameters"]], "Example config.yaml": [[26, "example-config-yaml"], [27, "example-config-yaml"], [30, "example-config-yaml"], [31, "example-config-yaml"], [32, "example-config-yaml"], [33, "example-config-yaml"], [34, "example-config-yaml"], [36, "example-config-yaml"], [37, "example-config-yaml"], [38, "example-config-yaml"], [39, "example-config-yaml"], [40, "example-config-yaml"], [42, "example-config-yaml"], [43, "example-config-yaml"], [45, "example-config-yaml"], [46, "example-config-yaml"], [47, "example-config-yaml"], [49, "example-config-yaml"]], "vllm": [[27, "vllm"]], "Why use vllm module?": [[27, "why-use-vllm-module"]], "Available List": [[28, "available-list"]], "4. Passage_Compressor": [[29, "passage-compressor"]], "\ud83e\udd38 Benefits": [[29, "benefits"], [35, "benefits"], [44, "benefits"]], "Overview:": [[29, "overview"], [35, "overview"], [41, "overview"], [44, "overview"]], "What is pass_compressor?": [[29, null]], "Tree Summarize": [[30, "tree-summarize"]], "cohere_reranker": [[31, "cohere-reranker"]], "Before Usage": [[31, "before-usage"], [32, "before-usage"]], "jina_reranker": [[32, "jina-reranker"]], "Ko-reranker": [[33, "ko-reranker"]], "MonoT5": [[34, "monot5"]], "Supported Model Names": [[34, "supported-model-names"]], "3. Passage_Reranker": [[35, "passage-reranker"]], "What is pass_reranker?": [[35, null]], "RankGPT": [[36, "rankgpt"]], "Sentence Transformer Reranker": [[37, "sentence-transformer-reranker"]], "TART": [[38, "tart"]], "UPR": [[39, "upr"]], "F-String": [[40, "f-string"]], "5. Prompt Maker": [[41, "prompt-maker"]], "Strategy": [[41, "strategy"], [44, "strategy"], [54, "strategy"]], "Strategy Parameters:": [[41, "strategy-parameters"], [44, "strategy-parameters"]], "HyDE": [[42, "hyde"]], "Query Decompose": [[43, "query-decompose"]], "1. Query Expansion": [[44, "query-expansion"]], "What is pass_query_expansion?": [[44, null]], "BM25": [[45, "bm25"]], "Hybrid - cc": [[46, "hybrid-cc"]], "\u2757\ufe0fHybird additional explanation": [[46, "hybird-additional-explanation"]], "Hybrid - rrf": [[47, "hybrid-rrf"]], "\u2757 Hybird additional explanation": [[47, "hybird-additional-explanation"]], "2. Retrieval": [[48, "retrieval"]], "Vectordb": [[49, "vectordb"]], "Backend Support": [[49, "backend-support"]], "Make custom config yaml file": [[50, "make-custom-config-yaml-file"]], "Make yaml file": [[50, "make-yaml-file"]], "Make Node Line": [[50, "make-node-line"]], "Specify nodes": [[50, "specify-nodes"]], "Specify modules": [[50, "specify-modules"]], "What is tuple in the yaml file?": [[50, null]], "Use environment variable in the yaml file": [[50, "use-environment-variable-in-the-yaml-file"]], "Folder Structure": [[51, "folder-structure"]], "Sample Structure Index": [[51, "sample-structure-index"]], "Project": [[51, "project"]], "trial": [[51, "trial"]], "config.yaml": [[51, "config-yaml"]], "[trial] summary.csv": [[51, "trial-summary-csv"]], "pre_retrieve_node_line": [[51, "pre-retrieve-node-line"]], "[Node Line] summary.csv": [[51, "node-line-summary-csv"]], "query_expansion": [[51, "query-expansion"]], "[Node] summary.csv": [[51, "node-summary-csv"]], "retrieve_node_line": [[51, "retrieve-node-line"]], "data": [[51, "data"]], "resources": [[51, "resources"]], "trial.json": [[51, "trial-json"]], "How optimization works": [[52, "how-optimization-works"]], "Swapping modules in Node": [[52, "swapping-modules-in-node"]], "Pass the best result to the next node": [[52, "pass-the-best-result-to-the-next-node"]], "Evaluate Nodes that can\u2019t evaluate": [[52, "evaluate-nodes-that-can-t-evaluate"]], "More optimization strategies": [[52, "more-optimization-strategies"]], "Road to Modular RAG": [[53, "road-to-modular-rag"]], "\ud83e\udd37\u200d\u2642\ufe0f What is Modular RAG?": [[53, "what-is-modular-rag"]], "Want to know more about Modular RAG?": [[53, null]], "\ud83d\ude80 Road to Modular RAG": [[53, "id1"]], "Early version of AutoRAG": [[53, "early-version-of-autorag"]], "Policy Node": [[53, "policy-node"]], "Merger Node": [[53, "merger-node"]], "Node line for Modular RAG": [[53, "node-line-for-modular-rag"]], "What is Node Line?": [[53, null]], "Contact us": [[53, "contact-us"]], "Contact": [[53, null]], "Structure": [[54, "structure"]], "Explanation of concepts": [[54, "explanation-of-concepts"]], "Node & Module": [[54, "node-module"]], "Node Line": [[54, "node-line"]], "Example Node Lines": [[54, "example-node-lines"]], "Summarize": [[54, null], [54, null], [54, null]], "TroubleShooting": [[55, "troubleshooting"]], "Installation": [[55, "installation"]], "Could not build wheels": [[55, "could-not-build-wheels"]], "Optimization": [[55, "optimization"]], "Facing OPENAI API error": [[55, "facing-openai-api-error"]], "Error while running LLM": [[55, "error-while-running-llm"]], "The length or row is different from the original data": [[55, "the-length-or-row-is-different-from-the-original-data"]], "Tutorial": [[56, "tutorial"]], "Colab Tutorial": [[56, null]], "Prepare Evaluation Dataset": [[56, "prepare-evaluation-dataset"]], "Note: Dataset Format": [[56, null]], "Find Optimal RAG Pipeline": [[56, "find-optimal-rag-pipeline"]], "Write custom config yaml file": [[56, null]], "\u2757Restart a trial if an error occurs during the trial": [[56, "restart-a-trial-if-an-error-occurs-during-the-trial"]], "What if Trial_Path didn\u2019t also create a First Node Line?": [[56, null]], "Extract pipeline and evaluate test dataset": [[56, "extract-pipeline-and-evaluate-test-dataset"]], "Deploy your optimal RAG pipeline": [[56, "deploy-your-optimal-rag-pipeline"]], "1. Run as a CLI": [[56, "run-as-a-cli"]], "2. Run as an API server": [[56, "run-as-an-api-server"]], "3. Run as a Web Interface": [[56, "run-as-a-web-interface"]], "Next Step": [[56, null]]}, "indexentries": {"evaluator (class in autorag.evaluator)": [[0, "autorag.evaluator.Evaluator"]], "lazyinit (class in autorag)": [[0, "autorag.LazyInit"]], "runner (class in autorag.deploy)": [[0, "autorag.deploy.Runner"]], "runnerinput (class in autorag.deploy)": [[0, "autorag.deploy.RunnerInput"]], "autorag": [[0, "module-autorag"]], "autorag.cli": [[0, "module-autorag.cli"]], "autorag.deploy": [[0, "module-autorag.deploy"]], "autorag.evaluator": [[0, "module-autorag.evaluator"]], "autorag.node_line": [[0, "module-autorag.node_line"]], "autorag.strategy": [[0, "module-autorag.strategy"]], "autorag.support": [[0, "module-autorag.support"]], "autorag.web": [[0, "module-autorag.web"]], "avoid_empty_result() (in module autorag.strategy)": [[0, "autorag.strategy.avoid_empty_result"]], "chat_box() (in module autorag.web)": [[0, "autorag.web.chat_box"]], "dynamically_find_function() (in module autorag.support)": [[0, "autorag.support.dynamically_find_function"]], "extract_best_config() (in module autorag.deploy)": [[0, "autorag.deploy.extract_best_config"]], "extract_node_line_names() (in module autorag.deploy)": [[0, "autorag.deploy.extract_node_line_names"]], "extract_node_strategy() (in module autorag.deploy)": [[0, "autorag.deploy.extract_node_strategy"]], "filter_by_threshold() (in module autorag.strategy)": [[0, "autorag.strategy.filter_by_threshold"]], "from_trial_folder() (autorag.deploy.runner class method)": [[0, "autorag.deploy.Runner.from_trial_folder"]], "from_yaml() (autorag.deploy.runner class method)": [[0, "autorag.deploy.Runner.from_yaml"]], "get_runner() (in module autorag.web)": [[0, "autorag.web.get_runner"]], "get_support_modules() (in module autorag.support)": [[0, "autorag.support.get_support_modules"]], "get_support_nodes() (in module autorag.support)": [[0, "autorag.support.get_support_nodes"]], "handle_exception() (in module autorag)": [[0, "autorag.handle_exception"]], "make_node_lines() (in module autorag.node_line)": [[0, "autorag.node_line.make_node_lines"]], "measure_speed() (in module autorag.strategy)": [[0, "autorag.strategy.measure_speed"]], "model_computed_fields (autorag.deploy.runnerinput attribute)": [[0, "autorag.deploy.RunnerInput.model_computed_fields"]], "model_config (autorag.deploy.runnerinput attribute)": [[0, "autorag.deploy.RunnerInput.model_config"]], "model_fields (autorag.deploy.runnerinput attribute)": [[0, "autorag.deploy.RunnerInput.model_fields"]], "module": [[0, "module-autorag"], [0, "module-autorag.cli"], [0, "module-autorag.deploy"], [0, "module-autorag.evaluator"], [0, "module-autorag.node_line"], [0, "module-autorag.strategy"], [0, "module-autorag.support"], [0, "module-autorag.web"], [1, "module-autorag.data"], [2, "module-autorag.data.corpus"], [2, "module-autorag.data.corpus.langchain"], [2, "module-autorag.data.corpus.llama_index"], [3, "module-autorag.data.qacreation"], [3, "module-autorag.data.qacreation.base"], [3, "module-autorag.data.qacreation.llama_index"], [3, "module-autorag.data.qacreation.simple"], [4, "module-autorag.data.utils"], [4, "module-autorag.data.utils.util"], [5, "module-autorag.evaluate"], [5, "module-autorag.evaluate.generation"], [5, "module-autorag.evaluate.retrieval"], [5, "module-autorag.evaluate.retrieval_contents"], [5, "module-autorag.evaluate.util"], [6, "module-autorag.evaluate.metric"], [6, "module-autorag.evaluate.metric.generation"], [6, "module-autorag.evaluate.metric.retrieval"], [6, "module-autorag.evaluate.metric.retrieval_contents"], [6, "module-autorag.evaluate.metric.util"], [7, "module-autorag.nodes"], [8, "module-autorag.nodes.generator"], [8, "module-autorag.nodes.generator.base"], [8, "module-autorag.nodes.generator.llama_index_llm"], [8, "module-autorag.nodes.generator.run"], [8, "module-autorag.nodes.generator.vllm"], [9, "module-autorag.nodes.passagecompressor"], [9, "module-autorag.nodes.passagecompressor.base"], [9, "module-autorag.nodes.passagecompressor.pass_compressor"], [9, "module-autorag.nodes.passagecompressor.run"], [9, "module-autorag.nodes.passagecompressor.tree_summarize"], [10, "module-autorag.nodes.passagereranker"], [10, "module-autorag.nodes.passagereranker.base"], [10, "module-autorag.nodes.passagereranker.cohere"], [10, "module-autorag.nodes.passagereranker.jina"], [10, "module-autorag.nodes.passagereranker.koreranker"], [10, "module-autorag.nodes.passagereranker.monot5"], [10, "module-autorag.nodes.passagereranker.pass_reranker"], [10, "module-autorag.nodes.passagereranker.rankgpt"], [10, "module-autorag.nodes.passagereranker.run"], [10, "module-autorag.nodes.passagereranker.sentence_transformer"], [10, "module-autorag.nodes.passagereranker.upr"], [11, "module-autorag.nodes.passagereranker.tart"], [11, "module-autorag.nodes.passagereranker.tart.modeling_enc_t5"], [11, "module-autorag.nodes.passagereranker.tart.tart"], [11, "module-autorag.nodes.passagereranker.tart.tokenization_enc_t5"], [12, "module-autorag.nodes.promptmaker"], [12, "module-autorag.nodes.promptmaker.base"], [12, "module-autorag.nodes.promptmaker.fstring"], [12, "module-autorag.nodes.promptmaker.run"], [13, "module-autorag.nodes.queryexpansion"], [13, "module-autorag.nodes.queryexpansion.base"], [13, "module-autorag.nodes.queryexpansion.hyde"], [13, "module-autorag.nodes.queryexpansion.pass_query_expansion"], [13, "module-autorag.nodes.queryexpansion.query_decompose"], [13, "module-autorag.nodes.queryexpansion.run"], [14, "module-autorag.nodes.retrieval"], [14, "module-autorag.nodes.retrieval.base"], [14, "module-autorag.nodes.retrieval.bm25"], [14, "module-autorag.nodes.retrieval.hybrid_cc"], [14, "module-autorag.nodes.retrieval.hybrid_rrf"], [14, "module-autorag.nodes.retrieval.run"], [14, "module-autorag.nodes.retrieval.vectordb"], [15, "module-autorag.schema"], [15, "module-autorag.schema.module"], [15, "module-autorag.schema.node"], [16, "module-autorag.utils"], [16, "module-autorag.utils.preprocess"], [16, "module-autorag.utils.util"]], "query (autorag.deploy.runnerinput attribute)": [[0, "autorag.deploy.RunnerInput.query"]], "restart_trial() (autorag.evaluator.evaluator method)": [[0, "autorag.evaluator.Evaluator.restart_trial"]], "result_column (autorag.deploy.runnerinput attribute)": [[0, "autorag.deploy.RunnerInput.result_column"]], "run() (autorag.deploy.runner method)": [[0, "autorag.deploy.Runner.run"]], "run_api_server() (autorag.deploy.runner method)": [[0, "autorag.deploy.Runner.run_api_server"]], "run_node_line() (in module autorag.node_line)": [[0, "autorag.node_line.run_node_line"]], "select_best_average() (in module autorag.strategy)": [[0, "autorag.strategy.select_best_average"]], "set_initial_state() (in module autorag.web)": [[0, "autorag.web.set_initial_state"]], "set_page_config() (in module autorag.web)": [[0, "autorag.web.set_page_config"]], "set_page_header() (in module autorag.web)": [[0, "autorag.web.set_page_header"]], "start_trial() (autorag.evaluator.evaluator method)": [[0, "autorag.evaluator.Evaluator.start_trial"]], "summary_df_to_yaml() (in module autorag.deploy)": [[0, "autorag.deploy.summary_df_to_yaml"]], "autorag.data": [[1, "module-autorag.data"]], "autorag.data.corpus": [[2, "module-autorag.data.corpus"]], "autorag.data.corpus.langchain": [[2, "module-autorag.data.corpus.langchain"]], "autorag.data.corpus.llama_index": [[2, "module-autorag.data.corpus.llama_index"]], "langchain_documents_to_parquet() (in module autorag.data.corpus.langchain)": [[2, "autorag.data.corpus.langchain.langchain_documents_to_parquet"]], "llama_documents_to_parquet() (in module autorag.data.corpus.llama_index)": [[2, "autorag.data.corpus.llama_index.llama_documents_to_parquet"]], "llama_text_node_to_parquet() (in module autorag.data.corpus.llama_index)": [[2, "autorag.data.corpus.llama_index.llama_text_node_to_parquet"]], "async_qa_gen_llama_index() (in module autorag.data.qacreation.llama_index)": [[3, "autorag.data.qacreation.llama_index.async_qa_gen_llama_index"]], "autorag.data.qacreation": [[3, "module-autorag.data.qacreation"]], "autorag.data.qacreation.base": [[3, "module-autorag.data.qacreation.base"]], "autorag.data.qacreation.llama_index": [[3, "module-autorag.data.qacreation.llama_index"]], "autorag.data.qacreation.simple": [[3, "module-autorag.data.qacreation.simple"]], "distribute_list_by_ratio() (in module autorag.data.qacreation.llama_index)": [[3, "autorag.data.qacreation.llama_index.distribute_list_by_ratio"]], "generate_qa_llama_index() (in module autorag.data.qacreation.llama_index)": [[3, "autorag.data.qacreation.llama_index.generate_qa_llama_index"]], "generate_qa_llama_index_by_ratio() (in module autorag.data.qacreation.llama_index)": [[3, "autorag.data.qacreation.llama_index.generate_qa_llama_index_by_ratio"]], "generate_qa_row() (in module autorag.data.qacreation.simple)": [[3, "autorag.data.qacreation.simple.generate_qa_row"]], "generate_simple_qa_dataset() (in module autorag.data.qacreation.simple)": [[3, "autorag.data.qacreation.simple.generate_simple_qa_dataset"]], "make_single_content_qa() (in module autorag.data.qacreation.base)": [[3, "autorag.data.qacreation.base.make_single_content_qa"]], "parse_output() (in module autorag.data.qacreation.llama_index)": [[3, "autorag.data.qacreation.llama_index.parse_output"]], "validate_llama_index_prompt() (in module autorag.data.qacreation.llama_index)": [[3, "autorag.data.qacreation.llama_index.validate_llama_index_prompt"]], "add_essential_metadata() (in module autorag.data.utils.util)": [[4, "autorag.data.utils.util.add_essential_metadata"]], "autorag.data.utils": [[4, "module-autorag.data.utils"]], "autorag.data.utils.util": [[4, "module-autorag.data.utils.util"]], "get_file_metadata() (in module autorag.data.utils.util)": [[4, "autorag.data.utils.util.get_file_metadata"]], "autorag.evaluate": [[5, "module-autorag.evaluate"]], "autorag.evaluate.generation": [[5, "module-autorag.evaluate.generation"]], "autorag.evaluate.retrieval": [[5, "module-autorag.evaluate.retrieval"]], "autorag.evaluate.retrieval_contents": [[5, "module-autorag.evaluate.retrieval_contents"]], "autorag.evaluate.util": [[5, "module-autorag.evaluate.util"]], "cast_embedding_model() (in module autorag.evaluate.util)": [[5, "autorag.evaluate.util.cast_embedding_model"]], "cast_metrics() (in module autorag.evaluate.util)": [[5, "autorag.evaluate.util.cast_metrics"]], "evaluate_generation() (in module autorag.evaluate.generation)": [[5, "autorag.evaluate.generation.evaluate_generation"]], "evaluate_retrieval() (in module autorag.evaluate.retrieval)": [[5, "autorag.evaluate.retrieval.evaluate_retrieval"]], "evaluate_retrieval_contents() (in module autorag.evaluate.retrieval_contents)": [[5, "autorag.evaluate.retrieval_contents.evaluate_retrieval_contents"]], "autorag.evaluate.metric": [[6, "module-autorag.evaluate.metric"]], "autorag.evaluate.metric.generation": [[6, "module-autorag.evaluate.metric.generation"]], "autorag.evaluate.metric.retrieval": [[6, "module-autorag.evaluate.metric.retrieval"]], "autorag.evaluate.metric.retrieval_contents": [[6, "module-autorag.evaluate.metric.retrieval_contents"]], "autorag.evaluate.metric.util": [[6, "module-autorag.evaluate.metric.util"]], "bert_score() (in module autorag.evaluate.metric.generation)": [[6, "autorag.evaluate.metric.generation.bert_score"]], "bleu() (in module autorag.evaluate.metric.generation)": [[6, "autorag.evaluate.metric.generation.bleu"]], "calculate_cosine_similarity() (in module autorag.evaluate.metric.util)": [[6, "autorag.evaluate.metric.util.calculate_cosine_similarity"]], "g_eval() (in module autorag.evaluate.metric.generation)": [[6, "autorag.evaluate.metric.generation.g_eval"]], "generation_metric() (in module autorag.evaluate.metric.generation)": [[6, "autorag.evaluate.metric.generation.generation_metric"]], "huggingface_evaluate() (in module autorag.evaluate.metric.generation)": [[6, "autorag.evaluate.metric.generation.huggingface_evaluate"]], "meteor() (in module autorag.evaluate.metric.generation)": [[6, "autorag.evaluate.metric.generation.meteor"]], "retrieval_contents_metric() (in module autorag.evaluate.metric.retrieval_contents)": [[6, "autorag.evaluate.metric.retrieval_contents.retrieval_contents_metric"]], "retrieval_f1() (in module autorag.evaluate.metric.retrieval)": [[6, "autorag.evaluate.metric.retrieval.retrieval_f1"]], "retrieval_metric() (in module autorag.evaluate.metric.retrieval)": [[6, "autorag.evaluate.metric.retrieval.retrieval_metric"]], "retrieval_precision() (in module autorag.evaluate.metric.retrieval)": [[6, "autorag.evaluate.metric.retrieval.retrieval_precision"]], "retrieval_recall() (in module autorag.evaluate.metric.retrieval)": [[6, "autorag.evaluate.metric.retrieval.retrieval_recall"]], "retrieval_token_f1() (in module autorag.evaluate.metric.retrieval_contents)": [[6, "autorag.evaluate.metric.retrieval_contents.retrieval_token_f1"]], "retrieval_token_precision() (in module autorag.evaluate.metric.retrieval_contents)": [[6, "autorag.evaluate.metric.retrieval_contents.retrieval_token_precision"]], "retrieval_token_recall() (in module autorag.evaluate.metric.retrieval_contents)": [[6, "autorag.evaluate.metric.retrieval_contents.retrieval_token_recall"]], "rouge() (in module autorag.evaluate.metric.generation)": [[6, "autorag.evaluate.metric.generation.rouge"]], "sem_score() (in module autorag.evaluate.metric.generation)": [[6, "autorag.evaluate.metric.generation.sem_score"]], "single_token_f1() (in module autorag.evaluate.metric.retrieval_contents)": [[6, "autorag.evaluate.metric.retrieval_contents.single_token_f1"]], "autorag.nodes": [[7, "module-autorag.nodes"]], "autorag.nodes.generator": [[8, "module-autorag.nodes.generator"]], "autorag.nodes.generator.base": [[8, "module-autorag.nodes.generator.base"]], "autorag.nodes.generator.llama_index_llm": [[8, "module-autorag.nodes.generator.llama_index_llm"]], "autorag.nodes.generator.run": [[8, "module-autorag.nodes.generator.run"]], "autorag.nodes.generator.vllm": [[8, "module-autorag.nodes.generator.vllm"]], "destroy_vllm_instance() (in module autorag.nodes.generator.vllm)": [[8, "autorag.nodes.generator.vllm.destroy_vllm_instance"]], "evaluate_generator_node() (in module autorag.nodes.generator.run)": [[8, "autorag.nodes.generator.run.evaluate_generator_node"]], "generator_node() (in module autorag.nodes.generator.base)": [[8, "autorag.nodes.generator.base.generator_node"]], "llama_index_llm() (in module autorag.nodes.generator.llama_index_llm)": [[8, "autorag.nodes.generator.llama_index_llm.llama_index_llm"]], "make_vllm_instance() (in module autorag.nodes.generator.vllm)": [[8, "autorag.nodes.generator.vllm.make_vllm_instance"]], "run_generator_node() (in module autorag.nodes.generator.run)": [[8, "autorag.nodes.generator.run.run_generator_node"]], "vllm() (in module autorag.nodes.generator.vllm)": [[8, "autorag.nodes.generator.vllm.vllm"]], "autorag.nodes.passagecompressor": [[9, "module-autorag.nodes.passagecompressor"]], "autorag.nodes.passagecompressor.base": [[9, "module-autorag.nodes.passagecompressor.base"]], "autorag.nodes.passagecompressor.pass_compressor": [[9, "module-autorag.nodes.passagecompressor.pass_compressor"]], "autorag.nodes.passagecompressor.run": [[9, "module-autorag.nodes.passagecompressor.run"]], "autorag.nodes.passagecompressor.tree_summarize": [[9, "module-autorag.nodes.passagecompressor.tree_summarize"]], "evaluate_passage_compressor_node() (in module autorag.nodes.passagecompressor.run)": [[9, "autorag.nodes.passagecompressor.run.evaluate_passage_compressor_node"]], "make_contents_gt() (in module autorag.nodes.passagecompressor.run)": [[9, "autorag.nodes.passagecompressor.run.make_contents_gt"]], "make_llm() (in module autorag.nodes.passagecompressor.base)": [[9, "autorag.nodes.passagecompressor.base.make_llm"]], "pass_compressor() (in module autorag.nodes.passagecompressor.pass_compressor)": [[9, "autorag.nodes.passagecompressor.pass_compressor.pass_compressor"]], "passage_compressor_node() (in module autorag.nodes.passagecompressor.base)": [[9, "autorag.nodes.passagecompressor.base.passage_compressor_node"]], "run_passage_compressor_node() (in module autorag.nodes.passagecompressor.run)": [[9, "autorag.nodes.passagecompressor.run.run_passage_compressor_node"]], "tree_summarize() (in module autorag.nodes.passagecompressor.tree_summarize)": [[9, "autorag.nodes.passagecompressor.tree_summarize.tree_summarize"]], "asyncrankgptrerank (class in autorag.nodes.passagereranker.rankgpt)": [[10, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank"]], "async_postprocess_nodes() (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank method)": [[10, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.async_postprocess_nodes"]], "async_run_llm() (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank method)": [[10, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.async_run_llm"]], "autorag.nodes.passagereranker": [[10, "module-autorag.nodes.passagereranker"]], "autorag.nodes.passagereranker.base": [[10, "module-autorag.nodes.passagereranker.base"]], "autorag.nodes.passagereranker.cohere": [[10, "module-autorag.nodes.passagereranker.cohere"]], "autorag.nodes.passagereranker.jina": [[10, "module-autorag.nodes.passagereranker.jina"]], "autorag.nodes.passagereranker.koreranker": [[10, "module-autorag.nodes.passagereranker.koreranker"]], "autorag.nodes.passagereranker.monot5": [[10, "module-autorag.nodes.passagereranker.monot5"]], "autorag.nodes.passagereranker.pass_reranker": [[10, "module-autorag.nodes.passagereranker.pass_reranker"]], "autorag.nodes.passagereranker.rankgpt": [[10, "module-autorag.nodes.passagereranker.rankgpt"]], "autorag.nodes.passagereranker.run": [[10, "module-autorag.nodes.passagereranker.run"]], "autorag.nodes.passagereranker.sentence_transformer": [[10, "module-autorag.nodes.passagereranker.sentence_transformer"]], "autorag.nodes.passagereranker.upr": [[10, "module-autorag.nodes.passagereranker.upr"]], "calculate_likelihood() (in module autorag.nodes.passagereranker.upr)": [[10, "autorag.nodes.passagereranker.upr.calculate_likelihood"]], "cohere_rerank_pure() (in module autorag.nodes.passagereranker.cohere)": [[10, "autorag.nodes.passagereranker.cohere.cohere_rerank_pure"]], "cohere_reranker() (in module autorag.nodes.passagereranker.cohere)": [[10, "autorag.nodes.passagereranker.cohere.cohere_reranker"]], "exp_normalize() (in module autorag.nodes.passagereranker.koreranker)": [[10, "autorag.nodes.passagereranker.koreranker.exp_normalize"]], "jina_reranker() (in module autorag.nodes.passagereranker.jina)": [[10, "autorag.nodes.passagereranker.jina.jina_reranker"]], "jina_reranker_pure() (in module autorag.nodes.passagereranker.jina)": [[10, "autorag.nodes.passagereranker.jina.jina_reranker_pure"]], "koreranker() (in module autorag.nodes.passagereranker.koreranker)": [[10, "autorag.nodes.passagereranker.koreranker.koreranker"]], "koreranker_pure() (in module autorag.nodes.passagereranker.koreranker)": [[10, "autorag.nodes.passagereranker.koreranker.koreranker_pure"]], "mono_t5_pure() (in module autorag.nodes.passagereranker.monot5)": [[10, "autorag.nodes.passagereranker.monot5.mono_t5_pure"]], "monot5() (in module autorag.nodes.passagereranker.monot5)": [[10, "autorag.nodes.passagereranker.monot5.monot5"]], "pass_reranker() (in module autorag.nodes.passagereranker.pass_reranker)": [[10, "autorag.nodes.passagereranker.pass_reranker.pass_reranker"]], "passage_reranker_node() (in module autorag.nodes.passagereranker.base)": [[10, "autorag.nodes.passagereranker.base.passage_reranker_node"]], "rankgpt() (in module autorag.nodes.passagereranker.rankgpt)": [[10, "autorag.nodes.passagereranker.rankgpt.rankgpt"]], "run_passage_reranker_node() (in module autorag.nodes.passagereranker.run)": [[10, "autorag.nodes.passagereranker.run.run_passage_reranker_node"]], "sentence_transformer_reranker() (in module autorag.nodes.passagereranker.sentence_transformer)": [[10, "autorag.nodes.passagereranker.sentence_transformer.sentence_transformer_reranker"]], "sentence_transformer_reranker_pure() (in module autorag.nodes.passagereranker.sentence_transformer)": [[10, "autorag.nodes.passagereranker.sentence_transformer.sentence_transformer_reranker_pure"]], "upr() (in module autorag.nodes.passagereranker.upr)": [[10, "autorag.nodes.passagereranker.upr.upr"]], "upr_pure() (in module autorag.nodes.passagereranker.upr)": [[10, "autorag.nodes.passagereranker.upr.upr_pure"]], "enct5forsequenceclassification (class in autorag.nodes.passagereranker.tart.modeling_enc_t5)": [[11, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification"]], "enct5tokenizer (class in autorag.nodes.passagereranker.tart.tokenization_enc_t5)": [[11, "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer"]], "autorag.nodes.passagereranker.tart": [[11, "module-autorag.nodes.passagereranker.tart"]], "autorag.nodes.passagereranker.tart.modeling_enc_t5": [[11, "module-autorag.nodes.passagereranker.tart.modeling_enc_t5"]], "autorag.nodes.passagereranker.tart.tart": [[11, "module-autorag.nodes.passagereranker.tart.tart"]], "autorag.nodes.passagereranker.tart.tokenization_enc_t5": [[11, "module-autorag.nodes.passagereranker.tart.tokenization_enc_t5"]], "build_inputs_with_special_tokens() (autorag.nodes.passagereranker.tart.tokenization_enc_t5.enct5tokenizer method)": [[11, "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer.build_inputs_with_special_tokens"]], "create_token_type_ids_from_sequences() (autorag.nodes.passagereranker.tart.tokenization_enc_t5.enct5tokenizer method)": [[11, "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer.create_token_type_ids_from_sequences"]], "deparallelize() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[11, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.deparallelize"]], "forward() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[11, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.forward"]], "get_encoder() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[11, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.get_encoder"]], "get_input_embeddings() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[11, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.get_input_embeddings"]], "get_special_tokens_mask() (autorag.nodes.passagereranker.tart.tokenization_enc_t5.enct5tokenizer method)": [[11, "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer.get_special_tokens_mask"]], "parallelize() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[11, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.parallelize"]], "set_input_embeddings() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[11, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.set_input_embeddings"]], "tart() (in module autorag.nodes.passagereranker.tart.tart)": [[11, "autorag.nodes.passagereranker.tart.tart.tart"]], "tart_pure() (in module autorag.nodes.passagereranker.tart.tart)": [[11, "autorag.nodes.passagereranker.tart.tart.tart_pure"]], "autorag.nodes.promptmaker": [[12, "module-autorag.nodes.promptmaker"]], "autorag.nodes.promptmaker.base": [[12, "module-autorag.nodes.promptmaker.base"]], "autorag.nodes.promptmaker.fstring": [[12, "module-autorag.nodes.promptmaker.fstring"]], "autorag.nodes.promptmaker.run": [[12, "module-autorag.nodes.promptmaker.run"]], "evaluate_generator_result() (in module autorag.nodes.promptmaker.run)": [[12, "autorag.nodes.promptmaker.run.evaluate_generator_result"]], "evaluate_one_prompt_maker_node() (in module autorag.nodes.promptmaker.run)": [[12, "autorag.nodes.promptmaker.run.evaluate_one_prompt_maker_node"]], "fstring() (in module autorag.nodes.promptmaker.fstring)": [[12, "autorag.nodes.promptmaker.fstring.fstring"]], "make_generator_callable_params() (in module autorag.nodes.promptmaker.run)": [[12, "autorag.nodes.promptmaker.run.make_generator_callable_params"]], "prompt_maker_node() (in module autorag.nodes.promptmaker.base)": [[12, "autorag.nodes.promptmaker.base.prompt_maker_node"]], "run_prompt_maker_node() (in module autorag.nodes.promptmaker.run)": [[12, "autorag.nodes.promptmaker.run.run_prompt_maker_node"]], "autorag.nodes.queryexpansion": [[13, "module-autorag.nodes.queryexpansion"]], "autorag.nodes.queryexpansion.base": [[13, "module-autorag.nodes.queryexpansion.base"]], "autorag.nodes.queryexpansion.hyde": [[13, "module-autorag.nodes.queryexpansion.hyde"]], "autorag.nodes.queryexpansion.pass_query_expansion": [[13, "module-autorag.nodes.queryexpansion.pass_query_expansion"]], "autorag.nodes.queryexpansion.query_decompose": [[13, "module-autorag.nodes.queryexpansion.query_decompose"]], "autorag.nodes.queryexpansion.run": [[13, "module-autorag.nodes.queryexpansion.run"]], "evaluate_one_query_expansion_node() (in module autorag.nodes.queryexpansion.run)": [[13, "autorag.nodes.queryexpansion.run.evaluate_one_query_expansion_node"]], "hyde() (in module autorag.nodes.queryexpansion.hyde)": [[13, "autorag.nodes.queryexpansion.hyde.hyde"]], "hyde_pure() (in module autorag.nodes.queryexpansion.hyde)": [[13, "autorag.nodes.queryexpansion.hyde.hyde_pure"]], "make_retrieval_callable_params() (in module autorag.nodes.queryexpansion.run)": [[13, "autorag.nodes.queryexpansion.run.make_retrieval_callable_params"]], "pass_query_expansion() (in module autorag.nodes.queryexpansion.pass_query_expansion)": [[13, "autorag.nodes.queryexpansion.pass_query_expansion.pass_query_expansion"]], "query_decompose() (in module autorag.nodes.queryexpansion.query_decompose)": [[13, "autorag.nodes.queryexpansion.query_decompose.query_decompose"]], "query_decompose_pure() (in module autorag.nodes.queryexpansion.query_decompose)": [[13, "autorag.nodes.queryexpansion.query_decompose.query_decompose_pure"]], "query_expansion_node() (in module autorag.nodes.queryexpansion.base)": [[13, "autorag.nodes.queryexpansion.base.query_expansion_node"]], "run_query_expansion_node() (in module autorag.nodes.queryexpansion.run)": [[13, "autorag.nodes.queryexpansion.run.run_query_expansion_node"]], "autorag.nodes.retrieval": [[14, "module-autorag.nodes.retrieval"]], "autorag.nodes.retrieval.base": [[14, "module-autorag.nodes.retrieval.base"]], "autorag.nodes.retrieval.bm25": [[14, "module-autorag.nodes.retrieval.bm25"]], "autorag.nodes.retrieval.hybrid_cc": [[14, "module-autorag.nodes.retrieval.hybrid_cc"]], "autorag.nodes.retrieval.hybrid_rrf": [[14, "module-autorag.nodes.retrieval.hybrid_rrf"]], "autorag.nodes.retrieval.run": [[14, "module-autorag.nodes.retrieval.run"]], "autorag.nodes.retrieval.vectordb": [[14, "module-autorag.nodes.retrieval.vectordb"]], "bm25() (in module autorag.nodes.retrieval.bm25)": [[14, "autorag.nodes.retrieval.bm25.bm25"]], "bm25_ingest() (in module autorag.nodes.retrieval.bm25)": [[14, "autorag.nodes.retrieval.bm25.bm25_ingest"]], "bm25_pure() (in module autorag.nodes.retrieval.bm25)": [[14, "autorag.nodes.retrieval.bm25.bm25_pure"]], "bm25_tokenize() (in module autorag.nodes.retrieval.bm25)": [[14, "autorag.nodes.retrieval.bm25.bm25_tokenize"]], "cast_queries() (in module autorag.nodes.retrieval.base)": [[14, "autorag.nodes.retrieval.base.cast_queries"]], "cc_pure() (in module autorag.nodes.retrieval.hybrid_cc)": [[14, "autorag.nodes.retrieval.hybrid_cc.cc_pure"]], "edit_summary_df_params() (in module autorag.nodes.retrieval.run)": [[14, "autorag.nodes.retrieval.run.edit_summary_df_params"]], "evaluate_retrieval_node() (in module autorag.nodes.retrieval.run)": [[14, "autorag.nodes.retrieval.run.evaluate_retrieval_node"]], "evenly_distribute_passages() (in module autorag.nodes.retrieval.base)": [[14, "autorag.nodes.retrieval.base.evenly_distribute_passages"]], "get_hybrid_execution_times() (in module autorag.nodes.retrieval.run)": [[14, "autorag.nodes.retrieval.run.get_hybrid_execution_times"]], "get_ids_and_scores() (in module autorag.nodes.retrieval.run)": [[14, "autorag.nodes.retrieval.run.get_ids_and_scores"]], "get_module_params() (in module autorag.nodes.retrieval.run)": [[14, "autorag.nodes.retrieval.run.get_module_params"]], "hybrid_cc() (in module autorag.nodes.retrieval.hybrid_cc)": [[14, "autorag.nodes.retrieval.hybrid_cc.hybrid_cc"]], "hybrid_rrf() (in module autorag.nodes.retrieval.hybrid_rrf)": [[14, "autorag.nodes.retrieval.hybrid_rrf.hybrid_rrf"]], "load_bm25_corpus() (in module autorag.nodes.retrieval.base)": [[14, "autorag.nodes.retrieval.base.load_bm25_corpus"]], "load_chroma_collection() (in module autorag.nodes.retrieval.base)": [[14, "autorag.nodes.retrieval.base.load_chroma_collection"]], "retrieval_node() (in module autorag.nodes.retrieval.base)": [[14, "autorag.nodes.retrieval.base.retrieval_node"]], "rrf_calculate() (in module autorag.nodes.retrieval.hybrid_rrf)": [[14, "autorag.nodes.retrieval.hybrid_rrf.rrf_calculate"]], "rrf_pure() (in module autorag.nodes.retrieval.hybrid_rrf)": [[14, "autorag.nodes.retrieval.hybrid_rrf.rrf_pure"]], "run_retrieval_modules() (in module autorag.nodes.retrieval.base)": [[14, "autorag.nodes.retrieval.base.run_retrieval_modules"]], "run_retrieval_node() (in module autorag.nodes.retrieval.run)": [[14, "autorag.nodes.retrieval.run.run_retrieval_node"]], "select_result_for_hybrid() (in module autorag.nodes.retrieval.run)": [[14, "autorag.nodes.retrieval.run.select_result_for_hybrid"]], "vectordb() (in module autorag.nodes.retrieval.vectordb)": [[14, "autorag.nodes.retrieval.vectordb.vectordb"]], "vectordb_ingest() (in module autorag.nodes.retrieval.vectordb)": [[14, "autorag.nodes.retrieval.vectordb.vectordb_ingest"]], "vectordb_pure() (in module autorag.nodes.retrieval.vectordb)": [[14, "autorag.nodes.retrieval.vectordb.vectordb_pure"]], "module (class in autorag.schema.module)": [[15, "autorag.schema.module.Module"]], "node (class in autorag.schema.node)": [[15, "autorag.schema.node.Node"]], "autorag.schema": [[15, "module-autorag.schema"]], "autorag.schema.module": [[15, "module-autorag.schema.module"]], "autorag.schema.node": [[15, "module-autorag.schema.node"]], "extract_values() (in module autorag.schema.node)": [[15, "autorag.schema.node.extract_values"]], "extract_values_from_nodes() (in module autorag.schema.node)": [[15, "autorag.schema.node.extract_values_from_nodes"]], "from_dict() (autorag.schema.module.module class method)": [[15, "autorag.schema.module.Module.from_dict"]], "from_dict() (autorag.schema.node.node class method)": [[15, "autorag.schema.node.Node.from_dict"]], "get_param_combinations() (autorag.schema.node.node method)": [[15, "autorag.schema.node.Node.get_param_combinations"]], "module (autorag.schema.module.module attribute)": [[15, "autorag.schema.module.Module.module"]], "module_param (autorag.schema.module.module attribute)": [[15, "autorag.schema.module.Module.module_param"]], "module_type (autorag.schema.module.module attribute)": [[15, "autorag.schema.module.Module.module_type"]], "module_type_exists() (in module autorag.schema.node)": [[15, "autorag.schema.node.module_type_exists"]], "modules (autorag.schema.node.node attribute)": [[15, "autorag.schema.node.Node.modules"]], "node_params (autorag.schema.node.node attribute)": [[15, "autorag.schema.node.Node.node_params"]], "node_type (autorag.schema.node.node attribute)": [[15, "autorag.schema.node.Node.node_type"]], "run() (autorag.schema.node.node method)": [[15, "autorag.schema.node.Node.run"]], "run_node (autorag.schema.node.node attribute)": [[15, "autorag.schema.node.Node.run_node"]], "strategy (autorag.schema.node.node attribute)": [[15, "autorag.schema.node.Node.strategy"]], "autorag.utils": [[16, "module-autorag.utils"]], "autorag.utils.preprocess": [[16, "module-autorag.utils.preprocess"]], "autorag.utils.util": [[16, "module-autorag.utils.util"]], "cast_corpus_dataset() (in module autorag.utils.preprocess)": [[16, "autorag.utils.preprocess.cast_corpus_dataset"]], "cast_qa_dataset() (in module autorag.utils.preprocess)": [[16, "autorag.utils.preprocess.cast_qa_dataset"]], "convert_env_in_dict() (in module autorag.utils.util)": [[16, "autorag.utils.util.convert_env_in_dict"]], "convert_string_to_tuple_in_dict() (in module autorag.utils.util)": [[16, "autorag.utils.util.convert_string_to_tuple_in_dict"]], "explode() (in module autorag.utils.util)": [[16, "autorag.utils.util.explode"]], "fetch_contents() (in module autorag.utils.util)": [[16, "autorag.utils.util.fetch_contents"]], "load_summary_file() (in module autorag.utils.util)": [[16, "autorag.utils.util.load_summary_file"]], "make_combinations() (in module autorag.utils.util)": [[16, "autorag.utils.util.make_combinations"]], "normalize_string() (in module autorag.utils.util)": [[16, "autorag.utils.util.normalize_string"]], "openai_truncate_by_token() (in module autorag.utils.util)": [[16, "autorag.utils.util.openai_truncate_by_token"]], "process_batch() (in module autorag.utils.util)": [[16, "autorag.utils.util.process_batch"]], "replace_value_in_dict() (in module autorag.utils.util)": [[16, "autorag.utils.util.replace_value_in_dict"]], "result_to_dataframe() (in module autorag.utils.util)": [[16, "autorag.utils.util.result_to_dataframe"]], "save_parquet_safe() (in module autorag.utils.util)": [[16, "autorag.utils.util.save_parquet_safe"]], "validate_corpus_dataset() (in module autorag.utils.preprocess)": [[16, "autorag.utils.preprocess.validate_corpus_dataset"]], "validate_qa_dataset() (in module autorag.utils.preprocess)": [[16, "autorag.utils.preprocess.validate_qa_dataset"]]}})
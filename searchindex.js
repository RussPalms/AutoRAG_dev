Search.setIndex({"docnames": ["api_spec/autorag", "api_spec/autorag.data", "api_spec/autorag.data.qacreation", "api_spec/autorag.data.utils", "api_spec/autorag.evaluate", "api_spec/autorag.evaluate.metric", "api_spec/autorag.nodes", "api_spec/autorag.nodes.generator", "api_spec/autorag.nodes.passagecompressor", "api_spec/autorag.nodes.passagereranker", "api_spec/autorag.nodes.passagereranker.tart", "api_spec/autorag.nodes.promptmaker", "api_spec/autorag.nodes.queryexpansion", "api_spec/autorag.nodes.retrieval", "api_spec/autorag.schema", "api_spec/autorag.utils", "api_spec/modules", "data_creation/data_format", "data_creation/tutorial", "deploy/api_endpoint", "deploy/web", "index", "install", "local_model", "nodes/generator/generator", "nodes/generator/llama_index_llm", "nodes/generator/vllm", "nodes/index", "nodes/passage_compressor/passage_compressor", "nodes/passage_compressor/tree_summarize", "nodes/passage_reranker/koreranker", "nodes/passage_reranker/monot5", "nodes/passage_reranker/passage_reranker", "nodes/passage_reranker/tart", "nodes/passage_reranker/upr", "nodes/prompt_maker/fstring", "nodes/prompt_maker/prompt_maker", "nodes/query_expansion/hyde", "nodes/query_expansion/query_decompose", "nodes/query_expansion/query_expansion", "nodes/retrieval/bm25", "nodes/retrieval/hybrid_cc", "nodes/retrieval/hybrid_rrf", "nodes/retrieval/retrieval", "nodes/retrieval/vectordb", "optimization/custom_config", "optimization/folder_structure", "optimization/optimization", "roadmap/modular_rag", "structure", "troubleshooting", "tutorial"], "filenames": ["api_spec/autorag.rst", "api_spec/autorag.data.rst", "api_spec/autorag.data.qacreation.rst", "api_spec/autorag.data.utils.rst", "api_spec/autorag.evaluate.rst", "api_spec/autorag.evaluate.metric.rst", "api_spec/autorag.nodes.rst", "api_spec/autorag.nodes.generator.rst", "api_spec/autorag.nodes.passagecompressor.rst", "api_spec/autorag.nodes.passagereranker.rst", "api_spec/autorag.nodes.passagereranker.tart.rst", "api_spec/autorag.nodes.promptmaker.rst", "api_spec/autorag.nodes.queryexpansion.rst", "api_spec/autorag.nodes.retrieval.rst", "api_spec/autorag.schema.rst", "api_spec/autorag.utils.rst", "api_spec/modules.rst", "data_creation/data_format.md", "data_creation/tutorial.md", "deploy/api_endpoint.md", "deploy/web.md", "index.rst", "install.md", "local_model.md", "nodes/generator/generator.md", "nodes/generator/llama_index_llm.md", "nodes/generator/vllm.md", "nodes/index.md", "nodes/passage_compressor/passage_compressor.md", "nodes/passage_compressor/tree_summarize.md", "nodes/passage_reranker/koreranker.md", "nodes/passage_reranker/monot5.md", "nodes/passage_reranker/passage_reranker.md", "nodes/passage_reranker/tart.md", "nodes/passage_reranker/upr.md", "nodes/prompt_maker/fstring.md", "nodes/prompt_maker/prompt_maker.md", "nodes/query_expansion/hyde.md", "nodes/query_expansion/query_decompose.md", "nodes/query_expansion/query_expansion.md", "nodes/retrieval/bm25.md", "nodes/retrieval/hybrid_cc.md", "nodes/retrieval/hybrid_rrf.md", "nodes/retrieval/retrieval.md", "nodes/retrieval/vectordb.md", "optimization/custom_config.md", "optimization/folder_structure.md", "optimization/optimization.md", "roadmap/modular_rag.md", "structure.md", "troubleshooting.md", "tutorial.md"], "titles": ["autorag package", "autorag.data package", "autorag.data.qacreation package", "autorag.data.utils package", "autorag.evaluate package", "autorag.evaluate.metric package", "autorag.nodes package", "autorag.nodes.generator package", "autorag.nodes.passagecompressor package", "autorag.nodes.passagereranker package", "autorag.nodes.passagereranker.tart package", "autorag.nodes.promptmaker package", "autorag.nodes.queryexpansion package", "autorag.nodes.retrieval package", "autorag.schema package", "autorag.utils package", "autorag", "Dataset Format", "Start creating your own evaluation data", "API endpoint", "Web Interface", "AutoRAG documentation", "Installation and Setup", "Configure LLM &amp; Embedding models", "6. Generator", "llama_index LLM", "vllm", "Available List", "4. Passage_Compressor", "Tree Summarize", "Ko-reranker", "MonoT5", "3. Passage_Reranker", "TART", "UPR", "F-String", "5. Prompt Maker", "HyDE", "Query Decompose", "<strong>1. Query Expansion</strong>", "BM25", "Hybrid - cc", "Hybrid - rrf", "2. Retrieval", "Vectordb", "Make custom config yaml file", "Folder Structure", "How optimization works", "Road to Modular RAG", "Structure", "TroubleShooting", "Tutorial"], "terms": {"data": [0, 11, 12, 13, 16, 17, 19, 21, 24, 28, 32, 39, 44, 49, 51], "qacreat": [0, 1, 18], "simpl": [0, 1, 18, 24, 48], "util": [0, 1, 16, 18, 32, 36, 39, 42, 43], "llamaindex": [0, 1, 8, 18, 23, 26, 38, 48, 50], "metric": [0, 4, 7, 8, 11, 12, 13, 17, 24, 28, 32, 36, 39, 43, 45, 46, 48, 49, 50], "gener": [0, 2, 6, 9, 11, 12, 15, 16, 17, 18, 23, 25, 26, 27, 28, 34, 36, 37, 39, 41, 42, 47, 48, 49, 50], "retriev": [0, 6, 8, 9, 10, 11, 12, 16, 17, 23, 27, 28, 29, 32, 34, 36, 37, 39, 40, 41, 42, 44, 45, 47, 48, 49], "retrieval_cont": [0, 16], "evaluate_gener": [0, 4], "evaluate_retriev": [0, 4], "evaluate_retrieval_cont": [0, 4], "cast_embedding_model": [0, 4], "cast_metr": [0, 4], "node": [0, 16, 17, 23, 25, 27, 37, 38, 51], "base": [0, 5, 6, 10, 14, 18, 23, 25, 29, 30, 31, 32, 33, 34, 35, 41, 42, 43, 48, 49], "llama_index_llm": [0, 6, 11, 23, 24, 25, 26, 36, 47, 48, 50], "run": [0, 6, 10, 14, 16, 21, 22, 28, 41, 42, 45, 46, 47], "passagecompressor": [0, 6], "pass_compressor": [0, 6, 27], "tree_summar": [0, 6, 23, 28, 29], "passagererank": [0, 6], "korerank": [0, 6, 30], "monot5": [0, 6, 27, 32], "pass_rerank": [0, 6, 27], "upr": [0, 6, 27, 32, 48], "promptmak": [0, 6], "fstring": [0, 6, 27, 35, 36, 48], "queryexpans": [0, 6], "hyde": [0, 6, 23, 27, 39], "pass_query_expans": [0, 6, 27], "query_decompos": [0, 6, 23, 27, 38, 39], "bm25": [0, 6, 12, 27, 39, 41, 42, 43, 45, 46, 48], "hybrid_cc": [0, 6, 27, 39, 41, 42, 43], "hybrid_rrf": [0, 6, 27, 39, 41, 42, 43, 45], "vectordb": [0, 6, 12, 23, 27, 39, 40, 41, 42, 43, 45, 46], "schema": [0, 16], "from_dict": [0, 14], "module_param": [0, 7, 8, 9, 11, 12, 13, 14, 15], "module_typ": [0, 11, 12, 14, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50], "get_param_combin": [0, 14], "node_param": [0, 14], "node_typ": [0, 11, 14, 23, 24, 28, 32, 36, 39, 43, 45, 48, 50], "run_nod": [0, 14], "extract_valu": [0, 14], "extract_values_from_nod": [0, 14], "module_type_exist": [0, 14], "preprocess": [0, 16], "cast_corpus_dataset": [0, 15], "cast_qa_dataset": [0, 15], "validate_corpus_dataset": [0, 15], "validate_qa_dataset": [0, 15], "convert_env_in_dict": [0, 15], "convert_string_to_tuple_in_dict": [0, 15], "explod": [0, 15], "fetch_cont": [0, 15], "load_summary_fil": [0, 15], "make_combin": [0, 15], "normalize_str": [0, 15], "process_batch": [0, 15], "replace_value_in_dict": [0, 15], "result_to_datafram": [0, 15], "class": [0, 10, 14, 17, 23, 33, 44], "runner": [0, 16, 19, 51], "config": [0, 10, 11, 23, 48, 50], "dict": [0, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15], "project_dir": [0, 11, 12, 13, 20, 51], "str": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15], "none": [0, 5, 8, 10, 15, 24, 28, 36, 40], "sourc": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 41, 42, 44], "object": [0, 14, 25, 29, 37, 38], "classmethod": [0, 14], "from_trial_fold": [0, 16, 19], "trial_path": [0, 20, 51], "load": [0, 13, 15, 17, 18, 22], "from": [0, 3, 5, 7, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 23, 25, 26, 28, 32, 35, 36, 38, 39, 41, 42, 43, 46, 47, 48, 49, 51], "trial": [0, 19, 51], "folder": [0, 19, 22, 48], "must": [0, 2, 3, 5, 8, 9, 11, 13, 15, 17, 18, 19, 23, 26, 31, 35, 41, 42, 45, 48, 49, 50, 51], "alreadi": [0, 10, 13, 47], "us": [0, 2, 5, 7, 8, 9, 10, 11, 12, 13, 17, 19, 21, 22, 24, 25, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51], "It": [0, 5, 7, 8, 9, 11, 13, 14, 15, 17, 19, 23, 24, 25, 29, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51], "set": [0, 7, 8, 9, 10, 11, 13, 18, 21, 22, 23, 24, 25, 26, 28, 29, 32, 34, 36, 37, 38, 39, 45, 46, 47, 48, 49, 50], "parent": 0, "directori": [0, 7, 8, 9, 11, 12, 13, 20, 51], "paramet": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 23, 45, 46, 47, 49, 50, 51], "The": [0, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51], "path": [0, 3, 9, 15, 18, 19, 51], "return": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 25, 44, 45], "initi": [0, 9, 10, 12, 23, 26, 32, 34, 50], "from_yaml": [0, 16, 19, 51], "yaml_path": [0, 20, 51], "yaml": [0, 11, 19, 21, 23, 47, 48, 49, 50], "file": [0, 2, 3, 5, 9, 11, 13, 15, 17, 19, 21, 22, 23, 41, 42, 46, 47, 48, 49, 50], "extract": [0, 14, 19, 41, 42], "extract_best_config": [0, 16, 51], "method": [0, 10, 13, 14, 24, 36, 39, 40, 43, 45, 47, 50], "project": [0, 21, 22], "default": [0, 5, 8, 9, 10, 11, 12, 13, 15, 17, 19, 23, 25, 29, 31, 33, 34, 37, 38, 41, 42, 45, 49], "i": [0, 5, 7, 8, 9, 10, 11, 12, 13, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 47, 49, 51], "current": [0, 49, 51], "queri": [0, 2, 8, 9, 10, 11, 12, 13, 16, 18, 19, 20, 28, 31, 32, 33, 35, 36, 37, 43, 44, 47, 48], "result_column": [0, 16, 19], "generated_text": 0, "pipelin": [0, 19, 20, 21, 41, 42, 46, 47, 48], "start": [0, 15, 51], "singl": [0, 10, 15, 17, 21, 38, 45, 46, 48, 49], "so": [0, 8, 13, 17, 18, 22, 23, 26, 28, 32, 36, 39, 41, 42, 45, 46, 47, 48, 51], "first": [0, 7, 13, 21, 22, 32, 44, 45, 46, 47, 48, 51], "query_expans": [0, 12, 27, 36, 39, 47], "user": [0, 17, 18, 19, 20, 34, 36, 43, 46, 48, 51], "result": [0, 5, 7, 8, 9, 11, 12, 13, 15, 19, 21, 32, 36, 39, 41, 42, 43, 46, 48, 50, 51], "column": [0, 2, 7, 8, 9, 11, 12, 13, 15, 17, 19, 51], "name": [0, 4, 5, 9, 12, 13, 24, 26, 28, 32, 36, 39, 43, 46, 51], "answer": [0, 10, 11, 12, 17, 18, 19, 33, 35, 36, 48], "which": [0, 2, 5, 7, 10, 11, 12, 13, 15, 17, 21, 25, 28, 29, 36, 37, 38, 40, 41, 42, 45, 47, 48, 50, 51], "output": [0, 2, 9, 18, 19, 34, 39, 50], "run_api_serv": [0, 16, 19, 51], "host": [0, 19, 51], "0": [0, 10, 13, 19, 23, 24, 25, 26, 38, 39, 41, 43, 46, 47, 50, 51], "port": [0, 19, 51], "int": [0, 5, 7, 8, 9, 10, 12, 13, 15], "8000": [0, 19, 51], "kwarg": [0, 2, 8, 10, 25, 29, 37, 38], "api": [0, 13, 18, 44, 45], "server": [0, 21, 44, 50], "you": [0, 7, 8, 9, 10, 11, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 32, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51], "can": [0, 5, 8, 9, 10, 11, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 32, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51], "send": 0, "post": [0, 19, 48], "request": [0, 19, 48], "http": [0, 8, 9, 10, 12, 19, 21, 22, 23, 48], "json": [0, 18, 19, 51], "bodi": [0, 19], "like": [0, 11, 12, 13, 17, 19, 22, 23, 25, 28, 29, 34, 36, 37, 38, 41, 42, 45, 47, 48, 50, 51], "below": [0, 20, 22, 24, 48, 50, 51], "your": [0, 5, 17, 19, 20, 21, 22, 26, 35, 36, 45, 47, 48, 50], "And": [0, 7, 12, 13, 19, 21, 22, 26, 45, 47, 48, 51], "respons": [0, 18, 19, 20, 28, 39], "other": [0, 5, 7, 13, 15, 17, 22, 25, 28, 29, 37, 38, 41, 42, 45, 46, 48, 51], "argument": [0, 15, 25, 29, 37, 38], "uvicorn": 0, "runnerinput": [0, 16], "basemodel": 0, "model_computed_field": [0, 16], "classvar": 0, "computedfieldinfo": 0, "A": [0, 5, 7, 10, 11, 13, 15, 17, 24, 30, 39, 47, 48, 49], "dictionari": [0, 4, 13, 15, 17, 18, 24, 31], "comput": [0, 5, 9, 10, 28, 34], "field": 0, "correspond": [0, 14], "model_config": [0, 16], "configdict": 0, "configur": [0, 21, 24, 25, 28, 29, 32, 34, 36, 37, 38, 39, 42, 43, 47, 49, 51], "model": [0, 2, 5, 9, 10, 11, 12, 13, 17, 18, 21, 22, 24, 25, 26, 28, 29, 34, 36, 37, 38, 40, 44, 46, 47, 48, 49, 50], "should": [0, 2, 5, 8, 10, 18, 23, 50], "conform": 0, "pydant": 0, "model_field": [0, 16], "fieldinfo": 0, "annot": 0, "requir": [0, 2, 22, 25, 28, 29, 31, 37, 38, 49], "true": [0, 9, 14, 22, 50], "fals": [0, 5, 9, 10, 34], "metadata": [0, 18], "about": [0, 17, 18, 25, 29, 35, 36, 37, 38, 44, 45, 46, 47, 49, 51], "defin": [0, 10, 31, 32, 43, 44], "map": [0, 10], "thi": [0, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 22, 23, 24, 25, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "replac": [0, 8, 15], "__fields__": 0, "v1": [0, 15, 23, 31], "output_path": [0, 51], "optim": [0, 17, 21, 26, 28, 41, 42, 45, 46, 48, 49], "want": [0, 8, 10, 11, 13, 14, 15, 17, 21, 22, 23, 45, 47, 49], "save": [0, 2, 3, 7, 17, 45, 51], "yml": [0, 45], "If": [0, 8, 9, 10, 11, 12, 15, 17, 21, 22, 40, 45, 46, 47, 48, 49, 50, 51], "doe": [0, 7, 10, 13, 24, 25, 26, 28, 32, 45, 47, 48], "just": [0, 13, 17, 48, 51], "valu": [0, 4, 10, 14, 15, 17, 23, 45, 47], "extract_node_line_nam": [0, 16], "config_dict": 0, "list": [0, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 25, 29, 33, 37, 38, 41, 42, 45], "line": [0, 7, 8, 9, 11, 12, 13, 24, 28, 32, 36, 39, 43, 51], "given": [0, 9, 10, 13, 18, 31, 33, 37, 47], "order": 0, "access": [0, 32], "trail_fold": 0, "extract_node_strategi": [0, 16], "type": [0, 5, 10, 11, 13, 14, 15, 17, 18, 19, 23, 24, 26, 39, 43, 48, 51], "its": [0, 8, 11, 13, 14, 17, 20, 33, 36, 39, 44, 47, 48], "kei": [0, 4, 5, 14, 15, 17, 23, 44, 45, 50, 51], "summary_df_to_yaml": [0, 16], "summary_df": [0, 13], "datafram": [0, 2, 3, 7, 8, 9, 11, 12, 13, 14, 15], "convert": [0, 15, 18, 45], "summari": [0, 7, 13, 15, 47, 51], "qa_data_path": [0, 51], "corpus_data_path": [0, 51], "start_trial": [0, 16, 51], "make_node_lin": [0, 16], "node_line_dict": 0, "make": [0, 9, 10, 11, 13, 15, 17, 21, 22, 25, 26, 28, 29, 35, 36, 37, 38, 47, 48, 51], "param": [0, 5, 11, 12, 26, 46], "get": [0, 3, 5, 7, 13, 19, 22, 25, 45, 47, 48, 50, 51], "input": [0, 2, 7, 10, 12, 13, 17, 20, 25, 28, 35, 47, 48], "insid": [0, 51], "run_node_lin": [0, 16], "node_line_dir": [0, 7, 8, 9, 11, 12, 13, 14], "previous_result": [0, 7, 8, 9, 11, 12, 13, 14], "whole": [0, 47, 51], "each": [0, 12, 13, 14, 15, 17, 41, 42, 45, 46, 47, 48, 49], "": [0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 21, 23, 25, 28, 29, 34, 35, 36, 37, 38, 43, 47, 48, 51], "previou": [0, 7, 8, 9, 11, 12, 13, 47, 48], "qa": [0, 11, 12, 13, 46, 51], "parquet": [0, 2, 3, 13, 17, 18, 46, 51], "final": [0, 41, 42, 47, 48], "avoid_empty_result": [0, 16], "return_index": 0, "decor": [0, 15], "avoid": 0, "empti": [0, 8, 17, 45], "function": [0, 8, 10, 11, 13, 14, 15, 33, 42, 49], "when": [0, 8, 9, 10, 11, 12, 22, 23, 41, 42, 44, 45, 46, 49, 50, 51], "func": [0, 5, 7, 8, 9, 11, 12, 13], "an": [0, 8, 13, 17, 21, 22, 28, 32, 35, 44, 47, 48, 50], "origin": [0, 34], "tupl": [0, 4, 7, 9, 10, 13, 14, 15, 41, 42], "check": [0, 14, 17, 21, 22, 23, 24, 45, 46, 48, 50, 51], "all": [0, 5, 10, 12, 15, 17, 21, 23, 24, 26, 36, 39, 43, 45, 46, 47, 48, 49, 50, 51], "keep": [0, 15, 45, 51], "index": [0, 7, 8, 15, 25, 50], "filter_by_threshold": [0, 16], "threshold": [0, 24, 28, 32, 36, 39, 43, 45, 49], "filter": 0, "have": [0, 13, 15, 17, 18, 22, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51], "same": [0, 12, 13, 15, 19, 46, 47, 49, 51], "length": [0, 8, 13, 15], "even": [0, 41, 42], "did": 0, "give": 0, "measure_spe": [0, 16], "arg": [0, 2, 3, 5, 10], "measur": [0, 36, 39, 43], "execut": [0, 13, 15, 23, 39], "speed": [0, 9, 24, 26, 28, 32, 34, 36, 39, 43, 45, 49], "select_best_averag": [0, 16], "iter": 0, "ani": [0, 4, 8, 10, 15, 17, 21, 22, 28, 32, 36, 39, 43, 48, 49, 50], "select": [0, 7, 8, 9, 11, 12, 13, 46, 47, 48, 49], "best": [0, 7, 8, 9, 11, 12, 13, 21, 41, 42, 46, 48, 51], "averag": [0, 36, 39, 43], "among": [0, 7, 8, 9, 11, 12, 13, 47], "pd": [0, 2, 3, 15, 18], "standard": 0, "one": [0, 8, 9, 10, 11, 15, 17, 18, 19, 45, 46, 47, 49, 50], "dynamically_find_funct": [0, 16], "target_dict": [0, 15], "callabl": [0, 2, 7, 8, 9, 11, 12, 13, 14], "get_support_modul": [0, 16], "module_nam": [0, 13], "get_support_nod": [0, 16], "node_nam": 0, "chat_box": [0, 16], "get_runn": [0, 16], "set_initial_st": [0, 16], "set_page_config": [0, 16], "set_page_head": [0, 16], "lazyinit": [0, 16], "factori": 0, "handle_except": [0, 16], "exc_typ": 0, "exc_valu": 0, "exc_traceback": 0, "submodul": [1, 6, 16], "generate_qa_row": [1, 2, 18], "generate_simple_qa_dataset": [1, 2, 18], "get_file_metadata": [1, 3], "llama_documents_to_parquet": [1, 3], "llm": [2, 5, 7, 8, 12, 17, 18, 21, 22, 24, 26, 27, 28, 29, 35, 36, 37, 38, 39, 47, 48], "corpus_data_row": [2, 18], "sampl": [2, 26, 50, 51], "code": [2, 22, 23, 45, 51], "rag": [2, 17, 18, 21, 39, 43, 46, 49], "dataset": [2, 13, 15, 21, 41, 42, 46, 50], "openai": [2, 5, 11, 12, 18, 23, 24, 25, 28, 29, 36, 37, 38, 39, 43, 44, 45, 47, 48], "chat": [2, 8, 50], "guidanc": [2, 18], "need": [2, 10, 12, 17, 18, 22, 28, 36, 44, 45, 46, 47, 48, 51], "ha": [2, 10, 13, 17, 18, 28, 48], "generation_gt": [2, 4, 5, 7, 11, 18], "least": [2, 47], "corpus_data": [2, 3, 8, 13, 15, 18], "output_filepath": [2, 3, 18], "generate_row_funct": [2, 18], "qa_dataset": [2, 18], "filepath": [2, 3], "file_dir": [2, 3], "filenam": [2, 3, 13], "refer": [2, 36, 39, 49], "basic": 2, "structur": [2, 13, 45, 48, 51], "exist": [2, 3, 14, 46], "extens": [2, 3, 45], "contain": [2, 5, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 35, 46, 47, 49, 50, 51], "more": [2, 8, 9, 12, 13, 17, 24, 26, 28, 30, 32, 34, 36, 39, 40, 46, 49, 51], "file_path": 3, "some": [3, 7, 8, 17, 22, 23, 47, 50], "handi": 3, "metad": 3, "filesystem": 3, "llama_docu": 3, "document": [3, 13, 17, 22, 24, 28, 32, 36, 39, 40, 43, 45, 47, 48, 49], "llamadocu": 3, "bleu": [4, 5, 24, 36, 45, 48, 50], "g_eval": [4, 5, 24], "generation_metr": [4, 5], "huggingface_evalu": [4, 5], "meteor": [4, 5, 24, 36, 45, 48, 50], "roug": [4, 5, 24, 36, 45, 48, 50], "sem_scor": [4, 5, 36, 45], "retrieval_f1": [4, 5, 12, 32, 39, 43], "retrieval_metr": [4, 5], "retrieval_precis": [4, 5, 32, 39, 43], "retrieval_recal": [4, 5, 12, 32, 39, 43, 48], "retrieval_contents_metr": [4, 5], "retrieval_token_f1": [4, 5, 28], "retrieval_token_precis": [4, 5, 28], "retrieval_token_recal": [4, 5, 28], "single_token_f1": [4, 5], "calculate_cosine_similar": [4, 5], "retrieval_gt": [4, 12, 13], "turn": 4, "string": [4, 5, 11, 13, 15, 17, 34, 36, 45], "gt": [5, 17, 47], "pred": 5, "float": [5, 7, 9, 10, 13, 26], "score": [5, 8, 9, 10, 13, 28, 40, 41, 42, 43], "gpt": [5, 11, 18, 24, 25, 28, 29, 36, 37, 38, 47, 50], "4": [5, 12, 24, 50], "0125": 5, "preview": 5, "calcul": [5, 28, 34, 41, 42], "g": [5, 25, 29, 37, 38], "eval": 5, "high": [5, 32], "perform": [5, 8, 9, 10, 12, 17, 20, 21, 24, 28, 32, 36, 39, 42, 48], "coher": [5, 24], "consist": [5, 24], "fluenci": [5, 24], "relev": [5, 9, 10, 12, 17, 24, 28, 31, 32, 37, 39, 43], "onli": [5, 8, 9, 11, 15, 17, 25, 29, 37, 38, 46, 47, 48], "we": [5, 8, 9, 17, 18, 21, 22, 23, 24, 26, 36, 39, 41, 42, 44, 45, 46, 47, 48, 50, 51], "recommend": [5, 11, 17, 46, 48, 50, 51], "accuraci": [5, 34, 39, 43], "ground": [5, 13, 17, 24, 47], "truth": [5, 13, 17, 24, 47], "instanc": [5, 7, 8, 10, 13, 17, 23, 25], "huggingfac": [5, 9, 12, 17, 23, 26, 51], "2": [5, 12, 13, 17, 23, 26, 38, 39], "d": [5, 12, 13, 15, 17, 19], "becaus": [5, 9, 11, 13, 17, 23, 26, 28, 32, 34, 39, 41, 42, 44, 48, 50], "multipl": [5, 11, 12, 13, 38, 41, 42, 45, 46, 47, 48, 49], "rouge_typ": 5, "rougel": 5, "use_stemm": 5, "bool": [5, 9, 10, 14], "split_summari": 5, "batch": [5, 7, 8, 12, 13, 15, 25, 29, 37, 38, 50], "choos": [5, 12, 17, 44, 47], "between": [5, 24, 41], "rouge1": 5, "rouge2": 5, "rougelsum": 5, "unigram": 5, "1": [5, 10, 12, 13, 15, 17, 24, 25, 26, 38, 46, 47, 50], "gram": 5, "bigram": 5, "longest": 5, "common": [5, 12, 13, 22, 49, 50, 51], "subsequ": [5, 32], "split": [5, 46, 49, 51], "text": [5, 7, 8, 9, 15, 17, 18, 19, 24, 25, 26, 29, 34], "indic": 5, "whether": [5, 9, 10, 34], "porter": 5, "stemmer": 5, "strip": 5, "word": [5, 40], "suffix": [5, 9, 34], "improv": [5, 28, 32, 34, 39], "match": 5, "defaulttoken": 5, "token": [5, 7, 9, 10, 13, 26, 28], "might": [5, 47, 51], "add": [5, 18, 24, 44, 48], "newlin": 5, "sentenc": [5, 23], "size": [5, 7, 8, 9, 12, 32, 34, 50], "process": [5, 13, 15, 18, 21, 24, 26, 28, 32, 33, 36, 39, 41, 42, 43, 46, 47, 49], "cpu": [5, 9, 10], "count": [5, 40], "embedding_model": [5, 12, 13, 23, 24, 39, 43, 44, 45], "baseembed": [5, 13, 23], "128": [5, 13], "sem": 5, "cosin": 5, "similar": [5, 24, 40, 41, 42, 44, 47], "max": 5, "embed": [5, 10, 13, 21, 22, 24, 40, 44, 46], "mpnet": [5, 23], "v2": [5, 23, 31], "paper": [5, 10, 34, 37, 38, 48], "f1": [5, 28], "id": [5, 7, 8, 9, 10, 13, 15, 17, 43], "connect": [5, 44], "predict": [5, 9], "mean": [5, 8, 9, 15, 17, 26, 46, 47, 49, 50], "item": 5, "ground_truth": 5, "b": [5, 10, 47], "generator_nod": [6, 7], "evaluate_generator_nod": [6, 7], "run_generator_nod": [6, 7], "make_llm": [6, 8], "passage_compressor_nod": [6, 8], "evaluate_passage_compressor_nod": [6, 8], "make_contents_gt": [6, 8], "run_passage_compressor_nod": [6, 8], "tart": [6, 9, 27, 32], "modeling_enc_t5": [6, 9], "tokenization_enc_t5": [6, 9], "passage_reranker_nod": [6, 9], "exp_norm": [6, 9], "koreranker_pur": [6, 9], "mono_t5_pur": [6, 9], "run_passage_reranker_nod": [6, 9], "calculate_likelihood": [6, 9], "upr_pur": [6, 9], "prompt_maker_nod": [6, 11], "evaluate_generator_result": [6, 11], "evaluate_one_prompt_maker_nod": [6, 11], "make_generator_callable_param": [6, 11], "run_prompt_maker_nod": [6, 11], "query_expansion_nod": [6, 12], "hyde_pur": [6, 12], "query_decompose_pur": [6, 12], "evaluate_one_query_expansion_nod": [6, 12], "make_retrieval_callable_param": [6, 12], "run_query_expansion_nod": [6, 12], "cast_queri": [6, 13], "evenly_distribute_passag": [6, 13], "load_bm25_corpu": [6, 13], "load_chroma_collect": [6, 13], "retrieval_nod": [6, 13], "run_retrieval_modul": [6, 13], "bm25_ingest": [6, 13], "bm25_pure": [6, 13], "bm25_token": [6, 13], "cc_pure": [6, 13], "rrf_calcul": [6, 13], "rrf_pure": [6, 13], "edit_summary_df_param": [6, 13], "evaluate_retrieval_nod": [6, 13], "get_hybrid_execution_tim": [6, 13], "get_ids_and_scor": [6, 13], "get_module_param": [6, 13], "run_retrieval_nod": [6, 13], "select_result_for_hybrid": [6, 13], "vectordb_ingest": [6, 13], "vectordb_pur": [6, 13], "prompt": [7, 8, 9, 11, 12, 25, 26, 27, 34, 35, 38, 47, 48], "llmpredictor": [7, 8, 12], "16": [7, 8, 9, 12, 25, 29, 34, 37, 38], "llama": [7, 8, 25], "right": [7, 23, 48, 51], "log": [7, 25], "prob": [7, 25], "pseudo": 7, "meant": 7, "low": [7, 8], "face": [7, 8, 21], "error": [7, 8, 12, 13], "three": [7, 46, 48], "element": [7, 13, 14], "second": [7, 10, 46, 48], "gpt2token": 7, "third": 7, "result_df": [7, 8, 11, 13], "strategi": [7, 8, 9, 11, 12, 13, 14, 16, 17, 45, 48, 50], "evalu": [7, 8, 9, 11, 12, 13, 15, 16, 17, 21, 24, 28, 32, 36, 39, 41, 42, 43, 45, 46, 49], "includ": [7, 17, 25, 29, 36, 37, 38, 39, 41, 42, 49], "everi": [7, 10, 49], "could": [7, 8, 9, 11, 13], "maker": [7, 11, 27, 35, 48], "llm_name": 8, "do": [8, 9, 12, 17, 21, 22, 45, 46, 48], "passag": [8, 9, 10, 11, 12, 13, 17, 28, 31, 32, 33, 34, 37, 40, 41, 42, 44, 48], "compress": [8, 28, 48], "retrieval_contents_gt": 8, "qa_data": 8, "compressor": [8, 28, 29], "rerank": [8, 9, 10, 17, 27, 28, 31, 32, 33, 34, 48], "retrieved_cont": [8, 9, 11, 13, 35, 36, 48], "retrieved_id": [8, 9, 13], "retrieve_scor": [8, 9, 13], "In": [8, 9, 12, 17, 21, 41, 42, 45, 46, 47, 48, 50], "skip": [8, 9, 11], "chat_prompt": 8, "recurs": [8, 15, 29], "merg": [8, 29, 48, 49], "summar": [8, 27, 28], "them": [8, 10, 11, 12, 13, 17, 29, 41, 42, 47], "bottom": [8, 29], "up": [8, 17, 28, 29, 49], "fashion": [8, 29], "wrapper": 8, "llama_index": [8, 18, 23, 24, 27, 29, 37, 38], "response_synthes": 8, "treesummar": 8, "For": [8, 13, 17, 18, 22, 23, 26, 47, 48, 50, 51], "inform": [8, 13, 17, 18, 25, 29, 32, 37, 38, 41, 42, 43, 44, 46, 48, 49, 51], "visit": [8, 13], "doc": [8, 17, 22, 38], "ai": 8, "en": [8, 23, 31], "latest": 8, "exampl": [8, 12, 13, 17, 18, 23, 45, 47, 48, 50, 51], "html": 8, "pass": [8, 10, 11, 23, 25, 29, 37, 38, 48], "templat": [8, 18], "instead": [8, 9, 10], "At": [8, 23, 45, 47, 48], "specifi": [8, 17, 19, 23, 24, 25, 29, 30, 33, 37, 38, 39, 41, 42, 47, 49], "where": [8, 21, 28, 43, 46], "put": [8, 17, 50], "context_str": 8, "query_str": 8, "normal": [8, 13], "enct5forsequenceclassif": [9, 10], "deparallel": [9, 10], "forward": [9, 10], "get_encod": [9, 10], "get_input_embed": [9, 10], "parallel": [9, 10, 13], "set_input_embed": [9, 10], "tart_pur": [9, 10], "enct5token": [9, 10], "build_inputs_with_special_token": [9, 10], "create_token_type_ids_from_sequ": [9, 10], "get_special_tokens_mask": [9, 10], "x": [9, 10, 19], "contents_list": [9, 10], "scores_list": [9, 10], "ids_list": [9, 10], "top_k": [9, 10, 12, 13, 32, 39, 43, 45, 48], "ko": [9, 27, 32], "korean": [9, 23, 30], "co": [9, 23], "dongjin": 9, "kr": 9, "rank": [9, 10, 13, 40, 42], "number": [9, 10, 12, 13, 15, 26, 28, 39, 46, 49, 51], "async": [9, 10, 12, 13, 15], "devic": [9, 10], "gpu": [9, 10], "avail": [9, 10], "otherwis": [9, 10], "token_false_id": 9, "token_true_id": 9, "repres": [9, 44, 47], "model_nam": [9, 31], "castorini": [9, 31], "3b": [9, 31], "msmarco": [9, 31], "10k": [9, 31], "note": [9, 10, 41, 42], "creat": [9, 10, 12, 17, 21, 35, 41, 42, 46, 48, 51], "store": [9, 44], "twist": 9, "therefor": [9, 10, 18, 36, 39], "receiv": [9, 20], "_": 9, "top": [9, 26, 32, 39, 43, 46], "k": [9, 17, 23, 32, 42, 43], "prefix_prompt": [9, 34], "suffix_prompt": [9, 34], "shard_siz": [9, 34], "use_bf16": [9, 34], "pleas": [9, 12, 13, 17, 22, 23, 34, 36, 39, 45, 48, 49, 50, 51], "write": [9, 12, 22, 34, 41, 42, 45, 47, 48], "question": [9, 10, 11, 12, 17, 18, 19, 21, 33, 34, 35, 36, 38, 48, 51], "github": [9, 10, 17, 21, 22, 48, 50, 51], "com": [9, 10, 21, 22, 48], "devsinghsachan": 9, "unsupervis": 9, "languag": [9, 12, 24, 25, 28, 29, 34, 37, 38, 49], "likelihood": [9, 34], "t5": [9, 10], "larg": [9, 24, 25, 28, 29, 31, 37, 38, 49], "shard": [9, 34], "larger": [9, 34], "faster": [9, 26, 28, 34], "But": [9, 17, 21, 34, 45, 47, 48], "consum": [9, 21, 34], "memori": [9, 34, 50], "power": [9, 34, 48], "bfloat16": [9, 34], "prefix": [9, 34], "serv": [9, 24, 28, 32, 34, 36, 39, 43, 49], "context": [9, 34, 49], "instruct": [9, 10, 17, 23, 26, 33, 34], "stage": [9, 34], "what": [9, 12, 17, 21, 23, 34, 35, 36, 46, 49], "expect": [9, 17, 34], "provid": [9, 20, 25, 29, 31, 34, 37, 38, 51], "cue": [9, 34], "close": [9, 34], "signal": [9, 34], "how": [9, 12, 18, 25, 29, 34, 37, 38, 40, 44, 45, 46, 48, 51], "conclud": [9, 34], "format": [9, 10, 18, 34, 46], "follow": [9, 10, 17, 18, 19, 20, 23, 34, 46, 48], "end": [9, 15, 18, 34], "t5config": 10, "dropout": 10, "t5pretrainedmodel": 10, "input_id": 10, "attention_mask": 10, "head_mask": 10, "inputs_emb": 10, "label": [10, 12, 37], "output_attent": 10, "output_hidden_st": 10, "return_dict": 10, "call": [10, 23, 25, 29, 34, 37, 38, 40, 41, 42], "overridden": 10, "subclass": 10, "although": 10, "recip": 10, "within": [10, 24, 28, 32, 36, 43, 49], "afterward": 10, "sinc": [10, 18, 24, 35], "former": 10, "take": [10, 23, 42, 48], "care": 10, "regist": 10, "hook": 10, "while": [10, 22, 49], "latter": 10, "silent": 10, "ignor": 10, "nn": 10, "torch": 10, "vocabulari": 10, "hidden": 10, "state": [10, 47], "device_map": 10, "new_embed": 10, "find": [10, 21, 23, 33, 38, 41, 42, 43, 46, 47, 49], "facebookresearch": 10, "tartrerank": 10, "facebook": [10, 26], "full": [10, 17, 46, 49], "flan": 10, "xl": 10, "being": [10, 25, 29, 37, 38], "differ": [10, 15, 17, 18, 23, 24, 31, 39, 40, 41, 42, 46, 49], "chang": [10, 18, 23, 48, 49], "through": [10, 21, 36, 39], "vocab_fil": 10, "bos_token": 10, "eos_token": 10, "unk_token": 10, "unk": 10, "pad_token": 10, "pad": 10, "extra_id": 10, "100": 10, "additional_special_token": 10, "sp_model_kwarg": 10, "t5token": 10, "token_ids_0": 10, "token_ids_1": 10, "build": [10, 17, 18, 46, 47, 48], "sequenc": [10, 49], "pair": [10, 15], "classif": 10, "task": [10, 15, 24], "concaten": 10, "ad": [10, 49, 50], "special": [10, 28], "option": [10, 20, 24, 28, 31, 32, 33, 34, 39, 41, 42, 45, 49, 51], "glossari": 10, "appropri": 10, "mask": 10, "two": [10, 13, 17, 48, 51], "zero": [10, 12, 34, 37], "already_has_special_token": 10, "prepare_for_model": 10, "integ": [10, 34], "rang": 10, "f": [11, 18, 36], "prompt_mak": [11, 36, 47, 48], "read": [11, 21, 35, 36, 45, 48], "carefulli": 11, "made": [11, 48, 51], "generator_func": 11, "generator_param": 11, "strategy_dict": [11, 12], "With": [11, 48, 51], "As": [11, 17, 19, 20, 23, 44, 45], "generator_modul": [11, 36], "don": [11, 17, 18, 21, 41, 42, 48, 50, 51], "t": [11, 17, 18, 21, 23, 41, 42, 48, 50, 51], "3": [11, 12, 18, 24, 25, 28, 29, 36, 37, 38, 41, 42, 43, 45, 47, 48, 50], "5": [11, 12, 13, 18, 23, 24, 25, 28, 29, 32, 37, 38, 41, 42, 43, 45, 47, 50], "turbo": [11, 18, 24, 25, 28, 29, 36, 37, 38, 47, 50], "expans": [11, 12, 13, 17, 28, 37, 38, 48], "inspir": [12, 37], "precis": [12, 28, 37, 43], "shot": [12, 34, 37, 38], "dens": [12, 13, 37, 40, 44], "without": [12, 21, 25, 28, 29, 32, 37, 38, 39, 41, 42, 48], "arxiv": 12, "org": [12, 21], "pdf": 12, "2212": 12, "10496": 12, "hypothet": [12, 37], "dimens": 12, "decompos": [12, 39], "self": 12, "sub": 12, "decomposit": [12, 38], "n": [12, 18, 22, 30, 35, 36, 39, 48], "hamlet": 12, "imdb": 12, "than": [12, 13, 17, 26, 40, 46, 47, 48], "comedi": 12, "mani": [12, 25, 26, 29, 37, 38, 47], "ar": [12, 15, 17, 21, 22, 23, 24, 25, 28, 29, 30, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51], "bird": 12, "import": [12, 17, 18, 19, 22, 23, 40, 48, 51], "badminton": 12, "legal": 12, "licens": 12, "child": 12, "drive": 12, "merced": 12, "benz": 12, "emploi": 12, "u": 12, "minimum": 12, "ag": 12, "someon": 12, "cucumb": 12, "textur": 12, "hydrogen": 12, "atom": 12, "squar": 12, "exce": [12, 24, 28, 32], "spice": 12, "girl": [12, 17], "6": 12, "littl": [12, 18, 48], "piec": 12, "llmpredictortyp": 12, "come": [12, 21, 47, 48], "viscond": [12, 38], "strategyqa": [12, 38], "few": [12, 38, 48, 51], "retrieval_func": 12, "retrieval_param": 12, "expanded_queri": 12, "look": [12, 13, 17, 19, 45, 48], "50": 12, "retrieval_modul": [12, 39], "combin": [12, 13, 14, 15, 41, 42, 45, 47, 49], "wai": [12, 20, 45, 47, 48, 50], "case": [12, 17, 18, 21, 47, 48, 50], "would": [12, 46], "bm25_path": 13, "db_path": 13, "collection_nam": [13, 46], "collect": [13, 15, 17, 45, 48, 49], "resourc": [13, 47], "corpu": [13, 43, 46, 51], "panda": [13, 18], "bm25_corpu": 13, "pickl": 13, "ingest": 13, "row": [13, 17, 46], "doc_id": 13, "Its": [13, 17, 26, 28, 32, 39], "2d": [13, 17], "passage_id": 13, "corpus_path": 13, "bm25_api": 13, "bm25okapi": [13, 40], "usag": [13, 28, 44], "weight": [13, 39, 41, 43], "hybrid": [13, 43, 45], "cc": [13, 43], "convex": [13, 41], "fuse": 13, "To": [13, 17, 22, 23, 48, 51], "uniqu": [13, 17, 28, 49], "realli": [13, 17, 26, 47, 48], "befor": [13, 23, 28, 45, 48, 50, 51], "plu": [13, 17, 23, 44, 45], "sum": 13, "rrf_k": [13, 39, 42, 43, 45], "60": 13, "rrf": [13, 41, 43], "reciproc": [13, 42], "fusion": [13, 42], "spars": [13, 40], "hyperparamet": [13, 45], "our": [13, 17, 18, 21, 22, 47, 48, 50, 51], "target_modul": [13, 39, 41, 42, 43, 45], "target_module_param": [13, 41, 42], "node_dir": 13, "csv": [13, 47, 51], "target": [13, 15, 41, 42, 48], "chroma": [13, 46], "emb": [13, 44, 48], "prevent": [13, 48], "vector_db": 13, "module_dict": 14, "node_dict": 14, "also": [14, 17, 21, 41, 42, 48, 51], "remov": [14, 15], "duplic": [14, 17, 45], "automat": [14, 21, 28, 32, 39, 41, 42, 47, 51], "df": [15, 50], "environ": [15, 20, 22, 50, 51], "variabl": [15, 22, 50], "actual": [15, 17], "index_valu": 15, "explode_valu": 15, "flatten": 15, "summary_path": 15, "dict_column": 15, "fill": 15, "properli": 15, "taken": 15, "offici": 15, "script": [15, 17], "squad": 15, "lower": [15, 28], "punctuat": 15, "articl": 15, "extra": 15, "whitespac": 15, "batch_siz": 15, "64": [15, 37, 39], "asynchron": 15, "coroutin": 15, "replace_valu": 15, "certain": 15, "column_nam": 15, "packag": [16, 22, 23, 50], "subpackag": 16, "modul": [16, 21, 27, 46, 48, 50, 51], "content": [16, 18, 19, 28, 32, 36, 43, 44], "cli": 16, "deploi": [16, 19, 21], "node_lin": [16, 28, 32, 36, 39, 45, 46, 48], "support": [16, 17, 21, 25, 29, 37, 38, 45, 48, 49], "web": 16, "There": [17, 21, 30, 39, 46, 48, 51], "kind": [17, 48, 50], "know": [17, 21, 45, 46, 47, 49, 51], "lot": [17, 47, 51], "variat": [17, 39], "good": [17, 18, 48, 51], "identifi": [17, 32, 43], "occur": [17, 45, 48, 50, 51], "unexpect": 17, "behavior": [17, 25, 29, 34, 37, 38, 49], "imagin": 17, "system": [17, 24, 25, 28, 29, 32, 36, 37, 38, 43, 49], "ask": [17, 18, 21, 48], "1d": 17, "why": [17, 47, 48, 51], "condit": 17, "think": [17, 45, 47, 48], "real": [17, 20, 48], "life": 17, "knowledg": 17, "pop": 17, "group": 17, "member": 17, "new": [17, 22, 23, 26, 45, 48, 51], "jean": 17, "aespa": 17, "oper": [17, 19, 28, 43, 49], "On": 17, "hand": 17, "five": 17, "Then": [17, 19, 22, 23, 47], "newjeans1": 17, "newjeans2": 17, "aespa1": 17, "aespa2": 17, "aespa3": 17, "enough": 17, "okai": 17, "treat": [17, 45], "crucial": [17, 28, 32, 49], "autorag": [17, 18, 19, 20, 22, 23, 24, 41, 42, 45, 47, 50, 51], "affect": [17, 47, 49], "huge": [17, 42], "own": [17, 21, 47, 49, 51], "chunk": [17, 18, 48], "onc": [17, 25, 26, 29, 37, 38, 41, 42, 46, 48, 51], "multi": [17, 38], "modal": 17, "imag": [17, 46, 51], "video": 17, "etc": [17, 18, 45], "futur": [17, 47, 48, 49], "earli": 17, "version": [17, 47, 50], "plan": [17, 24, 48], "last_modified_datetim": 17, "modifi": 17, "datetim": 17, "now": [17, 44, 45, 47, 48, 51], "time": [17, 20, 21, 24, 28, 32, 36, 39, 43, 46, 47, 49, 51], "relat": [17, 25, 29, 34, 37, 38], "featur": [17, 24, 48], "python": [17, 18, 22, 35, 41, 42, 45, 50, 51], "reset": [17, 50], "indici": 17, "out": [17, 21, 22, 24, 45, 46, 48, 50, 51], "Or": [17, 22, 51], "download": [17, 51], "repo": [17, 21, 51], "go": [17, 21, 51], "here": [17, 18, 21, 22, 23, 26, 30, 44, 45, 46, 47, 48, 50, 51], "most": [18, 23, 24, 32, 40, 43, 44, 45, 47, 51], "satisfactori": 18, "howev": [18, 41, 47, 48], "advent": 18, "synthet": 18, "becom": [18, 45], "solut": [18, 48], "problem": [18, 48, 50], "guid": [18, 21, 24, 28, 32, 36, 39, 43, 48, 49, 51], "cover": 18, "form": [18, 41, 42], "aim": [18, 41, 43, 49], "work": [18, 41, 42, 45, 50, 51], "primit": 18, "scalabl": 18, "conveni": [18, 20], "loader": 18, "lama_index": 18, "langchain": [18, 48], "datatyp": 18, "found": [18, 25, 29, 30, 37, 38, 44, 51], "corpus_df": 18, "read_parquet": 18, "design": [18, 24, 33, 41, 42], "per": 18, "unit": 18, "gen": 18, "def": 18, "temp_llm": 18, "solv": 18, "clean": 18, "clear": 18, "again": [18, 48, 51], "mark": 18, "approach": [18, 28, 41], "clearli": 18, "neatli": 18, "displai": 18, "assist": 18, "stop": 18, "qa_gener": 18, "mention": [19, 20], "tutori": [19, 20, 21, 48], "trial_fold": [19, 51], "run_api": [19, 51], "config_path": [19, 51], "last": 19, "curl": 19, "h": 19, "accept": 19, "applic": [19, 28, 30, 39], "your_result_column": 19, "url": 19, "payload": 19, "header": 19, "print": 19, "command": [20, 50], "run_web": [20, 51], "interact": 20, "friendli": 20, "test": [20, 22, 23, 24, 28, 32, 39, 41, 42, 45, 46, 47], "observ": 20, "automl": 21, "tool": 21, "numer": 21, "great": [21, 47], "veri": 21, "hard": [21, 47, 48], "never": 21, "That": [21, 48], "variou": [21, 24, 28, 32, 36, 43], "creation": [21, 51], "raw": 21, "experi": [21, 46, 48, 50, 51], "deploy": [21, 41, 42], "fastapi": 21, "well": 21, "pip": [21, 22, 50], "instal": [21, 23, 51], "starter": [21, 51], "after": [21, 22, 32, 45, 47, 48, 51], "learn": [21, 44, 45, 47, 48, 51], "ultim": 21, "Of": 21, "cours": 21, "local": [21, 23, 44, 51], "troubl": [21, 50], "troubleshoot": [21, 22], "feel": [21, 48, 51], "free": [21, 48, 51], "issu": [21, 48, 50, 51], "discord": [21, 48, 50, 51], "channel": [21, 50, 51], "marker": [21, 22, 48], "inc": [21, 22, 48], "korea": [21, 22, 48], "pypi": 21, "gg": [21, 48], "p4dyxfmsa": [21, 48], "page": 22, "openai_api_kei": [22, 45, 50], "export": [22, 50], "sk": 22, "altern": 22, "env": 22, "dotenv": [22, 50], "root": 22, "try": [22, 41, 42, 48, 50], "load_dotenv": 22, "readi": [22, 47, 51], "step": [22, 32, 48], "clone": 22, "repositori": 22, "git": 22, "edit": 22, "cd": 22, "e": [22, 25, 29, 37, 38], "addit": [22, 25, 29, 36, 37, 38, 50], "r": 22, "dev_requir": 22, "txt": 22, "pytest": 22, "ini": 22, "log_cli": 22, "log_cli_level": 22, "info": 22, "m": 22, "auto": 22, "contributor": 22, "wait": 22, "huggingfacellm": [23, 25, 29, 37, 38], "openailik": [23, 50], "node_line_nam": [23, 24, 28, 32, 36, 39, 43, 45, 46, 48], "node_line_1": [23, 45, 48], "mistralai": [23, 26], "mistral": [23, 26], "7b": [23, 26], "v0": [23, 24, 26], "abov": [23, 45, 46, 48, 51], "see": [23, 45, 46, 47, 48, 50, 51], "frequent": 23, "max_token": [23, 25, 26, 29, 37, 38, 39], "temperatur": [23, 24, 25, 26, 29, 37, 38, 39, 47, 50], "simpli": [23, 51], "generator_model": 23, "mockllm": 23, "wa": [23, 47, 50], "major": 23, "updat": 23, "10": [23, 24, 28, 32, 36, 39, 42, 43, 45, 48], "integr": [23, 31, 49], "vllm": [23, 24, 50], "itself": [23, 41, 47], "interfac": 23, "babbag": 23, "openai_babbag": 23, "ada": 23, "openai_ada": 23, "davinci": 23, "openai_davinci": 23, "curi": 23, "openai_curi": 23, "baai": 23, "bge": 23, "small": 23, "huggingface_baai_bge_smal": 23, "cointegr": 23, "rubert": 23, "tiny2": 23, "huggingface_cointegrated_rubert_tiny2": 23, "transform": [23, 26], "huggingface_all_mpnet_base_v2": 23, "begin": 23, "program": 23, "kosimcs": 23, "bm": 23, "roberta": 23, "multitask": 23, "huggingfaceembed": 23, "allow": [24, 25, 29, 31, 37, 38, 41, 49], "experiment": 24, "facilit": 24, "determin": [24, 46], "effect": [24, 32, 42, 43, 49, 51], "specif": [24, 28, 31, 33, 40, 41, 42, 49, 51], "These": [24, 25, 28, 29, 32, 37, 38, 43, 49, 51], "compar": 24, "semant": [24, 40], "quit": 24, "descript": [24, 32, 43], "appli": [24, 32, 36, 39, 41, 43, 49], "ensur": [24, 28, 32, 36, 39, 43], "predefin": [24, 28, 32], "post_retrieve_node_lin": [24, 36], "arbitrari": [24, 28, 32, 36, 39, 43], "metric_nam": 24, "speed_threshold": [24, 28, 32, 36, 39, 43, 45, 49], "16k": [24, 25, 28, 29, 36, 47, 50], "1106": [24, 25, 36, 47, 50], "By": [25, 28, 29, 32, 37, 38, 39, 41, 42, 49], "keyword": [25, 29, 37, 38], "further": [25, 29, 37, 38, 41], "custom": [25, 29, 34, 37, 38, 41, 44, 49, 50], "fast": 26, "10x": 26, "librari": [26, 51], "slow": 26, "decid": [26, 48, 49], "standalon": 26, "opt": 26, "125m": 26, "maximum": 26, "higher": [26, 28, 49], "random": 26, "top_p": 26, "control": 26, "cumul": 26, "probabl": [26, 47], "consid": [26, 39], "512": 26, "passage_rerank": [27, 48], "passage_compressor": 27, "tree": [27, 28], "thei": [28, 45, 48, 49], "reduc": 28, "amount": 28, "effici": 28, "prior": 28, "entri": 28, "significantli": [28, 39, 49], "scale": 28, "quickli": 28, "accumul": 28, "potenti": 28, "lead": 28, "cost": 28, "slower": 28, "reduct": 28, "directli": [28, 45, 47, 50], "impact": [28, 36, 39, 42, 44], "help": [28, 41, 42], "associ": 28, "analysi": 28, "deal": 28, "less": 28, "tailor": [28, 42, 49], "level": [28, 32, 43, 49], "address": [28, 49], "recal": [28, 43], "distinct": 28, "underscor": 28, "focu": [28, 51], "retrieve_node_lin": [28, 32, 43], "better": [28, 32, 39, 47, 51], "detail": [30, 36, 39, 49, 51], "Not": [30, 39], "direct": [30, 39], "flexibl": [31, 41, 49], "variant": 31, "med": 31, "unicamp": 31, "dl": 31, "mt5": 31, "ptt5": 31, "pt": 31, "100k": 31, "mmarco": 31, "13b": 31, "involv": [32, 43], "reassess": 32, "reorder": 32, "refin": 32, "obtain": 32, "phase": [32, 39], "primari": [32, 33], "enhanc": [32, 34, 49], "priorit": 32, "pertin": 32, "overal": [32, 47], "qualiti": [32, 51], "assess": 32, "purpos": [32, 39, 41, 49], "li": 33, "abil": 33, "boolean": 34, "8": 34, "retreived_cont": 35, "tell": [35, 36], "me": [35, 36, 47, 48], "someth": [35, 36, 41, 42], "cannot": [36, 39], "alon": [36, 39, 48], "outcom": [36, 39, 41], "across": [36, 39, 43, 49], "exceed": [36, 39, 43], "hop": 38, "expand": [39, 47], "immedi": 39, "goal": [39, 47], "search": [39, 40, 44], "term": 39, "vari": [39, 41, 49], "ll": 39, "abl": 39, "respond": 39, "increas": [39, 49], "necessari": 39, "dure": [39, 50], "pre_retrieve_node_lin": 39, "popular": 40, "tf": 40, "idf": 40, "reflect": 40, "often": [40, 50], "domain": 40, "algorithm": [40, 41, 42], "distinguish": 41, "offer": 41, "those": [41, 42], "situat": [41, 42], "oppos": [41, 42], "ast": [41, 42, 45], "literal_ev": [41, 42, 45], "were": [41, 42], "quot": [41, 42], "adjust": [41, 50], "influenc": 41, "wrote": [41, 42], "7": [41, 43], "constant": 42, "fetch": 43, "fundament": 43, "easili": [44, 48, 51], "vector": [44, 48], "lastli": [44, 45], "exclus": 44, "chromadb": 44, "databas": 44, "internet": 44, "fee": 44, "open": [44, 47, 50], "softwar": 44, "favorit": 45, "editor": 45, "thing": [45, 51], "node_line_2": [45, 48], "node_line_3": 45, "section": [45, 49, 51], "mind": [45, 51], "pars": 45, "easier": 45, "manag": 45, "secret": 45, "api_kei": [45, 50], "unintend": 45, "action": [45, 48], "best_": 46, "trail": 46, "ran": 46, "too": [46, 47], "took": 46, "roadmap": 46, "modular": [46, 49], "belong": 46, "depend": 46, "show": [46, 47, 48], "best_0": 46, "attempt": 46, "record": 46, "organ": 46, "long": [46, 48], "explain": [46, 48], "hope": 46, "understand": [46, 47], "train": [46, 51], "accur": 46, "pkl": 46, "under": [47, 50], "hood": 47, "diagram": [47, 48], "rememb": 47, "achiev": [47, 49], "possibl": [47, 48], "let": [47, 48, 51], "markov": 47, "chain": 47, "alwai": 47, "guarante": 47, "choic": 47, "caus": [47, 50, 51], "retri": 47, "job": 47, "still": [47, 48, 50], "wonder": 47, "valid": 47, "setup": 47, "alpha": 47, "develop": [47, 49], "suggest": [47, 48, 50], "feedback": [47, 48], "survei": 48, "propos": 48, "paradigm": 48, "naiv": 48, "db": 48, "easi": 48, "dai": 48, "framework": 48, "ever": 48, "bad": 48, "advanc": 48, "pre": [48, 51], "perfect": 48, "main": 48, "doesn": 48, "cycl": 48, "hallucin": 48, "fact": 48, "deliv": 48, "wrong": 48, "fate": 48, "re": 48, "dag": 48, "imposs": 48, "next": 48, "asap": 48, "implement": 48, "circl": 48, "goe": 48, "yet": 48, "blue": 48, "limit": [48, 49, 50], "short": 48, "meger": 48, "matter": 48, "pretti": 48, "locat": 48, "voil\u00e0": 48, "complex": 48, "familiar": 48, "much": 48, "straight": 48, "linear": 48, "branch": 48, "magic": 48, "happen": 48, "pass_valu": 48, "reranker_recal": 48, "target_node_lin": 48, "kf1_polici": 48, "rl_polici": 48, "cool": 48, "tyre": 48, "soon": 48, "interest": 48, "welcom": 48, "act": 49, "interchang": 49, "swap": 49, "mix": 49, "individu": 49, "compon": 49, "fit": 49, "over": 49, "remain": 49, "broader": 49, "resid": 49, "loop": 49, "essenti": [49, 50], "augment": 49, "mechan": 49, "dynam": 49, "temporari": 49, "arrang": 49, "temporarili": 49, "simul": 49, "intend": 49, "until": 49, "aspect": 49, "techniqu": 49, "part": 49, "quantit": 49, "basi": 49, "effort": 49, "strateg": 49, "decis": 49, "criterion": 49, "focus": 49, "mai": 49, "anoth": [49, 51], "upgrad": 50, "gcc": 50, "c": 50, "sudo": 50, "apt": 50, "linux": 50, "brew": 50, "mac": 50, "mistak": [50, 51], "miss": 50, "echo": 50, "your_api_kei": 50, "recogn": 50, "difficulti": 50, "commit": 50, "push": 50, "seriou": [50, 51], "secur": 50, "api_bas": 50, "sometim": 50, "both": 50, "oom": 50, "rate": 50, "tier": 50, "reset_index": 50, "drop": 50, "sure": 51, "who": 51, "manual": 51, "forget": 51, "overfit": 51, "highli": 51, "later": 51, "sample_config": 51, "default_config": 51, "done": 51, "sever": 51, "remind": 51, "pipeline_dict": 51, "malfunct": 51, "qa_test": 51, "corpus_test": 51, "awai": 51, "endpoint": 51, "share": 51, "successfulli": 51, "launch": 51, "product": 51}, "objects": {"": [[0, 0, 0, "-", "autorag"]], "autorag": [[0, 1, 1, "", "LazyInit"], [0, 0, 0, "-", "cli"], [1, 0, 0, "-", "data"], [0, 0, 0, "-", "deploy"], [4, 0, 0, "-", "evaluate"], [0, 0, 0, "-", "evaluator"], [0, 2, 1, "", "handle_exception"], [0, 0, 0, "-", "node_line"], [6, 0, 0, "-", "nodes"], [14, 0, 0, "-", "schema"], [0, 0, 0, "-", "strategy"], [0, 0, 0, "-", "support"], [15, 0, 0, "-", "utils"], [0, 0, 0, "-", "web"]], "autorag.data": [[2, 0, 0, "-", "qacreation"], [3, 0, 0, "-", "utils"]], "autorag.data.qacreation": [[2, 0, 0, "-", "simple"]], "autorag.data.qacreation.simple": [[2, 2, 1, "", "generate_qa_row"], [2, 2, 1, "", "generate_simple_qa_dataset"]], "autorag.data.utils": [[3, 0, 0, "-", "llamaindex"]], "autorag.data.utils.llamaindex": [[3, 2, 1, "", "get_file_metadata"], [3, 2, 1, "", "llama_documents_to_parquet"]], "autorag.deploy": [[0, 1, 1, "", "Runner"], [0, 1, 1, "", "RunnerInput"], [0, 2, 1, "", "extract_best_config"], [0, 2, 1, "", "extract_node_line_names"], [0, 2, 1, "", "extract_node_strategy"], [0, 2, 1, "", "summary_df_to_yaml"]], "autorag.deploy.Runner": [[0, 3, 1, "", "from_trial_folder"], [0, 3, 1, "", "from_yaml"], [0, 3, 1, "", "run"], [0, 3, 1, "", "run_api_server"]], "autorag.deploy.RunnerInput": [[0, 4, 1, "", "model_computed_fields"], [0, 4, 1, "", "model_config"], [0, 4, 1, "", "model_fields"], [0, 4, 1, "", "query"], [0, 4, 1, "", "result_column"]], "autorag.evaluate": [[4, 0, 0, "-", "generation"], [5, 0, 0, "-", "metric"], [4, 0, 0, "-", "retrieval"], [4, 0, 0, "-", "retrieval_contents"], [4, 0, 0, "-", "util"]], "autorag.evaluate.generation": [[4, 2, 1, "", "evaluate_generation"]], "autorag.evaluate.metric": [[5, 0, 0, "-", "generation"], [5, 0, 0, "-", "retrieval"], [5, 0, 0, "-", "retrieval_contents"], [5, 0, 0, "-", "util"]], "autorag.evaluate.metric.generation": [[5, 2, 1, "", "bleu"], [5, 2, 1, "", "g_eval"], [5, 2, 1, "", "generation_metric"], [5, 2, 1, "", "huggingface_evaluate"], [5, 2, 1, "", "meteor"], [5, 2, 1, "", "rouge"], [5, 2, 1, "", "sem_score"]], "autorag.evaluate.metric.retrieval": [[5, 2, 1, "", "retrieval_f1"], [5, 2, 1, "", "retrieval_metric"], [5, 2, 1, "", "retrieval_precision"], [5, 2, 1, "", "retrieval_recall"]], "autorag.evaluate.metric.retrieval_contents": [[5, 2, 1, "", "retrieval_contents_metric"], [5, 2, 1, "", "retrieval_token_f1"], [5, 2, 1, "", "retrieval_token_precision"], [5, 2, 1, "", "retrieval_token_recall"], [5, 2, 1, "", "single_token_f1"]], "autorag.evaluate.metric.util": [[5, 2, 1, "", "calculate_cosine_similarity"]], "autorag.evaluate.retrieval": [[4, 2, 1, "", "evaluate_retrieval"]], "autorag.evaluate.retrieval_contents": [[4, 2, 1, "", "evaluate_retrieval_contents"]], "autorag.evaluate.util": [[4, 2, 1, "", "cast_embedding_model"], [4, 2, 1, "", "cast_metrics"]], "autorag.evaluator": [[0, 1, 1, "", "Evaluator"]], "autorag.evaluator.Evaluator": [[0, 3, 1, "", "start_trial"]], "autorag.node_line": [[0, 2, 1, "", "make_node_lines"], [0, 2, 1, "", "run_node_line"]], "autorag.nodes": [[7, 0, 0, "-", "generator"], [8, 0, 0, "-", "passagecompressor"], [9, 0, 0, "-", "passagereranker"], [11, 0, 0, "-", "promptmaker"], [12, 0, 0, "-", "queryexpansion"], [13, 0, 0, "-", "retrieval"]], "autorag.nodes.generator": [[7, 0, 0, "-", "base"], [7, 0, 0, "-", "llama_index_llm"], [7, 0, 0, "-", "run"]], "autorag.nodes.generator.base": [[7, 2, 1, "", "generator_node"]], "autorag.nodes.generator.llama_index_llm": [[7, 2, 1, "", "llama_index_llm"]], "autorag.nodes.generator.run": [[7, 2, 1, "", "evaluate_generator_node"], [7, 2, 1, "", "run_generator_node"]], "autorag.nodes.passagecompressor": [[8, 0, 0, "-", "base"], [8, 0, 0, "-", "pass_compressor"], [8, 0, 0, "-", "run"], [8, 0, 0, "-", "tree_summarize"]], "autorag.nodes.passagecompressor.base": [[8, 2, 1, "", "make_llm"], [8, 2, 1, "", "passage_compressor_node"]], "autorag.nodes.passagecompressor.pass_compressor": [[8, 2, 1, "", "pass_compressor"]], "autorag.nodes.passagecompressor.run": [[8, 2, 1, "", "evaluate_passage_compressor_node"], [8, 2, 1, "", "make_contents_gt"], [8, 2, 1, "", "run_passage_compressor_node"]], "autorag.nodes.passagecompressor.tree_summarize": [[8, 2, 1, "", "tree_summarize"]], "autorag.nodes.passagereranker": [[9, 0, 0, "-", "base"], [9, 0, 0, "-", "koreranker"], [9, 0, 0, "-", "monot5"], [9, 0, 0, "-", "pass_reranker"], [9, 0, 0, "-", "run"], [10, 0, 0, "-", "tart"], [9, 0, 0, "-", "upr"]], "autorag.nodes.passagereranker.base": [[9, 2, 1, "", "passage_reranker_node"]], "autorag.nodes.passagereranker.koreranker": [[9, 2, 1, "", "exp_normalize"], [9, 2, 1, "", "koreranker"], [9, 2, 1, "", "koreranker_pure"]], "autorag.nodes.passagereranker.monot5": [[9, 2, 1, "", "mono_t5_pure"], [9, 2, 1, "", "monot5"]], "autorag.nodes.passagereranker.pass_reranker": [[9, 2, 1, "", "pass_reranker"]], "autorag.nodes.passagereranker.run": [[9, 2, 1, "", "run_passage_reranker_node"]], "autorag.nodes.passagereranker.tart": [[10, 0, 0, "-", "modeling_enc_t5"], [10, 0, 0, "-", "tart"], [10, 0, 0, "-", "tokenization_enc_t5"]], "autorag.nodes.passagereranker.tart.modeling_enc_t5": [[10, 1, 1, "", "EncT5ForSequenceClassification"]], "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification": [[10, 3, 1, "", "deparallelize"], [10, 3, 1, "", "forward"], [10, 3, 1, "", "get_encoder"], [10, 3, 1, "", "get_input_embeddings"], [10, 3, 1, "", "parallelize"], [10, 3, 1, "", "set_input_embeddings"]], "autorag.nodes.passagereranker.tart.tart": [[10, 2, 1, "", "tart"], [10, 2, 1, "", "tart_pure"]], "autorag.nodes.passagereranker.tart.tokenization_enc_t5": [[10, 1, 1, "", "EncT5Tokenizer"]], "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer": [[10, 3, 1, "", "build_inputs_with_special_tokens"], [10, 3, 1, "", "create_token_type_ids_from_sequences"], [10, 3, 1, "", "get_special_tokens_mask"]], "autorag.nodes.passagereranker.upr": [[9, 2, 1, "", "calculate_likelihood"], [9, 2, 1, "", "upr"], [9, 2, 1, "", "upr_pure"]], "autorag.nodes.promptmaker": [[11, 0, 0, "-", "base"], [11, 0, 0, "-", "fstring"], [11, 0, 0, "-", "run"]], "autorag.nodes.promptmaker.base": [[11, 2, 1, "", "prompt_maker_node"]], "autorag.nodes.promptmaker.fstring": [[11, 2, 1, "", "fstring"]], "autorag.nodes.promptmaker.run": [[11, 2, 1, "", "evaluate_generator_result"], [11, 2, 1, "", "evaluate_one_prompt_maker_node"], [11, 2, 1, "", "make_generator_callable_params"], [11, 2, 1, "", "run_prompt_maker_node"]], "autorag.nodes.queryexpansion": [[12, 0, 0, "-", "base"], [12, 0, 0, "-", "hyde"], [12, 0, 0, "-", "pass_query_expansion"], [12, 0, 0, "-", "query_decompose"], [12, 0, 0, "-", "run"]], "autorag.nodes.queryexpansion.base": [[12, 2, 1, "", "query_expansion_node"]], "autorag.nodes.queryexpansion.hyde": [[12, 2, 1, "", "hyde"], [12, 2, 1, "", "hyde_pure"]], "autorag.nodes.queryexpansion.pass_query_expansion": [[12, 2, 1, "", "pass_query_expansion"]], "autorag.nodes.queryexpansion.query_decompose": [[12, 2, 1, "", "query_decompose"], [12, 2, 1, "", "query_decompose_pure"]], "autorag.nodes.queryexpansion.run": [[12, 2, 1, "", "evaluate_one_query_expansion_node"], [12, 2, 1, "", "make_retrieval_callable_params"], [12, 2, 1, "", "run_query_expansion_node"]], "autorag.nodes.retrieval": [[13, 0, 0, "-", "base"], [13, 0, 0, "-", "bm25"], [13, 0, 0, "-", "hybrid_cc"], [13, 0, 0, "-", "hybrid_rrf"], [13, 0, 0, "-", "run"], [13, 0, 0, "-", "vectordb"]], "autorag.nodes.retrieval.base": [[13, 2, 1, "", "cast_queries"], [13, 2, 1, "", "evenly_distribute_passages"], [13, 2, 1, "", "load_bm25_corpus"], [13, 2, 1, "", "load_chroma_collection"], [13, 2, 1, "", "retrieval_node"], [13, 2, 1, "", "run_retrieval_modules"]], "autorag.nodes.retrieval.bm25": [[13, 2, 1, "", "bm25"], [13, 2, 1, "", "bm25_ingest"], [13, 2, 1, "", "bm25_pure"], [13, 2, 1, "", "bm25_tokenize"]], "autorag.nodes.retrieval.hybrid_cc": [[13, 2, 1, "", "cc_pure"], [13, 2, 1, "", "hybrid_cc"]], "autorag.nodes.retrieval.hybrid_rrf": [[13, 2, 1, "", "hybrid_rrf"], [13, 2, 1, "", "rrf_calculate"], [13, 2, 1, "", "rrf_pure"]], "autorag.nodes.retrieval.run": [[13, 2, 1, "", "edit_summary_df_params"], [13, 2, 1, "", "evaluate_retrieval_node"], [13, 2, 1, "", "get_hybrid_execution_times"], [13, 2, 1, "", "get_ids_and_scores"], [13, 2, 1, "", "get_module_params"], [13, 2, 1, "", "run_retrieval_node"], [13, 2, 1, "", "select_result_for_hybrid"]], "autorag.nodes.retrieval.vectordb": [[13, 2, 1, "", "vectordb"], [13, 2, 1, "", "vectordb_ingest"], [13, 2, 1, "", "vectordb_pure"]], "autorag.schema": [[14, 0, 0, "-", "module"], [14, 0, 0, "-", "node"]], "autorag.schema.module": [[14, 1, 1, "", "Module"]], "autorag.schema.module.Module": [[14, 3, 1, "", "from_dict"], [14, 4, 1, "", "module"], [14, 4, 1, "", "module_param"], [14, 4, 1, "", "module_type"]], "autorag.schema.node": [[14, 1, 1, "", "Node"], [14, 2, 1, "", "extract_values"], [14, 2, 1, "", "extract_values_from_nodes"], [14, 2, 1, "", "module_type_exists"]], "autorag.schema.node.Node": [[14, 3, 1, "", "from_dict"], [14, 3, 1, "", "get_param_combinations"], [14, 4, 1, "", "modules"], [14, 4, 1, "", "node_params"], [14, 4, 1, "", "node_type"], [14, 3, 1, "", "run"], [14, 4, 1, "", "run_node"], [14, 4, 1, "", "strategy"]], "autorag.strategy": [[0, 2, 1, "", "avoid_empty_result"], [0, 2, 1, "", "filter_by_threshold"], [0, 2, 1, "", "measure_speed"], [0, 2, 1, "", "select_best_average"]], "autorag.support": [[0, 2, 1, "", "dynamically_find_function"], [0, 2, 1, "", "get_support_modules"], [0, 2, 1, "", "get_support_nodes"]], "autorag.utils": [[15, 0, 0, "-", "preprocess"], [15, 0, 0, "-", "util"]], "autorag.utils.preprocess": [[15, 2, 1, "", "cast_corpus_dataset"], [15, 2, 1, "", "cast_qa_dataset"], [15, 2, 1, "", "validate_corpus_dataset"], [15, 2, 1, "", "validate_qa_dataset"]], "autorag.utils.util": [[15, 2, 1, "", "convert_env_in_dict"], [15, 2, 1, "", "convert_string_to_tuple_in_dict"], [15, 2, 1, "", "explode"], [15, 2, 1, "", "fetch_contents"], [15, 2, 1, "", "load_summary_file"], [15, 2, 1, "", "make_combinations"], [15, 2, 1, "", "normalize_string"], [15, 2, 1, "", "process_batch"], [15, 2, 1, "", "replace_value_in_dict"], [15, 2, 1, "", "result_to_dataframe"]], "autorag.web": [[0, 2, 1, "", "chat_box"], [0, 2, 1, "", "get_runner"], [0, 2, 1, "", "set_initial_state"], [0, 2, 1, "", "set_page_config"], [0, 2, 1, "", "set_page_header"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function", "3": "py:method", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"autorag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 21, 48], "packag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "subpackag": [0, 1, 4, 6, 9], "submodul": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15], "cli": [0, 51], "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49], "deploi": [0, 51], "evalu": [0, 4, 5, 18, 47, 51], "node_lin": 0, "strategi": [0, 24, 28, 32, 36, 39, 43, 47, 49], "support": [0, 23, 24, 28, 31, 32, 36, 39, 43, 44], "web": [0, 20, 51], "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17], "data": [1, 2, 3, 18, 46, 50], "qacreat": 2, "simpl": 2, "util": [3, 4, 5, 15], "llamaindex": 3, "gener": [4, 5, 7, 24], "retriev": [4, 5, 13, 43], "retrieval_cont": [4, 5], "metric": 5, "node": [6, 7, 8, 9, 10, 11, 12, 13, 14, 24, 28, 32, 36, 39, 43, 45, 46, 47, 48, 49], "base": [7, 8, 9, 11, 12, 13], "llama_index_llm": 7, "run": [7, 8, 9, 11, 12, 13, 19, 20, 50, 51], "passagecompressor": 8, "pass_compressor": [8, 28], "tree_summar": 8, "passagererank": [9, 10], "korerank": 9, "monot5": [9, 31], "pass_rerank": [9, 32], "upr": [9, 34], "tart": [10, 33], "modeling_enc_t5": 10, "tokenization_enc_t5": 10, "promptmak": 11, "fstring": 11, "queryexpans": 12, "hyde": [12, 37], "pass_query_expans": [12, 39], "query_decompos": 12, "bm25": [13, 40], "hybrid_cc": 13, "hybrid_rrf": 13, "vectordb": [13, 44], "schema": 14, "preprocess": 15, "dataset": [17, 51], "format": [17, 51], "qa": [17, 18], "long": 17, "stori": 17, "short": 17, "qid": 17, "queri": [17, 38, 39], "retrieval_gt": 17, "generation_gt": 17, "corpu": [17, 18], "doc_id": 17, "metadata": 17, "sampl": [17, 46], "start": [18, 21], "creat": 18, "your": [18, 23, 51], "own": 18, "index": [18, 23, 46], "overview": [18, 24, 28, 32, 36, 39, 43], "make": [18, 45], "from": [18, 22, 50], "raw": 18, "document": [18, 21], "what": [18, 28, 32, 39, 45, 48], "i": [18, 28, 32, 39, 45, 48, 50], "passag": 18, "us": [18, 20, 23, 26, 45], "custom": [18, 45, 51], "creation": 18, "function": 18, "api": [19, 22, 50, 51], "endpoint": 19, "server": [19, 51], "interfac": [20, 51], "1": [20, 39, 51], "yaml": [20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51], "path": 20, "want": [20, 48, 51], "specifi": [20, 45, 51], "project": [20, 46, 51], "folder": [20, 46, 51], "2": [20, 43, 51], "trial": [20, 46], "exampl": [20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 49], "why": [21, 26], "how": [21, 47], "can": [21, 47], "help": 21, "get": 21, "ecosystem": 21, "instal": [22, 50], "setup": 22, "troubl": 22, "openai": [22, 50], "kei": 22, "build": [22, 50], "sourc": 22, "configur": 23, "llm": [23, 25, 50], "embed": 23, "model": [23, 31], "add": 23, "more": [23, 47, 48], "6": 24, "definit": [24, 28, 32, 36, 39, 43], "paramet": [24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44], "purpos": [24, 28, 43], "sem_scor": 24, "config": [24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51], "file": [24, 28, 32, 36, 39, 43, 45, 51], "llama_index": 25, "vllm": 26, "avail": 27, "list": 27, "4": 28, "passage_compressor": 28, "benefit": [28, 32, 39], "tree": 29, "summar": [29, 49], "ko": 30, "rerank": 30, "name": 31, "3": [32, 51], "passage_rerank": 32, "f": 35, "string": 35, "5": 36, "prompt": 36, "maker": 36, "decompos": 38, "expans": 39, "hybrid": [41, 42], "cc": 41, "hybird": [41, 42], "addit": [41, 42], "explan": [41, 42, 49], "rrf": 42, "backend": 44, "line": [45, 46, 48, 49], "tupl": 45, "environ": 45, "variabl": 45, "structur": [46, 49], "summari": 46, "csv": 46, "pre_retrieve_node_lin": 46, "query_expans": 46, "retrieve_node_lin": 46, "resourc": 46, "json": 46, "optim": [47, 50, 51], "work": 47, "swap": 47, "pass": 47, "best": 47, "result": 47, "next": [47, 51], "t": 47, "road": 48, "modular": 48, "rag": [48, 51], "know": 48, "about": 48, "earli": 48, "version": 48, "polici": 48, "merger": 48, "contact": 48, "u": 48, "concept": 49, "troubleshoot": 50, "could": 50, "wheel": 50, "face": 50, "error": 50, "while": 50, "The": 50, "length": 50, "row": 50, "differ": 50, "origin": 50, "tutori": 51, "prepar": 51, "note": 51, "find": 51, "pipelin": 51, "write": 51, "extract": 51, "test": 51, "an": 51, "step": 51}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"autorag package": [[0, "autorag-package"]], "Subpackages": [[0, "subpackages"], [1, "subpackages"], [4, "subpackages"], [6, "subpackages"], [9, "subpackages"]], "Submodules": [[0, "submodules"], [2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"], [12, "submodules"], [13, "submodules"], [14, "submodules"], [15, "submodules"]], "autorag.cli module": [[0, "module-autorag.cli"]], "autorag.deploy module": [[0, "module-autorag.deploy"]], "autorag.evaluator module": [[0, "module-autorag.evaluator"]], "autorag.node_line module": [[0, "module-autorag.node_line"]], "autorag.strategy module": [[0, "module-autorag.strategy"]], "autorag.support module": [[0, "module-autorag.support"]], "autorag.web module": [[0, "module-autorag.web"]], "Module contents": [[0, "module-autorag"], [1, "module-autorag.data"], [2, "module-autorag.data.qacreation"], [3, "module-autorag.data.utils"], [4, "module-autorag.evaluate"], [5, "module-autorag.evaluate.metric"], [6, "module-autorag.nodes"], [7, "module-autorag.nodes.generator"], [8, "module-autorag.nodes.passagecompressor"], [9, "module-autorag.nodes.passagereranker"], [10, "module-autorag.nodes.passagereranker.tart"], [11, "module-autorag.nodes.promptmaker"], [12, "module-autorag.nodes.queryexpansion"], [13, "module-autorag.nodes.retrieval"], [14, "module-autorag.schema"], [15, "module-autorag.utils"]], "autorag.data package": [[1, "autorag-data-package"]], "autorag.data.qacreation package": [[2, "autorag-data-qacreation-package"]], "autorag.data.qacreation.simple module": [[2, "module-autorag.data.qacreation.simple"]], "autorag.data.utils package": [[3, "autorag-data-utils-package"]], "autorag.data.utils.llamaindex module": [[3, "module-autorag.data.utils.llamaindex"]], "autorag.evaluate package": [[4, "autorag-evaluate-package"]], "autorag.evaluate.generation module": [[4, "module-autorag.evaluate.generation"]], "autorag.evaluate.retrieval module": [[4, "module-autorag.evaluate.retrieval"]], "autorag.evaluate.retrieval_contents module": [[4, "module-autorag.evaluate.retrieval_contents"]], "autorag.evaluate.util module": [[4, "module-autorag.evaluate.util"]], "autorag.evaluate.metric package": [[5, "autorag-evaluate-metric-package"]], "autorag.evaluate.metric.generation module": [[5, "module-autorag.evaluate.metric.generation"]], "autorag.evaluate.metric.retrieval module": [[5, "module-autorag.evaluate.metric.retrieval"]], "autorag.evaluate.metric.retrieval_contents module": [[5, "module-autorag.evaluate.metric.retrieval_contents"]], "autorag.evaluate.metric.util module": [[5, "module-autorag.evaluate.metric.util"]], "autorag.nodes package": [[6, "autorag-nodes-package"]], "autorag.nodes.generator package": [[7, "autorag-nodes-generator-package"]], "autorag.nodes.generator.base module": [[7, "module-autorag.nodes.generator.base"]], "autorag.nodes.generator.llama_index_llm module": [[7, "module-autorag.nodes.generator.llama_index_llm"]], "autorag.nodes.generator.run module": [[7, "module-autorag.nodes.generator.run"]], "autorag.nodes.passagecompressor package": [[8, "autorag-nodes-passagecompressor-package"]], "autorag.nodes.passagecompressor.base module": [[8, "module-autorag.nodes.passagecompressor.base"]], "autorag.nodes.passagecompressor.pass_compressor module": [[8, "module-autorag.nodes.passagecompressor.pass_compressor"]], "autorag.nodes.passagecompressor.run module": [[8, "module-autorag.nodes.passagecompressor.run"]], "autorag.nodes.passagecompressor.tree_summarize module": [[8, "module-autorag.nodes.passagecompressor.tree_summarize"]], "autorag.nodes.passagereranker package": [[9, "autorag-nodes-passagereranker-package"]], "autorag.nodes.passagereranker.base module": [[9, "module-autorag.nodes.passagereranker.base"]], "autorag.nodes.passagereranker.koreranker module": [[9, "module-autorag.nodes.passagereranker.koreranker"]], "autorag.nodes.passagereranker.monot5 module": [[9, "module-autorag.nodes.passagereranker.monot5"]], "autorag.nodes.passagereranker.pass_reranker module": [[9, "module-autorag.nodes.passagereranker.pass_reranker"]], "autorag.nodes.passagereranker.run module": [[9, "module-autorag.nodes.passagereranker.run"]], "autorag.nodes.passagereranker.upr module": [[9, "module-autorag.nodes.passagereranker.upr"]], "autorag.nodes.passagereranker.tart package": [[10, "autorag-nodes-passagereranker-tart-package"]], "autorag.nodes.passagereranker.tart.modeling_enc_t5 module": [[10, "module-autorag.nodes.passagereranker.tart.modeling_enc_t5"]], "autorag.nodes.passagereranker.tart.tart module": [[10, "module-autorag.nodes.passagereranker.tart.tart"]], "autorag.nodes.passagereranker.tart.tokenization_enc_t5 module": [[10, "module-autorag.nodes.passagereranker.tart.tokenization_enc_t5"]], "autorag.nodes.promptmaker package": [[11, "autorag-nodes-promptmaker-package"]], "autorag.nodes.promptmaker.base module": [[11, "module-autorag.nodes.promptmaker.base"]], "autorag.nodes.promptmaker.fstring module": [[11, "module-autorag.nodes.promptmaker.fstring"]], "autorag.nodes.promptmaker.run module": [[11, "module-autorag.nodes.promptmaker.run"]], "autorag.nodes.queryexpansion package": [[12, "autorag-nodes-queryexpansion-package"]], "autorag.nodes.queryexpansion.base module": [[12, "module-autorag.nodes.queryexpansion.base"]], "autorag.nodes.queryexpansion.hyde module": [[12, "module-autorag.nodes.queryexpansion.hyde"]], "autorag.nodes.queryexpansion.pass_query_expansion module": [[12, "module-autorag.nodes.queryexpansion.pass_query_expansion"]], "autorag.nodes.queryexpansion.query_decompose module": [[12, "module-autorag.nodes.queryexpansion.query_decompose"]], "autorag.nodes.queryexpansion.run module": [[12, "module-autorag.nodes.queryexpansion.run"]], "autorag.nodes.retrieval package": [[13, "autorag-nodes-retrieval-package"]], "autorag.nodes.retrieval.base module": [[13, "module-autorag.nodes.retrieval.base"]], "autorag.nodes.retrieval.bm25 module": [[13, "module-autorag.nodes.retrieval.bm25"]], "autorag.nodes.retrieval.hybrid_cc module": [[13, "module-autorag.nodes.retrieval.hybrid_cc"]], "autorag.nodes.retrieval.hybrid_rrf module": [[13, "module-autorag.nodes.retrieval.hybrid_rrf"]], "autorag.nodes.retrieval.run module": [[13, "module-autorag.nodes.retrieval.run"]], "autorag.nodes.retrieval.vectordb module": [[13, "module-autorag.nodes.retrieval.vectordb"]], "autorag.schema package": [[14, "autorag-schema-package"]], "autorag.schema.module module": [[14, "module-autorag.schema.module"]], "autorag.schema.node module": [[14, "module-autorag.schema.node"]], "autorag.utils package": [[15, "autorag-utils-package"]], "autorag.utils.preprocess module": [[15, "module-autorag.utils.preprocess"]], "autorag.utils.util module": [[15, "module-autorag.utils.util"]], "autorag": [[16, "autorag"]], "Dataset Format": [[17, "dataset-format"]], "QA Dataset": [[17, "qa-dataset"]], "Long story short": [[17, null], [17, null], [17, null], [17, null]], "qid": [[17, "qid"]], "query": [[17, "query"]], "retrieval_gt": [[17, "retrieval-gt"]], "generation_gt": [[17, "generation-gt"]], "Corpus Dataset": [[17, "corpus-dataset"]], "doc_id": [[17, "doc-id"]], "contents": [[17, "contents"]], "metadata": [[17, "metadata"]], "Samples": [[17, "samples"]], "Start creating your own evaluation data": [[18, "start-creating-your-own-evaluation-data"]], "Index": [[18, "index"], [23, "index"]], "Overview": [[18, "overview"], [24, "overview"], [43, "overview"]], "Make corpus data from raw documents": [[18, "make-corpus-data-from-raw-documents"]], "Make qa data from corpus data": [[18, "make-qa-data-from-corpus-data"]], "What is passage?": [[18, null]], "Use custom data creation function": [[18, "use-custom-data-creation-function"]], "API endpoint": [[19, "api-endpoint"]], "Running API server": [[19, "running-api-server"]], "API Endpoint": [[19, "id1"]], "Web Interface": [[20, "web-interface"]], "Running the Web Interface": [[20, "running-the-web-interface"]], "1. Use yaml path": [[20, "use-yaml-path"]], "Want to specify project folder?": [[20, null], [51, null], [51, null], [51, null]], "2. Use trial path": [[20, "use-trial-path"]], "Web Interface example": [[20, "web-interface-example"]], "AutoRAG documentation": [[21, "autorag-documentation"]], "\ud83e\udd37\u200d\u2642\ufe0f Why AutoRAG?": [[21, "why-autorag"]], "\ud83e\udd38\u200d\u2642\ufe0f How can AutoRAG helps?": [[21, "how-can-autorag-helps"]], "\ud83c\udfc3\u200d\u2642\ufe0f Getting Started": [[21, "getting-started"]], "\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc66 Ecosystem": [[21, "ecosystem"]], "Installation and Setup": [[22, "installation-and-setup"]], "Trouble with installation?": [[22, null]], "Setup OPENAI API KEY": [[22, "setup-openai-api-key"]], "Build from source": [[22, "build-from-source"]], "Configure LLM & Embedding models": [[23, "configure-llm-embedding-models"]], "Configure the LLM model": [[23, "configure-the-llm-model"]], "Modules that use LLM model": [[23, "modules-that-use-llm-model"]], "Supporting LLM models": [[23, "supporting-llm-models"]], "Add more LLM models": [[23, "add-more-llm-models"]], "Configure the Embedding model": [[23, "configure-the-embedding-model"]], "Modules that use Embedding model": [[23, "modules-that-use-embedding-model"]], "Supporting Embedding models": [[23, "supporting-embedding-models"]], "Add your embedding models": [[23, "add-your-embedding-models"]], "6. Generator": [[24, "generator"]], "\ud83d\udd0e Definition": [[24, "definition"], [28, "definition"], [32, "definition"], [36, "definition"], [39, "definition"], [43, "definition"]], "\ud83d\udd22 Parameters": [[24, "parameters"], [28, "parameters"], [32, "parameters"], [36, "parameters"], [39, "parameters"], [43, "parameters"]], "Node Parameters": [[24, "node-parameters"], [28, "node-parameters"], [32, "node-parameters"], [36, "node-parameters"], [39, "node-parameters"], [43, "node-parameters"]], "Strategy Parameters": [[24, "strategy-parameters"], [28, "strategy-parameters"], [32, "strategy-parameters"], [43, "strategy-parameters"]], "Purpose": [[24, null], [28, null], [43, null]], "sem_score": [[24, null]], "Example config.yaml file": [[24, "example-config-yaml-file"], [28, "example-config-yaml-file"], [32, "example-config-yaml-file"], [36, "example-config-yaml-file"], [39, "example-config-yaml-file"], [43, "example-config-yaml-file"]], "Supported Modules": [[24, "supported-modules"], [28, "supported-modules"], [32, "supported-modules"], [36, "supported-modules"], [39, "supported-modules"], [43, "supported-modules"]], "llama_index LLM": [[25, "llama-index-llm"]], "Module Parameters": [[25, "module-parameters"], [26, "module-parameters"], [29, "module-parameters"], [30, "module-parameters"], [31, "module-parameters"], [33, "module-parameters"], [34, "module-parameters"], [35, "module-parameters"], [37, "module-parameters"], [38, "module-parameters"], [40, "module-parameters"], [41, "module-parameters"], [42, "module-parameters"], [44, "module-parameters"]], "Example config.yaml": [[25, "example-config-yaml"], [26, "example-config-yaml"], [29, "example-config-yaml"], [30, "example-config-yaml"], [31, "example-config-yaml"], [33, "example-config-yaml"], [34, "example-config-yaml"], [35, "example-config-yaml"], [37, "example-config-yaml"], [38, "example-config-yaml"], [40, "example-config-yaml"], [41, "example-config-yaml"], [42, "example-config-yaml"], [44, "example-config-yaml"]], "vllm": [[26, "vllm"]], "Why use vllm module?": [[26, "why-use-vllm-module"]], "Available List": [[27, "available-list"]], "4. Passage_Compressor": [[28, "passage-compressor"]], "\ud83e\udd38 Benefits": [[28, "benefits"], [32, "benefits"], [39, "benefits"]], "Overview:": [[28, "overview"], [32, "overview"], [36, "overview"], [39, "overview"]], "What is pass_compressor?": [[28, null]], "Tree Summarize": [[29, "tree-summarize"]], "Ko-reranker": [[30, "ko-reranker"]], "MonoT5": [[31, "monot5"]], "Supported Model Names": [[31, "supported-model-names"]], "3. Passage_Reranker": [[32, "passage-reranker"]], "What is pass_reranker?": [[32, null]], "TART": [[33, "tart"]], "UPR": [[34, "upr"]], "F-String": [[35, "f-string"]], "5. Prompt Maker": [[36, "prompt-maker"]], "Strategy": [[36, "strategy"], [39, "strategy"], [49, "strategy"]], "Parameters:": [[36, "id1"]], "HyDE": [[37, "hyde"]], "Query Decompose": [[38, "query-decompose"]], "1. Query Expansion": [[39, "query-expansion"]], "Strategy Parameters:": [[39, "strategy-parameters"]], "What is pass_query_expansion?": [[39, null]], "BM25": [[40, "bm25"]], "Hybrid - cc": [[41, "hybrid-cc"]], "\u2757\ufe0fHybird additional explanation": [[41, "hybird-additional-explanation"]], "Hybrid - rrf": [[42, "hybrid-rrf"]], "\u2757 Hybird additional explanation": [[42, "hybird-additional-explanation"]], "2. Retrieval": [[43, "retrieval"]], "Vectordb": [[44, "vectordb"]], "Backend Support": [[44, "backend-support"]], "Make custom config yaml file": [[45, "make-custom-config-yaml-file"]], "Make yaml file": [[45, "make-yaml-file"]], "Make Node Line": [[45, "make-node-line"]], "Specify nodes": [[45, "specify-nodes"]], "Specify modules": [[45, "specify-modules"]], "What is tuple in the yaml file?": [[45, null]], "Use environment variable in the yaml file": [[45, "use-environment-variable-in-the-yaml-file"]], "Folder Structure": [[46, "folder-structure"]], "Sample Structure Index": [[46, "sample-structure-index"]], "Project": [[46, "project"]], "trial": [[46, "trial"]], "config.yaml": [[46, "config-yaml"]], "[trial] summary.csv": [[46, "trial-summary-csv"]], "pre_retrieve_node_line": [[46, "pre-retrieve-node-line"]], "[Node Line] summary.csv": [[46, "node-line-summary-csv"]], "query_expansion": [[46, "query-expansion"]], "[Node] summary.csv": [[46, "node-summary-csv"]], "retrieve_node_line": [[46, "retrieve-node-line"]], "data": [[46, "data"]], "resources": [[46, "resources"]], "trial.json": [[46, "trial-json"]], "How optimization works": [[47, "how-optimization-works"]], "Swapping modules in Node": [[47, "swapping-modules-in-node"]], "Pass the best result to the next node": [[47, "pass-the-best-result-to-the-next-node"]], "Evaluate Nodes that can\u2019t evaluate": [[47, "evaluate-nodes-that-can-t-evaluate"]], "More optimization strategies": [[47, "more-optimization-strategies"]], "Road to Modular RAG": [[48, "road-to-modular-rag"]], "\ud83e\udd37\u200d\u2642\ufe0f What is Modular RAG?": [[48, "what-is-modular-rag"]], "Want to know more about Modular RAG?": [[48, null]], "\ud83d\ude80 Road to Modular RAG": [[48, "id1"]], "Early version of AutoRAG": [[48, "early-version-of-autorag"]], "Policy Node": [[48, "policy-node"]], "Merger Node": [[48, "merger-node"]], "Node line for Modular RAG": [[48, "node-line-for-modular-rag"]], "What is Node Line?": [[48, null]], "Contact us": [[48, "contact-us"]], "Contact": [[48, null]], "Structure": [[49, "structure"]], "Explanation of concepts": [[49, "explanation-of-concepts"]], "Node & Module": [[49, "node-module"]], "Node Line": [[49, "node-line"]], "Example Node Lines": [[49, "example-node-lines"]], "Summarize": [[49, null], [49, null], [49, null]], "TroubleShooting": [[50, "troubleshooting"]], "Installation": [[50, "installation"]], "Could not build wheels": [[50, "could-not-build-wheels"]], "Optimization": [[50, "optimization"]], "Facing OPENAI API error": [[50, "facing-openai-api-error"]], "Error while running LLM": [[50, "error-while-running-llm"]], "The length or row is different from the original data": [[50, "the-length-or-row-is-different-from-the-original-data"]], "Tutorial": [[51, "tutorial"]], "Prepare Evaluation Dataset": [[51, "prepare-evaluation-dataset"]], "Note: Dataset Format": [[51, null]], "Find Optimal RAG Pipeline": [[51, "find-optimal-rag-pipeline"]], "Write custom config yaml file": [[51, null]], "Extract pipeline and evaluate test dataset": [[51, "extract-pipeline-and-evaluate-test-dataset"]], "Deploy your optimal RAG pipeline": [[51, "deploy-your-optimal-rag-pipeline"]], "1. Run as a CLI": [[51, "run-as-a-cli"]], "2. Run as an API server": [[51, "run-as-an-api-server"]], "3. Run as a Web Interface": [[51, "run-as-a-web-interface"]], "Next Step": [[51, null]]}, "indexentries": {"evaluator (class in autorag.evaluator)": [[0, "autorag.evaluator.Evaluator"]], "lazyinit (class in autorag)": [[0, "autorag.LazyInit"]], "runner (class in autorag.deploy)": [[0, "autorag.deploy.Runner"]], "runnerinput (class in autorag.deploy)": [[0, "autorag.deploy.RunnerInput"]], "autorag": [[0, "module-autorag"]], "autorag.cli": [[0, "module-autorag.cli"]], "autorag.deploy": [[0, "module-autorag.deploy"]], "autorag.evaluator": [[0, "module-autorag.evaluator"]], "autorag.node_line": [[0, "module-autorag.node_line"]], "autorag.strategy": [[0, "module-autorag.strategy"]], "autorag.support": [[0, "module-autorag.support"]], "autorag.web": [[0, "module-autorag.web"]], "avoid_empty_result() (in module autorag.strategy)": [[0, "autorag.strategy.avoid_empty_result"]], "chat_box() (in module autorag.web)": [[0, "autorag.web.chat_box"]], "dynamically_find_function() (in module autorag.support)": [[0, "autorag.support.dynamically_find_function"]], "extract_best_config() (in module autorag.deploy)": [[0, "autorag.deploy.extract_best_config"]], "extract_node_line_names() (in module autorag.deploy)": [[0, "autorag.deploy.extract_node_line_names"]], "extract_node_strategy() (in module autorag.deploy)": [[0, "autorag.deploy.extract_node_strategy"]], "filter_by_threshold() (in module autorag.strategy)": [[0, "autorag.strategy.filter_by_threshold"]], "from_trial_folder() (autorag.deploy.runner class method)": [[0, "autorag.deploy.Runner.from_trial_folder"]], "from_yaml() (autorag.deploy.runner class method)": [[0, "autorag.deploy.Runner.from_yaml"]], "get_runner() (in module autorag.web)": [[0, "autorag.web.get_runner"]], "get_support_modules() (in module autorag.support)": [[0, "autorag.support.get_support_modules"]], "get_support_nodes() (in module autorag.support)": [[0, "autorag.support.get_support_nodes"]], "handle_exception() (in module autorag)": [[0, "autorag.handle_exception"]], "make_node_lines() (in module autorag.node_line)": [[0, "autorag.node_line.make_node_lines"]], "measure_speed() (in module autorag.strategy)": [[0, "autorag.strategy.measure_speed"]], "model_computed_fields (autorag.deploy.runnerinput attribute)": [[0, "autorag.deploy.RunnerInput.model_computed_fields"]], "model_config (autorag.deploy.runnerinput attribute)": [[0, "autorag.deploy.RunnerInput.model_config"]], "model_fields (autorag.deploy.runnerinput attribute)": [[0, "autorag.deploy.RunnerInput.model_fields"]], "module": [[0, "module-autorag"], [0, "module-autorag.cli"], [0, "module-autorag.deploy"], [0, "module-autorag.evaluator"], [0, "module-autorag.node_line"], [0, "module-autorag.strategy"], [0, "module-autorag.support"], [0, "module-autorag.web"], [1, "module-autorag.data"], [2, "module-autorag.data.qacreation"], [2, "module-autorag.data.qacreation.simple"], [3, "module-autorag.data.utils"], [3, "module-autorag.data.utils.llamaindex"], [4, "module-autorag.evaluate"], [4, "module-autorag.evaluate.generation"], [4, "module-autorag.evaluate.retrieval"], [4, "module-autorag.evaluate.retrieval_contents"], [4, "module-autorag.evaluate.util"], [5, "module-autorag.evaluate.metric"], [5, "module-autorag.evaluate.metric.generation"], [5, "module-autorag.evaluate.metric.retrieval"], [5, "module-autorag.evaluate.metric.retrieval_contents"], [5, "module-autorag.evaluate.metric.util"], [6, "module-autorag.nodes"], [7, "module-autorag.nodes.generator"], [7, "module-autorag.nodes.generator.base"], [7, "module-autorag.nodes.generator.llama_index_llm"], [7, "module-autorag.nodes.generator.run"], [8, "module-autorag.nodes.passagecompressor"], [8, "module-autorag.nodes.passagecompressor.base"], [8, "module-autorag.nodes.passagecompressor.pass_compressor"], [8, "module-autorag.nodes.passagecompressor.run"], [8, "module-autorag.nodes.passagecompressor.tree_summarize"], [9, "module-autorag.nodes.passagereranker"], [9, "module-autorag.nodes.passagereranker.base"], [9, "module-autorag.nodes.passagereranker.koreranker"], [9, "module-autorag.nodes.passagereranker.monot5"], [9, "module-autorag.nodes.passagereranker.pass_reranker"], [9, "module-autorag.nodes.passagereranker.run"], [9, "module-autorag.nodes.passagereranker.upr"], [10, "module-autorag.nodes.passagereranker.tart"], [10, "module-autorag.nodes.passagereranker.tart.modeling_enc_t5"], [10, "module-autorag.nodes.passagereranker.tart.tart"], [10, "module-autorag.nodes.passagereranker.tart.tokenization_enc_t5"], [11, "module-autorag.nodes.promptmaker"], [11, "module-autorag.nodes.promptmaker.base"], [11, "module-autorag.nodes.promptmaker.fstring"], [11, "module-autorag.nodes.promptmaker.run"], [12, "module-autorag.nodes.queryexpansion"], [12, "module-autorag.nodes.queryexpansion.base"], [12, "module-autorag.nodes.queryexpansion.hyde"], [12, "module-autorag.nodes.queryexpansion.pass_query_expansion"], [12, "module-autorag.nodes.queryexpansion.query_decompose"], [12, "module-autorag.nodes.queryexpansion.run"], [13, "module-autorag.nodes.retrieval"], [13, "module-autorag.nodes.retrieval.base"], [13, "module-autorag.nodes.retrieval.bm25"], [13, "module-autorag.nodes.retrieval.hybrid_cc"], [13, "module-autorag.nodes.retrieval.hybrid_rrf"], [13, "module-autorag.nodes.retrieval.run"], [13, "module-autorag.nodes.retrieval.vectordb"], [14, "module-autorag.schema"], [14, "module-autorag.schema.module"], [14, "module-autorag.schema.node"], [15, "module-autorag.utils"], [15, "module-autorag.utils.preprocess"], [15, "module-autorag.utils.util"]], "query (autorag.deploy.runnerinput attribute)": [[0, "autorag.deploy.RunnerInput.query"]], "result_column (autorag.deploy.runnerinput attribute)": [[0, "autorag.deploy.RunnerInput.result_column"]], "run() (autorag.deploy.runner method)": [[0, "autorag.deploy.Runner.run"]], "run_api_server() (autorag.deploy.runner method)": [[0, "autorag.deploy.Runner.run_api_server"]], "run_node_line() (in module autorag.node_line)": [[0, "autorag.node_line.run_node_line"]], "select_best_average() (in module autorag.strategy)": [[0, "autorag.strategy.select_best_average"]], "set_initial_state() (in module autorag.web)": [[0, "autorag.web.set_initial_state"]], "set_page_config() (in module autorag.web)": [[0, "autorag.web.set_page_config"]], "set_page_header() (in module autorag.web)": [[0, "autorag.web.set_page_header"]], "start_trial() (autorag.evaluator.evaluator method)": [[0, "autorag.evaluator.Evaluator.start_trial"]], "summary_df_to_yaml() (in module autorag.deploy)": [[0, "autorag.deploy.summary_df_to_yaml"]], "autorag.data": [[1, "module-autorag.data"]], "autorag.data.qacreation": [[2, "module-autorag.data.qacreation"]], "autorag.data.qacreation.simple": [[2, "module-autorag.data.qacreation.simple"]], "generate_qa_row() (in module autorag.data.qacreation.simple)": [[2, "autorag.data.qacreation.simple.generate_qa_row"]], "generate_simple_qa_dataset() (in module autorag.data.qacreation.simple)": [[2, "autorag.data.qacreation.simple.generate_simple_qa_dataset"]], "autorag.data.utils": [[3, "module-autorag.data.utils"]], "autorag.data.utils.llamaindex": [[3, "module-autorag.data.utils.llamaindex"]], "get_file_metadata() (in module autorag.data.utils.llamaindex)": [[3, "autorag.data.utils.llamaindex.get_file_metadata"]], "llama_documents_to_parquet() (in module autorag.data.utils.llamaindex)": [[3, "autorag.data.utils.llamaindex.llama_documents_to_parquet"]], "autorag.evaluate": [[4, "module-autorag.evaluate"]], "autorag.evaluate.generation": [[4, "module-autorag.evaluate.generation"]], "autorag.evaluate.retrieval": [[4, "module-autorag.evaluate.retrieval"]], "autorag.evaluate.retrieval_contents": [[4, "module-autorag.evaluate.retrieval_contents"]], "autorag.evaluate.util": [[4, "module-autorag.evaluate.util"]], "cast_embedding_model() (in module autorag.evaluate.util)": [[4, "autorag.evaluate.util.cast_embedding_model"]], "cast_metrics() (in module autorag.evaluate.util)": [[4, "autorag.evaluate.util.cast_metrics"]], "evaluate_generation() (in module autorag.evaluate.generation)": [[4, "autorag.evaluate.generation.evaluate_generation"]], "evaluate_retrieval() (in module autorag.evaluate.retrieval)": [[4, "autorag.evaluate.retrieval.evaluate_retrieval"]], "evaluate_retrieval_contents() (in module autorag.evaluate.retrieval_contents)": [[4, "autorag.evaluate.retrieval_contents.evaluate_retrieval_contents"]], "autorag.evaluate.metric": [[5, "module-autorag.evaluate.metric"]], "autorag.evaluate.metric.generation": [[5, "module-autorag.evaluate.metric.generation"]], "autorag.evaluate.metric.retrieval": [[5, "module-autorag.evaluate.metric.retrieval"]], "autorag.evaluate.metric.retrieval_contents": [[5, "module-autorag.evaluate.metric.retrieval_contents"]], "autorag.evaluate.metric.util": [[5, "module-autorag.evaluate.metric.util"]], "bleu() (in module autorag.evaluate.metric.generation)": [[5, "autorag.evaluate.metric.generation.bleu"]], "calculate_cosine_similarity() (in module autorag.evaluate.metric.util)": [[5, "autorag.evaluate.metric.util.calculate_cosine_similarity"]], "g_eval() (in module autorag.evaluate.metric.generation)": [[5, "autorag.evaluate.metric.generation.g_eval"]], "generation_metric() (in module autorag.evaluate.metric.generation)": [[5, "autorag.evaluate.metric.generation.generation_metric"]], "huggingface_evaluate() (in module autorag.evaluate.metric.generation)": [[5, "autorag.evaluate.metric.generation.huggingface_evaluate"]], "meteor() (in module autorag.evaluate.metric.generation)": [[5, "autorag.evaluate.metric.generation.meteor"]], "retrieval_contents_metric() (in module autorag.evaluate.metric.retrieval_contents)": [[5, "autorag.evaluate.metric.retrieval_contents.retrieval_contents_metric"]], "retrieval_f1() (in module autorag.evaluate.metric.retrieval)": [[5, "autorag.evaluate.metric.retrieval.retrieval_f1"]], "retrieval_metric() (in module autorag.evaluate.metric.retrieval)": [[5, "autorag.evaluate.metric.retrieval.retrieval_metric"]], "retrieval_precision() (in module autorag.evaluate.metric.retrieval)": [[5, "autorag.evaluate.metric.retrieval.retrieval_precision"]], "retrieval_recall() (in module autorag.evaluate.metric.retrieval)": [[5, "autorag.evaluate.metric.retrieval.retrieval_recall"]], "retrieval_token_f1() (in module autorag.evaluate.metric.retrieval_contents)": [[5, "autorag.evaluate.metric.retrieval_contents.retrieval_token_f1"]], "retrieval_token_precision() (in module autorag.evaluate.metric.retrieval_contents)": [[5, "autorag.evaluate.metric.retrieval_contents.retrieval_token_precision"]], "retrieval_token_recall() (in module autorag.evaluate.metric.retrieval_contents)": [[5, "autorag.evaluate.metric.retrieval_contents.retrieval_token_recall"]], "rouge() (in module autorag.evaluate.metric.generation)": [[5, "autorag.evaluate.metric.generation.rouge"]], "sem_score() (in module autorag.evaluate.metric.generation)": [[5, "autorag.evaluate.metric.generation.sem_score"]], "single_token_f1() (in module autorag.evaluate.metric.retrieval_contents)": [[5, "autorag.evaluate.metric.retrieval_contents.single_token_f1"]], "autorag.nodes": [[6, "module-autorag.nodes"]], "autorag.nodes.generator": [[7, "module-autorag.nodes.generator"]], "autorag.nodes.generator.base": [[7, "module-autorag.nodes.generator.base"]], "autorag.nodes.generator.llama_index_llm": [[7, "module-autorag.nodes.generator.llama_index_llm"]], "autorag.nodes.generator.run": [[7, "module-autorag.nodes.generator.run"]], "evaluate_generator_node() (in module autorag.nodes.generator.run)": [[7, "autorag.nodes.generator.run.evaluate_generator_node"]], "generator_node() (in module autorag.nodes.generator.base)": [[7, "autorag.nodes.generator.base.generator_node"]], "llama_index_llm() (in module autorag.nodes.generator.llama_index_llm)": [[7, "autorag.nodes.generator.llama_index_llm.llama_index_llm"]], "run_generator_node() (in module autorag.nodes.generator.run)": [[7, "autorag.nodes.generator.run.run_generator_node"]], "autorag.nodes.passagecompressor": [[8, "module-autorag.nodes.passagecompressor"]], "autorag.nodes.passagecompressor.base": [[8, "module-autorag.nodes.passagecompressor.base"]], "autorag.nodes.passagecompressor.pass_compressor": [[8, "module-autorag.nodes.passagecompressor.pass_compressor"]], "autorag.nodes.passagecompressor.run": [[8, "module-autorag.nodes.passagecompressor.run"]], "autorag.nodes.passagecompressor.tree_summarize": [[8, "module-autorag.nodes.passagecompressor.tree_summarize"]], "evaluate_passage_compressor_node() (in module autorag.nodes.passagecompressor.run)": [[8, "autorag.nodes.passagecompressor.run.evaluate_passage_compressor_node"]], "make_contents_gt() (in module autorag.nodes.passagecompressor.run)": [[8, "autorag.nodes.passagecompressor.run.make_contents_gt"]], "make_llm() (in module autorag.nodes.passagecompressor.base)": [[8, "autorag.nodes.passagecompressor.base.make_llm"]], "pass_compressor() (in module autorag.nodes.passagecompressor.pass_compressor)": [[8, "autorag.nodes.passagecompressor.pass_compressor.pass_compressor"]], "passage_compressor_node() (in module autorag.nodes.passagecompressor.base)": [[8, "autorag.nodes.passagecompressor.base.passage_compressor_node"]], "run_passage_compressor_node() (in module autorag.nodes.passagecompressor.run)": [[8, "autorag.nodes.passagecompressor.run.run_passage_compressor_node"]], "tree_summarize() (in module autorag.nodes.passagecompressor.tree_summarize)": [[8, "autorag.nodes.passagecompressor.tree_summarize.tree_summarize"]], "autorag.nodes.passagereranker": [[9, "module-autorag.nodes.passagereranker"]], "autorag.nodes.passagereranker.base": [[9, "module-autorag.nodes.passagereranker.base"]], "autorag.nodes.passagereranker.koreranker": [[9, "module-autorag.nodes.passagereranker.koreranker"]], "autorag.nodes.passagereranker.monot5": [[9, "module-autorag.nodes.passagereranker.monot5"]], "autorag.nodes.passagereranker.pass_reranker": [[9, "module-autorag.nodes.passagereranker.pass_reranker"]], "autorag.nodes.passagereranker.run": [[9, "module-autorag.nodes.passagereranker.run"]], "autorag.nodes.passagereranker.upr": [[9, "module-autorag.nodes.passagereranker.upr"]], "calculate_likelihood() (in module autorag.nodes.passagereranker.upr)": [[9, "autorag.nodes.passagereranker.upr.calculate_likelihood"]], "exp_normalize() (in module autorag.nodes.passagereranker.koreranker)": [[9, "autorag.nodes.passagereranker.koreranker.exp_normalize"]], "koreranker() (in module autorag.nodes.passagereranker.koreranker)": [[9, "autorag.nodes.passagereranker.koreranker.koreranker"]], "koreranker_pure() (in module autorag.nodes.passagereranker.koreranker)": [[9, "autorag.nodes.passagereranker.koreranker.koreranker_pure"]], "mono_t5_pure() (in module autorag.nodes.passagereranker.monot5)": [[9, "autorag.nodes.passagereranker.monot5.mono_t5_pure"]], "monot5() (in module autorag.nodes.passagereranker.monot5)": [[9, "autorag.nodes.passagereranker.monot5.monot5"]], "pass_reranker() (in module autorag.nodes.passagereranker.pass_reranker)": [[9, "autorag.nodes.passagereranker.pass_reranker.pass_reranker"]], "passage_reranker_node() (in module autorag.nodes.passagereranker.base)": [[9, "autorag.nodes.passagereranker.base.passage_reranker_node"]], "run_passage_reranker_node() (in module autorag.nodes.passagereranker.run)": [[9, "autorag.nodes.passagereranker.run.run_passage_reranker_node"]], "upr() (in module autorag.nodes.passagereranker.upr)": [[9, "autorag.nodes.passagereranker.upr.upr"]], "upr_pure() (in module autorag.nodes.passagereranker.upr)": [[9, "autorag.nodes.passagereranker.upr.upr_pure"]], "enct5forsequenceclassification (class in autorag.nodes.passagereranker.tart.modeling_enc_t5)": [[10, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification"]], "enct5tokenizer (class in autorag.nodes.passagereranker.tart.tokenization_enc_t5)": [[10, "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer"]], "autorag.nodes.passagereranker.tart": [[10, "module-autorag.nodes.passagereranker.tart"]], "autorag.nodes.passagereranker.tart.modeling_enc_t5": [[10, "module-autorag.nodes.passagereranker.tart.modeling_enc_t5"]], "autorag.nodes.passagereranker.tart.tart": [[10, "module-autorag.nodes.passagereranker.tart.tart"]], "autorag.nodes.passagereranker.tart.tokenization_enc_t5": [[10, "module-autorag.nodes.passagereranker.tart.tokenization_enc_t5"]], "build_inputs_with_special_tokens() (autorag.nodes.passagereranker.tart.tokenization_enc_t5.enct5tokenizer method)": [[10, "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer.build_inputs_with_special_tokens"]], "create_token_type_ids_from_sequences() (autorag.nodes.passagereranker.tart.tokenization_enc_t5.enct5tokenizer method)": [[10, "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer.create_token_type_ids_from_sequences"]], "deparallelize() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[10, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.deparallelize"]], "forward() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[10, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.forward"]], "get_encoder() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[10, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.get_encoder"]], "get_input_embeddings() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[10, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.get_input_embeddings"]], "get_special_tokens_mask() (autorag.nodes.passagereranker.tart.tokenization_enc_t5.enct5tokenizer method)": [[10, "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer.get_special_tokens_mask"]], "parallelize() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[10, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.parallelize"]], "set_input_embeddings() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[10, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.set_input_embeddings"]], "tart() (in module autorag.nodes.passagereranker.tart.tart)": [[10, "autorag.nodes.passagereranker.tart.tart.tart"]], "tart_pure() (in module autorag.nodes.passagereranker.tart.tart)": [[10, "autorag.nodes.passagereranker.tart.tart.tart_pure"]], "autorag.nodes.promptmaker": [[11, "module-autorag.nodes.promptmaker"]], "autorag.nodes.promptmaker.base": [[11, "module-autorag.nodes.promptmaker.base"]], "autorag.nodes.promptmaker.fstring": [[11, "module-autorag.nodes.promptmaker.fstring"]], "autorag.nodes.promptmaker.run": [[11, "module-autorag.nodes.promptmaker.run"]], "evaluate_generator_result() (in module autorag.nodes.promptmaker.run)": [[11, "autorag.nodes.promptmaker.run.evaluate_generator_result"]], "evaluate_one_prompt_maker_node() (in module autorag.nodes.promptmaker.run)": [[11, "autorag.nodes.promptmaker.run.evaluate_one_prompt_maker_node"]], "fstring() (in module autorag.nodes.promptmaker.fstring)": [[11, "autorag.nodes.promptmaker.fstring.fstring"]], "make_generator_callable_params() (in module autorag.nodes.promptmaker.run)": [[11, "autorag.nodes.promptmaker.run.make_generator_callable_params"]], "prompt_maker_node() (in module autorag.nodes.promptmaker.base)": [[11, "autorag.nodes.promptmaker.base.prompt_maker_node"]], "run_prompt_maker_node() (in module autorag.nodes.promptmaker.run)": [[11, "autorag.nodes.promptmaker.run.run_prompt_maker_node"]], "autorag.nodes.queryexpansion": [[12, "module-autorag.nodes.queryexpansion"]], "autorag.nodes.queryexpansion.base": [[12, "module-autorag.nodes.queryexpansion.base"]], "autorag.nodes.queryexpansion.hyde": [[12, "module-autorag.nodes.queryexpansion.hyde"]], "autorag.nodes.queryexpansion.pass_query_expansion": [[12, "module-autorag.nodes.queryexpansion.pass_query_expansion"]], "autorag.nodes.queryexpansion.query_decompose": [[12, "module-autorag.nodes.queryexpansion.query_decompose"]], "autorag.nodes.queryexpansion.run": [[12, "module-autorag.nodes.queryexpansion.run"]], "evaluate_one_query_expansion_node() (in module autorag.nodes.queryexpansion.run)": [[12, "autorag.nodes.queryexpansion.run.evaluate_one_query_expansion_node"]], "hyde() (in module autorag.nodes.queryexpansion.hyde)": [[12, "autorag.nodes.queryexpansion.hyde.hyde"]], "hyde_pure() (in module autorag.nodes.queryexpansion.hyde)": [[12, "autorag.nodes.queryexpansion.hyde.hyde_pure"]], "make_retrieval_callable_params() (in module autorag.nodes.queryexpansion.run)": [[12, "autorag.nodes.queryexpansion.run.make_retrieval_callable_params"]], "pass_query_expansion() (in module autorag.nodes.queryexpansion.pass_query_expansion)": [[12, "autorag.nodes.queryexpansion.pass_query_expansion.pass_query_expansion"]], "query_decompose() (in module autorag.nodes.queryexpansion.query_decompose)": [[12, "autorag.nodes.queryexpansion.query_decompose.query_decompose"]], "query_decompose_pure() (in module autorag.nodes.queryexpansion.query_decompose)": [[12, "autorag.nodes.queryexpansion.query_decompose.query_decompose_pure"]], "query_expansion_node() (in module autorag.nodes.queryexpansion.base)": [[12, "autorag.nodes.queryexpansion.base.query_expansion_node"]], "run_query_expansion_node() (in module autorag.nodes.queryexpansion.run)": [[12, "autorag.nodes.queryexpansion.run.run_query_expansion_node"]], "autorag.nodes.retrieval": [[13, "module-autorag.nodes.retrieval"]], "autorag.nodes.retrieval.base": [[13, "module-autorag.nodes.retrieval.base"]], "autorag.nodes.retrieval.bm25": [[13, "module-autorag.nodes.retrieval.bm25"]], "autorag.nodes.retrieval.hybrid_cc": [[13, "module-autorag.nodes.retrieval.hybrid_cc"]], "autorag.nodes.retrieval.hybrid_rrf": [[13, "module-autorag.nodes.retrieval.hybrid_rrf"]], "autorag.nodes.retrieval.run": [[13, "module-autorag.nodes.retrieval.run"]], "autorag.nodes.retrieval.vectordb": [[13, "module-autorag.nodes.retrieval.vectordb"]], "bm25() (in module autorag.nodes.retrieval.bm25)": [[13, "autorag.nodes.retrieval.bm25.bm25"]], "bm25_ingest() (in module autorag.nodes.retrieval.bm25)": [[13, "autorag.nodes.retrieval.bm25.bm25_ingest"]], "bm25_pure() (in module autorag.nodes.retrieval.bm25)": [[13, "autorag.nodes.retrieval.bm25.bm25_pure"]], "bm25_tokenize() (in module autorag.nodes.retrieval.bm25)": [[13, "autorag.nodes.retrieval.bm25.bm25_tokenize"]], "cast_queries() (in module autorag.nodes.retrieval.base)": [[13, "autorag.nodes.retrieval.base.cast_queries"]], "cc_pure() (in module autorag.nodes.retrieval.hybrid_cc)": [[13, "autorag.nodes.retrieval.hybrid_cc.cc_pure"]], "edit_summary_df_params() (in module autorag.nodes.retrieval.run)": [[13, "autorag.nodes.retrieval.run.edit_summary_df_params"]], "evaluate_retrieval_node() (in module autorag.nodes.retrieval.run)": [[13, "autorag.nodes.retrieval.run.evaluate_retrieval_node"]], "evenly_distribute_passages() (in module autorag.nodes.retrieval.base)": [[13, "autorag.nodes.retrieval.base.evenly_distribute_passages"]], "get_hybrid_execution_times() (in module autorag.nodes.retrieval.run)": [[13, "autorag.nodes.retrieval.run.get_hybrid_execution_times"]], "get_ids_and_scores() (in module autorag.nodes.retrieval.run)": [[13, "autorag.nodes.retrieval.run.get_ids_and_scores"]], "get_module_params() (in module autorag.nodes.retrieval.run)": [[13, "autorag.nodes.retrieval.run.get_module_params"]], "hybrid_cc() (in module autorag.nodes.retrieval.hybrid_cc)": [[13, "autorag.nodes.retrieval.hybrid_cc.hybrid_cc"]], "hybrid_rrf() (in module autorag.nodes.retrieval.hybrid_rrf)": [[13, "autorag.nodes.retrieval.hybrid_rrf.hybrid_rrf"]], "load_bm25_corpus() (in module autorag.nodes.retrieval.base)": [[13, "autorag.nodes.retrieval.base.load_bm25_corpus"]], "load_chroma_collection() (in module autorag.nodes.retrieval.base)": [[13, "autorag.nodes.retrieval.base.load_chroma_collection"]], "retrieval_node() (in module autorag.nodes.retrieval.base)": [[13, "autorag.nodes.retrieval.base.retrieval_node"]], "rrf_calculate() (in module autorag.nodes.retrieval.hybrid_rrf)": [[13, "autorag.nodes.retrieval.hybrid_rrf.rrf_calculate"]], "rrf_pure() (in module autorag.nodes.retrieval.hybrid_rrf)": [[13, "autorag.nodes.retrieval.hybrid_rrf.rrf_pure"]], "run_retrieval_modules() (in module autorag.nodes.retrieval.base)": [[13, "autorag.nodes.retrieval.base.run_retrieval_modules"]], "run_retrieval_node() (in module autorag.nodes.retrieval.run)": [[13, "autorag.nodes.retrieval.run.run_retrieval_node"]], "select_result_for_hybrid() (in module autorag.nodes.retrieval.run)": [[13, "autorag.nodes.retrieval.run.select_result_for_hybrid"]], "vectordb() (in module autorag.nodes.retrieval.vectordb)": [[13, "autorag.nodes.retrieval.vectordb.vectordb"]], "vectordb_ingest() (in module autorag.nodes.retrieval.vectordb)": [[13, "autorag.nodes.retrieval.vectordb.vectordb_ingest"]], "vectordb_pure() (in module autorag.nodes.retrieval.vectordb)": [[13, "autorag.nodes.retrieval.vectordb.vectordb_pure"]], "module (class in autorag.schema.module)": [[14, "autorag.schema.module.Module"]], "node (class in autorag.schema.node)": [[14, "autorag.schema.node.Node"]], "autorag.schema": [[14, "module-autorag.schema"]], "autorag.schema.module": [[14, "module-autorag.schema.module"]], "autorag.schema.node": [[14, "module-autorag.schema.node"]], "extract_values() (in module autorag.schema.node)": [[14, "autorag.schema.node.extract_values"]], "extract_values_from_nodes() (in module autorag.schema.node)": [[14, "autorag.schema.node.extract_values_from_nodes"]], "from_dict() (autorag.schema.module.module class method)": [[14, "autorag.schema.module.Module.from_dict"]], "from_dict() (autorag.schema.node.node class method)": [[14, "autorag.schema.node.Node.from_dict"]], "get_param_combinations() (autorag.schema.node.node method)": [[14, "autorag.schema.node.Node.get_param_combinations"]], "module (autorag.schema.module.module attribute)": [[14, "autorag.schema.module.Module.module"]], "module_param (autorag.schema.module.module attribute)": [[14, "autorag.schema.module.Module.module_param"]], "module_type (autorag.schema.module.module attribute)": [[14, "autorag.schema.module.Module.module_type"]], "module_type_exists() (in module autorag.schema.node)": [[14, "autorag.schema.node.module_type_exists"]], "modules (autorag.schema.node.node attribute)": [[14, "autorag.schema.node.Node.modules"]], "node_params (autorag.schema.node.node attribute)": [[14, "autorag.schema.node.Node.node_params"]], "node_type (autorag.schema.node.node attribute)": [[14, "autorag.schema.node.Node.node_type"]], "run() (autorag.schema.node.node method)": [[14, "autorag.schema.node.Node.run"]], "run_node (autorag.schema.node.node attribute)": [[14, "autorag.schema.node.Node.run_node"]], "strategy (autorag.schema.node.node attribute)": [[14, "autorag.schema.node.Node.strategy"]], "autorag.utils": [[15, "module-autorag.utils"]], "autorag.utils.preprocess": [[15, "module-autorag.utils.preprocess"]], "autorag.utils.util": [[15, "module-autorag.utils.util"]], "cast_corpus_dataset() (in module autorag.utils.preprocess)": [[15, "autorag.utils.preprocess.cast_corpus_dataset"]], "cast_qa_dataset() (in module autorag.utils.preprocess)": [[15, "autorag.utils.preprocess.cast_qa_dataset"]], "convert_env_in_dict() (in module autorag.utils.util)": [[15, "autorag.utils.util.convert_env_in_dict"]], "convert_string_to_tuple_in_dict() (in module autorag.utils.util)": [[15, "autorag.utils.util.convert_string_to_tuple_in_dict"]], "explode() (in module autorag.utils.util)": [[15, "autorag.utils.util.explode"]], "fetch_contents() (in module autorag.utils.util)": [[15, "autorag.utils.util.fetch_contents"]], "load_summary_file() (in module autorag.utils.util)": [[15, "autorag.utils.util.load_summary_file"]], "make_combinations() (in module autorag.utils.util)": [[15, "autorag.utils.util.make_combinations"]], "normalize_string() (in module autorag.utils.util)": [[15, "autorag.utils.util.normalize_string"]], "process_batch() (in module autorag.utils.util)": [[15, "autorag.utils.util.process_batch"]], "replace_value_in_dict() (in module autorag.utils.util)": [[15, "autorag.utils.util.replace_value_in_dict"]], "result_to_dataframe() (in module autorag.utils.util)": [[15, "autorag.utils.util.result_to_dataframe"]], "validate_corpus_dataset() (in module autorag.utils.preprocess)": [[15, "autorag.utils.preprocess.validate_corpus_dataset"]], "validate_qa_dataset() (in module autorag.utils.preprocess)": [[15, "autorag.utils.preprocess.validate_qa_dataset"]]}})
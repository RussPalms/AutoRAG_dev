Search.setIndex({"docnames": ["api_spec/autorag", "api_spec/autorag.data", "api_spec/autorag.evaluate", "api_spec/autorag.evaluate.metric", "api_spec/autorag.nodes", "api_spec/autorag.nodes.generator", "api_spec/autorag.nodes.passagecompressor", "api_spec/autorag.nodes.passagereranker", "api_spec/autorag.nodes.passagereranker.tart", "api_spec/autorag.nodes.promptmaker", "api_spec/autorag.nodes.queryexpansion", "api_spec/autorag.nodes.retrieval", "api_spec/autorag.schema", "api_spec/autorag.utils", "api_spec/modules", "data_creation/tutorial", "index", "install", "modules/index", "optimization/optimization", "tutorial"], "filenames": ["api_spec/autorag.rst", "api_spec/autorag.data.rst", "api_spec/autorag.evaluate.rst", "api_spec/autorag.evaluate.metric.rst", "api_spec/autorag.nodes.rst", "api_spec/autorag.nodes.generator.rst", "api_spec/autorag.nodes.passagecompressor.rst", "api_spec/autorag.nodes.passagereranker.rst", "api_spec/autorag.nodes.passagereranker.tart.rst", "api_spec/autorag.nodes.promptmaker.rst", "api_spec/autorag.nodes.queryexpansion.rst", "api_spec/autorag.nodes.retrieval.rst", "api_spec/autorag.schema.rst", "api_spec/autorag.utils.rst", "api_spec/modules.rst", "data_creation/tutorial.md", "index.rst", "install.md", "modules/index.md", "optimization/optimization.md", "tutorial.md"], "titles": ["autorag package", "autorag.data package", "autorag.evaluate package", "autorag.evaluate.metric package", "autorag.nodes package", "autorag.nodes.generator package", "autorag.nodes.passagecompressor package", "autorag.nodes.passagereranker package", "autorag.nodes.passagereranker.tart package", "autorag.nodes.promptmaker package", "autorag.nodes.queryexpansion package", "autorag.nodes.retrieval package", "autorag.schema package", "autorag.utils package", "autorag", "Start creating your own evaluation data", "AutoRAG documentation", "Installation", "Available Module List", "How optimization works", "Tutorial"], "terms": {"data": [0, 9, 10, 11, 14], "metric": [0, 2, 5, 6, 9, 10, 11], "gener": [0, 4, 7, 9, 10, 13, 14], "retriev": [0, 4, 6, 7, 8, 9, 10, 14], "retrieval_cont": [0, 14], "evaluate_gener": [0, 2], "evaluate_retriev": [0, 2], "evaluate_retrieval_cont": [0, 2], "node": [0, 13, 14], "base": [0, 3, 4, 8, 12], "llama_index_llm": [0, 4, 9], "run": [0, 4, 8, 12, 14], "passagecompressor": [0, 4], "tree_summar": [0, 4], "passagererank": [0, 4], "monot5": [0, 4], "upr": [0, 4], "promptmak": [0, 4], "fstring": [0, 4], "queryexpans": [0, 4], "hyde": [0, 4], "query_decompos": [0, 4], "bm25": [0, 4, 10], "hybrid_cc": [0, 4], "hybrid_rrf": [0, 4], "vectordb": [0, 4, 10], "schema": [0, 14], "from_dict": [0, 12], "module_param": [0, 5, 6, 7, 9, 10, 11, 12, 13], "module_typ": [0, 9, 10, 12], "get_param_combin": [0, 12], "node_param": [0, 12], "node_typ": [0, 9, 12], "run_nod": [0, 12], "extract_valu": [0, 12], "extract_values_from_nod": [0, 12], "module_type_exist": [0, 12], "util": [0, 14], "preprocess": [0, 14], "cast_corpus_dataset": [0, 13], "cast_qa_dataset": [0, 13], "validate_corpus_dataset": [0, 13], "validate_qa_dataset": [0, 13], "convert_string_to_tuple_in_dict": [0, 13], "explod": [0, 13], "fetch_cont": [0, 13], "find_best_result_path": [0, 13], "load_summary_fil": [0, 13], "make_combin": [0, 13], "normalize_str": [0, 13], "process_batch": [0, 13], "replace_value_in_dict": [0, 13], "result_to_datafram": [0, 13], "class": [0, 8, 12], "runner": [0, 14], "config": [0, 8, 9], "dict": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13], "project_dir": [0, 9, 10, 11], "str": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13], "none": [0, 6, 8, 13], "sourc": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13], "object": [0, 12], "classmethod": [0, 12], "from_trial_fold": [0, 14], "trial_path": 0, "load": [0, 11, 13], "from": [0, 3, 5, 7, 8, 9, 10, 11, 12, 13], "trial": 0, "folder": 0, "must": [0, 3, 6, 7, 9, 11, 13], "alreadi": [0, 8, 11], "us": [0, 5, 6, 7, 8, 9, 10, 11], "It": [0, 3, 5, 6, 7, 9, 11, 12, 13], "set": [0, 5, 6, 7, 8, 9, 11], "parent": 0, "directori": [0, 5, 6, 7, 9, 10, 11, 13], "paramet": [0, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13], "The": [0, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13], "path": [0, 7, 13], "return": [0, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13], "initi": [0, 7, 8, 10], "from_yaml": [0, 14], "yaml_path": 0, "yaml": [0, 9], "file": [0, 3, 7, 9, 11, 13], "extract": [0, 12], "extract_best_config": [0, 14], "method": [0, 8, 11, 12], "queri": [0, 6, 7, 8, 9, 10, 11, 14], "result_column": [0, 14], "generated_text": 0, "pipelin": 0, "start": [0, 13], "singl": [0, 8, 13], "so": [0, 6, 11], "first": [0, 5, 11], "query_expans": [0, 10], "user": 0, "result": [0, 3, 5, 6, 7, 9, 10, 11, 13], "column": [0, 5, 6, 7, 9, 11, 13], "name": [0, 7, 11], "answer": [0, 8, 9, 10], "default": [0, 6, 7, 8, 9, 10, 11, 13], "i": [0, 5, 6, 7, 8, 9, 10, 11, 13], "which": [0, 3, 5, 8, 9, 10, 11, 13], "output": [0, 6, 7], "run_api_serv": [0, 14], "host": 0, "0": [0, 8, 11], "port": 0, "int": [0, 5, 6, 7, 8, 10, 11, 13], "8000": 0, "kwarg": [0, 6, 8], "api": [0, 11], "server": 0, "you": [0, 5, 6, 7, 8, 9, 11, 12, 13], "can": [0, 3, 6, 7, 8, 9, 13], "send": 0, "post": 0, "request": 0, "http": [0, 6, 7, 8, 10], "json": 0, "bodi": 0, "like": [0, 9, 10, 11], "below": 0, "your": 0, "And": [0, 5, 10, 11], "respons": 0, "other": [0, 5, 11, 13], "argument": [0, 13], "uvicorn": 0, "runnerinput": [0, 14], "basemodel": 0, "output_path": 0, "optim": 0, "want": [0, 6, 8, 9, 11, 12, 13], "save": [0, 5], "yml": 0, "If": [0, 6, 7, 8, 9, 10, 13], "doe": [0, 5, 8, 11], "just": [0, 11], "valu": [0, 8, 12, 13], "dictionari": [0, 11, 13], "extract_node_line_nam": [0, 14], "config_dict": 0, "list": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13], "line": [0, 5, 6, 7, 9, 10, 11], "given": [0, 8, 11], "order": 0, "configur": 0, "thi": [0, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13], "access": 0, "trail_fold": 0, "extract_node_strategi": [0, 14], "type": [0, 8, 9, 11, 12, 13], "its": [0, 6, 9, 11, 12], "kei": [0, 3, 12, 13], "summary_df_to_yaml": [0, 14], "summary_df": [0, 11], "datafram": [0, 5, 6, 7, 9, 10, 11, 12, 13], "convert": [0, 13], "summari": [0, 5, 11, 13], "qa_data_path": 0, "corpus_data_path": 0, "start_trial": [0, 14], "make_node_lin": [0, 14], "node_line_dict": 0, "make": [0, 7, 8, 9, 11, 13], "param": [0, 7, 8, 9, 10, 13], "get": [0, 5, 11], "input": [0, 5, 8, 10, 11], "insid": 0, "run_node_lin": [0, 14], "node_line_dir": [0, 5, 6, 7, 9, 10, 11, 12], "previous_result": [0, 5, 6, 7, 9, 10, 11, 12], "whole": 0, "each": [0, 10, 11, 12, 13], "A": [0, 3, 5, 8, 9, 11, 13], "": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13], "previou": [0, 5, 6, 7, 9, 10, 11], "qa": [0, 9, 10, 11], "parquet": [0, 11], "final": 0, "avoid_empty_result": [0, 14], "return_index": 0, "decor": [0, 13], "avoid": 0, "empti": [0, 6], "function": [0, 6, 8, 9, 11, 12, 13], "when": [0, 6, 7, 8, 9, 10], "func": [0, 3, 5, 6, 7, 9, 10, 11], "an": [0, 6, 11], "origin": 0, "tupl": [0, 5, 7, 8, 11, 12, 13], "check": [0, 12], "all": [0, 8, 10, 13], "keep": [0, 13], "index": [0, 5, 6, 13], "filter_by_threshold": [0, 14], "threshold": 0, "metadata": 0, "filter": 0, "have": [0, 11, 13], "same": [0, 10, 11, 13], "length": [0, 6, 11, 13], "even": 0, "did": 0, "give": 0, "measure_spe": [0, 14], "arg": [0, 8], "measur": 0, "execut": [0, 11, 13], "speed": [0, 7], "select_best_averag": [0, 14], "iter": 0, "ani": [0, 8, 13], "select": [0, 5, 6, 7, 9, 10, 11], "best": [0, 5, 6, 7, 9, 10, 11, 13], "averag": 0, "among": [0, 5, 6, 7, 9, 10, 11], "pd": [0, 13], "standard": 0, "one": [0, 6, 7, 8, 9, 13], "dynamically_find_funct": [0, 14], "target_dict": [0, 13], "callabl": [0, 5, 6, 7, 9, 10, 11, 12], "get_support_modul": [0, 14], "module_nam": [0, 11], "get_support_nod": [0, 14], "node_nam": 0, "handle_except": [0, 14], "exc_typ": 0, "exc_valu": 0, "exc_traceback": 0, "bleu": [2, 3], "generation_metr": [2, 3], "huggingface_evalu": [2, 3], "meteor": [2, 3], "roug": [2, 3], "retrieval_f1": [2, 3, 10], "retrieval_metr": [2, 3], "retrieval_precis": [2, 3], "retrieval_recal": [2, 3, 10], "retrieval_contents_metr": [2, 3], "retrieval_token_f1": [2, 3], "retrieval_token_precis": [2, 3], "retrieval_token_recal": [2, 3], "single_token_f1": [2, 3], "generation_gt": [2, 3, 5, 9], "retrieval_gt": [2, 10, 11], "gt": 3, "pred": 3, "float": [3, 5, 7, 8, 11], "comput": [3, 7, 8], "score": [3, 6, 7, 8, 11], "instanc": [3, 5, 6, 8, 11], "huggingfac": [3, 10], "ground": [3, 11], "truth": [3, 11], "2": [3, 10, 11], "d": [3, 11, 13], "string": [3, 9, 11, 13], "llm": [3, 5, 6, 10], "becaus": [3, 7, 9, 11], "multipl": [3, 9, 10, 11], "f1": 3, "id": [3, 5, 6, 7, 8, 11, 13], "contain": [3, 5, 6, 7, 8, 9, 10, 11, 13], "connect": 3, "between": 3, "predict": [3, 7], "mean": [3, 6, 7, 13], "calcul": 3, "item": 3, "ground_truth": 3, "submodul": [4, 14], "generator_nod": [4, 5], "evaluate_generator_nod": [4, 5], "run_generator_nod": [4, 5], "make_llm": [4, 6], "passage_compressor_nod": [4, 6], "evaluate_passage_compressor_nod": [4, 6], "make_contents_gt": [4, 6], "run_passage_compressor_nod": [4, 6], "tart": [4, 7], "modeling_enc_t5": [4, 7], "tokenization_enc_t5": [4, 7], "passage_reranker_nod": [4, 7], "mono_t5_pur": [4, 7], "run_passage_reranker_nod": [4, 7], "calculate_likelihood": [4, 7], "upr_pur": [4, 7], "prompt_maker_nod": [4, 9], "evaluate_generator_result": [4, 9], "evaluate_one_prompt_maker_nod": [4, 9], "make_generator_callable_param": [4, 9], "run_prompt_maker_nod": [4, 9], "query_expansion_nod": [4, 10], "hyde_pur": [4, 10], "query_decompose_pur": [4, 10], "evaluate_one_query_expansion_nod": [4, 10], "make_retrieval_callable_param": [4, 10], "run_query_expansion_nod": [4, 10], "cast_queri": [4, 11], "evenly_distribute_passag": [4, 11], "load_bm25_corpu": [4, 11], "load_chroma_collect": [4, 11], "retrieval_nod": [4, 11], "run_retrieval_modul": [4, 11], "bm25_ingest": [4, 11], "bm25_pure": [4, 11], "bm25_token": [4, 11], "cc_pure": [4, 11], "rrf_calcul": [4, 11], "rrf_pure": [4, 11], "edit_summary_df_param": [4, 11], "evaluate_retrieval_nod": [4, 11], "get_hybrid_execution_tim": [4, 11], "get_ids_and_scor": [4, 11], "get_module_param": [4, 11], "run_retrieval_nod": [4, 11], "select_result_for_hybrid": [4, 11], "vectordb_ingest": [4, 11], "vectordb_pur": [4, 11], "prompt": [5, 6, 7, 9, 10], "basellm": [5, 6, 10], "batch": [5, 6, 10, 11, 13], "16": [5, 6, 7, 10], "llama": [5, 6], "text": [5, 6, 7, 13], "right": 5, "log": 5, "prob": 5, "pseudo": 5, "meant": 5, "size": [5, 6, 7, 10], "low": [5, 6], "face": [5, 6], "some": [5, 6], "error": [5, 6, 10, 11], "three": 5, "element": [5, 11, 12], "second": [5, 8], "token": [5, 7, 8, 11], "gpt2token": 5, "third": 5, "result_df": [5, 6, 9, 11], "strategi": [5, 6, 7, 9, 10, 11, 12, 14], "evalu": [5, 6, 7, 9, 10, 11, 13, 14], "includ": 5, "everi": [5, 8], "could": [5, 6, 7, 9, 11], "maker": [5, 9], "llm_name": 6, "retrieval_contents_gt": 6, "qa_data": 6, "corpus_data": [6, 11, 13], "passag": [6, 7, 8, 9, 10, 11], "compressor": 6, "rerank": [6, 7, 8], "retrieved_cont": [6, 7, 9, 11], "retrieved_id": [6, 7, 11], "retrieve_scor": [6, 7, 11], "In": [6, 7, 10], "we": [6, 7], "skip": [6, 7, 9], "onli": [6, 7, 9, 13], "replac": [6, 13], "compress": 6, "chat_prompt": 6, "context_window": 6, "num_output": 6, "1": [6, 8, 10, 11, 13], "recurs": [6, 13], "merg": 6, "summar": 6, "them": [6, 8, 9, 10, 11], "bottom": 6, "up": 6, "fashion": 6, "wrapper": 6, "llama_index": 6, "response_synthes": 6, "treesummar": 6, "For": [6, 11], "more": [6, 7, 10, 11], "inform": [6, 11], "visit": [6, 11], "doc": 6, "llamaindex": 6, "ai": 6, "en": 6, "latest": 6, "exampl": [6, 10, 11], "html": 6, "do": 6, "pass": [6, 8, 9], "templat": 6, "chat": 6, "should": [6, 8], "instead": [6, 7, 8], "At": 6, "specifi": 6, "where": 6, "put": 6, "context_str": 6, "query_str": 6, "normal": [6, 11], "context": [6, 7], "window": 6, "amount": 6, "enct5forsequenceclassif": [7, 8], "deparallel": [7, 8], "forward": [7, 8], "get_encod": [7, 8], "get_input_embed": [7, 8], "parallel": [7, 8, 11], "set_input_embed": [7, 8], "tart_pur": [7, 8], "enct5token": [7, 8], "build_inputs_with_special_token": [7, 8], "create_token_type_ids_from_sequ": [7, 8], "get_special_tokens_mask": [7, 8], "async": [7, 8, 10, 11, 13], "top_k": [7, 8, 10, 11], "model": [7, 8, 9, 10, 11], "devic": 7, "token_false_id": 7, "token_true_id": 7, "relev": [7, 8, 10], "rank": [7, 8, 11], "gpu": 7, "avail": 7, "otherwis": 7, "cpu": 7, "repres": 7, "fals": [7, 8], "true": [7, 12], "contents_list": [7, 8], "scores_list": [7, 8], "ids_list": [7, 8], "model_nam": 7, "castorini": 7, "3b": 7, "msmarco": 7, "10k": 7, "number": [7, 8, 10, 11, 13], "note": [7, 8], "creat": [7, 8, 10], "store": 7, "twist": 7, "therefor": [7, 8], "receiv": 7, "_": 7, "prefix_prompt": 7, "suffix_prompt": 7, "shard_siz": 7, "use_bf16": 7, "bool": [7, 8, 12], "pleas": [7, 10, 11], "write": [7, 10], "question": [7, 8, 9, 10], "github": [7, 8], "com": [7, 8], "devsinghsachan": 7, "unsupervis": 7, "languag": [7, 10], "likelihood": 7, "t5": [7, 8], "larg": 7, "shard": 7, "larger": 7, "faster": 7, "But": 7, "consum": 7, "memori": 7, "power": 7, "whether": [7, 8], "bfloat16": 7, "prefix": 7, "serv": 7, "instruct": [7, 8], "stage": 7, "what": [7, 10], "expect": 7, "suffix": 7, "provid": 7, "cue": 7, "close": 7, "signal": 7, "how": [7, 10], "conclud": 7, "format": [7, 8], "follow": [7, 8], "end": [7, 13], "t5config": 8, "dropout": 8, "t5pretrainedmodel": 8, "input_id": 8, "attention_mask": 8, "head_mask": 8, "inputs_emb": 8, "label": [8, 10], "output_attent": 8, "output_hidden_st": 8, "return_dict": 8, "defin": 8, "perform": 8, "call": 8, "overridden": 8, "subclass": 8, "although": 8, "recip": 8, "need": [8, 10], "within": 8, "afterward": 8, "sinc": 8, "former": 8, "take": 8, "care": 8, "regist": 8, "hook": 8, "while": 8, "latter": 8, "silent": 8, "ignor": 8, "embed": [8, 11], "nn": 8, "torch": 8, "map": 8, "vocabulari": 8, "hidden": 8, "state": 8, "device_map": 8, "new_embed": 8, "find": [8, 13], "facebookresearch": 8, "tartrerank": 8, "facebook": 8, "full": 8, "flan": 8, "xl": 8, "paper": 8, "being": 8, "differ": [8, 13], "chang": 8, "through": 8, "vocab_fil": 8, "bos_token": 8, "eos_token": 8, "unk_token": 8, "unk": 8, "pad_token": 8, "pad": 8, "extra_id": 8, "100": 8, "additional_special_token": 8, "sp_model_kwarg": 8, "t5token": 8, "token_ids_0": 8, "token_ids_1": 8, "build": 8, "sequenc": 8, "pair": [8, 13], "classif": 8, "task": [8, 13], "concaten": 8, "ad": 8, "special": 8, "ha": [8, 11], "x": 8, "b": 8, "option": 8, "glossari": 8, "appropri": 8, "mask": 8, "two": [8, 11], "zero": [8, 10], "already_has_special_token": 8, "prepare_for_model": 8, "integ": 8, "rang": 8, "f": 9, "prompt_mak": 9, "read": 9, "carefulli": 9, "made": 9, "generator_func": 9, "generator_param": 9, "strategy_dict": [9, 10], "With": 9, "As": 9, "generator_modul": 9, "recommend": 9, "don": 9, "t": 9, "openai": [9, 10], "gpt": 9, "3": [9, 10], "5": [9, 10, 11], "turbo": 9, "expans": [9, 10, 11], "inspir": 10, "precis": 10, "shot": 10, "dens": [10, 11], "without": 10, "arxiv": 10, "org": 10, "pdf": 10, "2212": 10, "10496": 10, "hypothet": 10, "decompos": 10, "self": 10, "sub": 10, "decomposit": 10, "n": 10, "hamlet": 10, "common": [10, 11], "imdb": 10, "than": [10, 11], "comedi": 10, "mani": 10, "ar": [10, 13], "bird": 10, "import": 10, "badminton": 10, "legal": 10, "licens": 10, "child": 10, "drive": 10, "merced": 10, "benz": 10, "emploi": 10, "u": 10, "minimum": 10, "ag": 10, "someon": 10, "4": 10, "cucumb": 10, "textur": 10, "hydrogen": 10, "atom": 10, "squar": 10, "exce": 10, "spice": 10, "girl": 10, "6": 10, "littl": 10, "piec": 10, "come": 10, "viscond": 10, "strategyqa": 10, "few": 10, "retrieval_func": 10, "retrieval_param": 10, "expanded_queri": 10, "look": [10, 11], "50": 10, "retrieval_modul": 10, "embedding_model": [10, 11], "combin": [10, 11, 12, 13], "choos": 10, "wai": 10, "case": 10, "would": 10, "bm25_path": 11, "db_path": 11, "collection_nam": 11, "collect": [11, 13], "resourc": 11, "corpu": 11, "panda": 11, "bm25_corpu": 11, "pickl": 11, "ingest": 11, "row": 11, "doc_id": 11, "Its": 11, "structur": 11, "2d": 11, "passage_id": 11, "corpus_path": 11, "bm25_api": 11, "bm25okapi": 11, "usag": 11, "weight": 11, "hybrid": 11, "cc": 11, "convex": 11, "fuse": 11, "To": 11, "uniqu": 11, "realli": 11, "befor": 11, "plu": 11, "sum": 11, "rrf_k": 11, "60": 11, "rrf": 11, "reciproc": 11, "fusion": 11, "spars": 11, "hyperparamet": 11, "our": 11, "document": 11, "target_modul": 11, "target_module_param": 11, "dataset": [11, 13], "node_dir": [11, 13], "filenam": 11, "csv": 11, "target": [11, 13], "baseembed": 11, "128": 11, "chroma": 11, "emb": 11, "process": [11, 13], "prevent": 11, "vector_db": 11, "module_dict": 12, "node_dict": 12, "also": 12, "correspond": 12, "remov": [12, 13], "duplic": 12, "automat": 12, "exist": 12, "df": 13, "index_valu": 13, "explode_valu": 13, "flatten": 13, "filepath": 13, "summary_path": 13, "dict_column": 13, "fill": 13, "properli": 13, "taken": 13, "offici": 13, "script": 13, "v1": 13, "squad": 13, "lower": 13, "punctuat": 13, "articl": 13, "extra": 13, "whitespac": 13, "batch_siz": 13, "64": 13, "asynchron": 13, "coroutin": 13, "replace_valu": 13, "certain": 13, "column_nam": 13, "packag": 14, "subpackag": 14, "modul": 14, "content": 14, "deploi": 14, "node_lin": 14, "support": 14}, "objects": {"": [[0, 0, 0, "-", "autorag"]], "autorag": [[1, 0, 0, "-", "data"], [0, 0, 0, "-", "deploy"], [2, 0, 0, "-", "evaluate"], [0, 0, 0, "-", "evaluator"], [0, 4, 1, "", "handle_exception"], [0, 0, 0, "-", "node_line"], [4, 0, 0, "-", "nodes"], [12, 0, 0, "-", "schema"], [0, 0, 0, "-", "strategy"], [0, 0, 0, "-", "support"], [13, 0, 0, "-", "utils"]], "autorag.deploy": [[0, 1, 1, "", "Runner"], [0, 1, 1, "", "RunnerInput"], [0, 4, 1, "", "extract_best_config"], [0, 4, 1, "", "extract_node_line_names"], [0, 4, 1, "", "extract_node_strategy"], [0, 4, 1, "", "summary_df_to_yaml"]], "autorag.deploy.Runner": [[0, 2, 1, "", "from_trial_folder"], [0, 2, 1, "", "from_yaml"], [0, 2, 1, "", "run"], [0, 2, 1, "", "run_api_server"]], "autorag.deploy.RunnerInput": [[0, 3, 1, "", "query"], [0, 3, 1, "", "result_column"]], "autorag.evaluate": [[2, 0, 0, "-", "generation"], [3, 0, 0, "-", "metric"], [2, 0, 0, "-", "retrieval"], [2, 0, 0, "-", "retrieval_contents"]], "autorag.evaluate.generation": [[2, 4, 1, "", "evaluate_generation"]], "autorag.evaluate.metric": [[3, 0, 0, "-", "generation"], [3, 0, 0, "-", "retrieval"], [3, 0, 0, "-", "retrieval_contents"]], "autorag.evaluate.metric.generation": [[3, 4, 1, "", "bleu"], [3, 4, 1, "", "generation_metric"], [3, 4, 1, "", "huggingface_evaluate"], [3, 4, 1, "", "meteor"], [3, 4, 1, "", "rouge"]], "autorag.evaluate.metric.retrieval": [[3, 4, 1, "", "retrieval_f1"], [3, 4, 1, "", "retrieval_metric"], [3, 4, 1, "", "retrieval_precision"], [3, 4, 1, "", "retrieval_recall"]], "autorag.evaluate.metric.retrieval_contents": [[3, 4, 1, "", "retrieval_contents_metric"], [3, 4, 1, "", "retrieval_token_f1"], [3, 4, 1, "", "retrieval_token_precision"], [3, 4, 1, "", "retrieval_token_recall"], [3, 4, 1, "", "single_token_f1"]], "autorag.evaluate.retrieval": [[2, 4, 1, "", "evaluate_retrieval"]], "autorag.evaluate.retrieval_contents": [[2, 4, 1, "", "evaluate_retrieval_contents"]], "autorag.evaluator": [[0, 1, 1, "", "Evaluator"]], "autorag.evaluator.Evaluator": [[0, 2, 1, "", "start_trial"]], "autorag.node_line": [[0, 4, 1, "", "make_node_lines"], [0, 4, 1, "", "run_node_line"]], "autorag.nodes": [[5, 0, 0, "-", "generator"], [6, 0, 0, "-", "passagecompressor"], [7, 0, 0, "-", "passagereranker"], [9, 0, 0, "-", "promptmaker"], [10, 0, 0, "-", "queryexpansion"], [11, 0, 0, "-", "retrieval"]], "autorag.nodes.generator": [[5, 0, 0, "-", "base"], [5, 0, 0, "-", "llama_index_llm"], [5, 0, 0, "-", "run"]], "autorag.nodes.generator.base": [[5, 4, 1, "", "generator_node"]], "autorag.nodes.generator.llama_index_llm": [[5, 4, 1, "", "llama_index_llm"]], "autorag.nodes.generator.run": [[5, 4, 1, "", "evaluate_generator_node"], [5, 4, 1, "", "run_generator_node"]], "autorag.nodes.passagecompressor": [[6, 0, 0, "-", "base"], [6, 0, 0, "-", "run"], [6, 0, 0, "-", "tree_summarize"]], "autorag.nodes.passagecompressor.base": [[6, 4, 1, "", "make_llm"], [6, 4, 1, "", "passage_compressor_node"]], "autorag.nodes.passagecompressor.run": [[6, 4, 1, "", "evaluate_passage_compressor_node"], [6, 4, 1, "", "make_contents_gt"], [6, 4, 1, "", "run_passage_compressor_node"]], "autorag.nodes.passagecompressor.tree_summarize": [[6, 4, 1, "", "tree_summarize"]], "autorag.nodes.passagereranker": [[7, 0, 0, "-", "base"], [7, 0, 0, "-", "monot5"], [7, 0, 0, "-", "run"], [8, 0, 0, "-", "tart"], [7, 0, 0, "-", "upr"]], "autorag.nodes.passagereranker.base": [[7, 4, 1, "", "passage_reranker_node"]], "autorag.nodes.passagereranker.monot5": [[7, 4, 1, "", "mono_t5_pure"], [7, 4, 1, "", "monot5"]], "autorag.nodes.passagereranker.run": [[7, 4, 1, "", "run_passage_reranker_node"]], "autorag.nodes.passagereranker.tart": [[8, 0, 0, "-", "modeling_enc_t5"], [8, 0, 0, "-", "tart"], [8, 0, 0, "-", "tokenization_enc_t5"]], "autorag.nodes.passagereranker.tart.modeling_enc_t5": [[8, 1, 1, "", "EncT5ForSequenceClassification"]], "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification": [[8, 2, 1, "", "deparallelize"], [8, 2, 1, "", "forward"], [8, 2, 1, "", "get_encoder"], [8, 2, 1, "", "get_input_embeddings"], [8, 2, 1, "", "parallelize"], [8, 2, 1, "", "set_input_embeddings"]], "autorag.nodes.passagereranker.tart.tart": [[8, 4, 1, "", "tart"], [8, 4, 1, "", "tart_pure"]], "autorag.nodes.passagereranker.tart.tokenization_enc_t5": [[8, 1, 1, "", "EncT5Tokenizer"]], "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer": [[8, 2, 1, "", "build_inputs_with_special_tokens"], [8, 2, 1, "", "create_token_type_ids_from_sequences"], [8, 2, 1, "", "get_special_tokens_mask"]], "autorag.nodes.passagereranker.upr": [[7, 4, 1, "", "calculate_likelihood"], [7, 4, 1, "", "upr"], [7, 4, 1, "", "upr_pure"]], "autorag.nodes.promptmaker": [[9, 0, 0, "-", "base"], [9, 0, 0, "-", "fstring"], [9, 0, 0, "-", "run"]], "autorag.nodes.promptmaker.base": [[9, 4, 1, "", "prompt_maker_node"]], "autorag.nodes.promptmaker.fstring": [[9, 4, 1, "", "fstring"]], "autorag.nodes.promptmaker.run": [[9, 4, 1, "", "evaluate_generator_result"], [9, 4, 1, "", "evaluate_one_prompt_maker_node"], [9, 4, 1, "", "make_generator_callable_params"], [9, 4, 1, "", "run_prompt_maker_node"]], "autorag.nodes.queryexpansion": [[10, 0, 0, "-", "base"], [10, 0, 0, "-", "hyde"], [10, 0, 0, "-", "query_decompose"], [10, 0, 0, "-", "run"]], "autorag.nodes.queryexpansion.base": [[10, 4, 1, "", "query_expansion_node"]], "autorag.nodes.queryexpansion.hyde": [[10, 4, 1, "", "hyde"], [10, 4, 1, "", "hyde_pure"]], "autorag.nodes.queryexpansion.query_decompose": [[10, 4, 1, "", "query_decompose"], [10, 4, 1, "", "query_decompose_pure"]], "autorag.nodes.queryexpansion.run": [[10, 4, 1, "", "evaluate_one_query_expansion_node"], [10, 4, 1, "", "make_retrieval_callable_params"], [10, 4, 1, "", "run_query_expansion_node"]], "autorag.nodes.retrieval": [[11, 0, 0, "-", "base"], [11, 0, 0, "-", "bm25"], [11, 0, 0, "-", "hybrid_cc"], [11, 0, 0, "-", "hybrid_rrf"], [11, 0, 0, "-", "run"], [11, 0, 0, "-", "vectordb"]], "autorag.nodes.retrieval.base": [[11, 4, 1, "", "cast_queries"], [11, 4, 1, "", "evenly_distribute_passages"], [11, 4, 1, "", "load_bm25_corpus"], [11, 4, 1, "", "load_chroma_collection"], [11, 4, 1, "", "retrieval_node"], [11, 4, 1, "", "run_retrieval_modules"]], "autorag.nodes.retrieval.bm25": [[11, 4, 1, "", "bm25"], [11, 4, 1, "", "bm25_ingest"], [11, 4, 1, "", "bm25_pure"], [11, 4, 1, "", "bm25_tokenize"]], "autorag.nodes.retrieval.hybrid_cc": [[11, 4, 1, "", "cc_pure"], [11, 4, 1, "", "hybrid_cc"]], "autorag.nodes.retrieval.hybrid_rrf": [[11, 4, 1, "", "hybrid_rrf"], [11, 4, 1, "", "rrf_calculate"], [11, 4, 1, "", "rrf_pure"]], "autorag.nodes.retrieval.run": [[11, 4, 1, "", "edit_summary_df_params"], [11, 4, 1, "", "evaluate_retrieval_node"], [11, 4, 1, "", "get_hybrid_execution_times"], [11, 4, 1, "", "get_ids_and_scores"], [11, 4, 1, "", "get_module_params"], [11, 4, 1, "", "run_retrieval_node"], [11, 4, 1, "", "select_result_for_hybrid"]], "autorag.nodes.retrieval.vectordb": [[11, 4, 1, "", "vectordb"], [11, 4, 1, "", "vectordb_ingest"], [11, 4, 1, "", "vectordb_pure"]], "autorag.schema": [[12, 0, 0, "-", "module"], [12, 0, 0, "-", "node"]], "autorag.schema.module": [[12, 1, 1, "", "Module"]], "autorag.schema.module.Module": [[12, 2, 1, "", "from_dict"], [12, 3, 1, "", "module"], [12, 3, 1, "", "module_param"], [12, 3, 1, "", "module_type"]], "autorag.schema.node": [[12, 1, 1, "", "Node"], [12, 4, 1, "", "extract_values"], [12, 4, 1, "", "extract_values_from_nodes"], [12, 4, 1, "", "module_type_exists"]], "autorag.schema.node.Node": [[12, 2, 1, "", "from_dict"], [12, 2, 1, "", "get_param_combinations"], [12, 3, 1, "", "modules"], [12, 3, 1, "", "node_params"], [12, 3, 1, "", "node_type"], [12, 2, 1, "", "run"], [12, 3, 1, "", "run_node"], [12, 3, 1, "", "strategy"]], "autorag.strategy": [[0, 4, 1, "", "avoid_empty_result"], [0, 4, 1, "", "filter_by_threshold"], [0, 4, 1, "", "measure_speed"], [0, 4, 1, "", "select_best_average"]], "autorag.support": [[0, 4, 1, "", "dynamically_find_function"], [0, 4, 1, "", "get_support_modules"], [0, 4, 1, "", "get_support_nodes"]], "autorag.utils": [[13, 0, 0, "-", "preprocess"], [13, 0, 0, "-", "util"]], "autorag.utils.preprocess": [[13, 4, 1, "", "cast_corpus_dataset"], [13, 4, 1, "", "cast_qa_dataset"], [13, 4, 1, "", "validate_corpus_dataset"], [13, 4, 1, "", "validate_qa_dataset"]], "autorag.utils.util": [[13, 4, 1, "", "convert_string_to_tuple_in_dict"], [13, 4, 1, "", "explode"], [13, 4, 1, "", "fetch_contents"], [13, 4, 1, "", "find_best_result_path"], [13, 4, 1, "", "load_summary_file"], [13, 4, 1, "", "make_combinations"], [13, 4, 1, "", "normalize_string"], [13, 4, 1, "", "process_batch"], [13, 4, 1, "", "replace_value_in_dict"], [13, 4, 1, "", "result_to_dataframe"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"autorag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16], "packag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "subpackag": [0, 2, 4, 7], "submodul": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13], "deploi": 0, "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18], "evalu": [0, 2, 3, 15], "node_lin": 0, "strategi": 0, "support": 0, "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "data": [1, 15], "gener": [2, 3, 5], "retriev": [2, 3, 11], "retrieval_cont": [2, 3], "metric": 3, "node": [4, 5, 6, 7, 8, 9, 10, 11, 12], "base": [5, 6, 7, 9, 10, 11], "llama_index_llm": 5, "run": [5, 6, 7, 9, 10, 11], "passagecompressor": 6, "tree_summar": 6, "passagererank": [7, 8], "monot5": 7, "upr": 7, "tart": 8, "modeling_enc_t5": 8, "tokenization_enc_t5": 8, "promptmak": 9, "fstring": 9, "queryexpans": 10, "hyde": 10, "query_decompos": 10, "bm25": 11, "hybrid_cc": 11, "hybrid_rrf": 11, "vectordb": 11, "schema": 12, "util": 13, "preprocess": 13, "start": 15, "creat": 15, "your": 15, "own": 15, "document": 16, "instal": 17, "avail": 18, "list": 18, "how": 19, "optim": 19, "work": 19, "tutori": 20}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"autorag package": [[0, "autorag-package"]], "Subpackages": [[0, "subpackages"], [2, "subpackages"], [4, "subpackages"], [7, "subpackages"]], "Submodules": [[0, "submodules"], [2, "submodules"], [3, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"], [12, "submodules"], [13, "submodules"]], "autorag.deploy module": [[0, "module-autorag.deploy"]], "autorag.evaluator module": [[0, "module-autorag.evaluator"]], "autorag.node_line module": [[0, "module-autorag.node_line"]], "autorag.strategy module": [[0, "module-autorag.strategy"]], "autorag.support module": [[0, "module-autorag.support"]], "Module contents": [[0, "module-autorag"], [1, "module-autorag.data"], [2, "module-autorag.evaluate"], [3, "module-autorag.evaluate.metric"], [4, "module-autorag.nodes"], [5, "module-autorag.nodes.generator"], [6, "module-autorag.nodes.passagecompressor"], [7, "module-autorag.nodes.passagereranker"], [8, "module-autorag.nodes.passagereranker.tart"], [9, "module-autorag.nodes.promptmaker"], [10, "module-autorag.nodes.queryexpansion"], [11, "module-autorag.nodes.retrieval"], [12, "module-autorag.schema"], [13, "module-autorag.utils"]], "autorag.data package": [[1, "autorag-data-package"]], "autorag.evaluate package": [[2, "autorag-evaluate-package"]], "autorag.evaluate.generation module": [[2, "module-autorag.evaluate.generation"]], "autorag.evaluate.retrieval module": [[2, "module-autorag.evaluate.retrieval"]], "autorag.evaluate.retrieval_contents module": [[2, "module-autorag.evaluate.retrieval_contents"]], "autorag.evaluate.metric package": [[3, "autorag-evaluate-metric-package"]], "autorag.evaluate.metric.generation module": [[3, "module-autorag.evaluate.metric.generation"]], "autorag.evaluate.metric.retrieval module": [[3, "module-autorag.evaluate.metric.retrieval"]], "autorag.evaluate.metric.retrieval_contents module": [[3, "module-autorag.evaluate.metric.retrieval_contents"]], "autorag.nodes package": [[4, "autorag-nodes-package"]], "autorag.nodes.generator package": [[5, "autorag-nodes-generator-package"]], "autorag.nodes.generator.base module": [[5, "module-autorag.nodes.generator.base"]], "autorag.nodes.generator.llama_index_llm module": [[5, "module-autorag.nodes.generator.llama_index_llm"]], "autorag.nodes.generator.run module": [[5, "module-autorag.nodes.generator.run"]], "autorag.nodes.passagecompressor package": [[6, "autorag-nodes-passagecompressor-package"]], "autorag.nodes.passagecompressor.base module": [[6, "module-autorag.nodes.passagecompressor.base"]], "autorag.nodes.passagecompressor.run module": [[6, "module-autorag.nodes.passagecompressor.run"]], "autorag.nodes.passagecompressor.tree_summarize module": [[6, "module-autorag.nodes.passagecompressor.tree_summarize"]], "autorag.nodes.passagereranker package": [[7, "autorag-nodes-passagereranker-package"]], "autorag.nodes.passagereranker.base module": [[7, "module-autorag.nodes.passagereranker.base"]], "autorag.nodes.passagereranker.monot5 module": [[7, "module-autorag.nodes.passagereranker.monot5"]], "autorag.nodes.passagereranker.run module": [[7, "module-autorag.nodes.passagereranker.run"]], "autorag.nodes.passagereranker.upr module": [[7, "module-autorag.nodes.passagereranker.upr"]], "autorag.nodes.passagereranker.tart package": [[8, "autorag-nodes-passagereranker-tart-package"]], "autorag.nodes.passagereranker.tart.modeling_enc_t5 module": [[8, "module-autorag.nodes.passagereranker.tart.modeling_enc_t5"]], "autorag.nodes.passagereranker.tart.tart module": [[8, "module-autorag.nodes.passagereranker.tart.tart"]], "autorag.nodes.passagereranker.tart.tokenization_enc_t5 module": [[8, "module-autorag.nodes.passagereranker.tart.tokenization_enc_t5"]], "autorag.nodes.promptmaker package": [[9, "autorag-nodes-promptmaker-package"]], "autorag.nodes.promptmaker.base module": [[9, "module-autorag.nodes.promptmaker.base"]], "autorag.nodes.promptmaker.fstring module": [[9, "module-autorag.nodes.promptmaker.fstring"]], "autorag.nodes.promptmaker.run module": [[9, "module-autorag.nodes.promptmaker.run"]], "autorag.nodes.queryexpansion package": [[10, "autorag-nodes-queryexpansion-package"]], "autorag.nodes.queryexpansion.base module": [[10, "module-autorag.nodes.queryexpansion.base"]], "autorag.nodes.queryexpansion.hyde module": [[10, "module-autorag.nodes.queryexpansion.hyde"]], "autorag.nodes.queryexpansion.query_decompose module": [[10, "module-autorag.nodes.queryexpansion.query_decompose"]], "autorag.nodes.queryexpansion.run module": [[10, "module-autorag.nodes.queryexpansion.run"]], "autorag.nodes.retrieval package": [[11, "autorag-nodes-retrieval-package"]], "autorag.nodes.retrieval.base module": [[11, "module-autorag.nodes.retrieval.base"]], "autorag.nodes.retrieval.bm25 module": [[11, "module-autorag.nodes.retrieval.bm25"]], "autorag.nodes.retrieval.hybrid_cc module": [[11, "module-autorag.nodes.retrieval.hybrid_cc"]], "autorag.nodes.retrieval.hybrid_rrf module": [[11, "module-autorag.nodes.retrieval.hybrid_rrf"]], "autorag.nodes.retrieval.run module": [[11, "module-autorag.nodes.retrieval.run"]], "autorag.nodes.retrieval.vectordb module": [[11, "module-autorag.nodes.retrieval.vectordb"]], "autorag.schema package": [[12, "autorag-schema-package"]], "autorag.schema.module module": [[12, "module-autorag.schema.module"]], "autorag.schema.node module": [[12, "module-autorag.schema.node"]], "autorag.utils package": [[13, "autorag-utils-package"]], "autorag.utils.preprocess module": [[13, "module-autorag.utils.preprocess"]], "autorag.utils.util module": [[13, "module-autorag.utils.util"]], "autorag": [[14, "autorag"]], "Start creating your own evaluation data": [[15, "start-creating-your-own-evaluation-data"]], "AutoRAG documentation": [[16, "autorag-documentation"]], "Installation": [[17, "installation"]], "Available Module List": [[18, "available-module-list"]], "How optimization works": [[19, "how-optimization-works"]], "Tutorial": [[20, "tutorial"]]}, "indexentries": {"evaluator (class in autorag.evaluator)": [[0, "autorag.evaluator.Evaluator"]], "runner (class in autorag.deploy)": [[0, "autorag.deploy.Runner"]], "runnerinput (class in autorag.deploy)": [[0, "autorag.deploy.RunnerInput"]], "autorag": [[0, "module-autorag"]], "autorag.deploy": [[0, "module-autorag.deploy"]], "autorag.evaluator": [[0, "module-autorag.evaluator"]], "autorag.node_line": [[0, "module-autorag.node_line"]], "autorag.strategy": [[0, "module-autorag.strategy"]], "autorag.support": [[0, "module-autorag.support"]], "avoid_empty_result() (in module autorag.strategy)": [[0, "autorag.strategy.avoid_empty_result"]], "dynamically_find_function() (in module autorag.support)": [[0, "autorag.support.dynamically_find_function"]], "extract_best_config() (in module autorag.deploy)": [[0, "autorag.deploy.extract_best_config"]], "extract_node_line_names() (in module autorag.deploy)": [[0, "autorag.deploy.extract_node_line_names"]], "extract_node_strategy() (in module autorag.deploy)": [[0, "autorag.deploy.extract_node_strategy"]], "filter_by_threshold() (in module autorag.strategy)": [[0, "autorag.strategy.filter_by_threshold"]], "from_trial_folder() (autorag.deploy.runner class method)": [[0, "autorag.deploy.Runner.from_trial_folder"]], "from_yaml() (autorag.deploy.runner class method)": [[0, "autorag.deploy.Runner.from_yaml"]], "get_support_modules() (in module autorag.support)": [[0, "autorag.support.get_support_modules"]], "get_support_nodes() (in module autorag.support)": [[0, "autorag.support.get_support_nodes"]], "handle_exception() (in module autorag)": [[0, "autorag.handle_exception"]], "make_node_lines() (in module autorag.node_line)": [[0, "autorag.node_line.make_node_lines"]], "measure_speed() (in module autorag.strategy)": [[0, "autorag.strategy.measure_speed"]], "module": [[0, "module-autorag"], [0, "module-autorag.deploy"], [0, "module-autorag.evaluator"], [0, "module-autorag.node_line"], [0, "module-autorag.strategy"], [0, "module-autorag.support"], [1, "module-autorag.data"], [2, "module-autorag.evaluate"], [2, "module-autorag.evaluate.generation"], [2, "module-autorag.evaluate.retrieval"], [2, "module-autorag.evaluate.retrieval_contents"], [3, "module-autorag.evaluate.metric"], [3, "module-autorag.evaluate.metric.generation"], [3, "module-autorag.evaluate.metric.retrieval"], [3, "module-autorag.evaluate.metric.retrieval_contents"], [4, "module-autorag.nodes"], [5, "module-autorag.nodes.generator"], [5, "module-autorag.nodes.generator.base"], [5, "module-autorag.nodes.generator.llama_index_llm"], [5, "module-autorag.nodes.generator.run"], [6, "module-autorag.nodes.passagecompressor"], [6, "module-autorag.nodes.passagecompressor.base"], [6, "module-autorag.nodes.passagecompressor.run"], [6, "module-autorag.nodes.passagecompressor.tree_summarize"], [7, "module-autorag.nodes.passagereranker"], [7, "module-autorag.nodes.passagereranker.base"], [7, "module-autorag.nodes.passagereranker.monot5"], [7, "module-autorag.nodes.passagereranker.run"], [7, "module-autorag.nodes.passagereranker.upr"], [8, "module-autorag.nodes.passagereranker.tart"], [8, "module-autorag.nodes.passagereranker.tart.modeling_enc_t5"], [8, "module-autorag.nodes.passagereranker.tart.tart"], [8, "module-autorag.nodes.passagereranker.tart.tokenization_enc_t5"], [9, "module-autorag.nodes.promptmaker"], [9, "module-autorag.nodes.promptmaker.base"], [9, "module-autorag.nodes.promptmaker.fstring"], [9, "module-autorag.nodes.promptmaker.run"], [10, "module-autorag.nodes.queryexpansion"], [10, "module-autorag.nodes.queryexpansion.base"], [10, "module-autorag.nodes.queryexpansion.hyde"], [10, "module-autorag.nodes.queryexpansion.query_decompose"], [10, "module-autorag.nodes.queryexpansion.run"], [11, "module-autorag.nodes.retrieval"], [11, "module-autorag.nodes.retrieval.base"], [11, "module-autorag.nodes.retrieval.bm25"], [11, "module-autorag.nodes.retrieval.hybrid_cc"], [11, "module-autorag.nodes.retrieval.hybrid_rrf"], [11, "module-autorag.nodes.retrieval.run"], [11, "module-autorag.nodes.retrieval.vectordb"], [12, "module-autorag.schema"], [12, "module-autorag.schema.module"], [12, "module-autorag.schema.node"], [13, "module-autorag.utils"], [13, "module-autorag.utils.preprocess"], [13, "module-autorag.utils.util"]], "query (autorag.deploy.runnerinput attribute)": [[0, "autorag.deploy.RunnerInput.query"]], "result_column (autorag.deploy.runnerinput attribute)": [[0, "autorag.deploy.RunnerInput.result_column"]], "run() (autorag.deploy.runner method)": [[0, "autorag.deploy.Runner.run"]], "run_api_server() (autorag.deploy.runner method)": [[0, "autorag.deploy.Runner.run_api_server"]], "run_node_line() (in module autorag.node_line)": [[0, "autorag.node_line.run_node_line"]], "select_best_average() (in module autorag.strategy)": [[0, "autorag.strategy.select_best_average"]], "start_trial() (autorag.evaluator.evaluator method)": [[0, "autorag.evaluator.Evaluator.start_trial"]], "summary_df_to_yaml() (in module autorag.deploy)": [[0, "autorag.deploy.summary_df_to_yaml"]], "autorag.data": [[1, "module-autorag.data"]], "autorag.evaluate": [[2, "module-autorag.evaluate"]], "autorag.evaluate.generation": [[2, "module-autorag.evaluate.generation"]], "autorag.evaluate.retrieval": [[2, "module-autorag.evaluate.retrieval"]], "autorag.evaluate.retrieval_contents": [[2, "module-autorag.evaluate.retrieval_contents"]], "evaluate_generation() (in module autorag.evaluate.generation)": [[2, "autorag.evaluate.generation.evaluate_generation"]], "evaluate_retrieval() (in module autorag.evaluate.retrieval)": [[2, "autorag.evaluate.retrieval.evaluate_retrieval"]], "evaluate_retrieval_contents() (in module autorag.evaluate.retrieval_contents)": [[2, "autorag.evaluate.retrieval_contents.evaluate_retrieval_contents"]], "autorag.evaluate.metric": [[3, "module-autorag.evaluate.metric"]], "autorag.evaluate.metric.generation": [[3, "module-autorag.evaluate.metric.generation"]], "autorag.evaluate.metric.retrieval": [[3, "module-autorag.evaluate.metric.retrieval"]], "autorag.evaluate.metric.retrieval_contents": [[3, "module-autorag.evaluate.metric.retrieval_contents"]], "bleu() (in module autorag.evaluate.metric.generation)": [[3, "autorag.evaluate.metric.generation.bleu"]], "generation_metric() (in module autorag.evaluate.metric.generation)": [[3, "autorag.evaluate.metric.generation.generation_metric"]], "huggingface_evaluate() (in module autorag.evaluate.metric.generation)": [[3, "autorag.evaluate.metric.generation.huggingface_evaluate"]], "meteor() (in module autorag.evaluate.metric.generation)": [[3, "autorag.evaluate.metric.generation.meteor"]], "retrieval_contents_metric() (in module autorag.evaluate.metric.retrieval_contents)": [[3, "autorag.evaluate.metric.retrieval_contents.retrieval_contents_metric"]], "retrieval_f1() (in module autorag.evaluate.metric.retrieval)": [[3, "autorag.evaluate.metric.retrieval.retrieval_f1"]], "retrieval_metric() (in module autorag.evaluate.metric.retrieval)": [[3, "autorag.evaluate.metric.retrieval.retrieval_metric"]], "retrieval_precision() (in module autorag.evaluate.metric.retrieval)": [[3, "autorag.evaluate.metric.retrieval.retrieval_precision"]], "retrieval_recall() (in module autorag.evaluate.metric.retrieval)": [[3, "autorag.evaluate.metric.retrieval.retrieval_recall"]], "retrieval_token_f1() (in module autorag.evaluate.metric.retrieval_contents)": [[3, "autorag.evaluate.metric.retrieval_contents.retrieval_token_f1"]], "retrieval_token_precision() (in module autorag.evaluate.metric.retrieval_contents)": [[3, "autorag.evaluate.metric.retrieval_contents.retrieval_token_precision"]], "retrieval_token_recall() (in module autorag.evaluate.metric.retrieval_contents)": [[3, "autorag.evaluate.metric.retrieval_contents.retrieval_token_recall"]], "rouge() (in module autorag.evaluate.metric.generation)": [[3, "autorag.evaluate.metric.generation.rouge"]], "single_token_f1() (in module autorag.evaluate.metric.retrieval_contents)": [[3, "autorag.evaluate.metric.retrieval_contents.single_token_f1"]], "autorag.nodes": [[4, "module-autorag.nodes"]], "autorag.nodes.generator": [[5, "module-autorag.nodes.generator"]], "autorag.nodes.generator.base": [[5, "module-autorag.nodes.generator.base"]], "autorag.nodes.generator.llama_index_llm": [[5, "module-autorag.nodes.generator.llama_index_llm"]], "autorag.nodes.generator.run": [[5, "module-autorag.nodes.generator.run"]], "evaluate_generator_node() (in module autorag.nodes.generator.run)": [[5, "autorag.nodes.generator.run.evaluate_generator_node"]], "generator_node() (in module autorag.nodes.generator.base)": [[5, "autorag.nodes.generator.base.generator_node"]], "llama_index_llm() (in module autorag.nodes.generator.llama_index_llm)": [[5, "autorag.nodes.generator.llama_index_llm.llama_index_llm"]], "run_generator_node() (in module autorag.nodes.generator.run)": [[5, "autorag.nodes.generator.run.run_generator_node"]], "autorag.nodes.passagecompressor": [[6, "module-autorag.nodes.passagecompressor"]], "autorag.nodes.passagecompressor.base": [[6, "module-autorag.nodes.passagecompressor.base"]], "autorag.nodes.passagecompressor.run": [[6, "module-autorag.nodes.passagecompressor.run"]], "autorag.nodes.passagecompressor.tree_summarize": [[6, "module-autorag.nodes.passagecompressor.tree_summarize"]], "evaluate_passage_compressor_node() (in module autorag.nodes.passagecompressor.run)": [[6, "autorag.nodes.passagecompressor.run.evaluate_passage_compressor_node"]], "make_contents_gt() (in module autorag.nodes.passagecompressor.run)": [[6, "autorag.nodes.passagecompressor.run.make_contents_gt"]], "make_llm() (in module autorag.nodes.passagecompressor.base)": [[6, "autorag.nodes.passagecompressor.base.make_llm"]], "passage_compressor_node() (in module autorag.nodes.passagecompressor.base)": [[6, "autorag.nodes.passagecompressor.base.passage_compressor_node"]], "run_passage_compressor_node() (in module autorag.nodes.passagecompressor.run)": [[6, "autorag.nodes.passagecompressor.run.run_passage_compressor_node"]], "tree_summarize() (in module autorag.nodes.passagecompressor.tree_summarize)": [[6, "autorag.nodes.passagecompressor.tree_summarize.tree_summarize"]], "autorag.nodes.passagereranker": [[7, "module-autorag.nodes.passagereranker"]], "autorag.nodes.passagereranker.base": [[7, "module-autorag.nodes.passagereranker.base"]], "autorag.nodes.passagereranker.monot5": [[7, "module-autorag.nodes.passagereranker.monot5"]], "autorag.nodes.passagereranker.run": [[7, "module-autorag.nodes.passagereranker.run"]], "autorag.nodes.passagereranker.upr": [[7, "module-autorag.nodes.passagereranker.upr"]], "calculate_likelihood() (in module autorag.nodes.passagereranker.upr)": [[7, "autorag.nodes.passagereranker.upr.calculate_likelihood"]], "mono_t5_pure() (in module autorag.nodes.passagereranker.monot5)": [[7, "autorag.nodes.passagereranker.monot5.mono_t5_pure"]], "monot5() (in module autorag.nodes.passagereranker.monot5)": [[7, "autorag.nodes.passagereranker.monot5.monot5"]], "passage_reranker_node() (in module autorag.nodes.passagereranker.base)": [[7, "autorag.nodes.passagereranker.base.passage_reranker_node"]], "run_passage_reranker_node() (in module autorag.nodes.passagereranker.run)": [[7, "autorag.nodes.passagereranker.run.run_passage_reranker_node"]], "upr() (in module autorag.nodes.passagereranker.upr)": [[7, "autorag.nodes.passagereranker.upr.upr"]], "upr_pure() (in module autorag.nodes.passagereranker.upr)": [[7, "autorag.nodes.passagereranker.upr.upr_pure"]], "enct5forsequenceclassification (class in autorag.nodes.passagereranker.tart.modeling_enc_t5)": [[8, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification"]], "enct5tokenizer (class in autorag.nodes.passagereranker.tart.tokenization_enc_t5)": [[8, "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer"]], "autorag.nodes.passagereranker.tart": [[8, "module-autorag.nodes.passagereranker.tart"]], "autorag.nodes.passagereranker.tart.modeling_enc_t5": [[8, "module-autorag.nodes.passagereranker.tart.modeling_enc_t5"]], "autorag.nodes.passagereranker.tart.tart": [[8, "module-autorag.nodes.passagereranker.tart.tart"]], "autorag.nodes.passagereranker.tart.tokenization_enc_t5": [[8, "module-autorag.nodes.passagereranker.tart.tokenization_enc_t5"]], "build_inputs_with_special_tokens() (autorag.nodes.passagereranker.tart.tokenization_enc_t5.enct5tokenizer method)": [[8, "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer.build_inputs_with_special_tokens"]], "create_token_type_ids_from_sequences() (autorag.nodes.passagereranker.tart.tokenization_enc_t5.enct5tokenizer method)": [[8, "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer.create_token_type_ids_from_sequences"]], "deparallelize() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[8, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.deparallelize"]], "forward() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[8, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.forward"]], "get_encoder() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[8, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.get_encoder"]], "get_input_embeddings() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[8, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.get_input_embeddings"]], "get_special_tokens_mask() (autorag.nodes.passagereranker.tart.tokenization_enc_t5.enct5tokenizer method)": [[8, "autorag.nodes.passagereranker.tart.tokenization_enc_t5.EncT5Tokenizer.get_special_tokens_mask"]], "parallelize() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[8, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.parallelize"]], "set_input_embeddings() (autorag.nodes.passagereranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[8, "autorag.nodes.passagereranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.set_input_embeddings"]], "tart() (in module autorag.nodes.passagereranker.tart.tart)": [[8, "autorag.nodes.passagereranker.tart.tart.tart"]], "tart_pure() (in module autorag.nodes.passagereranker.tart.tart)": [[8, "autorag.nodes.passagereranker.tart.tart.tart_pure"]], "autorag.nodes.promptmaker": [[9, "module-autorag.nodes.promptmaker"]], "autorag.nodes.promptmaker.base": [[9, "module-autorag.nodes.promptmaker.base"]], "autorag.nodes.promptmaker.fstring": [[9, "module-autorag.nodes.promptmaker.fstring"]], "autorag.nodes.promptmaker.run": [[9, "module-autorag.nodes.promptmaker.run"]], "evaluate_generator_result() (in module autorag.nodes.promptmaker.run)": [[9, "autorag.nodes.promptmaker.run.evaluate_generator_result"]], "evaluate_one_prompt_maker_node() (in module autorag.nodes.promptmaker.run)": [[9, "autorag.nodes.promptmaker.run.evaluate_one_prompt_maker_node"]], "fstring() (in module autorag.nodes.promptmaker.fstring)": [[9, "autorag.nodes.promptmaker.fstring.fstring"]], "make_generator_callable_params() (in module autorag.nodes.promptmaker.run)": [[9, "autorag.nodes.promptmaker.run.make_generator_callable_params"]], "prompt_maker_node() (in module autorag.nodes.promptmaker.base)": [[9, "autorag.nodes.promptmaker.base.prompt_maker_node"]], "run_prompt_maker_node() (in module autorag.nodes.promptmaker.run)": [[9, "autorag.nodes.promptmaker.run.run_prompt_maker_node"]], "autorag.nodes.queryexpansion": [[10, "module-autorag.nodes.queryexpansion"]], "autorag.nodes.queryexpansion.base": [[10, "module-autorag.nodes.queryexpansion.base"]], "autorag.nodes.queryexpansion.hyde": [[10, "module-autorag.nodes.queryexpansion.hyde"]], "autorag.nodes.queryexpansion.query_decompose": [[10, "module-autorag.nodes.queryexpansion.query_decompose"]], "autorag.nodes.queryexpansion.run": [[10, "module-autorag.nodes.queryexpansion.run"]], "evaluate_one_query_expansion_node() (in module autorag.nodes.queryexpansion.run)": [[10, "autorag.nodes.queryexpansion.run.evaluate_one_query_expansion_node"]], "hyde() (in module autorag.nodes.queryexpansion.hyde)": [[10, "autorag.nodes.queryexpansion.hyde.hyde"]], "hyde_pure() (in module autorag.nodes.queryexpansion.hyde)": [[10, "autorag.nodes.queryexpansion.hyde.hyde_pure"]], "make_retrieval_callable_params() (in module autorag.nodes.queryexpansion.run)": [[10, "autorag.nodes.queryexpansion.run.make_retrieval_callable_params"]], "query_decompose() (in module autorag.nodes.queryexpansion.query_decompose)": [[10, "autorag.nodes.queryexpansion.query_decompose.query_decompose"]], "query_decompose_pure() (in module autorag.nodes.queryexpansion.query_decompose)": [[10, "autorag.nodes.queryexpansion.query_decompose.query_decompose_pure"]], "query_expansion_node() (in module autorag.nodes.queryexpansion.base)": [[10, "autorag.nodes.queryexpansion.base.query_expansion_node"]], "run_query_expansion_node() (in module autorag.nodes.queryexpansion.run)": [[10, "autorag.nodes.queryexpansion.run.run_query_expansion_node"]], "autorag.nodes.retrieval": [[11, "module-autorag.nodes.retrieval"]], "autorag.nodes.retrieval.base": [[11, "module-autorag.nodes.retrieval.base"]], "autorag.nodes.retrieval.bm25": [[11, "module-autorag.nodes.retrieval.bm25"]], "autorag.nodes.retrieval.hybrid_cc": [[11, "module-autorag.nodes.retrieval.hybrid_cc"]], "autorag.nodes.retrieval.hybrid_rrf": [[11, "module-autorag.nodes.retrieval.hybrid_rrf"]], "autorag.nodes.retrieval.run": [[11, "module-autorag.nodes.retrieval.run"]], "autorag.nodes.retrieval.vectordb": [[11, "module-autorag.nodes.retrieval.vectordb"]], "bm25() (in module autorag.nodes.retrieval.bm25)": [[11, "autorag.nodes.retrieval.bm25.bm25"]], "bm25_ingest() (in module autorag.nodes.retrieval.bm25)": [[11, "autorag.nodes.retrieval.bm25.bm25_ingest"]], "bm25_pure() (in module autorag.nodes.retrieval.bm25)": [[11, "autorag.nodes.retrieval.bm25.bm25_pure"]], "bm25_tokenize() (in module autorag.nodes.retrieval.bm25)": [[11, "autorag.nodes.retrieval.bm25.bm25_tokenize"]], "cast_queries() (in module autorag.nodes.retrieval.base)": [[11, "autorag.nodes.retrieval.base.cast_queries"]], "cc_pure() (in module autorag.nodes.retrieval.hybrid_cc)": [[11, "autorag.nodes.retrieval.hybrid_cc.cc_pure"]], "edit_summary_df_params() (in module autorag.nodes.retrieval.run)": [[11, "autorag.nodes.retrieval.run.edit_summary_df_params"]], "evaluate_retrieval_node() (in module autorag.nodes.retrieval.run)": [[11, "autorag.nodes.retrieval.run.evaluate_retrieval_node"]], "evenly_distribute_passages() (in module autorag.nodes.retrieval.base)": [[11, "autorag.nodes.retrieval.base.evenly_distribute_passages"]], "get_hybrid_execution_times() (in module autorag.nodes.retrieval.run)": [[11, "autorag.nodes.retrieval.run.get_hybrid_execution_times"]], "get_ids_and_scores() (in module autorag.nodes.retrieval.run)": [[11, "autorag.nodes.retrieval.run.get_ids_and_scores"]], "get_module_params() (in module autorag.nodes.retrieval.run)": [[11, "autorag.nodes.retrieval.run.get_module_params"]], "hybrid_cc() (in module autorag.nodes.retrieval.hybrid_cc)": [[11, "autorag.nodes.retrieval.hybrid_cc.hybrid_cc"]], "hybrid_rrf() (in module autorag.nodes.retrieval.hybrid_rrf)": [[11, "autorag.nodes.retrieval.hybrid_rrf.hybrid_rrf"]], "load_bm25_corpus() (in module autorag.nodes.retrieval.base)": [[11, "autorag.nodes.retrieval.base.load_bm25_corpus"]], "load_chroma_collection() (in module autorag.nodes.retrieval.base)": [[11, "autorag.nodes.retrieval.base.load_chroma_collection"]], "retrieval_node() (in module autorag.nodes.retrieval.base)": [[11, "autorag.nodes.retrieval.base.retrieval_node"]], "rrf_calculate() (in module autorag.nodes.retrieval.hybrid_rrf)": [[11, "autorag.nodes.retrieval.hybrid_rrf.rrf_calculate"]], "rrf_pure() (in module autorag.nodes.retrieval.hybrid_rrf)": [[11, "autorag.nodes.retrieval.hybrid_rrf.rrf_pure"]], "run_retrieval_modules() (in module autorag.nodes.retrieval.base)": [[11, "autorag.nodes.retrieval.base.run_retrieval_modules"]], "run_retrieval_node() (in module autorag.nodes.retrieval.run)": [[11, "autorag.nodes.retrieval.run.run_retrieval_node"]], "select_result_for_hybrid() (in module autorag.nodes.retrieval.run)": [[11, "autorag.nodes.retrieval.run.select_result_for_hybrid"]], "vectordb() (in module autorag.nodes.retrieval.vectordb)": [[11, "autorag.nodes.retrieval.vectordb.vectordb"]], "vectordb_ingest() (in module autorag.nodes.retrieval.vectordb)": [[11, "autorag.nodes.retrieval.vectordb.vectordb_ingest"]], "vectordb_pure() (in module autorag.nodes.retrieval.vectordb)": [[11, "autorag.nodes.retrieval.vectordb.vectordb_pure"]], "module (class in autorag.schema.module)": [[12, "autorag.schema.module.Module"]], "node (class in autorag.schema.node)": [[12, "autorag.schema.node.Node"]], "autorag.schema": [[12, "module-autorag.schema"]], "autorag.schema.module": [[12, "module-autorag.schema.module"]], "autorag.schema.node": [[12, "module-autorag.schema.node"]], "extract_values() (in module autorag.schema.node)": [[12, "autorag.schema.node.extract_values"]], "extract_values_from_nodes() (in module autorag.schema.node)": [[12, "autorag.schema.node.extract_values_from_nodes"]], "from_dict() (autorag.schema.module.module class method)": [[12, "autorag.schema.module.Module.from_dict"]], "from_dict() (autorag.schema.node.node class method)": [[12, "autorag.schema.node.Node.from_dict"]], "get_param_combinations() (autorag.schema.node.node method)": [[12, "autorag.schema.node.Node.get_param_combinations"]], "module (autorag.schema.module.module attribute)": [[12, "autorag.schema.module.Module.module"]], "module_param (autorag.schema.module.module attribute)": [[12, "autorag.schema.module.Module.module_param"]], "module_type (autorag.schema.module.module attribute)": [[12, "autorag.schema.module.Module.module_type"]], "module_type_exists() (in module autorag.schema.node)": [[12, "autorag.schema.node.module_type_exists"]], "modules (autorag.schema.node.node attribute)": [[12, "autorag.schema.node.Node.modules"]], "node_params (autorag.schema.node.node attribute)": [[12, "autorag.schema.node.Node.node_params"]], "node_type (autorag.schema.node.node attribute)": [[12, "autorag.schema.node.Node.node_type"]], "run() (autorag.schema.node.node method)": [[12, "autorag.schema.node.Node.run"]], "run_node (autorag.schema.node.node attribute)": [[12, "autorag.schema.node.Node.run_node"]], "strategy (autorag.schema.node.node attribute)": [[12, "autorag.schema.node.Node.strategy"]], "autorag.utils": [[13, "module-autorag.utils"]], "autorag.utils.preprocess": [[13, "module-autorag.utils.preprocess"]], "autorag.utils.util": [[13, "module-autorag.utils.util"]], "cast_corpus_dataset() (in module autorag.utils.preprocess)": [[13, "autorag.utils.preprocess.cast_corpus_dataset"]], "cast_qa_dataset() (in module autorag.utils.preprocess)": [[13, "autorag.utils.preprocess.cast_qa_dataset"]], "convert_string_to_tuple_in_dict() (in module autorag.utils.util)": [[13, "autorag.utils.util.convert_string_to_tuple_in_dict"]], "explode() (in module autorag.utils.util)": [[13, "autorag.utils.util.explode"]], "fetch_contents() (in module autorag.utils.util)": [[13, "autorag.utils.util.fetch_contents"]], "find_best_result_path() (in module autorag.utils.util)": [[13, "autorag.utils.util.find_best_result_path"]], "load_summary_file() (in module autorag.utils.util)": [[13, "autorag.utils.util.load_summary_file"]], "make_combinations() (in module autorag.utils.util)": [[13, "autorag.utils.util.make_combinations"]], "normalize_string() (in module autorag.utils.util)": [[13, "autorag.utils.util.normalize_string"]], "process_batch() (in module autorag.utils.util)": [[13, "autorag.utils.util.process_batch"]], "replace_value_in_dict() (in module autorag.utils.util)": [[13, "autorag.utils.util.replace_value_in_dict"]], "result_to_dataframe() (in module autorag.utils.util)": [[13, "autorag.utils.util.result_to_dataframe"]], "validate_corpus_dataset() (in module autorag.utils.preprocess)": [[13, "autorag.utils.preprocess.validate_corpus_dataset"]], "validate_qa_dataset() (in module autorag.utils.preprocess)": [[13, "autorag.utils.preprocess.validate_qa_dataset"]]}})
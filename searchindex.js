Search.setIndex({"docnames": ["api_spec/autorag", "api_spec/autorag.data", "api_spec/autorag.evaluate", "api_spec/autorag.evaluate.metric", "api_spec/autorag.nodes", "api_spec/autorag.nodes.generator", "api_spec/autorag.nodes.passagecompressor", "api_spec/autorag.nodes.passagereranker", "api_spec/autorag.nodes.promptmaker", "api_spec/autorag.nodes.queryexpansion", "api_spec/autorag.nodes.retrieval", "api_spec/autorag.schema", "api_spec/autorag.utils", "api_spec/modules", "index"], "filenames": ["api_spec/autorag.rst", "api_spec/autorag.data.rst", "api_spec/autorag.evaluate.rst", "api_spec/autorag.evaluate.metric.rst", "api_spec/autorag.nodes.rst", "api_spec/autorag.nodes.generator.rst", "api_spec/autorag.nodes.passagecompressor.rst", "api_spec/autorag.nodes.passagereranker.rst", "api_spec/autorag.nodes.promptmaker.rst", "api_spec/autorag.nodes.queryexpansion.rst", "api_spec/autorag.nodes.retrieval.rst", "api_spec/autorag.schema.rst", "api_spec/autorag.utils.rst", "api_spec/modules.rst", "index.rst"], "titles": ["autorag package", "autorag.data package", "autorag.evaluate package", "autorag.evaluate.metric package", "autorag.nodes package", "autorag.nodes.generator package", "autorag.nodes.passagecompressor package", "autorag.nodes.passagereranker package", "autorag.nodes.promptmaker package", "autorag.nodes.queryexpansion package", "autorag.nodes.retrieval package", "autorag.schema package", "autorag.utils package", "autorag", "Welcome to AutoRAG\u2019s documentation!"], "terms": {"data": [0, 10, 13], "metric": [0, 2, 10], "gener": [0, 4, 9, 13], "retriev": [0, 4, 9, 13], "evaluate_gener": [0, 2], "evaluate_retriev": [0, 2], "node": [0, 12, 13], "passagecompressor": [0, 4], "passagererank": [0, 4], "promptmak": [0, 4], "queryexpans": [0, 4], "query_decompos": [0, 4], "hyde": [0, 4], "base": [0, 4, 11], "bm25": [0, 4], "run": [0, 4, 11, 13], "vectordb": [0, 4], "schema": [0, 13], "from_dict": [0, 11], "module_param": [0, 10, 11, 12], "module_typ": [0, 11], "get_param_combin": [0, 11], "node_param": [0, 11], "node_typ": [0, 11], "run_nod": [0, 11], "extract_valu": [0, 11], "extract_values_from_nod": [0, 11], "module_type_exist": [0, 11], "util": [0, 13], "preprocess": [0, 13], "cast_corpus_dataset": [0, 12], "cast_qa_dataset": [0, 12], "validate_corpus_dataset": [0, 12], "validate_qa_dataset": [0, 12], "fetch_cont": [0, 12], "find_best_result_path": [0, 12], "load_summary_fil": [0, 12], "make_module_file_nam": [0, 12], "result_to_datafram": [0, 12], "class": [0, 11], "runner": [0, 13], "config": 0, "dict": [0, 10, 11, 12], "sourc": [0, 2, 3, 9, 10, 11, 12], "object": [0, 11], "classmethod": [0, 11], "from_trial_fold": [0, 13], "trial_path": 0, "str": [0, 2, 3, 9, 10, 11, 12], "load": [0, 10, 12], "from": [0, 3, 10, 11, 12], "trial": 0, "folder": 0, "must": [0, 3, 10, 12], "alreadi": [0, 10], "us": [0, 9, 10], "paramet": [0, 3, 10, 11, 12], "The": [0, 3, 10, 11, 12], "path": [0, 12], "return": [0, 3, 9, 10, 11, 12], "initi": 0, "from_yaml": [0, 13], "yaml_path": 0, "yaml": 0, "file": [0, 10, 12], "extract": [0, 11], "extract_best_config": [0, 13], "method": [0, 11], "queri": [0, 9, 10, 13], "result_column": [0, 13], "answer": [0, 9], "pipelin": 0, "start": 0, "singl": 0, "so": 0, "first": 0, "query_expans": 0, "user": 0, "result": [0, 3, 9, 10, 12], "column": [0, 10, 12], "name": [0, 10, 12], "default": [0, 12], "i": [0, 10, 12], "which": [0, 9, 10], "output": 0, "answer_filt": 0, "run_api_serv": [0, 13], "host": 0, "0": 0, "port": 0, "int": [0, 10], "8000": 0, "kwarg": 0, "api": [0, 10], "server": 0, "you": [0, 10, 11, 12], "can": [0, 3, 12], "send": 0, "post": 0, "request": 0, "http": [0, 9], "json": 0, "bodi": 0, "like": [0, 10], "below": 0, "your": 0, "And": [0, 9, 10], "respons": 0, "other": 0, "argument": 0, "uvicorn": 0, "runnerinput": [0, 13], "basemodel": 0, "output_path": 0, "none": [0, 12], "optim": 0, "directori": [0, 10, 12], "want": [0, 11, 12], "save": [0, 12], "yml": 0, "If": 0, "doe": 0, "just": 0, "valu": [0, 11], "dictionari": [0, 10, 12], "summary_df_to_yaml": [0, 13], "summary_df": 0, "datafram": [0, 10, 11, 12], "convert": [0, 12], "summari": [0, 12], "thi": [0, 10, 11, 12], "qa_data_path": 0, "corpus_data_path": 0, "start_trial": [0, 13], "make_node_lin": [0, 13], "node_line_dict": 0, "list": [0, 2, 3, 9, 10, 11, 12], "make": [0, 12], "line": [0, 10], "param": [0, 9, 12], "get": [0, 10], "input": [0, 10], "insid": 0, "run_node_lin": [0, 13], "node_line_dir": [0, 10, 11], "previous_result": [0, 10, 11], "whole": 0, "each": [0, 10, 11], "A": [0, 3, 10], "": [0, 10, 11, 12], "previou": [0, 10], "qa": [0, 10], "parquet": [0, 12], "final": 0, "avoid_empty_result": [0, 13], "func": [0, 3, 10], "decor": [0, 12], "avoid": 0, "empti": 0, "function": [0, 10, 11, 12], "when": [0, 9], "an": [0, 10], "origin": 0, "It": [0, 3, 10, 11, 12], "keep": 0, "filter_by_threshold": [0, 13], "threshold": 0, "metadata": 0, "tupl": [0, 10, 11], "filter": 0, "have": [0, 10], "same": 0, "length": [0, 10], "even": 0, "did": 0, "give": 0, "type": [0, 10, 11, 12], "measure_spe": [0, 13], "arg": 0, "measur": 0, "execut": 0, "speed": 0, "select_best_averag": [0, 13], "iter": 0, "ani": 0, "select": [0, 10], "best": [0, 10, 12], "averag": 0, "among": [0, 10], "given": 0, "pd": [0, 12], "standard": 0, "one": 0, "handle_except": [0, 13], "exc_typ": 0, "exc_valu": 0, "exc_traceback": 0, "bleu": [2, 3], "generation_metr": [2, 3], "huggingface_evalu": [2, 3], "meteor": [2, 3], "roug": [2, 3], "retrieval_f1": [2, 3], "retrieval_metr": [2, 3], "retrieval_precis": [2, 3], "retrieval_recal": [2, 3], "generation_gt": [2, 3], "retrieval_gt": [2, 10], "gt": 3, "pred": 3, "float": [3, 10], "comput": 3, "score": [3, 10], "instanc": [3, 10], "kei": [3, 11], "huggingfac": 3, "ground": [3, 10], "truth": [3, 10], "2": [3, 10], "d": [3, 10], "string": [3, 10], "llm": [3, 9], "becaus": 3, "multipl": 3, "f1": 3, "id": [3, 10, 12], "contain": [3, 10], "connect": 3, "between": 3, "predict": 3, "submodul": [4, 13], "hyde_pur": [4, 9], "cast_queri": [4, 10], "evenly_distribute_passag": [4, 10], "load_bm25_corpu": [4, 10], "load_chroma_collect": [4, 10], "retrieval_nod": [4, 10], "bm25_ingest": [4, 10], "bm25_pure": [4, 10], "bm25_token": [4, 10], "evaluate_retrieval_nod": [4, 10], "run_retrieval_nod": [4, 10], "vectordb_ingest": [4, 10], "vectordb_pur": [4, 10], "basellm": 9, "prompt": 9, "pleas": 9, "write": 9, "passag": [9, 10], "question": 9, "inspir": 9, "precis": 9, "zero": 9, "shot": 9, "dens": 9, "without": 9, "relev": 9, "label": 9, "arxiv": 9, "org": 9, "pdf": 9, "2212": 9, "10496": 9, "model": [9, 10], "creat": 9, "hypothet": 9, "async": [9, 10], "top_k": 10, "bm25_path": 10, "db_path": 10, "collection_nam": 10, "collect": 10, "resourc": 10, "For": 10, "exampl": 10, "corpu": 10, "panda": 10, "retrieved_cont": 10, "retrieved_id": 10, "retrieve_scor": 10, "bm25_corpu": 10, "pickl": 10, "ingest": 10, "element": [10, 11], "row": 10, "number": 10, "doc_id": 10, "token": 10, "Its": 10, "structur": 10, "look": 10, "2d": 10, "passage_id": 10, "its": [10, 11], "ha": 10, "corpus_path": 10, "corpus_data": [10, 12], "bm25_api": 10, "bm25okapi": 10, "usag": 10, "result_df": 10, "evalu": [10, 13], "dataset": 10, "strategi": [10, 11, 13], "callabl": [10, 11], "could": 10, "expans": 10, "embedding_model": 10, "baseembed": 10, "chroma": 10, "embed": 10, "emb": 10, "vector_db": 10, "module_dict": 11, "node_dict": 11, "combin": 11, "also": 11, "correspond": 11, "remov": 11, "duplic": 11, "automat": 11, "bool": 11, "check": 11, "exist": 11, "true": 11, "df": 12, "node_dir": 12, "find": 12, "filepath": 12, "summary_path": 12, "dict_column": 12, "ar": 12, "fill": 12, "properli": 12, "l": 12, "module_nam": 12, "column_nam": 12, "packag": 13, "subpackag": 13, "modul": [13, 14], "content": 13, "deploi": 13, "node_lin": 13, "index": 14, "search": 14, "page": 14}, "objects": {"": [[0, 0, 0, "-", "autorag"]], "autorag": [[1, 0, 0, "-", "data"], [0, 0, 0, "-", "deploy"], [2, 0, 0, "-", "evaluate"], [0, 0, 0, "-", "evaluator"], [0, 4, 1, "", "handle_exception"], [0, 0, 0, "-", "node_line"], [4, 0, 0, "-", "nodes"], [11, 0, 0, "-", "schema"], [0, 0, 0, "-", "strategy"], [12, 0, 0, "-", "utils"]], "autorag.deploy": [[0, 1, 1, "", "Runner"], [0, 1, 1, "", "RunnerInput"], [0, 4, 1, "", "extract_best_config"], [0, 4, 1, "", "summary_df_to_yaml"]], "autorag.deploy.Runner": [[0, 2, 1, "", "from_trial_folder"], [0, 2, 1, "", "from_yaml"], [0, 2, 1, "", "run"], [0, 2, 1, "", "run_api_server"]], "autorag.deploy.RunnerInput": [[0, 3, 1, "", "query"], [0, 3, 1, "", "result_column"]], "autorag.evaluate": [[2, 0, 0, "-", "generation"], [3, 0, 0, "-", "metric"], [2, 0, 0, "-", "retrieval"]], "autorag.evaluate.generation": [[2, 4, 1, "", "evaluate_generation"]], "autorag.evaluate.metric": [[3, 0, 0, "-", "generation"], [3, 0, 0, "-", "retrieval"]], "autorag.evaluate.metric.generation": [[3, 4, 1, "", "bleu"], [3, 4, 1, "", "generation_metric"], [3, 4, 1, "", "huggingface_evaluate"], [3, 4, 1, "", "meteor"], [3, 4, 1, "", "rouge"]], "autorag.evaluate.metric.retrieval": [[3, 4, 1, "", "retrieval_f1"], [3, 4, 1, "", "retrieval_metric"], [3, 4, 1, "", "retrieval_precision"], [3, 4, 1, "", "retrieval_recall"]], "autorag.evaluate.retrieval": [[2, 4, 1, "", "evaluate_retrieval"]], "autorag.evaluator": [[0, 1, 1, "", "Evaluator"]], "autorag.evaluator.Evaluator": [[0, 2, 1, "", "start_trial"]], "autorag.node_line": [[0, 4, 1, "", "make_node_lines"], [0, 4, 1, "", "run_node_line"]], "autorag.nodes": [[5, 0, 0, "-", "generator"], [6, 0, 0, "-", "passagecompressor"], [7, 0, 0, "-", "passagereranker"], [8, 0, 0, "-", "promptmaker"], [9, 0, 0, "-", "queryexpansion"], [10, 0, 0, "-", "retrieval"]], "autorag.nodes.queryexpansion": [[9, 0, 0, "-", "hyde"], [9, 0, 0, "-", "query_decompose"]], "autorag.nodes.queryexpansion.hyde": [[9, 4, 1, "", "hyde"], [9, 4, 1, "", "hyde_pure"]], "autorag.nodes.retrieval": [[10, 0, 0, "-", "base"], [10, 0, 0, "-", "bm25"], [10, 0, 0, "-", "run"], [10, 0, 0, "-", "vectordb"]], "autorag.nodes.retrieval.base": [[10, 4, 1, "", "cast_queries"], [10, 4, 1, "", "evenly_distribute_passages"], [10, 4, 1, "", "load_bm25_corpus"], [10, 4, 1, "", "load_chroma_collection"], [10, 4, 1, "", "retrieval_node"]], "autorag.nodes.retrieval.bm25": [[10, 4, 1, "", "bm25"], [10, 4, 1, "", "bm25_ingest"], [10, 4, 1, "", "bm25_pure"], [10, 4, 1, "", "bm25_tokenize"]], "autorag.nodes.retrieval.run": [[10, 4, 1, "", "evaluate_retrieval_node"], [10, 4, 1, "", "run_retrieval_node"]], "autorag.nodes.retrieval.vectordb": [[10, 4, 1, "", "vectordb"], [10, 4, 1, "", "vectordb_ingest"], [10, 4, 1, "", "vectordb_pure"]], "autorag.schema": [[11, 0, 0, "-", "module"], [11, 0, 0, "-", "node"]], "autorag.schema.module": [[11, 1, 1, "", "Module"]], "autorag.schema.module.Module": [[11, 2, 1, "", "from_dict"], [11, 3, 1, "", "module"], [11, 3, 1, "", "module_param"], [11, 3, 1, "", "module_type"]], "autorag.schema.node": [[11, 1, 1, "", "Node"], [11, 4, 1, "", "extract_values"], [11, 4, 1, "", "extract_values_from_nodes"], [11, 4, 1, "", "module_type_exists"]], "autorag.schema.node.Node": [[11, 2, 1, "", "from_dict"], [11, 2, 1, "", "get_param_combinations"], [11, 3, 1, "", "modules"], [11, 3, 1, "", "node_params"], [11, 3, 1, "", "node_type"], [11, 2, 1, "", "run"], [11, 3, 1, "", "run_node"], [11, 3, 1, "", "strategy"]], "autorag.strategy": [[0, 4, 1, "", "avoid_empty_result"], [0, 4, 1, "", "filter_by_threshold"], [0, 4, 1, "", "measure_speed"], [0, 4, 1, "", "select_best_average"]], "autorag.utils": [[12, 0, 0, "-", "preprocess"], [12, 0, 0, "-", "util"]], "autorag.utils.preprocess": [[12, 4, 1, "", "cast_corpus_dataset"], [12, 4, 1, "", "cast_qa_dataset"], [12, 4, 1, "", "validate_corpus_dataset"], [12, 4, 1, "", "validate_qa_dataset"]], "autorag.utils.util": [[12, 4, 1, "", "fetch_contents"], [12, 4, 1, "", "find_best_result_path"], [12, 4, 1, "", "load_summary_file"], [12, 4, 1, "", "make_module_file_name"], [12, 4, 1, "", "result_to_dataframe"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"autorag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "packag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "subpackag": [0, 2, 4], "submodul": [0, 2, 3, 9, 10, 11, 12], "deploi": 0, "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "evalu": [0, 2, 3], "node_lin": 0, "strategi": 0, "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "data": 1, "gener": [2, 3, 5], "retriev": [2, 3, 10], "metric": 3, "node": [4, 5, 6, 7, 8, 9, 10, 11], "passagecompressor": 6, "passagererank": 7, "promptmak": 8, "queryexpans": 9, "query_decompos": 9, "hyde": 9, "base": 10, "bm25": 10, "run": 10, "vectordb": 10, "schema": 11, "util": 12, "preprocess": 12, "welcom": 14, "": 14, "document": 14, "api": 14, "refer": 14, "indic": 14, "tabl": 14}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"autorag package": [[0, "autorag-package"]], "Subpackages": [[0, "subpackages"], [2, "subpackages"], [4, "subpackages"]], "Submodules": [[0, "submodules"], [2, "submodules"], [3, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"], [12, "submodules"]], "autorag.deploy module": [[0, "module-autorag.deploy"]], "autorag.evaluator module": [[0, "module-autorag.evaluator"]], "autorag.node_line module": [[0, "module-autorag.node_line"]], "autorag.strategy module": [[0, "module-autorag.strategy"]], "Module contents": [[0, "module-autorag"], [1, "module-autorag.data"], [2, "module-autorag.evaluate"], [3, "module-autorag.evaluate.metric"], [4, "module-autorag.nodes"], [5, "module-autorag.nodes.generator"], [6, "module-autorag.nodes.passagecompressor"], [7, "module-autorag.nodes.passagereranker"], [8, "module-autorag.nodes.promptmaker"], [9, "module-autorag.nodes.queryexpansion"], [10, "module-autorag.nodes.retrieval"], [11, "module-autorag.schema"], [12, "module-autorag.utils"]], "autorag.data package": [[1, "autorag-data-package"]], "autorag.evaluate package": [[2, "autorag-evaluate-package"]], "autorag.evaluate.generation module": [[2, "module-autorag.evaluate.generation"]], "autorag.evaluate.retrieval module": [[2, "module-autorag.evaluate.retrieval"]], "autorag.evaluate.metric package": [[3, "autorag-evaluate-metric-package"]], "autorag.evaluate.metric.generation module": [[3, "module-autorag.evaluate.metric.generation"]], "autorag.evaluate.metric.retrieval module": [[3, "module-autorag.evaluate.metric.retrieval"]], "autorag.nodes package": [[4, "autorag-nodes-package"]], "autorag.nodes.generator package": [[5, "autorag-nodes-generator-package"]], "autorag.nodes.passagecompressor package": [[6, "autorag-nodes-passagecompressor-package"]], "autorag.nodes.passagereranker package": [[7, "autorag-nodes-passagereranker-package"]], "autorag.nodes.promptmaker package": [[8, "autorag-nodes-promptmaker-package"]], "autorag.nodes.queryexpansion package": [[9, "autorag-nodes-queryexpansion-package"]], "autorag.nodes.queryexpansion.query_decompose module": [[9, "module-autorag.nodes.queryexpansion.query_decompose"]], "autorag.nodes.queryexpansion.hyde module": [[9, "module-autorag.nodes.queryexpansion.hyde"]], "autorag.nodes.retrieval package": [[10, "autorag-nodes-retrieval-package"]], "autorag.nodes.retrieval.base module": [[10, "module-autorag.nodes.retrieval.base"]], "autorag.nodes.retrieval.bm25 module": [[10, "module-autorag.nodes.retrieval.bm25"]], "autorag.nodes.retrieval.run module": [[10, "module-autorag.nodes.retrieval.run"]], "autorag.nodes.retrieval.vectordb module": [[10, "module-autorag.nodes.retrieval.vectordb"]], "autorag.schema package": [[11, "autorag-schema-package"]], "autorag.schema.module module": [[11, "module-autorag.schema.module"]], "autorag.schema.node module": [[11, "module-autorag.schema.node"]], "autorag.utils package": [[12, "autorag-utils-package"]], "autorag.utils.preprocess module": [[12, "module-autorag.utils.preprocess"]], "autorag.utils.util module": [[12, "module-autorag.utils.util"]], "autorag": [[13, "autorag"]], "Welcome to AutoRAG\u2019s documentation!": [[14, "welcome-to-autorag-s-documentation"]], "API Reference:": [[14, null]], "Indices and tables": [[14, "indices-and-tables"]]}, "indexentries": {"evaluator (class in autorag.evaluator)": [[0, "autorag.evaluator.Evaluator"]], "runner (class in autorag.deploy)": [[0, "autorag.deploy.Runner"]], "runnerinput (class in autorag.deploy)": [[0, "autorag.deploy.RunnerInput"]], "autorag": [[0, "module-autorag"]], "autorag.deploy": [[0, "module-autorag.deploy"]], "autorag.evaluator": [[0, "module-autorag.evaluator"]], "autorag.node_line": [[0, "module-autorag.node_line"]], "autorag.strategy": [[0, "module-autorag.strategy"]], "avoid_empty_result() (in module autorag.strategy)": [[0, "autorag.strategy.avoid_empty_result"]], "extract_best_config() (in module autorag.deploy)": [[0, "autorag.deploy.extract_best_config"]], "filter_by_threshold() (in module autorag.strategy)": [[0, "autorag.strategy.filter_by_threshold"]], "from_trial_folder() (autorag.deploy.runner class method)": [[0, "autorag.deploy.Runner.from_trial_folder"]], "from_yaml() (autorag.deploy.runner class method)": [[0, "autorag.deploy.Runner.from_yaml"]], "handle_exception() (in module autorag)": [[0, "autorag.handle_exception"]], "make_node_lines() (in module autorag.node_line)": [[0, "autorag.node_line.make_node_lines"]], "measure_speed() (in module autorag.strategy)": [[0, "autorag.strategy.measure_speed"]], "module": [[0, "module-autorag"], [0, "module-autorag.deploy"], [0, "module-autorag.evaluator"], [0, "module-autorag.node_line"], [0, "module-autorag.strategy"], [1, "module-autorag.data"], [2, "module-autorag.evaluate"], [2, "module-autorag.evaluate.generation"], [2, "module-autorag.evaluate.retrieval"], [3, "module-autorag.evaluate.metric"], [3, "module-autorag.evaluate.metric.generation"], [3, "module-autorag.evaluate.metric.retrieval"], [4, "module-autorag.nodes"], [5, "module-autorag.nodes.generator"], [6, "module-autorag.nodes.passagecompressor"], [7, "module-autorag.nodes.passagereranker"], [8, "module-autorag.nodes.promptmaker"], [9, "module-autorag.nodes.queryexpansion"], [9, "module-autorag.nodes.queryexpansion.hyde"], [9, "module-autorag.nodes.queryexpansion.query_decompose"], [10, "module-autorag.nodes.retrieval"], [10, "module-autorag.nodes.retrieval.base"], [10, "module-autorag.nodes.retrieval.bm25"], [10, "module-autorag.nodes.retrieval.run"], [10, "module-autorag.nodes.retrieval.vectordb"], [11, "module-autorag.schema"], [11, "module-autorag.schema.module"], [11, "module-autorag.schema.node"], [12, "module-autorag.utils"], [12, "module-autorag.utils.preprocess"], [12, "module-autorag.utils.util"]], "query (autorag.deploy.runnerinput attribute)": [[0, "autorag.deploy.RunnerInput.query"]], "result_column (autorag.deploy.runnerinput attribute)": [[0, "autorag.deploy.RunnerInput.result_column"]], "run() (autorag.deploy.runner method)": [[0, "autorag.deploy.Runner.run"]], "run_api_server() (autorag.deploy.runner method)": [[0, "autorag.deploy.Runner.run_api_server"]], "run_node_line() (in module autorag.node_line)": [[0, "autorag.node_line.run_node_line"]], "select_best_average() (in module autorag.strategy)": [[0, "autorag.strategy.select_best_average"]], "start_trial() (autorag.evaluator.evaluator method)": [[0, "autorag.evaluator.Evaluator.start_trial"]], "summary_df_to_yaml() (in module autorag.deploy)": [[0, "autorag.deploy.summary_df_to_yaml"]], "autorag.data": [[1, "module-autorag.data"]], "autorag.evaluate": [[2, "module-autorag.evaluate"]], "autorag.evaluate.generation": [[2, "module-autorag.evaluate.generation"]], "autorag.evaluate.retrieval": [[2, "module-autorag.evaluate.retrieval"]], "evaluate_generation() (in module autorag.evaluate.generation)": [[2, "autorag.evaluate.generation.evaluate_generation"]], "evaluate_retrieval() (in module autorag.evaluate.retrieval)": [[2, "autorag.evaluate.retrieval.evaluate_retrieval"]], "autorag.evaluate.metric": [[3, "module-autorag.evaluate.metric"]], "autorag.evaluate.metric.generation": [[3, "module-autorag.evaluate.metric.generation"]], "autorag.evaluate.metric.retrieval": [[3, "module-autorag.evaluate.metric.retrieval"]], "bleu() (in module autorag.evaluate.metric.generation)": [[3, "autorag.evaluate.metric.generation.bleu"]], "generation_metric() (in module autorag.evaluate.metric.generation)": [[3, "autorag.evaluate.metric.generation.generation_metric"]], "huggingface_evaluate() (in module autorag.evaluate.metric.generation)": [[3, "autorag.evaluate.metric.generation.huggingface_evaluate"]], "meteor() (in module autorag.evaluate.metric.generation)": [[3, "autorag.evaluate.metric.generation.meteor"]], "retrieval_f1() (in module autorag.evaluate.metric.retrieval)": [[3, "autorag.evaluate.metric.retrieval.retrieval_f1"]], "retrieval_metric() (in module autorag.evaluate.metric.retrieval)": [[3, "autorag.evaluate.metric.retrieval.retrieval_metric"]], "retrieval_precision() (in module autorag.evaluate.metric.retrieval)": [[3, "autorag.evaluate.metric.retrieval.retrieval_precision"]], "retrieval_recall() (in module autorag.evaluate.metric.retrieval)": [[3, "autorag.evaluate.metric.retrieval.retrieval_recall"]], "rouge() (in module autorag.evaluate.metric.generation)": [[3, "autorag.evaluate.metric.generation.rouge"]], "autorag.nodes": [[4, "module-autorag.nodes"]], "autorag.nodes.generator": [[5, "module-autorag.nodes.generator"]], "autorag.nodes.passagecompressor": [[6, "module-autorag.nodes.passagecompressor"]], "autorag.nodes.passagereranker": [[7, "module-autorag.nodes.passagereranker"]], "autorag.nodes.promptmaker": [[8, "module-autorag.nodes.promptmaker"]], "autorag.nodes.queryexpansion": [[9, "module-autorag.nodes.queryexpansion"]], "autorag.nodes.queryexpansion.hyde": [[9, "module-autorag.nodes.queryexpansion.hyde"]], "autorag.nodes.queryexpansion.query_decompose": [[9, "module-autorag.nodes.queryexpansion.query_decompose"]], "hyde() (in module autorag.nodes.queryexpansion.hyde)": [[9, "autorag.nodes.queryexpansion.hyde.hyde"]], "hyde_pure() (in module autorag.nodes.queryexpansion.hyde)": [[9, "autorag.nodes.queryexpansion.hyde.hyde_pure"]], "autorag.nodes.retrieval": [[10, "module-autorag.nodes.retrieval"]], "autorag.nodes.retrieval.base": [[10, "module-autorag.nodes.retrieval.base"]], "autorag.nodes.retrieval.bm25": [[10, "module-autorag.nodes.retrieval.bm25"]], "autorag.nodes.retrieval.run": [[10, "module-autorag.nodes.retrieval.run"]], "autorag.nodes.retrieval.vectordb": [[10, "module-autorag.nodes.retrieval.vectordb"]], "bm25() (in module autorag.nodes.retrieval.bm25)": [[10, "autorag.nodes.retrieval.bm25.bm25"]], "bm25_ingest() (in module autorag.nodes.retrieval.bm25)": [[10, "autorag.nodes.retrieval.bm25.bm25_ingest"]], "bm25_pure() (in module autorag.nodes.retrieval.bm25)": [[10, "autorag.nodes.retrieval.bm25.bm25_pure"]], "bm25_tokenize() (in module autorag.nodes.retrieval.bm25)": [[10, "autorag.nodes.retrieval.bm25.bm25_tokenize"]], "cast_queries() (in module autorag.nodes.retrieval.base)": [[10, "autorag.nodes.retrieval.base.cast_queries"]], "evaluate_retrieval_node() (in module autorag.nodes.retrieval.run)": [[10, "autorag.nodes.retrieval.run.evaluate_retrieval_node"]], "evenly_distribute_passages() (in module autorag.nodes.retrieval.base)": [[10, "autorag.nodes.retrieval.base.evenly_distribute_passages"]], "load_bm25_corpus() (in module autorag.nodes.retrieval.base)": [[10, "autorag.nodes.retrieval.base.load_bm25_corpus"]], "load_chroma_collection() (in module autorag.nodes.retrieval.base)": [[10, "autorag.nodes.retrieval.base.load_chroma_collection"]], "retrieval_node() (in module autorag.nodes.retrieval.base)": [[10, "autorag.nodes.retrieval.base.retrieval_node"]], "run_retrieval_node() (in module autorag.nodes.retrieval.run)": [[10, "autorag.nodes.retrieval.run.run_retrieval_node"]], "vectordb() (in module autorag.nodes.retrieval.vectordb)": [[10, "autorag.nodes.retrieval.vectordb.vectordb"]], "vectordb_ingest() (in module autorag.nodes.retrieval.vectordb)": [[10, "autorag.nodes.retrieval.vectordb.vectordb_ingest"]], "vectordb_pure() (in module autorag.nodes.retrieval.vectordb)": [[10, "autorag.nodes.retrieval.vectordb.vectordb_pure"]], "module (class in autorag.schema.module)": [[11, "autorag.schema.module.Module"]], "node (class in autorag.schema.node)": [[11, "autorag.schema.node.Node"]], "autorag.schema": [[11, "module-autorag.schema"]], "autorag.schema.module": [[11, "module-autorag.schema.module"]], "autorag.schema.node": [[11, "module-autorag.schema.node"]], "extract_values() (in module autorag.schema.node)": [[11, "autorag.schema.node.extract_values"]], "extract_values_from_nodes() (in module autorag.schema.node)": [[11, "autorag.schema.node.extract_values_from_nodes"]], "from_dict() (autorag.schema.module.module class method)": [[11, "autorag.schema.module.Module.from_dict"]], "from_dict() (autorag.schema.node.node class method)": [[11, "autorag.schema.node.Node.from_dict"]], "get_param_combinations() (autorag.schema.node.node method)": [[11, "autorag.schema.node.Node.get_param_combinations"]], "module (autorag.schema.module.module attribute)": [[11, "autorag.schema.module.Module.module"]], "module_param (autorag.schema.module.module attribute)": [[11, "autorag.schema.module.Module.module_param"]], "module_type (autorag.schema.module.module attribute)": [[11, "autorag.schema.module.Module.module_type"]], "module_type_exists() (in module autorag.schema.node)": [[11, "autorag.schema.node.module_type_exists"]], "modules (autorag.schema.node.node attribute)": [[11, "autorag.schema.node.Node.modules"]], "node_params (autorag.schema.node.node attribute)": [[11, "autorag.schema.node.Node.node_params"]], "node_type (autorag.schema.node.node attribute)": [[11, "autorag.schema.node.Node.node_type"]], "run() (autorag.schema.node.node method)": [[11, "autorag.schema.node.Node.run"]], "run_node (autorag.schema.node.node attribute)": [[11, "autorag.schema.node.Node.run_node"]], "strategy (autorag.schema.node.node attribute)": [[11, "autorag.schema.node.Node.strategy"]], "autorag.utils": [[12, "module-autorag.utils"]], "autorag.utils.preprocess": [[12, "module-autorag.utils.preprocess"]], "autorag.utils.util": [[12, "module-autorag.utils.util"]], "cast_corpus_dataset() (in module autorag.utils.preprocess)": [[12, "autorag.utils.preprocess.cast_corpus_dataset"]], "cast_qa_dataset() (in module autorag.utils.preprocess)": [[12, "autorag.utils.preprocess.cast_qa_dataset"]], "fetch_contents() (in module autorag.utils.util)": [[12, "autorag.utils.util.fetch_contents"]], "find_best_result_path() (in module autorag.utils.util)": [[12, "autorag.utils.util.find_best_result_path"]], "load_summary_file() (in module autorag.utils.util)": [[12, "autorag.utils.util.load_summary_file"]], "make_module_file_name() (in module autorag.utils.util)": [[12, "autorag.utils.util.make_module_file_name"]], "result_to_dataframe() (in module autorag.utils.util)": [[12, "autorag.utils.util.result_to_dataframe"]], "validate_corpus_dataset() (in module autorag.utils.preprocess)": [[12, "autorag.utils.preprocess.validate_corpus_dataset"]], "validate_qa_dataset() (in module autorag.utils.preprocess)": [[12, "autorag.utils.preprocess.validate_qa_dataset"]]}})